/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModH5pactivityGetUserAttempts200ResponseUsersattemptsInner {
    #[serde(rename = "attempts", skip_serializing_if = "Option::is_none")]
    pub attempts: Option<Vec<models::ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner>>,
    #[serde(rename = "scored", skip_serializing_if = "Option::is_none")]
    pub scored: Option<Box<models::ModH5pactivityGetUserAttempts200ResponseUsersattemptsInnerScored>>,
    /// The user id
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
}

impl ModH5pactivityGetUserAttempts200ResponseUsersattemptsInner {
    pub fn new() -> ModH5pactivityGetUserAttempts200ResponseUsersattemptsInner {
        ModH5pactivityGetUserAttempts200ResponseUsersattemptsInner {
            attempts: None,
            scored: None,
            userid: None,
        }
    }
}

