/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolLpDataForCourseCompetenciesPage200Response {
    /// User can configure course competency settings
    #[serde(rename = "canconfigurecoursecompetencies")]
    pub canconfigurecoursecompetencies: bool,
    /// User can grade competencies.
    #[serde(rename = "cangradecompetencies")]
    pub cangradecompetencies: bool,
    /// User can manage competency frameworks
    #[serde(rename = "canmanagecompetencyframeworks")]
    pub canmanagecompetencyframeworks: bool,
    /// User can manage linked course competencies
    #[serde(rename = "canmanagecoursecompetencies")]
    pub canmanagecoursecompetencies: bool,
    #[serde(rename = "competencies")]
    pub competencies: Vec<models::ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner>,
    /// The current course id
    #[serde(rename = "courseid")]
    pub courseid: i32,
    /// Current user id, if the user is a gradable user.
    #[serde(rename = "gradableuserid", skip_serializing_if = "Option::is_none")]
    pub gradableuserid: Option<i32>,
    /// Url to the manage competencies page.
    #[serde(rename = "manageurl")]
    pub manageurl: String,
    /// The current page context ID.
    #[serde(rename = "pagecontextid")]
    pub pagecontextid: i32,
    /// Url to the course competencies page.
    #[serde(rename = "pluginbaseurl")]
    pub pluginbaseurl: String,
    #[serde(rename = "settings")]
    pub settings: Box<models::ToolLpDataForCourseCompetenciesPage200ResponseSettings>,
    #[serde(rename = "statistics")]
    pub statistics: Box<models::ToolLpDataForCourseCompetenciesPage200ResponseStatistics>,
}

impl ToolLpDataForCourseCompetenciesPage200Response {
    pub fn new(canconfigurecoursecompetencies: bool, cangradecompetencies: bool, canmanagecompetencyframeworks: bool, canmanagecoursecompetencies: bool, competencies: Vec<models::ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner>, courseid: i32, manageurl: String, pagecontextid: i32, pluginbaseurl: String, settings: models::ToolLpDataForCourseCompetenciesPage200ResponseSettings, statistics: models::ToolLpDataForCourseCompetenciesPage200ResponseStatistics) -> ToolLpDataForCourseCompetenciesPage200Response {
        ToolLpDataForCourseCompetenciesPage200Response {
            canconfigurecoursecompetencies,
            cangradecompetencies,
            canmanagecompetencyframeworks,
            canmanagecoursecompetencies,
            competencies,
            courseid,
            gradableuserid: None,
            manageurl,
            pagecontextid,
            pluginbaseurl,
            settings: Box::new(settings),
            statistics: Box::new(statistics),
        }
    }
}

