/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner {
    /// Attempt number
    #[serde(rename = "attempt", skip_serializing_if = "Option::is_none")]
    pub attempt: Option<i32>,
    /// Attempt completion
    #[serde(rename = "completion", skip_serializing_if = "Option::is_none")]
    pub completion: Option<i32>,
    /// Attempt duration in seconds
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<i32>,
    /// ID of the H5P activity
    #[serde(rename = "h5pactivityid", skip_serializing_if = "Option::is_none")]
    pub h5pactivityid: Option<i32>,
    /// ID of the context
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Attempt max score
    #[serde(rename = "maxscore", skip_serializing_if = "Option::is_none")]
    pub maxscore: Option<i32>,
    /// Attempt score value
    #[serde(rename = "rawscore", skip_serializing_if = "Option::is_none")]
    pub rawscore: Option<i32>,
    /// Attempt scaled
    #[serde(rename = "scaled", skip_serializing_if = "Option::is_none")]
    pub scaled: Option<f64>,
    /// Attempt success
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<i32>,
    /// Attempt creation
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// Attempt modified
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
    /// ID of the user
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
}

impl ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner {
    pub fn new() -> ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner {
        ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner {
            attempt: None,
            completion: None,
            duration: None,
            h5pactivityid: None,
            id: None,
            maxscore: None,
            rawscore: None,
            scaled: None,
            success: None,
            timecreated: None,
            timemodified: None,
            userid: None,
        }
    }
}

