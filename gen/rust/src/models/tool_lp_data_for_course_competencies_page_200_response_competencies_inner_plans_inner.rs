/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner {
    /// canbeedited
    #[serde(rename = "canbeedited", skip_serializing_if = "Option::is_none")]
    pub canbeedited: Option<bool>,
    /// canmanage
    #[serde(rename = "canmanage", skip_serializing_if = "Option::is_none")]
    pub canmanage: Option<bool>,
    /// canrequestreview
    #[serde(rename = "canrequestreview", skip_serializing_if = "Option::is_none")]
    pub canrequestreview: Option<bool>,
    /// canreview
    #[serde(rename = "canreview", skip_serializing_if = "Option::is_none")]
    pub canreview: Option<bool>,
    #[serde(rename = "commentarea", skip_serializing_if = "Option::is_none")]
    pub commentarea: Option<Box<models::CoreCompetencyReadPlan200ResponseCommentarea>>,
    /// description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "descriptionformat", skip_serializing_if = "Option::is_none")]
    pub descriptionformat: Option<i32>,
    /// duedate
    #[serde(rename = "duedate", skip_serializing_if = "Option::is_none")]
    pub duedate: Option<i32>,
    /// duedateformatted
    #[serde(rename = "duedateformatted", skip_serializing_if = "Option::is_none")]
    pub duedateformatted: Option<String>,
    /// id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// isactive
    #[serde(rename = "isactive", skip_serializing_if = "Option::is_none")]
    pub isactive: Option<bool>,
    /// isapproveallowed
    #[serde(rename = "isapproveallowed", skip_serializing_if = "Option::is_none")]
    pub isapproveallowed: Option<bool>,
    /// isbasedontemplate
    #[serde(rename = "isbasedontemplate", skip_serializing_if = "Option::is_none")]
    pub isbasedontemplate: Option<bool>,
    /// iscancelreviewrequestallowed
    #[serde(rename = "iscancelreviewrequestallowed", skip_serializing_if = "Option::is_none")]
    pub iscancelreviewrequestallowed: Option<bool>,
    /// iscompleteallowed
    #[serde(rename = "iscompleteallowed", skip_serializing_if = "Option::is_none")]
    pub iscompleteallowed: Option<bool>,
    /// iscompleted
    #[serde(rename = "iscompleted", skip_serializing_if = "Option::is_none")]
    pub iscompleted: Option<bool>,
    /// isdraft
    #[serde(rename = "isdraft", skip_serializing_if = "Option::is_none")]
    pub isdraft: Option<bool>,
    /// isinreview
    #[serde(rename = "isinreview", skip_serializing_if = "Option::is_none")]
    pub isinreview: Option<bool>,
    /// isreopenallowed
    #[serde(rename = "isreopenallowed", skip_serializing_if = "Option::is_none")]
    pub isreopenallowed: Option<bool>,
    /// isrequestreviewallowed
    #[serde(rename = "isrequestreviewallowed", skip_serializing_if = "Option::is_none")]
    pub isrequestreviewallowed: Option<bool>,
    /// isstartreviewallowed
    #[serde(rename = "isstartreviewallowed", skip_serializing_if = "Option::is_none")]
    pub isstartreviewallowed: Option<bool>,
    /// isstopreviewallowed
    #[serde(rename = "isstopreviewallowed", skip_serializing_if = "Option::is_none")]
    pub isstopreviewallowed: Option<bool>,
    /// isunapproveallowed
    #[serde(rename = "isunapproveallowed", skip_serializing_if = "Option::is_none")]
    pub isunapproveallowed: Option<bool>,
    /// isunlinkallowed
    #[serde(rename = "isunlinkallowed", skip_serializing_if = "Option::is_none")]
    pub isunlinkallowed: Option<bool>,
    /// iswaitingforreview
    #[serde(rename = "iswaitingforreview", skip_serializing_if = "Option::is_none")]
    pub iswaitingforreview: Option<bool>,
    /// name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// origtemplateid
    #[serde(rename = "origtemplateid", skip_serializing_if = "Option::is_none")]
    pub origtemplateid: Option<i32>,
    #[serde(rename = "reviewer", skip_serializing_if = "Option::is_none")]
    pub reviewer: Option<Box<models::CoreCompetencyGradeCompetency200ResponseActionuser>>,
    /// reviewerid
    #[serde(rename = "reviewerid", skip_serializing_if = "Option::is_none")]
    pub reviewerid: Option<i32>,
    /// status
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<i32>,
    /// statusname
    #[serde(rename = "statusname", skip_serializing_if = "Option::is_none")]
    pub statusname: Option<String>,
    #[serde(rename = "template", skip_serializing_if = "Option::is_none")]
    pub template: Option<Box<models::CoreCompetencyCreateTemplate200Response>>,
    /// templateid
    #[serde(rename = "templateid", skip_serializing_if = "Option::is_none")]
    pub templateid: Option<i32>,
    /// timecreated
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// timemodified
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
    /// url
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// userid
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
    /// usermodified
    #[serde(rename = "usermodified", skip_serializing_if = "Option::is_none")]
    pub usermodified: Option<i32>,
}

impl ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner {
    pub fn new() -> ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner {
        ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner {
            canbeedited: None,
            canmanage: None,
            canrequestreview: None,
            canreview: None,
            commentarea: None,
            description: None,
            descriptionformat: None,
            duedate: None,
            duedateformatted: None,
            id: None,
            isactive: None,
            isapproveallowed: None,
            isbasedontemplate: None,
            iscancelreviewrequestallowed: None,
            iscompleteallowed: None,
            iscompleted: None,
            isdraft: None,
            isinreview: None,
            isreopenallowed: None,
            isrequestreviewallowed: None,
            isstartreviewallowed: None,
            isstopreviewallowed: None,
            isunapproveallowed: None,
            isunlinkallowed: None,
            iswaitingforreview: None,
            name: None,
            origtemplateid: None,
            reviewer: None,
            reviewerid: None,
            status: None,
            statusname: None,
            template: None,
            templateid: None,
            timecreated: None,
            timemodified: None,
            url: None,
            userid: None,
            usermodified: None,
        }
    }
}

