/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolDataprivacyGetDataRequest200ResponseResult {
    /// allowfiltering
    #[serde(rename = "allowfiltering", skip_serializing_if = "Option::is_none")]
    pub allowfiltering: Option<bool>,
    /// approvedeny
    #[serde(rename = "approvedeny", skip_serializing_if = "Option::is_none")]
    pub approvedeny: Option<bool>,
    /// canmarkcomplete
    #[serde(rename = "canmarkcomplete", skip_serializing_if = "Option::is_none")]
    pub canmarkcomplete: Option<bool>,
    /// canreview
    #[serde(rename = "canreview", skip_serializing_if = "Option::is_none")]
    pub canreview: Option<bool>,
    /// comments
    #[serde(rename = "comments")]
    pub comments: String,
    /// commentsformat
    #[serde(rename = "commentsformat")]
    pub commentsformat: i32,
    /// creationmethod
    #[serde(rename = "creationmethod")]
    pub creationmethod: i32,
    /// dpo
    #[serde(rename = "dpo")]
    pub dpo: i32,
    /// dpocomment
    #[serde(rename = "dpocomment")]
    pub dpocomment: String,
    /// dpocommentformat
    #[serde(rename = "dpocommentformat")]
    pub dpocommentformat: i32,
    #[serde(rename = "dpouser", skip_serializing_if = "Option::is_none")]
    pub dpouser: Option<Box<models::CoreCompetencyGradeCompetency200ResponseActionuser>>,
    #[serde(rename = "foruser")]
    pub foruser: Box<models::CoreCompetencyGradeCompetency200ResponseActionuser>,
    /// id
    #[serde(rename = "id")]
    pub id: i32,
    /// messagehtml
    #[serde(rename = "messagehtml", skip_serializing_if = "Option::is_none")]
    pub messagehtml: Option<String>,
    /// requestedby
    #[serde(rename = "requestedby")]
    pub requestedby: i32,
    #[serde(rename = "requestedbyuser", skip_serializing_if = "Option::is_none")]
    pub requestedbyuser: Option<Box<models::CoreCompetencyGradeCompetency200ResponseActionuser>>,
    /// status
    #[serde(rename = "status")]
    pub status: i32,
    /// statuslabel
    #[serde(rename = "statuslabel")]
    pub statuslabel: String,
    /// statuslabelclass
    #[serde(rename = "statuslabelclass")]
    pub statuslabelclass: String,
    /// systemapproved
    #[serde(rename = "systemapproved")]
    pub systemapproved: bool,
    /// timecreated
    #[serde(rename = "timecreated")]
    pub timecreated: i32,
    /// timemodified
    #[serde(rename = "timemodified")]
    pub timemodified: i32,
    /// type
    #[serde(rename = "type")]
    pub r#type: i32,
    /// typename
    #[serde(rename = "typename")]
    pub typename: String,
    /// typenameshort
    #[serde(rename = "typenameshort")]
    pub typenameshort: String,
    /// userid
    #[serde(rename = "userid")]
    pub userid: i32,
    /// usermodified
    #[serde(rename = "usermodified")]
    pub usermodified: i32,
}

impl ToolDataprivacyGetDataRequest200ResponseResult {
    pub fn new(comments: String, commentsformat: i32, creationmethod: i32, dpo: i32, dpocomment: String, dpocommentformat: i32, foruser: models::CoreCompetencyGradeCompetency200ResponseActionuser, id: i32, requestedby: i32, status: i32, statuslabel: String, statuslabelclass: String, systemapproved: bool, timecreated: i32, timemodified: i32, r#type: i32, typename: String, typenameshort: String, userid: i32, usermodified: i32) -> ToolDataprivacyGetDataRequest200ResponseResult {
        ToolDataprivacyGetDataRequest200ResponseResult {
            allowfiltering: None,
            approvedeny: None,
            canmarkcomplete: None,
            canreview: None,
            comments,
            commentsformat,
            creationmethod,
            dpo,
            dpocomment,
            dpocommentformat,
            dpouser: None,
            foruser: Box::new(foruser),
            id,
            messagehtml: None,
            requestedby,
            requestedbyuser: None,
            status,
            statuslabel,
            statuslabelclass,
            systemapproved,
            timecreated,
            timemodified,
            r#type,
            typename,
            typenameshort,
            userid,
            usermodified,
        }
    }
}

