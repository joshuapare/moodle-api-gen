/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModFeedbackGetNonRespondents200ResponseUsersInner {
    /// Course id
    #[serde(rename = "courseid", skip_serializing_if = "Option::is_none")]
    pub courseid: Option<i32>,
    /// User full name
    #[serde(rename = "fullname", skip_serializing_if = "Option::is_none")]
    pub fullname: Option<String>,
    /// If the user has started the attempt
    #[serde(rename = "started", skip_serializing_if = "Option::is_none")]
    pub started: Option<bool>,
    /// The user id
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
}

impl ModFeedbackGetNonRespondents200ResponseUsersInner {
    pub fn new() -> ModFeedbackGetNonRespondents200ResponseUsersInner {
        ModFeedbackGetNonRespondents200ResponseUsersInner {
            courseid: None,
            fullname: None,
            started: None,
            userid: None,
        }
    }
}

