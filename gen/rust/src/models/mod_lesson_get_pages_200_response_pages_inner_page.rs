/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModLessonGetPages200ResponsePagesInnerPage {
    /// The contents of this page
    #[serde(rename = "contents", skip_serializing_if = "Option::is_none")]
    pub contents: Option<String>,
    /// contents format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "contentsformat", skip_serializing_if = "Option::is_none")]
    pub contentsformat: Option<i32>,
    /// Used to record page specific display selections
    #[serde(rename = "display")]
    pub display: i32,
    /// Toggles display in the left menu block
    #[serde(rename = "displayinmenublock")]
    pub displayinmenublock: bool,
    /// The id of this lesson page
    #[serde(rename = "id")]
    pub id: i32,
    /// Used to record page specific layout selections
    #[serde(rename = "layout")]
    pub layout: i32,
    /// The id of the lesson this page belongs to
    #[serde(rename = "lessonid")]
    pub lessonid: i32,
    /// The id of the next page in the page sequence
    #[serde(rename = "nextpageid")]
    pub nextpageid: i32,
    /// The id of the page before this one
    #[serde(rename = "prevpageid")]
    pub prevpageid: i32,
    /// Used to record page type specific options
    #[serde(rename = "qoption")]
    pub qoption: i32,
    /// Identifies the page type of this page
    #[serde(rename = "qtype")]
    pub qtype: i32,
    /// Timestamp for when the page was created
    #[serde(rename = "timecreated")]
    pub timecreated: i32,
    /// Timestamp for when the page was last modified
    #[serde(rename = "timemodified")]
    pub timemodified: i32,
    /// The title of this page
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The type of the page [question | structure]
    #[serde(rename = "type")]
    pub r#type: i32,
    /// The unique identifier for the page type
    #[serde(rename = "typeid")]
    pub typeid: i32,
    /// The string that describes this page type
    #[serde(rename = "typestring")]
    pub typestring: String,
}

impl ModLessonGetPages200ResponsePagesInnerPage {
    pub fn new(display: i32, displayinmenublock: bool, id: i32, layout: i32, lessonid: i32, nextpageid: i32, prevpageid: i32, qoption: i32, qtype: i32, timecreated: i32, timemodified: i32, r#type: i32, typeid: i32, typestring: String) -> ModLessonGetPages200ResponsePagesInnerPage {
        ModLessonGetPages200ResponsePagesInnerPage {
            contents: None,
            contentsformat: None,
            display,
            displayinmenublock,
            id,
            layout,
            lessonid,
            nextpageid,
            prevpageid,
            qoption,
            qtype,
            timecreated,
            timemodified,
            title: None,
            r#type,
            typeid,
            typestring,
        }
    }
}

