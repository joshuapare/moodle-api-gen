/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ModLtiGetLtisByCourses200ResponseLtisInner : Tool
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModLtiGetLtisByCourses200ResponseLtisInner {
    /// Course id
    #[serde(rename = "course", skip_serializing_if = "Option::is_none")]
    pub course: Option<i32>,
    /// Course module id
    #[serde(rename = "coursemodule", skip_serializing_if = "Option::is_none")]
    pub coursemodule: Option<i32>,
    /// Debug launch
    #[serde(rename = "debuglaunch", skip_serializing_if = "Option::is_none")]
    pub debuglaunch: Option<i32>,
    /// Enable grades
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<i32>,
    /// Group id
    #[serde(rename = "groupingid", skip_serializing_if = "Option::is_none")]
    pub groupingid: Option<i32>,
    /// Group mode
    #[serde(rename = "groupmode", skip_serializing_if = "Option::is_none")]
    pub groupmode: Option<i32>,
    /// Alternative icon URL
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
    /// Activity instance id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// instructor choice accept grades
    #[serde(rename = "instructorchoiceacceptgrades", skip_serializing_if = "Option::is_none")]
    pub instructorchoiceacceptgrades: Option<i32>,
    /// Instructor choice allow roster
    #[serde(rename = "instructorchoiceallowroster", skip_serializing_if = "Option::is_none")]
    pub instructorchoiceallowroster: Option<i32>,
    /// Instructor choice allow setting
    #[serde(rename = "instructorchoiceallowsetting", skip_serializing_if = "Option::is_none")]
    pub instructorchoiceallowsetting: Option<i32>,
    /// instructor choice send mail address
    #[serde(rename = "instructorchoicesendemailaddr", skip_serializing_if = "Option::is_none")]
    pub instructorchoicesendemailaddr: Option<i32>,
    /// Instructor choice send name
    #[serde(rename = "instructorchoicesendname", skip_serializing_if = "Option::is_none")]
    pub instructorchoicesendname: Option<String>,
    /// instructor custom parameters
    #[serde(rename = "instructorcustomparameters", skip_serializing_if = "Option::is_none")]
    pub instructorcustomparameters: Option<String>,
    /// Activity introduction
    #[serde(rename = "intro", skip_serializing_if = "Option::is_none")]
    pub intro: Option<String>,
    #[serde(rename = "introfiles", skip_serializing_if = "Option::is_none")]
    pub introfiles: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "introformat", skip_serializing_if = "Option::is_none")]
    pub introformat: Option<i32>,
    /// Forced activity language
    #[serde(rename = "lang", skip_serializing_if = "Option::is_none")]
    pub lang: Option<String>,
    /// Launch container mode
    #[serde(rename = "launchcontainer", skip_serializing_if = "Option::is_none")]
    pub launchcontainer: Option<i32>,
    /// Activity name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Shared secret
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// Resource key
    #[serde(rename = "resourcekey", skip_serializing_if = "Option::is_none")]
    pub resourcekey: Option<String>,
    /// Course section id
    #[serde(rename = "section", skip_serializing_if = "Option::is_none")]
    pub section: Option<i32>,
    /// Secure icon URL
    #[serde(rename = "secureicon", skip_serializing_if = "Option::is_none")]
    pub secureicon: Option<String>,
    /// Secure tool url
    #[serde(rename = "securetoolurl", skip_serializing_if = "Option::is_none")]
    pub securetoolurl: Option<String>,
    /// Service salt
    #[serde(rename = "servicesalt", skip_serializing_if = "Option::is_none")]
    pub servicesalt: Option<String>,
    /// Show description launch
    #[serde(rename = "showdescriptionlaunch", skip_serializing_if = "Option::is_none")]
    pub showdescriptionlaunch: Option<i32>,
    /// Show title launch
    #[serde(rename = "showtitlelaunch", skip_serializing_if = "Option::is_none")]
    pub showtitlelaunch: Option<i32>,
    /// Time of creation
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// Time of last modification
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
    /// Tool url
    #[serde(rename = "toolurl", skip_serializing_if = "Option::is_none")]
    pub toolurl: Option<String>,
    /// Type id
    #[serde(rename = "typeid", skip_serializing_if = "Option::is_none")]
    pub typeid: Option<i32>,
    /// Visible
    #[serde(rename = "visible", skip_serializing_if = "Option::is_none")]
    pub visible: Option<bool>,
}

impl ModLtiGetLtisByCourses200ResponseLtisInner {
    /// Tool
    pub fn new() -> ModLtiGetLtisByCourses200ResponseLtisInner {
        ModLtiGetLtisByCourses200ResponseLtisInner {
            course: None,
            coursemodule: None,
            debuglaunch: None,
            grade: None,
            groupingid: None,
            groupmode: None,
            icon: None,
            id: None,
            instructorchoiceacceptgrades: None,
            instructorchoiceallowroster: None,
            instructorchoiceallowsetting: None,
            instructorchoicesendemailaddr: None,
            instructorchoicesendname: None,
            instructorcustomparameters: None,
            intro: None,
            introfiles: None,
            introformat: None,
            lang: None,
            launchcontainer: None,
            name: None,
            password: None,
            resourcekey: None,
            section: None,
            secureicon: None,
            securetoolurl: None,
            servicesalt: None,
            showdescriptionlaunch: None,
            showtitlelaunch: None,
            timecreated: None,
            timemodified: None,
            toolurl: None,
            typeid: None,
            visible: None,
        }
    }
}

