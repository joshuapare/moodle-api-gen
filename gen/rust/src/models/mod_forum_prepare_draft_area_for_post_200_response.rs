/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModForumPrepareDraftAreaForPost200Response {
    #[serde(rename = "areaoptions")]
    pub areaoptions: Vec<models::ModForumPrepareDraftAreaForPost200ResponseAreaoptionsInner>,
    /// Draft item id for the file area.
    #[serde(rename = "draftitemid")]
    pub draftitemid: i32,
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// Message text with URLs rewritten.
    #[serde(rename = "messagetext")]
    pub messagetext: String,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl ModForumPrepareDraftAreaForPost200Response {
    pub fn new(areaoptions: Vec<models::ModForumPrepareDraftAreaForPost200ResponseAreaoptionsInner>, draftitemid: i32, messagetext: String) -> ModForumPrepareDraftAreaForPost200Response {
        ModForumPrepareDraftAreaForPost200Response {
            areaoptions,
            draftitemid,
            files: None,
            messagetext,
            warnings: None,
        }
    }
}

