/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCommentGetCommentsRequest {
    /// string comment area
    #[serde(rename = "area", skip_serializing_if = "Option::is_none")]
    pub area: Option<String>,
    /// component
    #[serde(rename = "component")]
    pub component: String,
    /// contextlevel system, course, user...
    #[serde(rename = "contextlevel")]
    pub contextlevel: String,
    /// the Instance id of item associated with the context level
    #[serde(rename = "instanceid")]
    pub instanceid: i32,
    /// associated id
    #[serde(rename = "itemid")]
    pub itemid: i32,
    /// page number (0 based)
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// Sort direction: ASC or DESC
    #[serde(rename = "sortdirection", skip_serializing_if = "Option::is_none")]
    pub sortdirection: Option<String>,
}

impl CoreCommentGetCommentsRequest {
    pub fn new(component: String, contextlevel: String, instanceid: i32, itemid: i32) -> CoreCommentGetCommentsRequest {
        CoreCommentGetCommentsRequest {
            area: None,
            component,
            contextlevel,
            instanceid,
            itemid,
            page: None,
            sortdirection: None,
        }
    }
}

