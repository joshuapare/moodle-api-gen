/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModFeedbackGetResponsesAnalysis200Response {
    #[serde(rename = "anonattempts")]
    pub anonattempts: Vec<models::ModFeedbackGetResponsesAnalysis200ResponseAnonattemptsInner>,
    #[serde(rename = "attempts")]
    pub attempts: Vec<models::ModFeedbackGetResponsesAnalysis200ResponseAttemptsInner>,
    /// Total anonymous responses count.
    #[serde(rename = "totalanonattempts")]
    pub totalanonattempts: i32,
    /// Total responses count.
    #[serde(rename = "totalattempts")]
    pub totalattempts: i32,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl ModFeedbackGetResponsesAnalysis200Response {
    pub fn new(anonattempts: Vec<models::ModFeedbackGetResponsesAnalysis200ResponseAnonattemptsInner>, attempts: Vec<models::ModFeedbackGetResponsesAnalysis200ResponseAttemptsInner>, totalanonattempts: i32, totalattempts: i32) -> ModFeedbackGetResponsesAnalysis200Response {
        ModFeedbackGetResponsesAnalysis200Response {
            anonattempts,
            attempts,
            totalanonattempts,
            totalattempts,
            warnings: None,
        }
    }
}

