/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency {
    #[serde(rename = "competency")]
    pub competency: Box<models::CoreCompetencyCreateCompetency200Response>,
    #[serde(rename = "comppath")]
    pub comppath: Box<models::ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppath>,
    #[serde(rename = "framework")]
    pub framework: Box<models::CoreCompetencyDuplicateCompetencyFramework200Response>,
    /// hascourses
    #[serde(rename = "hascourses")]
    pub hascourses: bool,
    /// hasrelatedcompetencies
    #[serde(rename = "hasrelatedcompetencies")]
    pub hasrelatedcompetencies: bool,
    #[serde(rename = "linkedcourses")]
    pub linkedcourses: Vec<models::CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>,
    /// pluginbaseurl
    #[serde(rename = "pluginbaseurl")]
    pub pluginbaseurl: String,
    #[serde(rename = "relatedcompetencies")]
    pub relatedcompetencies: Vec<models::CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>,
    /// scaleconfiguration
    #[serde(rename = "scaleconfiguration")]
    pub scaleconfiguration: String,
    /// scaleid
    #[serde(rename = "scaleid")]
    pub scaleid: i32,
    /// taxonomyterm
    #[serde(rename = "taxonomyterm")]
    pub taxonomyterm: String,
}

impl ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency {
    pub fn new(competency: models::CoreCompetencyCreateCompetency200Response, comppath: models::ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppath, framework: models::CoreCompetencyDuplicateCompetencyFramework200Response, hascourses: bool, hasrelatedcompetencies: bool, linkedcourses: Vec<models::CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>, pluginbaseurl: String, relatedcompetencies: Vec<models::CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>, scaleconfiguration: String, scaleid: i32, taxonomyterm: String) -> ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency {
        ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency {
            competency: Box::new(competency),
            comppath: Box::new(comppath),
            framework: Box::new(framework),
            hascourses,
            hasrelatedcompetencies,
            linkedcourses,
            pluginbaseurl,
            relatedcompetencies,
            scaleconfiguration,
            scaleid,
            taxonomyterm,
        }
    }
}

