/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModDataGetFields200ResponseFieldsInner {
    /// The field type of the content.
    #[serde(rename = "dataid", skip_serializing_if = "Option::is_none")]
    pub dataid: Option<i32>,
    /// The field description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Field id.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The field name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Field parameters
    #[serde(rename = "param1", skip_serializing_if = "Option::is_none")]
    pub param1: Option<String>,
    /// Field parameters
    #[serde(rename = "param2", skip_serializing_if = "Option::is_none")]
    pub param2: Option<String>,
    /// Field parameters
    #[serde(rename = "param3", skip_serializing_if = "Option::is_none")]
    pub param3: Option<String>,
    /// Field parameters
    #[serde(rename = "param4", skip_serializing_if = "Option::is_none")]
    pub param4: Option<String>,
    /// Field parameters
    #[serde(rename = "param5", skip_serializing_if = "Option::is_none")]
    pub param5: Option<String>,
    /// Field parameters
    #[serde(rename = "param6", skip_serializing_if = "Option::is_none")]
    pub param6: Option<String>,
    /// Field parameters
    #[serde(rename = "param7", skip_serializing_if = "Option::is_none")]
    pub param7: Option<String>,
    /// Field parameters
    #[serde(rename = "param8", skip_serializing_if = "Option::is_none")]
    pub param8: Option<String>,
    /// Field parameters
    #[serde(rename = "param9", skip_serializing_if = "Option::is_none")]
    pub param9: Option<String>,
    /// Field parameters
    #[serde(rename = "param10", skip_serializing_if = "Option::is_none")]
    pub param10: Option<String>,
    /// Whether is a field required or not.
    #[serde(rename = "required", skip_serializing_if = "Option::is_none")]
    pub required: Option<bool>,
    /// The field type.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl ModDataGetFields200ResponseFieldsInner {
    pub fn new() -> ModDataGetFields200ResponseFieldsInner {
        ModDataGetFields200ResponseFieldsInner {
            dataid: None,
            description: None,
            id: None,
            name: None,
            param1: None,
            param2: None,
            param3: None,
            param4: None,
            param5: None,
            param6: None,
            param7: None,
            param8: None,
            param9: None,
            param10: None,
            required: None,
            r#type: None,
        }
    }
}

