/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModChoiceGetChoiceOptions200ResponseOptionsInner {
    /// we already answered
    #[serde(rename = "checked", skip_serializing_if = "Option::is_none")]
    pub checked: Option<bool>,
    /// number of answers
    #[serde(rename = "countanswers", skip_serializing_if = "Option::is_none")]
    pub countanswers: Option<i32>,
    /// option disabled
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    /// true for orizontal, otherwise vertical
    #[serde(rename = "displaylayout", skip_serializing_if = "Option::is_none")]
    pub displaylayout: Option<bool>,
    /// option id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// maximum number of answers
    #[serde(rename = "maxanswers", skip_serializing_if = "Option::is_none")]
    pub maxanswers: Option<i32>,
    /// text of the choice
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
}

impl ModChoiceGetChoiceOptions200ResponseOptionsInner {
    pub fn new() -> ModChoiceGetChoiceOptions200ResponseOptionsInner {
        ModChoiceGetChoiceOptions200ResponseOptionsInner {
            checked: None,
            countanswers: None,
            disabled: None,
            displaylayout: None,
            id: None,
            maxanswers: None,
            text: None,
        }
    }
}

