/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreGradesUpdateGradesRequest {
    /// The activity ID
    #[serde(rename = "activityid")]
    pub activityid: i32,
    /// A component, for example mod_forum or mod_quiz
    #[serde(rename = "component")]
    pub component: String,
    /// id of course
    #[serde(rename = "courseid")]
    pub courseid: i32,
    #[serde(rename = "grades", skip_serializing_if = "Option::is_none")]
    pub grades: Option<Vec<models::CoreGradesUpdateGradesRequestGradesInner>>,
    #[serde(rename = "itemdetails", skip_serializing_if = "Option::is_none")]
    pub itemdetails: Option<Box<models::CoreGradesUpdateGradesRequestItemdetails>>,
    /// grade item ID number for modules that have multiple grades. Typically this is 0.
    #[serde(rename = "itemnumber")]
    pub itemnumber: i32,
    /// The source of the grade update
    #[serde(rename = "source")]
    pub source: String,
}

impl CoreGradesUpdateGradesRequest {
    pub fn new(activityid: i32, component: String, courseid: i32, itemnumber: i32, source: String) -> CoreGradesUpdateGradesRequest {
        CoreGradesUpdateGradesRequest {
            activityid,
            component,
            courseid,
            grades: None,
            itemdetails: None,
            itemnumber,
            source,
        }
    }
}

