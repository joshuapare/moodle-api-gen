/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreUserUpdateUsersRequestUsersInner {
    /// Postal address
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// The alternate name of the user
    #[serde(rename = "alternatename", skip_serializing_if = "Option::is_none")]
    pub alternatename: Option<String>,
    /// Auth plugins include manual, ldap, etc
    #[serde(rename = "auth", skip_serializing_if = "Option::is_none")]
    pub auth: Option<String>,
    /// Calendar type such as \"gregorian\", must exist on server
    #[serde(rename = "calendartype", skip_serializing_if = "Option::is_none")]
    pub calendartype: Option<String>,
    /// Home city of the user
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// Home country code of the user, such as AU or CZ
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "customfields", skip_serializing_if = "Option::is_none")]
    pub customfields: Option<Vec<models::CoreUserCreateUsersRequestUsersInnerCustomfieldsInner>>,
    /// Department
    #[serde(rename = "department", skip_serializing_if = "Option::is_none")]
    pub department: Option<String>,
    /// User profile description, no HTML
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// A valid and unique email address
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// The first name(s) of the user
    #[serde(rename = "firstname", skip_serializing_if = "Option::is_none")]
    pub firstname: Option<String>,
    /// The first name(s) phonetically of the user
    #[serde(rename = "firstnamephonetic", skip_serializing_if = "Option::is_none")]
    pub firstnamephonetic: Option<String>,
    /// ID of the user
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// An arbitrary ID code number perhaps from the institution
    #[serde(rename = "idnumber", skip_serializing_if = "Option::is_none")]
    pub idnumber: Option<String>,
    /// Institution
    #[serde(rename = "institution", skip_serializing_if = "Option::is_none")]
    pub institution: Option<String>,
    /// User interests (separated by commas)
    #[serde(rename = "interests", skip_serializing_if = "Option::is_none")]
    pub interests: Option<String>,
    /// Language code such as \"en\", must exist on server
    #[serde(rename = "lang", skip_serializing_if = "Option::is_none")]
    pub lang: Option<String>,
    /// The family name of the user
    #[serde(rename = "lastname", skip_serializing_if = "Option::is_none")]
    pub lastname: Option<String>,
    /// The family name phonetically of the user
    #[serde(rename = "lastnamephonetic", skip_serializing_if = "Option::is_none")]
    pub lastnamephonetic: Option<String>,
    /// Email visibility
    #[serde(rename = "maildisplay", skip_serializing_if = "Option::is_none")]
    pub maildisplay: Option<i32>,
    /// Mail format code is 0 for plain text, 1 for HTML etc
    #[serde(rename = "mailformat", skip_serializing_if = "Option::is_none")]
    pub mailformat: Option<i32>,
    /// The middle name of the user
    #[serde(rename = "middlename", skip_serializing_if = "Option::is_none")]
    pub middlename: Option<String>,
    /// Plain text password consisting of any characters
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// Phone
    #[serde(rename = "phone1", skip_serializing_if = "Option::is_none")]
    pub phone1: Option<String>,
    /// Mobile phone
    #[serde(rename = "phone2", skip_serializing_if = "Option::is_none")]
    pub phone2: Option<String>,
    #[serde(rename = "preferences", skip_serializing_if = "Option::is_none")]
    pub preferences: Option<Vec<models::CoreUserUpdateUsersRequestUsersInnerPreferencesInner>>,
    /// Suspend user account, either false to enable user login or true to disable it
    #[serde(rename = "suspended", skip_serializing_if = "Option::is_none")]
    pub suspended: Option<bool>,
    /// Theme name such as \"standard\", must exist on server
    #[serde(rename = "theme", skip_serializing_if = "Option::is_none")]
    pub theme: Option<String>,
    /// Timezone code such as Australia/Perth, or 99 for default
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    /// Username policy is defined in Moodle security config.
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// The itemid where the new user picture has been uploaded to, 0 to delete
    #[serde(rename = "userpicture", skip_serializing_if = "Option::is_none")]
    pub userpicture: Option<i32>,
}

impl CoreUserUpdateUsersRequestUsersInner {
    pub fn new() -> CoreUserUpdateUsersRequestUsersInner {
        CoreUserUpdateUsersRequestUsersInner {
            address: None,
            alternatename: None,
            auth: None,
            calendartype: None,
            city: None,
            country: None,
            customfields: None,
            department: None,
            description: None,
            email: None,
            firstname: None,
            firstnamephonetic: None,
            id: None,
            idnumber: None,
            institution: None,
            interests: None,
            lang: None,
            lastname: None,
            lastnamephonetic: None,
            maildisplay: None,
            mailformat: None,
            middlename: None,
            password: None,
            phone1: None,
            phone2: None,
            preferences: None,
            suspended: None,
            theme: None,
            timezone: None,
            username: None,
            userpicture: None,
        }
    }
}

