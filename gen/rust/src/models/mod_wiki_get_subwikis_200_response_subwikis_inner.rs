/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ModWikiGetSubwikis200ResponseSubwikisInner : Subwikis
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModWikiGetSubwikis200ResponseSubwikisInner {
    /// True if user can edit the subwiki.
    #[serde(rename = "canedit", skip_serializing_if = "Option::is_none")]
    pub canedit: Option<bool>,
    /// Group ID.
    #[serde(rename = "groupid", skip_serializing_if = "Option::is_none")]
    pub groupid: Option<String>,
    /// Subwiki ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// User ID.
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
    /// Wiki ID.
    #[serde(rename = "wikiid", skip_serializing_if = "Option::is_none")]
    pub wikiid: Option<i32>,
}

impl ModWikiGetSubwikis200ResponseSubwikisInner {
    /// Subwikis
    pub fn new() -> ModWikiGetSubwikis200ResponseSubwikisInner {
        ModWikiGetSubwikis200ResponseSubwikisInner {
            canedit: None,
            groupid: None,
            id: None,
            userid: None,
            wikiid: None,
        }
    }
}

