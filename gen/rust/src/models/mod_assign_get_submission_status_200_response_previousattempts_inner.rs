/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModAssignGetSubmissionStatus200ResponsePreviousattemptsInner {
    /// Attempt number.
    #[serde(rename = "attemptnumber", skip_serializing_if = "Option::is_none")]
    pub attemptnumber: Option<i32>,
    #[serde(rename = "feedbackplugins", skip_serializing_if = "Option::is_none")]
    pub feedbackplugins: Option<Vec<models::ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner>>,
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<Box<models::ModAssignGetSubmissionStatus200ResponseFeedbackGrade>>,
    #[serde(rename = "submission", skip_serializing_if = "Option::is_none")]
    pub submission: Option<Box<models::ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission>>,
}

impl ModAssignGetSubmissionStatus200ResponsePreviousattemptsInner {
    pub fn new() -> ModAssignGetSubmissionStatus200ResponsePreviousattemptsInner {
        ModAssignGetSubmissionStatus200ResponsePreviousattemptsInner {
            attemptnumber: None,
            feedbackplugins: None,
            grade: None,
            submission: None,
        }
    }
}

