/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreFilesGetUnusedDraftItemid200Response {
    /// File area component.
    #[serde(rename = "component")]
    pub component: String,
    /// File area context.
    #[serde(rename = "contextid")]
    pub contextid: i32,
    /// File area name.
    #[serde(rename = "filearea")]
    pub filearea: String,
    /// File are item id.
    #[serde(rename = "itemid")]
    pub itemid: i32,
    /// File area user id.
    #[serde(rename = "userid")]
    pub userid: i32,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl CoreFilesGetUnusedDraftItemid200Response {
    pub fn new(component: String, contextid: i32, filearea: String, itemid: i32, userid: i32) -> CoreFilesGetUnusedDraftItemid200Response {
        CoreFilesGetUnusedDraftItemid200Response {
            component,
            contextid,
            filearea,
            itemid,
            userid,
            warnings: None,
        }
    }
}

