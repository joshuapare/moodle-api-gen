/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreReportbuilderConditionsDelete200Response {
    /// activeconditionsform
    #[serde(rename = "activeconditionsform")]
    pub activeconditionsform: String,
    #[serde(rename = "availableconditions")]
    pub availableconditions: Vec<models::CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner>,
    /// hasactiveconditions
    #[serde(rename = "hasactiveconditions")]
    pub hasactiveconditions: bool,
    /// hasavailableconditions
    #[serde(rename = "hasavailableconditions")]
    pub hasavailableconditions: bool,
    /// helpicon
    #[serde(rename = "helpicon")]
    pub helpicon: String,
    /// javascript
    #[serde(rename = "javascript", skip_serializing_if = "Option::is_none")]
    pub javascript: Option<String>,
}

impl CoreReportbuilderConditionsDelete200Response {
    pub fn new(activeconditionsform: String, availableconditions: Vec<models::CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner>, hasactiveconditions: bool, hasavailableconditions: bool, helpicon: String) -> CoreReportbuilderConditionsDelete200Response {
        CoreReportbuilderConditionsDelete200Response {
            activeconditionsform,
            availableconditions,
            hasactiveconditions,
            hasavailableconditions,
            helpicon,
            javascript: None,
        }
    }
}

