/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCompetencyDuplicateCompetencyFramework200Response {
    /// canmanage
    #[serde(rename = "canmanage")]
    pub canmanage: bool,
    /// competenciescount
    #[serde(rename = "competenciescount")]
    pub competenciescount: i32,
    /// contextid
    #[serde(rename = "contextid")]
    pub contextid: i32,
    /// contextname
    #[serde(rename = "contextname")]
    pub contextname: String,
    /// contextnamenoprefix
    #[serde(rename = "contextnamenoprefix")]
    pub contextnamenoprefix: String,
    /// description
    #[serde(rename = "description")]
    pub description: String,
    /// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "descriptionformat", skip_serializing_if = "Option::is_none")]
    pub descriptionformat: Option<i32>,
    /// id
    #[serde(rename = "id")]
    pub id: i32,
    /// idnumber
    #[serde(rename = "idnumber")]
    pub idnumber: String,
    /// scaleconfiguration
    #[serde(rename = "scaleconfiguration")]
    pub scaleconfiguration: String,
    /// scaleid
    #[serde(rename = "scaleid")]
    pub scaleid: i32,
    /// shortname
    #[serde(rename = "shortname")]
    pub shortname: String,
    /// taxonomies
    #[serde(rename = "taxonomies")]
    pub taxonomies: String,
    /// timecreated
    #[serde(rename = "timecreated")]
    pub timecreated: i32,
    /// timemodified
    #[serde(rename = "timemodified")]
    pub timemodified: i32,
    /// usermodified
    #[serde(rename = "usermodified")]
    pub usermodified: i32,
    /// visible
    #[serde(rename = "visible")]
    pub visible: bool,
}

impl CoreCompetencyDuplicateCompetencyFramework200Response {
    pub fn new(canmanage: bool, competenciescount: i32, contextid: i32, contextname: String, contextnamenoprefix: String, description: String, id: i32, idnumber: String, scaleconfiguration: String, scaleid: i32, shortname: String, taxonomies: String, timecreated: i32, timemodified: i32, usermodified: i32, visible: bool) -> CoreCompetencyDuplicateCompetencyFramework200Response {
        CoreCompetencyDuplicateCompetencyFramework200Response {
            canmanage,
            competenciescount,
            contextid,
            contextname,
            contextnamenoprefix,
            description,
            descriptionformat: None,
            id,
            idnumber,
            scaleconfiguration,
            scaleid,
            shortname,
            taxonomies,
            timecreated,
            timemodified,
            usermodified,
            visible,
        }
    }
}

