/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreReportbuilderCanViewSystemReportRequest {
    /// Report area
    #[serde(rename = "area", skip_serializing_if = "Option::is_none")]
    pub area: Option<String>,
    /// Report component
    #[serde(rename = "component", skip_serializing_if = "Option::is_none")]
    pub component: Option<String>,
    #[serde(rename = "context")]
    pub context: Box<models::CoreCohortSearchCohortsRequestContext>,
    /// Report item ID
    #[serde(rename = "itemid", skip_serializing_if = "Option::is_none")]
    pub itemid: Option<i32>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<models::CoreReportbuilderCanViewSystemReportRequestParametersInner>>,
    /// Report class path
    #[serde(rename = "source")]
    pub source: String,
}

impl CoreReportbuilderCanViewSystemReportRequest {
    pub fn new(context: models::CoreCohortSearchCohortsRequestContext, source: String) -> CoreReportbuilderCanViewSystemReportRequest {
        CoreReportbuilderCanViewSystemReportRequest {
            area: None,
            component: None,
            context: Box::new(context),
            itemid: None,
            parameters: None,
            source,
        }
    }
}

