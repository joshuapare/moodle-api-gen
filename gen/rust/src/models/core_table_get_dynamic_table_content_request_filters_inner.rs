/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreTableGetDynamicTableContentRequestFiltersInner {
    #[serde(rename = "filteroptions", skip_serializing_if = "Option::is_none")]
    pub filteroptions: Option<Vec<models::CoreTableGetDynamicTableContentRequestFiltersInnerFilteroptionsInner>>,
    /// Type of join for filter values
    #[serde(rename = "jointype", skip_serializing_if = "Option::is_none")]
    pub jointype: Option<i32>,
    /// Name of the filter
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<Vec<serde_json::Value>>,
}

impl CoreTableGetDynamicTableContentRequestFiltersInner {
    pub fn new() -> CoreTableGetDynamicTableContentRequestFiltersInner {
        CoreTableGetDynamicTableContentRequestFiltersInner {
            filteroptions: None,
            jointype: None,
            name: None,
            values: None,
        }
    }
}

