/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModFeedbackGetNonRespondentsRequest {
    /// Course where user completes the feedback (for site feedbacks only).
    #[serde(rename = "courseid", skip_serializing_if = "Option::is_none")]
    pub courseid: Option<i32>,
    /// Feedback instance id
    #[serde(rename = "feedbackid")]
    pub feedbackid: i32,
    /// Group id, 0 means that the function will determine the user group.
    #[serde(rename = "groupid", skip_serializing_if = "Option::is_none")]
    pub groupid: Option<i32>,
    /// The page of records to return.
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// The number of records to return per page.
    #[serde(rename = "perpage", skip_serializing_if = "Option::is_none")]
    pub perpage: Option<i32>,
    /// Sort param, must be firstname, lastname or lastaccess (default).
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<String>,
}

impl ModFeedbackGetNonRespondentsRequest {
    pub fn new(feedbackid: i32) -> ModFeedbackGetNonRespondentsRequest {
        ModFeedbackGetNonRespondentsRequest {
            courseid: None,
            feedbackid,
            groupid: None,
            page: None,
            perpage: None,
            sort: None,
        }
    }
}

