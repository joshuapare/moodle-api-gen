/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolXmldbInvokeMoveActionRequest {
    /// Action
    #[serde(rename = "action")]
    pub action: String,
    /// Plugin that is being edited
    #[serde(rename = "dir")]
    pub dir: String,
    /// Field name
    #[serde(rename = "field", skip_serializing_if = "Option::is_none")]
    pub field: Option<String>,
    /// Index name
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<String>,
    /// Key name
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// How many positions to move by (negative - up, positive - down)
    #[serde(rename = "position")]
    pub position: i32,
    /// Table name
    #[serde(rename = "table")]
    pub table: String,
}

impl ToolXmldbInvokeMoveActionRequest {
    pub fn new(action: String, dir: String, position: i32, table: String) -> ToolXmldbInvokeMoveActionRequest {
        ToolXmldbInvokeMoveActionRequest {
            action,
            dir,
            field: None,
            index: None,
            key: None,
            position,
            table,
        }
    }
}

