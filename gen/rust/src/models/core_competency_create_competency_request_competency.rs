/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCompetencyCreateCompetencyRequestCompetency {
    /// competencyframeworkid
    #[serde(rename = "competencyframeworkid", skip_serializing_if = "Option::is_none")]
    pub competencyframeworkid: Option<i32>,
    /// description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "descriptionformat", skip_serializing_if = "Option::is_none")]
    pub descriptionformat: Option<i32>,
    /// idnumber
    #[serde(rename = "idnumber")]
    pub idnumber: String,
    /// parentid
    #[serde(rename = "parentid", skip_serializing_if = "Option::is_none")]
    pub parentid: Option<i32>,
    /// path
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    /// ruleconfig
    #[serde(rename = "ruleconfig", skip_serializing_if = "Option::is_none")]
    pub ruleconfig: Option<String>,
    /// ruleoutcome
    #[serde(rename = "ruleoutcome", skip_serializing_if = "Option::is_none")]
    pub ruleoutcome: Option<i32>,
    /// ruletype
    #[serde(rename = "ruletype", skip_serializing_if = "Option::is_none")]
    pub ruletype: Option<String>,
    /// scaleconfiguration
    #[serde(rename = "scaleconfiguration", skip_serializing_if = "Option::is_none")]
    pub scaleconfiguration: Option<String>,
    /// scaleid
    #[serde(rename = "scaleid", skip_serializing_if = "Option::is_none")]
    pub scaleid: Option<i32>,
    /// shortname
    #[serde(rename = "shortname")]
    pub shortname: String,
    /// sortorder
    #[serde(rename = "sortorder", skip_serializing_if = "Option::is_none")]
    pub sortorder: Option<i32>,
    /// timecreated
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// timemodified
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
    /// usermodified
    #[serde(rename = "usermodified", skip_serializing_if = "Option::is_none")]
    pub usermodified: Option<i32>,
}

impl CoreCompetencyCreateCompetencyRequestCompetency {
    pub fn new(idnumber: String, shortname: String) -> CoreCompetencyCreateCompetencyRequestCompetency {
        CoreCompetencyCreateCompetencyRequestCompetency {
            competencyframeworkid: None,
            description: None,
            descriptionformat: None,
            idnumber,
            parentid: None,
            path: None,
            ruleconfig: None,
            ruleoutcome: None,
            ruletype: None,
            scaleconfiguration: None,
            scaleid: None,
            shortname,
            sortorder: None,
            timecreated: None,
            timemodified: None,
            usermodified: None,
        }
    }
}

