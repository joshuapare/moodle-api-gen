/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolLpDataForUserCompetencySummary200Response {
    /// cangrade
    #[serde(rename = "cangrade")]
    pub cangrade: bool,
    #[serde(rename = "commentarea", skip_serializing_if = "Option::is_none")]
    pub commentarea: Option<Box<models::CoreCompetencyReadPlan200ResponseCommentarea>>,
    #[serde(rename = "competency")]
    pub competency: Box<models::ToolLpDataForCompetencySummary200Response>,
    #[serde(rename = "evidence")]
    pub evidence: Vec<models::ToolLpDataForUserCompetencySummary200ResponseEvidenceInner>,
    /// showrelatedcompetencies
    #[serde(rename = "showrelatedcompetencies")]
    pub showrelatedcompetencies: bool,
    #[serde(rename = "user")]
    pub user: Box<models::CoreCompetencyGradeCompetency200ResponseActionuser>,
    #[serde(rename = "usercompetency", skip_serializing_if = "Option::is_none")]
    pub usercompetency: Option<Box<models::ToolLpDataForUserCompetencySummary200ResponseUsercompetency>>,
    #[serde(rename = "usercompetencycourse", skip_serializing_if = "Option::is_none")]
    pub usercompetencycourse: Option<Box<models::ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerUsercompetencycourse>>,
    #[serde(rename = "usercompetencyplan", skip_serializing_if = "Option::is_none")]
    pub usercompetencyplan: Option<Box<models::ToolLpDataForUserCompetencySummary200ResponseUsercompetencyplan>>,
}

impl ToolLpDataForUserCompetencySummary200Response {
    pub fn new(cangrade: bool, competency: models::ToolLpDataForCompetencySummary200Response, evidence: Vec<models::ToolLpDataForUserCompetencySummary200ResponseEvidenceInner>, showrelatedcompetencies: bool, user: models::CoreCompetencyGradeCompetency200ResponseActionuser) -> ToolLpDataForUserCompetencySummary200Response {
        ToolLpDataForUserCompetencySummary200Response {
            cangrade,
            commentarea: None,
            competency: Box::new(competency),
            evidence,
            showrelatedcompetencies,
            user: Box::new(user),
            usercompetency: None,
            usercompetencycourse: None,
            usercompetencyplan: None,
        }
    }
}

