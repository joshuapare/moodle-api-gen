/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreMessageGetConversationsRequest {
    /// Whether to restrict the results to contain NO favourite                 conversations (false), ONLY favourite conversation (true), or ignore any restriction altogether (null)
    #[serde(rename = "favourites", skip_serializing_if = "Option::is_none")]
    pub favourites: Option<bool>,
    /// The offset to start at
    #[serde(rename = "limitfrom", skip_serializing_if = "Option::is_none")]
    pub limitfrom: Option<i32>,
    /// Limit number of conversations to this
    #[serde(rename = "limitnum", skip_serializing_if = "Option::is_none")]
    pub limitnum: Option<i32>,
    /// Whether to include self-conversations (true) or ONLY private                     conversations (false) when private conversations are requested.
    #[serde(rename = "mergeself", skip_serializing_if = "Option::is_none")]
    pub mergeself: Option<bool>,
    /// Filter by type
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<i32>,
    /// The id of the user who we are viewing conversations for
    #[serde(rename = "userid")]
    pub userid: i32,
}

impl CoreMessageGetConversationsRequest {
    pub fn new(userid: i32) -> CoreMessageGetConversationsRequest {
        CoreMessageGetConversationsRequest {
            favourites: None,
            limitfrom: None,
            limitnum: None,
            mergeself: None,
            r#type: None,
            userid,
        }
    }
}

