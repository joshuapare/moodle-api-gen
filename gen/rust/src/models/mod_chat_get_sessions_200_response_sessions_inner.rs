/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModChatGetSessions200ResponseSessionsInner {
    /// Whether the session is completed or not.
    #[serde(rename = "iscomplete", skip_serializing_if = "Option::is_none")]
    pub iscomplete: Option<bool>,
    /// Session end time.
    #[serde(rename = "sessionend", skip_serializing_if = "Option::is_none")]
    pub sessionend: Option<i32>,
    /// Session start time.
    #[serde(rename = "sessionstart", skip_serializing_if = "Option::is_none")]
    pub sessionstart: Option<i32>,
    #[serde(rename = "sessionusers", skip_serializing_if = "Option::is_none")]
    pub sessionusers: Option<Vec<models::ModChatGetSessions200ResponseSessionsInnerSessionusersInner>>,
}

impl ModChatGetSessions200ResponseSessionsInner {
    pub fn new() -> ModChatGetSessions200ResponseSessionsInner {
        ModChatGetSessions200ResponseSessionsInner {
            iscomplete: None,
            sessionend: None,
            sessionstart: None,
            sessionusers: None,
        }
    }
}

