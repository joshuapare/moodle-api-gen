/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCalendarGetCalendarMonthlyView200Response {
    /// calendarinstanceid
    #[serde(rename = "calendarinstanceid")]
    pub calendarinstanceid: i32,
    /// categoryid
    #[serde(rename = "categoryid", skip_serializing_if = "Option::is_none")]
    pub categoryid: Option<i32>,
    /// courseid
    #[serde(rename = "courseid")]
    pub courseid: i32,
    #[serde(rename = "date")]
    pub date: Box<models::CoreCalendarGetCalendarDayView200ResponseNextperiod>,
    #[serde(rename = "daynames")]
    pub daynames: Vec<models::CoreCalendarGetCalendarMonthlyView200ResponseDaynamesInner>,
    /// defaulteventcontext
    #[serde(rename = "defaulteventcontext")]
    pub defaulteventcontext: i32,
    /// filter_selector
    #[serde(rename = "filter_selector", skip_serializing_if = "Option::is_none")]
    pub filter_selector: Option<String>,
    /// includenavigation
    #[serde(rename = "includenavigation")]
    pub includenavigation: bool,
    /// initialeventsloaded
    #[serde(rename = "initialeventsloaded")]
    pub initialeventsloaded: bool,
    /// larrow
    #[serde(rename = "larrow")]
    pub larrow: String,
    #[serde(rename = "nextperiod")]
    pub nextperiod: Box<models::CoreCalendarGetCalendarDayView200ResponseNextperiod>,
    /// nextperiodlink
    #[serde(rename = "nextperiodlink")]
    pub nextperiodlink: String,
    /// nextperiodname
    #[serde(rename = "nextperiodname")]
    pub nextperiodname: String,
    /// periodname
    #[serde(rename = "periodname")]
    pub periodname: String,
    #[serde(rename = "previousperiod")]
    pub previousperiod: Box<models::CoreCalendarGetCalendarDayView200ResponseNextperiod>,
    /// previousperiodlink
    #[serde(rename = "previousperiodlink")]
    pub previousperiodlink: String,
    /// previousperiodname
    #[serde(rename = "previousperiodname")]
    pub previousperiodname: String,
    /// rarrow
    #[serde(rename = "rarrow")]
    pub rarrow: String,
    /// showviewselector
    #[serde(rename = "showviewselector")]
    pub showviewselector: bool,
    /// url
    #[serde(rename = "url")]
    pub url: String,
    /// view
    #[serde(rename = "view")]
    pub view: String,
    /// viewinginblock
    #[serde(rename = "viewinginblock")]
    pub viewinginblock: bool,
    /// viewingmonth
    #[serde(rename = "viewingmonth")]
    pub viewingmonth: bool,
    #[serde(rename = "weeks")]
    pub weeks: Vec<models::CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner>,
}

impl CoreCalendarGetCalendarMonthlyView200Response {
    pub fn new(calendarinstanceid: i32, courseid: i32, date: models::CoreCalendarGetCalendarDayView200ResponseNextperiod, daynames: Vec<models::CoreCalendarGetCalendarMonthlyView200ResponseDaynamesInner>, defaulteventcontext: i32, includenavigation: bool, initialeventsloaded: bool, larrow: String, nextperiod: models::CoreCalendarGetCalendarDayView200ResponseNextperiod, nextperiodlink: String, nextperiodname: String, periodname: String, previousperiod: models::CoreCalendarGetCalendarDayView200ResponseNextperiod, previousperiodlink: String, previousperiodname: String, rarrow: String, showviewselector: bool, url: String, view: String, viewinginblock: bool, viewingmonth: bool, weeks: Vec<models::CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner>) -> CoreCalendarGetCalendarMonthlyView200Response {
        CoreCalendarGetCalendarMonthlyView200Response {
            calendarinstanceid,
            categoryid: None,
            courseid,
            date: Box::new(date),
            daynames,
            defaulteventcontext,
            filter_selector: None,
            includenavigation,
            initialeventsloaded,
            larrow,
            nextperiod: Box::new(nextperiod),
            nextperiodlink,
            nextperiodname,
            periodname,
            previousperiod: Box::new(previousperiod),
            previousperiodlink,
            previousperiodname,
            rarrow,
            showviewselector,
            url,
            view,
            viewinginblock,
            viewingmonth,
            weeks,
        }
    }
}

