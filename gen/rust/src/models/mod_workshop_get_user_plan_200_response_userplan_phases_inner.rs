/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
    #[serde(rename = "actions", skip_serializing_if = "Option::is_none")]
    pub actions: Option<Vec<models::ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInner>>,
    /// Whether is the active task.
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    /// Phase code.
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<i32>,
    #[serde(rename = "tasks", skip_serializing_if = "Option::is_none")]
    pub tasks: Option<Vec<models::ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInner>>,
    /// Phase title.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
}

impl ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
    pub fn new() -> ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
        ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
            actions: None,
            active: None,
            code: None,
            tasks: None,
            title: None,
        }
    }
}

