/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner : Grade items
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner {
    /// Grade average
    #[serde(rename = "averageformatted", skip_serializing_if = "Option::is_none")]
    pub averageformatted: Option<String>,
    /// Grade item category id
    #[serde(rename = "categoryid", skip_serializing_if = "Option::is_none")]
    pub categoryid: Option<i32>,
    /// Course module id (if type mod)
    #[serde(rename = "cmid", skip_serializing_if = "Option::is_none")]
    pub cmid: Option<i32>,
    /// Grade feedback
    #[serde(rename = "feedback", skip_serializing_if = "Option::is_none")]
    pub feedback: Option<String>,
    /// feedback format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "feedbackformat", skip_serializing_if = "Option::is_none")]
    pub feedbackformat: Option<i32>,
    /// Grade graded date
    #[serde(rename = "gradedategraded", skip_serializing_if = "Option::is_none")]
    pub gradedategraded: Option<i32>,
    /// Grade submit date
    #[serde(rename = "gradedatesubmitted", skip_serializing_if = "Option::is_none")]
    pub gradedatesubmitted: Option<i32>,
    /// The grade formatted
    #[serde(rename = "gradeformatted", skip_serializing_if = "Option::is_none")]
    pub gradeformatted: Option<String>,
    /// Grade hidden by date?
    #[serde(rename = "gradehiddenbydate", skip_serializing_if = "Option::is_none")]
    pub gradehiddenbydate: Option<bool>,
    /// Grade is hidden?
    #[serde(rename = "gradeishidden", skip_serializing_if = "Option::is_none")]
    pub gradeishidden: Option<bool>,
    /// Grade is locked?
    #[serde(rename = "gradeislocked", skip_serializing_if = "Option::is_none")]
    pub gradeislocked: Option<bool>,
    /// Grade overridden?
    #[serde(rename = "gradeisoverridden", skip_serializing_if = "Option::is_none")]
    pub gradeisoverridden: Option<bool>,
    /// Grade max
    #[serde(rename = "grademax", skip_serializing_if = "Option::is_none")]
    pub grademax: Option<f64>,
    /// Grade min
    #[serde(rename = "grademin", skip_serializing_if = "Option::is_none")]
    pub grademin: Option<f64>,
    /// Grade needs update?
    #[serde(rename = "gradeneedsupdate", skip_serializing_if = "Option::is_none")]
    pub gradeneedsupdate: Option<bool>,
    /// Grade raw
    #[serde(rename = "graderaw", skip_serializing_if = "Option::is_none")]
    pub graderaw: Option<f64>,
    /// Grade item id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Grade item idnumber
    #[serde(rename = "idnumber", skip_serializing_if = "Option::is_none")]
    pub idnumber: Option<String>,
    /// Grade item instance
    #[serde(rename = "iteminstance", skip_serializing_if = "Option::is_none")]
    pub iteminstance: Option<i32>,
    /// Grade item module
    #[serde(rename = "itemmodule", skip_serializing_if = "Option::is_none")]
    pub itemmodule: Option<String>,
    /// Grade item name
    #[serde(rename = "itemname", skip_serializing_if = "Option::is_none")]
    pub itemname: Option<String>,
    /// Grade item item number
    #[serde(rename = "itemnumber", skip_serializing_if = "Option::is_none")]
    pub itemnumber: Option<i32>,
    /// Grade item type
    #[serde(rename = "itemtype", skip_serializing_if = "Option::is_none")]
    pub itemtype: Option<String>,
    /// Letter grade
    #[serde(rename = "lettergradeformatted", skip_serializing_if = "Option::is_none")]
    pub lettergradeformatted: Option<String>,
    /// Grade item for user locked?
    #[serde(rename = "locked", skip_serializing_if = "Option::is_none")]
    pub locked: Option<bool>,
    /// Num users in course
    #[serde(rename = "numusers", skip_serializing_if = "Option::is_none")]
    pub numusers: Option<i32>,
    /// Outcome id
    #[serde(rename = "outcomeid", skip_serializing_if = "Option::is_none")]
    pub outcomeid: Option<i32>,
    /// Percentage
    #[serde(rename = "percentageformatted", skip_serializing_if = "Option::is_none")]
    pub percentageformatted: Option<String>,
    /// Range formatted
    #[serde(rename = "rangeformatted", skip_serializing_if = "Option::is_none")]
    pub rangeformatted: Option<String>,
    /// Rank in the course
    #[serde(rename = "rank", skip_serializing_if = "Option::is_none")]
    pub rank: Option<i32>,
    /// Scale id
    #[serde(rename = "scaleid", skip_serializing_if = "Option::is_none")]
    pub scaleid: Option<i32>,
    /// Status
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// Weight
    #[serde(rename = "weightformatted", skip_serializing_if = "Option::is_none")]
    pub weightformatted: Option<String>,
    /// Weight raw
    #[serde(rename = "weightraw", skip_serializing_if = "Option::is_none")]
    pub weightraw: Option<f64>,
}

impl GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner {
    /// Grade items
    pub fn new() -> GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner {
        GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner {
            averageformatted: None,
            categoryid: None,
            cmid: None,
            feedback: None,
            feedbackformat: None,
            gradedategraded: None,
            gradedatesubmitted: None,
            gradeformatted: None,
            gradehiddenbydate: None,
            gradeishidden: None,
            gradeislocked: None,
            gradeisoverridden: None,
            grademax: None,
            grademin: None,
            gradeneedsupdate: None,
            graderaw: None,
            id: None,
            idnumber: None,
            iteminstance: None,
            itemmodule: None,
            itemname: None,
            itemnumber: None,
            itemtype: None,
            lettergradeformatted: None,
            locked: None,
            numusers: None,
            outcomeid: None,
            percentageformatted: None,
            rangeformatted: None,
            rank: None,
            scaleid: None,
            status: None,
            weightformatted: None,
            weightraw: None,
        }
    }
}

