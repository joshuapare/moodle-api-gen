/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModQuizGetQuizAccessInformation200Response {
    #[serde(rename = "accessrules")]
    pub accessrules: Vec<serde_json::Value>,
    #[serde(rename = "activerulenames")]
    pub activerulenames: Vec<serde_json::Value>,
    /// Whether the user can do the quiz or not.
    #[serde(rename = "canattempt")]
    pub canattempt: bool,
    /// Whether the user can edit the quiz settings or not.
    #[serde(rename = "canmanage")]
    pub canmanage: bool,
    /// Whether the user can preview the quiz or not.
    #[serde(rename = "canpreview")]
    pub canpreview: bool,
    /// Whether the users can review their previous attempts                                                                 or not.
    #[serde(rename = "canreviewmyattempts")]
    pub canreviewmyattempts: bool,
    /// Whether the user can view the quiz reports or not.
    #[serde(rename = "canviewreports")]
    pub canviewreports: bool,
    #[serde(rename = "preventaccessreasons")]
    pub preventaccessreasons: Vec<serde_json::Value>,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl ModQuizGetQuizAccessInformation200Response {
    pub fn new(accessrules: Vec<serde_json::Value>, activerulenames: Vec<serde_json::Value>, canattempt: bool, canmanage: bool, canpreview: bool, canreviewmyattempts: bool, canviewreports: bool, preventaccessreasons: Vec<serde_json::Value>) -> ModQuizGetQuizAccessInformation200Response {
        ModQuizGetQuizAccessInformation200Response {
            accessrules,
            activerulenames,
            canattempt,
            canmanage,
            canpreview,
            canreviewmyattempts,
            canviewreports,
            preventaccessreasons,
            warnings: None,
        }
    }
}

