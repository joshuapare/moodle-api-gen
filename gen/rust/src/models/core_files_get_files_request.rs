/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreFilesGetFilesRequest {
    /// component
    #[serde(rename = "component")]
    pub component: String,
    /// context id Set to -1 to use contextlevel and instanceid.
    #[serde(rename = "contextid")]
    pub contextid: i32,
    /// The context level for the file location.
    #[serde(rename = "contextlevel", skip_serializing_if = "Option::is_none")]
    pub contextlevel: Option<String>,
    /// file area
    #[serde(rename = "filearea")]
    pub filearea: String,
    /// file name
    #[serde(rename = "filename")]
    pub filename: String,
    /// file path
    #[serde(rename = "filepath")]
    pub filepath: String,
    /// The instance id for where the file is located.
    #[serde(rename = "instanceid", skip_serializing_if = "Option::is_none")]
    pub instanceid: Option<i32>,
    /// associated id
    #[serde(rename = "itemid")]
    pub itemid: i32,
    /// timestamp to return files changed after this time.
    #[serde(rename = "modified", skip_serializing_if = "Option::is_none")]
    pub modified: Option<i32>,
}

impl CoreFilesGetFilesRequest {
    pub fn new(component: String, contextid: i32, filearea: String, filename: String, filepath: String, itemid: i32) -> CoreFilesGetFilesRequest {
        CoreFilesGetFilesRequest {
            component,
            contextid,
            contextlevel: None,
            filearea,
            filename,
            filepath,
            instanceid: None,
            itemid,
            modified: None,
        }
    }
}

