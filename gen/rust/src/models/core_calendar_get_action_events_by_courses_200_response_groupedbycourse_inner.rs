/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner {
    /// courseid
    #[serde(rename = "courseid", skip_serializing_if = "Option::is_none")]
    pub courseid: Option<i32>,
    #[serde(rename = "events", skip_serializing_if = "Option::is_none")]
    pub events: Option<Vec<models::CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInner>>,
    /// firstid
    #[serde(rename = "firstid", skip_serializing_if = "Option::is_none")]
    pub firstid: Option<i32>,
    /// lastid
    #[serde(rename = "lastid", skip_serializing_if = "Option::is_none")]
    pub lastid: Option<i32>,
}

impl CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner {
    pub fn new() -> CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner {
        CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner {
            courseid: None,
            events: None,
            firstid: None,
            lastid: None,
        }
    }
}

