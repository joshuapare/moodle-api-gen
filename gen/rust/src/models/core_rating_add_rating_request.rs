/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreRatingAddRatingRequest {
    /// agreggation method
    #[serde(rename = "aggregation", skip_serializing_if = "Option::is_none")]
    pub aggregation: Option<i32>,
    /// component
    #[serde(rename = "component")]
    pub component: String,
    /// context level: course, module, user, etc...
    #[serde(rename = "contextlevel")]
    pub contextlevel: String,
    /// the instance id of item associated with the context level
    #[serde(rename = "instanceid")]
    pub instanceid: i32,
    /// associated id
    #[serde(rename = "itemid")]
    pub itemid: i32,
    /// rated user id
    #[serde(rename = "rateduserid")]
    pub rateduserid: i32,
    /// user rating
    #[serde(rename = "rating")]
    pub rating: i32,
    /// rating area
    #[serde(rename = "ratingarea")]
    pub ratingarea: String,
    /// scale id
    #[serde(rename = "scaleid")]
    pub scaleid: i32,
}

impl CoreRatingAddRatingRequest {
    pub fn new(component: String, contextlevel: String, instanceid: i32, itemid: i32, rateduserid: i32, rating: i32, ratingarea: String, scaleid: i32) -> CoreRatingAddRatingRequest {
        CoreRatingAddRatingRequest {
            aggregation: None,
            component,
            contextlevel,
            instanceid,
            itemid,
            rateduserid,
            rating,
            ratingarea,
            scaleid,
        }
    }
}

