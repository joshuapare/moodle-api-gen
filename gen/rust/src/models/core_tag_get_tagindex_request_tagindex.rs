/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreTagGetTagindexRequestTagindex {
    /// context id where to search for items
    #[serde(rename = "ctx", skip_serializing_if = "Option::is_none")]
    pub ctx: Option<i32>,
    /// exlusive mode for this tag area
    #[serde(rename = "excl", skip_serializing_if = "Option::is_none")]
    pub excl: Option<bool>,
    /// context id where the link was displayed
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<i32>,
    /// page number (0-based)
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// search in the context recursive
    #[serde(rename = "rec", skip_serializing_if = "Option::is_none")]
    pub rec: Option<i32>,
    /// tag area id
    #[serde(rename = "ta")]
    pub ta: i32,
    /// tag name
    #[serde(rename = "tag")]
    pub tag: String,
    /// tag collection id
    #[serde(rename = "tc")]
    pub tc: i32,
}

impl CoreTagGetTagindexRequestTagindex {
    pub fn new(ta: i32, tag: String, tc: i32) -> CoreTagGetTagindexRequestTagindex {
        CoreTagGetTagindexRequestTagindex {
            ctx: None,
            excl: None,
            from: None,
            page: None,
            rec: None,
            ta,
            tag,
            tc,
        }
    }
}

