/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModForumGetForumDiscussionsPaginatedRequest {
    /// forum instance id
    #[serde(rename = "forumid")]
    pub forumid: i32,
    /// current page
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// items per page
    #[serde(rename = "perpage", skip_serializing_if = "Option::is_none")]
    pub perpage: Option<i32>,
    /// sort by this element: id, timemodified, timestart or timeend
    #[serde(rename = "sortby", skip_serializing_if = "Option::is_none")]
    pub sortby: Option<String>,
    /// sort direction: ASC or DESC
    #[serde(rename = "sortdirection", skip_serializing_if = "Option::is_none")]
    pub sortdirection: Option<String>,
}

impl ModForumGetForumDiscussionsPaginatedRequest {
    pub fn new(forumid: i32) -> ModForumGetForumDiscussionsPaginatedRequest {
        ModForumGetForumDiscussionsPaginatedRequest {
            forumid,
            page: None,
            perpage: None,
            sortby: None,
            sortdirection: None,
        }
    }
}

