/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ModLessonGetPageData200ResponseAnswersInner : The page answers
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModLessonGetPageData200ResponseAnswersInner {
    /// Possible answer text
    #[serde(rename = "answer", skip_serializing_if = "Option::is_none")]
    pub answer: Option<String>,
    #[serde(rename = "answerfiles", skip_serializing_if = "Option::is_none")]
    pub answerfiles: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// answer format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "answerformat", skip_serializing_if = "Option::is_none")]
    pub answerformat: Option<i32>,
    /// Used to store options for the answer
    #[serde(rename = "flags", skip_serializing_if = "Option::is_none")]
    pub flags: Option<i32>,
    /// The grade this answer is worth
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<i32>,
    /// The ID of this answer in the database
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Identifies where the user goes upon completing a page with this answer
    #[serde(rename = "jumpto", skip_serializing_if = "Option::is_none")]
    pub jumpto: Option<i32>,
    /// Response text for the answer
    #[serde(rename = "response", skip_serializing_if = "Option::is_none")]
    pub response: Option<String>,
    #[serde(rename = "responsefiles", skip_serializing_if = "Option::is_none")]
    pub responsefiles: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// response format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "responseformat", skip_serializing_if = "Option::is_none")]
    pub responseformat: Option<i32>,
    /// The score this answer will give
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<i32>,
    /// A timestamp of when the answer was created
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// A timestamp of when the answer was modified
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
}

impl ModLessonGetPageData200ResponseAnswersInner {
    /// The page answers
    pub fn new() -> ModLessonGetPageData200ResponseAnswersInner {
        ModLessonGetPageData200ResponseAnswersInner {
            answer: None,
            answerfiles: None,
            answerformat: None,
            flags: None,
            grade: None,
            id: None,
            jumpto: None,
            response: None,
            responsefiles: None,
            responseformat: None,
            score: None,
            timecreated: None,
            timemodified: None,
        }
    }
}

