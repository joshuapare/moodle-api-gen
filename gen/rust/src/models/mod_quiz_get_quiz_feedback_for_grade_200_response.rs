/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModQuizGetQuizFeedbackForGrade200Response {
    #[serde(rename = "feedbackinlinefiles", skip_serializing_if = "Option::is_none")]
    pub feedbackinlinefiles: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// the comment that corresponds to this grade (empty for none)
    #[serde(rename = "feedbacktext")]
    pub feedbacktext: String,
    /// feedbacktext format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "feedbacktextformat", skip_serializing_if = "Option::is_none")]
    pub feedbacktextformat: Option<i32>,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl ModQuizGetQuizFeedbackForGrade200Response {
    pub fn new(feedbacktext: String) -> ModQuizGetQuizFeedbackForGrade200Response {
        ModQuizGetQuizFeedbackForGrade200Response {
            feedbackinlinefiles: None,
            feedbacktext,
            feedbacktextformat: None,
            warnings: None,
        }
    }
}

