/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModAssignSaveGradeRequest {
    /// Allow another attempt if the attempt reopen method is manual
    #[serde(rename = "addattempt")]
    pub addattempt: bool,
    #[serde(rename = "advancedgradingdata", skip_serializing_if = "Option::is_none")]
    pub advancedgradingdata: Option<Box<models::ModAssignSaveGradeRequestAdvancedgradingdata>>,
    /// If true, this grade will be applied to all members of the group (for group assignments).
    #[serde(rename = "applytoall")]
    pub applytoall: bool,
    /// The assignment id to operate on
    #[serde(rename = "assignmentid")]
    pub assignmentid: i32,
    /// The attempt number (-1 means latest attempt)
    #[serde(rename = "attemptnumber")]
    pub attemptnumber: i32,
    /// The new grade for this user. Ignored if advanced grading used
    #[serde(rename = "grade")]
    pub grade: f64,
    #[serde(rename = "plugindata", skip_serializing_if = "Option::is_none")]
    pub plugindata: Option<Box<models::ModAssignSaveGradeRequestPlugindata>>,
    /// The student id to operate on
    #[serde(rename = "userid")]
    pub userid: i32,
    /// The next marking workflow state
    #[serde(rename = "workflowstate")]
    pub workflowstate: String,
}

impl ModAssignSaveGradeRequest {
    pub fn new(addattempt: bool, applytoall: bool, assignmentid: i32, attemptnumber: i32, grade: f64, userid: i32, workflowstate: String) -> ModAssignSaveGradeRequest {
        ModAssignSaveGradeRequest {
            addattempt,
            advancedgradingdata: None,
            applytoall,
            assignmentid,
            attemptnumber,
            grade,
            plugindata: None,
            userid,
            workflowstate,
        }
    }
}

