/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ModForumGetForumDiscussions200ResponseDiscussionsInner : post
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModForumGetForumDiscussions200ResponseDiscussionsInner {
    /// Has attachments?
    #[serde(rename = "attachment", skip_serializing_if = "Option::is_none")]
    pub attachment: Option<String>,
    #[serde(rename = "attachments", skip_serializing_if = "Option::is_none")]
    pub attachments: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// Can the user star the discussion
    #[serde(rename = "canfavourite", skip_serializing_if = "Option::is_none")]
    pub canfavourite: Option<bool>,
    /// Can the user lock the discussion
    #[serde(rename = "canlock", skip_serializing_if = "Option::is_none")]
    pub canlock: Option<bool>,
    /// Can the user reply to the discussion
    #[serde(rename = "canreply", skip_serializing_if = "Option::is_none")]
    pub canreply: Option<bool>,
    /// Creation time
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<i32>,
    /// Discussion id
    #[serde(rename = "discussion", skip_serializing_if = "Option::is_none")]
    pub discussion: Option<i32>,
    /// Group id
    #[serde(rename = "groupid", skip_serializing_if = "Option::is_none")]
    pub groupid: Option<i32>,
    /// Post id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Is the discussion locked
    #[serde(rename = "locked", skip_serializing_if = "Option::is_none")]
    pub locked: Option<bool>,
    /// Mailed?
    #[serde(rename = "mailed", skip_serializing_if = "Option::is_none")]
    pub mailed: Option<i32>,
    /// Mail now?
    #[serde(rename = "mailnow", skip_serializing_if = "Option::is_none")]
    pub mailnow: Option<i32>,
    /// The post message
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "messageformat", skip_serializing_if = "Option::is_none")]
    pub messageformat: Option<i32>,
    #[serde(rename = "messageinlinefiles", skip_serializing_if = "Option::is_none")]
    pub messageinlinefiles: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// Can we trust?
    #[serde(rename = "messagetrust", skip_serializing_if = "Option::is_none")]
    pub messagetrust: Option<i32>,
    /// Time modified
    #[serde(rename = "modified", skip_serializing_if = "Option::is_none")]
    pub modified: Option<i32>,
    /// Discussion name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The number of replies in the discussion
    #[serde(rename = "numreplies", skip_serializing_if = "Option::is_none")]
    pub numreplies: Option<i32>,
    /// The number of unread discussions.
    #[serde(rename = "numunread", skip_serializing_if = "Option::is_none")]
    pub numunread: Option<i32>,
    /// Parent id
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<i32>,
    /// Is the discussion pinned
    #[serde(rename = "pinned", skip_serializing_if = "Option::is_none")]
    pub pinned: Option<bool>,
    /// Is the discussion starred
    #[serde(rename = "starred", skip_serializing_if = "Option::is_none")]
    pub starred: Option<bool>,
    /// The post subject
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    /// Time discussion ends
    #[serde(rename = "timeend", skip_serializing_if = "Option::is_none")]
    pub timeend: Option<i32>,
    /// Time modified
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
    /// Time discussion can start
    #[serde(rename = "timestart", skip_serializing_if = "Option::is_none")]
    pub timestart: Option<i32>,
    /// The post message total score
    #[serde(rename = "totalscore", skip_serializing_if = "Option::is_none")]
    pub totalscore: Option<i32>,
    /// Post author full name
    #[serde(rename = "userfullname", skip_serializing_if = "Option::is_none")]
    pub userfullname: Option<String>,
    /// User who started the discussion id
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
    /// The id of the user who last modified
    #[serde(rename = "usermodified", skip_serializing_if = "Option::is_none")]
    pub usermodified: Option<i32>,
    /// Post modifier full name
    #[serde(rename = "usermodifiedfullname", skip_serializing_if = "Option::is_none")]
    pub usermodifiedfullname: Option<String>,
    /// Post modifier picture.
    #[serde(rename = "usermodifiedpictureurl", skip_serializing_if = "Option::is_none")]
    pub usermodifiedpictureurl: Option<String>,
    /// Post author picture.
    #[serde(rename = "userpictureurl", skip_serializing_if = "Option::is_none")]
    pub userpictureurl: Option<String>,
}

impl ModForumGetForumDiscussions200ResponseDiscussionsInner {
    /// post
    pub fn new() -> ModForumGetForumDiscussions200ResponseDiscussionsInner {
        ModForumGetForumDiscussions200ResponseDiscussionsInner {
            attachment: None,
            attachments: None,
            canfavourite: None,
            canlock: None,
            canreply: None,
            created: None,
            discussion: None,
            groupid: None,
            id: None,
            locked: None,
            mailed: None,
            mailnow: None,
            message: None,
            messageformat: None,
            messageinlinefiles: None,
            messagetrust: None,
            modified: None,
            name: None,
            numreplies: None,
            numunread: None,
            parent: None,
            pinned: None,
            starred: None,
            subject: None,
            timeend: None,
            timemodified: None,
            timestart: None,
            totalscore: None,
            userfullname: None,
            userid: None,
            usermodified: None,
            usermodifiedfullname: None,
            usermodifiedpictureurl: None,
            userpictureurl: None,
        }
    }
}

