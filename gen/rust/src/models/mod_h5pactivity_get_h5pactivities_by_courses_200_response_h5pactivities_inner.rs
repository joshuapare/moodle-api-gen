/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInner {
    /// Sha1 hash of file content.
    #[serde(rename = "contenthash", skip_serializing_if = "Option::is_none")]
    pub contenthash: Option<String>,
    /// context
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<i32>,
    /// Course id this h5p activity is part of.
    #[serde(rename = "course", skip_serializing_if = "Option::is_none")]
    pub course: Option<i32>,
    /// coursemodule
    #[serde(rename = "coursemodule", skip_serializing_if = "Option::is_none")]
    pub coursemodule: Option<i32>,
    #[serde(rename = "deployedfile", skip_serializing_if = "Option::is_none")]
    pub deployedfile: Option<Box<models::ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInnerDeployedfile>>,
    /// H5P Button display options.
    #[serde(rename = "displayoptions", skip_serializing_if = "Option::is_none")]
    pub displayoptions: Option<i32>,
    /// Enable xAPI tracking.
    #[serde(rename = "enabletracking", skip_serializing_if = "Option::is_none")]
    pub enabletracking: Option<i32>,
    /// The maximum grade for submission.
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<i32>,
    /// Which H5P attempt is used for grading.
    #[serde(rename = "grademethod", skip_serializing_if = "Option::is_none")]
    pub grademethod: Option<i32>,
    /// The primary key of the record.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// H5P activity description.
    #[serde(rename = "intro", skip_serializing_if = "Option::is_none")]
    pub intro: Option<String>,
    #[serde(rename = "introfiles", skip_serializing_if = "Option::is_none")]
    pub introfiles: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>>,
    /// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "introformat", skip_serializing_if = "Option::is_none")]
    pub introformat: Option<i32>,
    /// The name of the activity module instance.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "package", skip_serializing_if = "Option::is_none")]
    pub package: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>>,
    /// Timestamp of when the instance was added to the course.
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// Timestamp of when the instance was last modified.
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
}

impl ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInner {
    pub fn new() -> ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInner {
        ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInner {
            contenthash: None,
            context: None,
            course: None,
            coursemodule: None,
            deployedfile: None,
            displayoptions: None,
            enabletracking: None,
            grade: None,
            grademethod: None,
            id: None,
            intro: None,
            introfiles: None,
            introformat: None,
            name: None,
            package: None,
            timecreated: None,
            timemodified: None,
        }
    }
}

