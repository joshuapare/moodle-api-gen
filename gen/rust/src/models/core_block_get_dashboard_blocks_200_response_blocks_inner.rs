/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// CoreBlockGetDashboardBlocks200ResponseBlocksInner : Block information.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreBlockGetDashboardBlocks200ResponseBlocksInner {
    /// Whether the block is collapsible.
    #[serde(rename = "collapsible", skip_serializing_if = "Option::is_none")]
    pub collapsible: Option<bool>,
    #[serde(rename = "configs", skip_serializing_if = "Option::is_none")]
    pub configs: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerConfigsInner>>,
    #[serde(rename = "contents", skip_serializing_if = "Option::is_none")]
    pub contents: Option<Box<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContents>>,
    /// Whether the block is dockable.
    #[serde(rename = "dockable", skip_serializing_if = "Option::is_none")]
    pub dockable: Option<bool>,
    /// Block instance id.
    #[serde(rename = "instanceid", skip_serializing_if = "Option::is_none")]
    pub instanceid: Option<i32>,
    /// Block name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Position id.
    #[serde(rename = "positionid", skip_serializing_if = "Option::is_none")]
    pub positionid: Option<i32>,
    /// Block region.
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// Whether the block is visible.
    #[serde(rename = "visible", skip_serializing_if = "Option::is_none")]
    pub visible: Option<bool>,
    /// Used to order blocks within a region.
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<i32>,
}

impl CoreBlockGetDashboardBlocks200ResponseBlocksInner {
    /// Block information.
    pub fn new() -> CoreBlockGetDashboardBlocks200ResponseBlocksInner {
        CoreBlockGetDashboardBlocks200ResponseBlocksInner {
            collapsible: None,
            configs: None,
            contents: None,
            dockable: None,
            instanceid: None,
            name: None,
            positionid: None,
            region: None,
            visible: None,
            weight: None,
        }
    }
}

