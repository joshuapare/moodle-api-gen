/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCourseGetCourseContentItems200ResponseContentItemsInner {
    /// The archetype of the module exposing the content item
    #[serde(rename = "archetype", skip_serializing_if = "Option::is_none")]
    pub archetype: Option<String>,
    /// The name of the component exposing the content item
    #[serde(rename = "componentname", skip_serializing_if = "Option::is_none")]
    pub componentname: Option<String>,
    /// Has the user favourited the content item
    #[serde(rename = "favourite", skip_serializing_if = "Option::is_none")]
    pub favourite: Option<bool>,
    /// Html description / help for the content item
    #[serde(rename = "help", skip_serializing_if = "Option::is_none")]
    pub help: Option<String>,
    /// Html containing the icon for the content item
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
    /// The id of the content item
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// If this item was pulled from the old callback and has no item id.
    #[serde(rename = "legacyitem", skip_serializing_if = "Option::is_none")]
    pub legacyitem: Option<bool>,
    /// The link to the content item creation page
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    /// Name of the content item
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The purpose of the component exposing the content item
    #[serde(rename = "purpose", skip_serializing_if = "Option::is_none")]
    pub purpose: Option<String>,
    /// Has this item been recommended
    #[serde(rename = "recommended", skip_serializing_if = "Option::is_none")]
    pub recommended: Option<bool>,
    /// The string title of the content item, human readable
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
}

impl CoreCourseGetCourseContentItems200ResponseContentItemsInner {
    pub fn new() -> CoreCourseGetCourseContentItems200ResponseContentItemsInner {
        CoreCourseGetCourseContentItems200ResponseContentItemsInner {
            archetype: None,
            componentname: None,
            favourite: None,
            help: None,
            icon: None,
            id: None,
            legacyitem: None,
            link: None,
            name: None,
            purpose: None,
            recommended: None,
            title: None,
        }
    }
}

