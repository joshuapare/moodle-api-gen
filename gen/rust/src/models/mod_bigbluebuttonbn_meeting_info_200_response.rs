/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModBigbluebuttonbnMeetingInfo200Response {
    /// bigbluebuttonbn instance id
    #[serde(rename = "bigbluebuttonbnid")]
    pub bigbluebuttonbnid: String,
    /// Can join
    #[serde(rename = "canjoin")]
    pub canjoin: bool,
    /// Closing time
    #[serde(rename = "closingtime", skip_serializing_if = "Option::is_none")]
    pub closingtime: Option<i32>,
    /// CM id
    #[serde(rename = "cmid")]
    pub cmid: i32,
    #[serde(rename = "features", skip_serializing_if = "Option::is_none")]
    pub features: Option<Vec<models::ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner>>,
    /// bigbluebuttonbn group id
    #[serde(rename = "groupid", skip_serializing_if = "Option::is_none")]
    pub groupid: Option<i32>,
    /// Guest access enabled
    #[serde(rename = "guestaccessenabled", skip_serializing_if = "Option::is_none")]
    pub guestaccessenabled: Option<bool>,
    /// Guest URL
    #[serde(rename = "guestjoinurl", skip_serializing_if = "Option::is_none")]
    pub guestjoinurl: Option<String>,
    /// Guest join password
    #[serde(rename = "guestpassword", skip_serializing_if = "Option::is_none")]
    pub guestpassword: Option<String>,
    /// Is moderator
    #[serde(rename = "ismoderator")]
    pub ismoderator: bool,
    /// Join URL
    #[serde(rename = "joinurl")]
    pub joinurl: String,
    /// Meeting id
    #[serde(rename = "meetingid")]
    pub meetingid: String,
    /// Moderator count
    #[serde(rename = "moderatorcount", skip_serializing_if = "Option::is_none")]
    pub moderatorcount: Option<i32>,
    /// Several moderators ?
    #[serde(rename = "moderatorplural", skip_serializing_if = "Option::is_none")]
    pub moderatorplural: Option<bool>,
    /// Opening time
    #[serde(rename = "openingtime", skip_serializing_if = "Option::is_none")]
    pub openingtime: Option<i32>,
    /// Participant count
    #[serde(rename = "participantcount", skip_serializing_if = "Option::is_none")]
    pub participantcount: Option<i32>,
    /// Several participants ?
    #[serde(rename = "participantplural", skip_serializing_if = "Option::is_none")]
    pub participantplural: Option<bool>,
    #[serde(rename = "presentations")]
    pub presentations: Vec<models::ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner>,
    /// Started at
    #[serde(rename = "startedat", skip_serializing_if = "Option::is_none")]
    pub startedat: Option<i32>,
    /// Status closed
    #[serde(rename = "statusclosed", skip_serializing_if = "Option::is_none")]
    pub statusclosed: Option<bool>,
    /// Status message
    #[serde(rename = "statusmessage", skip_serializing_if = "Option::is_none")]
    pub statusmessage: Option<String>,
    /// Status open
    #[serde(rename = "statusopen", skip_serializing_if = "Option::is_none")]
    pub statusopen: Option<bool>,
    /// Status running
    #[serde(rename = "statusrunning", skip_serializing_if = "Option::is_none")]
    pub statusrunning: Option<bool>,
    /// User limit
    #[serde(rename = "userlimit")]
    pub userlimit: i32,
}

impl ModBigbluebuttonbnMeetingInfo200Response {
    pub fn new(bigbluebuttonbnid: String, canjoin: bool, cmid: i32, ismoderator: bool, joinurl: String, meetingid: String, presentations: Vec<models::ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner>, userlimit: i32) -> ModBigbluebuttonbnMeetingInfo200Response {
        ModBigbluebuttonbnMeetingInfo200Response {
            bigbluebuttonbnid,
            canjoin,
            closingtime: None,
            cmid,
            features: None,
            groupid: None,
            guestaccessenabled: None,
            guestjoinurl: None,
            guestpassword: None,
            ismoderator,
            joinurl,
            meetingid,
            moderatorcount: None,
            moderatorplural: None,
            openingtime: None,
            participantcount: None,
            participantplural: None,
            presentations,
            startedat: None,
            statusclosed: None,
            statusmessage: None,
            statusopen: None,
            statusrunning: None,
            userlimit,
        }
    }
}

