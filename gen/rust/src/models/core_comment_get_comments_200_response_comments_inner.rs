/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// CoreCommentGetComments200ResponseCommentsInner : comment
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCommentGetComments200ResponseCommentsInner {
    /// HTML user picture
    #[serde(rename = "avatar", skip_serializing_if = "Option::is_none")]
    pub avatar: Option<String>,
    /// The content text formatted
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// Permission to delete=true/false
    #[serde(rename = "delete", skip_serializing_if = "Option::is_none")]
    pub delete: Option<bool>,
    /// content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<i32>,
    /// fullname
    #[serde(rename = "fullname", skip_serializing_if = "Option::is_none")]
    pub fullname: Option<String>,
    /// Comment ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// URL profile
    #[serde(rename = "profileurl", skip_serializing_if = "Option::is_none")]
    pub profileurl: Option<String>,
    /// Time format
    #[serde(rename = "strftimeformat", skip_serializing_if = "Option::is_none")]
    pub strftimeformat: Option<String>,
    /// Time in human format
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
    /// Time created (timestamp)
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// User ID
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
}

impl CoreCommentGetComments200ResponseCommentsInner {
    /// comment
    pub fn new() -> CoreCommentGetComments200ResponseCommentsInner {
        CoreCommentGetComments200ResponseCommentsInner {
            avatar: None,
            content: None,
            delete: None,
            format: None,
            fullname: None,
            id: None,
            profileurl: None,
            strftimeformat: None,
            time: None,
            timecreated: None,
            userid: None,
        }
    }
}

