/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModForumGetDiscussionPost200ResponsePostTagsInner {
    /// The display name of the tag
    #[serde(rename = "displayname", skip_serializing_if = "Option::is_none")]
    pub displayname: Option<String>,
    /// Wehther this tag is flagged
    #[serde(rename = "flag", skip_serializing_if = "Option::is_none")]
    pub flag: Option<bool>,
    /// The ID of the Tag
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Whether this is a standard tag
    #[serde(rename = "isstandard", skip_serializing_if = "Option::is_none")]
    pub isstandard: Option<bool>,
    /// The tagid
    #[serde(rename = "tagid", skip_serializing_if = "Option::is_none")]
    pub tagid: Option<i32>,
    #[serde(rename = "urls", skip_serializing_if = "Option::is_none")]
    pub urls: Option<Box<models::ModForumGetDiscussionPost200ResponsePostTagsInnerUrls>>,
}

impl ModForumGetDiscussionPost200ResponsePostTagsInner {
    pub fn new() -> ModForumGetDiscussionPost200ResponsePostTagsInner {
        ModForumGetDiscussionPost200ResponsePostTagsInner {
            displayname: None,
            flag: None,
            id: None,
            isstandard: None,
            tagid: None,
            urls: None,
        }
    }
}

