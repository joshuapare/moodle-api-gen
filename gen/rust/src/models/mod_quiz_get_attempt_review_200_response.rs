/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModQuizGetAttemptReview200Response {
    #[serde(rename = "additionaldata")]
    pub additionaldata: Vec<models::ModQuizGetAttemptReview200ResponseAdditionaldataInner>,
    #[serde(rename = "attempt")]
    pub attempt: Box<models::ModQuizGetAttemptReview200ResponseAttempt>,
    /// grade for the quiz (or empty or \"notyetgraded\")
    #[serde(rename = "grade")]
    pub grade: String,
    #[serde(rename = "questions")]
    pub questions: Vec<models::ModQuizGetAttemptReview200ResponseQuestionsInner>,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl ModQuizGetAttemptReview200Response {
    pub fn new(additionaldata: Vec<models::ModQuizGetAttemptReview200ResponseAdditionaldataInner>, attempt: models::ModQuizGetAttemptReview200ResponseAttempt, grade: String, questions: Vec<models::ModQuizGetAttemptReview200ResponseQuestionsInner>) -> ModQuizGetAttemptReview200Response {
        ModQuizGetAttemptReview200Response {
            additionaldata,
            attempt: Box::new(attempt),
            grade,
            questions,
            warnings: None,
        }
    }
}

