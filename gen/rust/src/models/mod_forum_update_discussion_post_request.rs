/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModForumUpdateDiscussionPostRequest {
    /// Updated post message (HTML assumed if messageformat is not provided)
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "messageformat", skip_serializing_if = "Option::is_none")]
    pub messageformat: Option<i32>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Vec<models::ModForumUpdateDiscussionPostRequestOptionsInner>>,
    /// Post to be updated. It can be a discussion topic post.
    #[serde(rename = "postid")]
    pub postid: i32,
    /// Updated post subject
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
}

impl ModForumUpdateDiscussionPostRequest {
    pub fn new(postid: i32) -> ModForumUpdateDiscussionPostRequest {
        ModForumUpdateDiscussionPostRequest {
            message: None,
            messageformat: None,
            options: None,
            postid,
            subject: None,
        }
    }
}

