/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreBlogGetEntries200ResponseEntriesInner {
    /// Post atachment.
    #[serde(rename = "attachment", skip_serializing_if = "Option::is_none")]
    pub attachment: Option<String>,
    #[serde(rename = "attachmentfiles", skip_serializing_if = "Option::is_none")]
    pub attachmentfiles: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner>>,
    /// Post content.
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// Course where the post was created.
    #[serde(rename = "courseid", skip_serializing_if = "Option::is_none")]
    pub courseid: Option<i32>,
    /// Course module id where the post was created.
    #[serde(rename = "coursemoduleid", skip_serializing_if = "Option::is_none")]
    pub coursemoduleid: Option<i32>,
    /// When it was created.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<i32>,
    /// Post content format.
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<i32>,
    /// Group post was created for.
    #[serde(rename = "groupid", skip_serializing_if = "Option::is_none")]
    pub groupid: Option<i32>,
    /// Post/entry id.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// When it was last modified.
    #[serde(rename = "lastmodified", skip_serializing_if = "Option::is_none")]
    pub lastmodified: Option<i32>,
    /// Where it was published the post (blog, blog_external...).
    #[serde(rename = "module", skip_serializing_if = "Option::is_none")]
    pub module: Option<String>,
    /// Module id where the post was created (not used anymore).
    #[serde(rename = "moduleid", skip_serializing_if = "Option::is_none")]
    pub moduleid: Option<i32>,
    /// Post publish state.
    #[serde(rename = "publishstate", skip_serializing_if = "Option::is_none")]
    pub publishstate: Option<String>,
    /// Post rating.
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<i32>,
    /// Post subject.
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    /// Post summary.
    #[serde(rename = "summary", skip_serializing_if = "Option::is_none")]
    pub summary: Option<String>,
    #[serde(rename = "summaryfiles", skip_serializing_if = "Option::is_none")]
    pub summaryfiles: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>>,
    /// summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "summaryformat", skip_serializing_if = "Option::is_none")]
    pub summaryformat: Option<i32>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerTagsInner>>,
    /// Post unique hash.
    #[serde(rename = "uniquehash", skip_serializing_if = "Option::is_none")]
    pub uniquehash: Option<String>,
    /// Post author.
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
    /// User that updated the post.
    #[serde(rename = "usermodified", skip_serializing_if = "Option::is_none")]
    pub usermodified: Option<i32>,
}

impl CoreBlogGetEntries200ResponseEntriesInner {
    pub fn new() -> CoreBlogGetEntries200ResponseEntriesInner {
        CoreBlogGetEntries200ResponseEntriesInner {
            attachment: None,
            attachmentfiles: None,
            content: None,
            courseid: None,
            coursemoduleid: None,
            created: None,
            format: None,
            groupid: None,
            id: None,
            lastmodified: None,
            module: None,
            moduleid: None,
            publishstate: None,
            rating: None,
            subject: None,
            summary: None,
            summaryfiles: None,
            summaryformat: None,
            tags: None,
            uniquehash: None,
            userid: None,
            usermodified: None,
        }
    }
}

