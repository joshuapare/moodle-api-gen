/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCompetencyGradeCompetencyInCourseRequest {
    /// Competency id
    #[serde(rename = "competencyid")]
    pub competencyid: i32,
    /// Course id
    #[serde(rename = "courseid")]
    pub courseid: i32,
    /// New grade
    #[serde(rename = "grade")]
    pub grade: i32,
    /// A note to attach to the evidence
    #[serde(rename = "note", skip_serializing_if = "Option::is_none")]
    pub note: Option<String>,
    /// User id
    #[serde(rename = "userid")]
    pub userid: i32,
}

impl CoreCompetencyGradeCompetencyInCourseRequest {
    pub fn new(competencyid: i32, courseid: i32, grade: i32, userid: i32) -> CoreCompetencyGradeCompetencyInCourseRequest {
        CoreCompetencyGradeCompetencyInCourseRequest {
            competencyid,
            courseid,
            grade,
            note: None,
            userid,
        }
    }
}

