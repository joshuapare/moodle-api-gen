/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModAssignListParticipantsRequest {
    /// assign instance id
    #[serde(rename = "assignid")]
    pub assignid: i32,
    /// search string to filter the results
    #[serde(rename = "filter")]
    pub filter: String,
    /// group id
    #[serde(rename = "groupid")]
    pub groupid: i32,
    /// Do return courses where the user is enrolled
    #[serde(rename = "includeenrolments", skip_serializing_if = "Option::is_none")]
    pub includeenrolments: Option<bool>,
    /// maximum number of records to return
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    /// Do not return all user fields
    #[serde(rename = "onlyids", skip_serializing_if = "Option::is_none")]
    pub onlyids: Option<bool>,
    /// number of records to skip
    #[serde(rename = "skip", skip_serializing_if = "Option::is_none")]
    pub skip: Option<i32>,
    /// Apply current user table sorting preferences.
    #[serde(rename = "tablesort", skip_serializing_if = "Option::is_none")]
    pub tablesort: Option<bool>,
}

impl ModAssignListParticipantsRequest {
    pub fn new(assignid: i32, filter: String, groupid: i32) -> ModAssignListParticipantsRequest {
        ModAssignListParticipantsRequest {
            assignid,
            filter,
            groupid,
            includeenrolments: None,
            limit: None,
            onlyids: None,
            skip: None,
            tablesort: None,
        }
    }
}

