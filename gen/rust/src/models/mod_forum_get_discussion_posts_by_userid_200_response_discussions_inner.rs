/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModForumGetDiscussionPostsByUserid200ResponseDiscussionsInner {
    /// Full name of the user that started the discussion
    #[serde(rename = "authorfullname", skip_serializing_if = "Option::is_none")]
    pub authorfullname: Option<String>,
    /// ID of the discussion
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Name of the discussion
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "posts", skip_serializing_if = "Option::is_none")]
    pub posts: Option<Box<models::ModForumGetDiscussionPostsByUserid200ResponseDiscussionsInnerPosts>>,
    /// Timestamp of the discussion start
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
}

impl ModForumGetDiscussionPostsByUserid200ResponseDiscussionsInner {
    pub fn new() -> ModForumGetDiscussionPostsByUserid200ResponseDiscussionsInner {
        ModForumGetDiscussionPostsByUserid200ResponseDiscussionsInner {
            authorfullname: None,
            id: None,
            name: None,
            posts: None,
            timecreated: None,
        }
    }
}

