/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ModWikiGetWikisByCourses200ResponseWikisInner : Wikis
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModWikiGetWikisByCourses200ResponseWikisInner {
    /// True if user can create pages.
    #[serde(rename = "cancreatepages", skip_serializing_if = "Option::is_none")]
    pub cancreatepages: Option<bool>,
    /// Course id
    #[serde(rename = "course", skip_serializing_if = "Option::is_none")]
    pub course: Option<i32>,
    /// Course module id
    #[serde(rename = "coursemodule", skip_serializing_if = "Option::is_none")]
    pub coursemodule: Option<i32>,
    /// Wiki's default format (html, creole, nwiki).
    #[serde(rename = "defaultformat", skip_serializing_if = "Option::is_none")]
    pub defaultformat: Option<String>,
    /// Edit begin.
    #[serde(rename = "editbegin", skip_serializing_if = "Option::is_none")]
    pub editbegin: Option<i32>,
    /// Edit end.
    #[serde(rename = "editend", skip_serializing_if = "Option::is_none")]
    pub editend: Option<i32>,
    /// First page title.
    #[serde(rename = "firstpagetitle", skip_serializing_if = "Option::is_none")]
    pub firstpagetitle: Option<String>,
    /// 1 if format is forced, 0 otherwise.
    #[serde(rename = "forceformat", skip_serializing_if = "Option::is_none")]
    pub forceformat: Option<i32>,
    /// Group id
    #[serde(rename = "groupingid", skip_serializing_if = "Option::is_none")]
    pub groupingid: Option<i32>,
    /// Group mode
    #[serde(rename = "groupmode", skip_serializing_if = "Option::is_none")]
    pub groupmode: Option<i32>,
    /// Activity instance id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Activity introduction
    #[serde(rename = "intro", skip_serializing_if = "Option::is_none")]
    pub intro: Option<String>,
    #[serde(rename = "introfiles", skip_serializing_if = "Option::is_none")]
    pub introfiles: Option<Vec<models::CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>>,
    /// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "introformat", skip_serializing_if = "Option::is_none")]
    pub introformat: Option<i32>,
    /// Forced activity language
    #[serde(rename = "lang", skip_serializing_if = "Option::is_none")]
    pub lang: Option<String>,
    /// Activity name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Course section id
    #[serde(rename = "section", skip_serializing_if = "Option::is_none")]
    pub section: Option<i32>,
    /// Time of creation.
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// Time of last modification.
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
    /// Visible
    #[serde(rename = "visible", skip_serializing_if = "Option::is_none")]
    pub visible: Option<bool>,
    /// Wiki mode (individual, collaborative).
    #[serde(rename = "wikimode", skip_serializing_if = "Option::is_none")]
    pub wikimode: Option<String>,
}

impl ModWikiGetWikisByCourses200ResponseWikisInner {
    /// Wikis
    pub fn new() -> ModWikiGetWikisByCourses200ResponseWikisInner {
        ModWikiGetWikisByCourses200ResponseWikisInner {
            cancreatepages: None,
            course: None,
            coursemodule: None,
            defaultformat: None,
            editbegin: None,
            editend: None,
            firstpagetitle: None,
            forceformat: None,
            groupingid: None,
            groupmode: None,
            id: None,
            intro: None,
            introfiles: None,
            introformat: None,
            lang: None,
            name: None,
            section: None,
            timecreated: None,
            timemodified: None,
            visible: None,
            wikimode: None,
        }
    }
}

