/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModWorkshopUpdateSubmissionRequest {
    /// The draft file area id for attachments
    #[serde(rename = "attachmentsid", skip_serializing_if = "Option::is_none")]
    pub attachmentsid: Option<i32>,
    /// Submission text content
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// The format used for the content
    #[serde(rename = "contentformat", skip_serializing_if = "Option::is_none")]
    pub contentformat: Option<i32>,
    /// The draft file area id for inline attachments in the content
    #[serde(rename = "inlineattachmentsid", skip_serializing_if = "Option::is_none")]
    pub inlineattachmentsid: Option<i32>,
    /// Submission id
    #[serde(rename = "submissionid")]
    pub submissionid: i32,
    /// Submission title
    #[serde(rename = "title")]
    pub title: String,
}

impl ModWorkshopUpdateSubmissionRequest {
    pub fn new(submissionid: i32, title: String) -> ModWorkshopUpdateSubmissionRequest {
        ModWorkshopUpdateSubmissionRequest {
            attachmentsid: None,
            content: None,
            contentformat: None,
            inlineattachmentsid: None,
            submissionid,
            title,
        }
    }
}

