/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolMobileGetPublicConfig200Response {
    /// Whether age digital consent verification                     is enabled.
    #[serde(rename = "agedigitalconsentverification", skip_serializing_if = "Option::is_none")]
    pub agedigitalconsentverification: Option<bool>,
    /// Authentication instructions.
    #[serde(rename = "authinstructions")]
    pub authinstructions: String,
    /// Whether log in via email is enabled.
    #[serde(rename = "authloginviaemail")]
    pub authloginviaemail: i32,
    /// Whether auth none is enabled.
    #[serde(rename = "authnoneenabled")]
    pub authnoneenabled: i32,
    /// Whether to detect default language                     from browser setting.
    #[serde(rename = "autolang", skip_serializing_if = "Option::is_none")]
    pub autolang: Option<i32>,
    /// The site compact logo URL
    #[serde(rename = "compactlogourl", skip_serializing_if = "Option::is_none")]
    pub compactlogourl: Option<String>,
    /// Default site country
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    /// Whether the Mobile service is enabled.
    #[serde(rename = "enablemobilewebservice")]
    pub enablemobilewebservice: i32,
    /// Whether Web Services are enabled.
    #[serde(rename = "enablewebservices")]
    pub enablewebservices: i32,
    /// Forgotten password URL.
    #[serde(rename = "forgottenpasswordurl")]
    pub forgottenpasswordurl: String,
    /// Whether guest login is enabled.
    #[serde(rename = "guestlogin")]
    pub guestlogin: i32,
    /// Site https URL (if httpslogin is enabled).
    #[serde(rename = "httpswwwroot")]
    pub httpswwwroot: String,
    #[serde(rename = "identityproviders", skip_serializing_if = "Option::is_none")]
    pub identityproviders: Option<Vec<models::ToolMobileGetPublicConfig200ResponseIdentityprovidersInner>>,
    /// Default language for the site.
    #[serde(rename = "lang", skip_serializing_if = "Option::is_none")]
    pub lang: Option<String>,
    /// Languages on language menu.
    #[serde(rename = "langlist", skip_serializing_if = "Option::is_none")]
    pub langlist: Option<String>,
    /// Whether the language menu should be displayed.
    #[serde(rename = "langmenu", skip_serializing_if = "Option::is_none")]
    pub langmenu: Option<i32>,
    /// SSO login launch URL.
    #[serde(rename = "launchurl", skip_serializing_if = "Option::is_none")]
    pub launchurl: Option<String>,
    /// Sitewide locale.
    #[serde(rename = "locale", skip_serializing_if = "Option::is_none")]
    pub locale: Option<String>,
    /// The site logo URL
    #[serde(rename = "logourl", skip_serializing_if = "Option::is_none")]
    pub logourl: Option<String>,
    /// Whether site maintenance is enabled.
    #[serde(rename = "maintenanceenabled")]
    pub maintenanceenabled: i32,
    /// Maintenance message.
    #[serde(rename = "maintenancemessage")]
    pub maintenancemessage: String,
    /// Mobile custom CSS theme
    #[serde(rename = "mobilecssurl", skip_serializing_if = "Option::is_none")]
    pub mobilecssurl: Option<String>,
    /// Authentication method for user registration.
    #[serde(rename = "registerauth")]
    pub registerauth: String,
    /// Values: 0 for No, 1 for Yes, 2 for optional.
    #[serde(rename = "rememberusername")]
    pub rememberusername: i32,
    /// Site name.
    #[serde(rename = "sitename")]
    pub sitename: String,
    /// Determines who has access to contact site support.
    #[serde(rename = "supportavailability", skip_serializing_if = "Option::is_none")]
    pub supportavailability: Option<i32>,
    /// Site support contact email                     (only if age verification is enabled).
    #[serde(rename = "supportemail", skip_serializing_if = "Option::is_none")]
    pub supportemail: Option<String>,
    /// Site support contact name                     (only if age verification is enabled).
    #[serde(rename = "supportname", skip_serializing_if = "Option::is_none")]
    pub supportname: Option<String>,
    /// Site support page link.
    #[serde(rename = "supportpage", skip_serializing_if = "Option::is_none")]
    pub supportpage: Option<String>,
    /// Android app's unique identifier.
    #[serde(rename = "tool_mobile_androidappid", skip_serializing_if = "Option::is_none")]
    pub tool_mobile_androidappid: Option<String>,
    /// Disabled features in the app
    #[serde(rename = "tool_mobile_disabledfeatures", skip_serializing_if = "Option::is_none")]
    pub tool_mobile_disabledfeatures: Option<String>,
    /// iOS app's unique identifier.
    #[serde(rename = "tool_mobile_iosappid", skip_serializing_if = "Option::is_none")]
    pub tool_mobile_iosappid: Option<String>,
    /// Minimum required version to access.
    #[serde(rename = "tool_mobile_minimumversion", skip_serializing_if = "Option::is_none")]
    pub tool_mobile_minimumversion: Option<String>,
    /// QR login configuration.
    #[serde(rename = "tool_mobile_qrcodetype", skip_serializing_if = "Option::is_none")]
    pub tool_mobile_qrcodetype: Option<i32>,
    /// App download page.
    #[serde(rename = "tool_mobile_setuplink", skip_serializing_if = "Option::is_none")]
    pub tool_mobile_setuplink: Option<String>,
    /// The type of login. 1 for app, 2 for browser, 3 for embedded.
    #[serde(rename = "typeoflogin")]
    pub typeoflogin: i32,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
    /// Site URL.
    #[serde(rename = "wwwroot")]
    pub wwwroot: String,
}

impl ToolMobileGetPublicConfig200Response {
    pub fn new(authinstructions: String, authloginviaemail: i32, authnoneenabled: i32, enablemobilewebservice: i32, enablewebservices: i32, forgottenpasswordurl: String, guestlogin: i32, httpswwwroot: String, maintenanceenabled: i32, maintenancemessage: String, registerauth: String, rememberusername: i32, sitename: String, typeoflogin: i32, wwwroot: String) -> ToolMobileGetPublicConfig200Response {
        ToolMobileGetPublicConfig200Response {
            agedigitalconsentverification: None,
            authinstructions,
            authloginviaemail,
            authnoneenabled,
            autolang: None,
            compactlogourl: None,
            country: None,
            enablemobilewebservice,
            enablewebservices,
            forgottenpasswordurl,
            guestlogin,
            httpswwwroot,
            identityproviders: None,
            lang: None,
            langlist: None,
            langmenu: None,
            launchurl: None,
            locale: None,
            logourl: None,
            maintenanceenabled,
            maintenancemessage,
            mobilecssurl: None,
            registerauth,
            rememberusername,
            sitename,
            supportavailability: None,
            supportemail: None,
            supportname: None,
            supportpage: None,
            tool_mobile_androidappid: None,
            tool_mobile_disabledfeatures: None,
            tool_mobile_iosappid: None,
            tool_mobile_minimumversion: None,
            tool_mobile_qrcodetype: None,
            tool_mobile_setuplink: None,
            typeoflogin,
            warnings: None,
            wwwroot,
        }
    }
}

