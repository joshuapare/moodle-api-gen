/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreQuestionUpdateFlagRequest {
    /// computed checksum with the last three arguments and                              the users username
    #[serde(rename = "checksum")]
    pub checksum: String,
    /// the new state of the flag. true = flagged
    #[serde(rename = "newstate")]
    pub newstate: bool,
    /// the question_attempt id
    #[serde(rename = "qaid")]
    pub qaid: i32,
    /// the question usage id.
    #[serde(rename = "qubaid")]
    pub qubaid: i32,
    /// the question id
    #[serde(rename = "questionid")]
    pub questionid: i32,
    /// the slot number within the usage
    #[serde(rename = "slot")]
    pub slot: i32,
}

impl CoreQuestionUpdateFlagRequest {
    pub fn new(checksum: String, newstate: bool, qaid: i32, qubaid: i32, questionid: i32, slot: i32) -> CoreQuestionUpdateFlagRequest {
        CoreQuestionUpdateFlagRequest {
            checksum,
            newstate,
            qaid,
            qubaid,
            questionid,
            slot,
        }
    }
}

