/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModForumSetLockState200Response {
    /// The discussion we are locking.
    #[serde(rename = "id")]
    pub id: i32,
    /// The locked state of the discussion.
    #[serde(rename = "locked")]
    pub locked: bool,
    #[serde(rename = "times")]
    pub times: Box<models::ModForumSetLockState200ResponseTimes>,
}

impl ModForumSetLockState200Response {
    pub fn new(id: i32, locked: bool, times: models::ModForumSetLockState200ResponseTimes) -> ModForumSetLockState200Response {
        ModForumSetLockState200Response {
            id,
            locked,
            times: Box::new(times),
        }
    }
}

