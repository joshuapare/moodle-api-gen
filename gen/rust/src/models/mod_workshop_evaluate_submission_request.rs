/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModWorkshopEvaluateSubmissionRequest {
    /// The feedback format for text.
    #[serde(rename = "feedbackformat", skip_serializing_if = "Option::is_none")]
    pub feedbackformat: Option<i32>,
    /// The feedback for the author.
    #[serde(rename = "feedbacktext", skip_serializing_if = "Option::is_none")]
    pub feedbacktext: Option<String>,
    /// The new submission grade.
    #[serde(rename = "gradeover", skip_serializing_if = "Option::is_none")]
    pub gradeover: Option<String>,
    /// Publish the submission for others?.
    #[serde(rename = "published", skip_serializing_if = "Option::is_none")]
    pub published: Option<bool>,
    /// submission id.
    #[serde(rename = "submissionid")]
    pub submissionid: i32,
}

impl ModWorkshopEvaluateSubmissionRequest {
    pub fn new(submissionid: i32) -> ModWorkshopEvaluateSubmissionRequest {
        ModWorkshopEvaluateSubmissionRequest {
            feedbackformat: None,
            feedbacktext: None,
            gradeover: None,
            published: None,
            submissionid,
        }
    }
}

