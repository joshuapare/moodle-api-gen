/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreUserGetPrivateFilesInfo200Response {
    /// Number of files in the area.
    #[serde(rename = "filecount")]
    pub filecount: i32,
    /// Total size of the files in the area.
    #[serde(rename = "filesize")]
    pub filesize: i32,
    /// Total size of the area excluding file references
    #[serde(rename = "filesizewithoutreferences")]
    pub filesizewithoutreferences: i32,
    /// Number of folders in the area.
    #[serde(rename = "foldercount")]
    pub foldercount: i32,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl CoreUserGetPrivateFilesInfo200Response {
    pub fn new(filecount: i32, filesize: i32, filesizewithoutreferences: i32, foldercount: i32) -> CoreUserGetPrivateFilesInfo200Response {
        CoreUserGetPrivateFilesInfo200Response {
            filecount,
            filesize,
            filesizewithoutreferences,
            foldercount,
            warnings: None,
        }
    }
}

