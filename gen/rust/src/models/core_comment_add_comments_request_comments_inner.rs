/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCommentAddCommentsRequestCommentsInner {
    /// string comment area
    #[serde(rename = "area", skip_serializing_if = "Option::is_none")]
    pub area: Option<String>,
    /// component
    #[serde(rename = "component", skip_serializing_if = "Option::is_none")]
    pub component: Option<String>,
    /// component
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// contextlevel system, course, user...
    #[serde(rename = "contextlevel", skip_serializing_if = "Option::is_none")]
    pub contextlevel: Option<String>,
    /// the id of item associated with the contextlevel
    #[serde(rename = "instanceid", skip_serializing_if = "Option::is_none")]
    pub instanceid: Option<i32>,
    /// associated id
    #[serde(rename = "itemid", skip_serializing_if = "Option::is_none")]
    pub itemid: Option<i32>,
}

impl CoreCommentAddCommentsRequestCommentsInner {
    pub fn new() -> CoreCommentAddCommentsRequestCommentsInner {
        CoreCommentAddCommentsRequestCommentsInner {
            area: None,
            component: None,
            content: None,
            contextlevel: None,
            instanceid: None,
            itemid: None,
        }
    }
}

