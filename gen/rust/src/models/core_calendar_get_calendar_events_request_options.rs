/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCalendarGetCalendarEventsRequestOptions {
    /// Ignore hidden events or not
    #[serde(rename = "ignorehidden", skip_serializing_if = "Option::is_none")]
    pub ignorehidden: Option<bool>,
    /// Set to true to return site events
    #[serde(rename = "siteevents", skip_serializing_if = "Option::is_none")]
    pub siteevents: Option<bool>,
    /// Time to which the events should be returned. We treat 0 and null as no end
    #[serde(rename = "timeend", skip_serializing_if = "Option::is_none")]
    pub timeend: Option<i32>,
    /// Time from which events should be returned
    #[serde(rename = "timestart", skip_serializing_if = "Option::is_none")]
    pub timestart: Option<i32>,
    /// Set to true to return current user's user events
    #[serde(rename = "userevents", skip_serializing_if = "Option::is_none")]
    pub userevents: Option<bool>,
}

impl CoreCalendarGetCalendarEventsRequestOptions {
    pub fn new() -> CoreCalendarGetCalendarEventsRequestOptions {
        CoreCalendarGetCalendarEventsRequestOptions {
            ignorehidden: None,
            siteevents: None,
            timeend: None,
            timestart: None,
            userevents: None,
        }
    }
}

