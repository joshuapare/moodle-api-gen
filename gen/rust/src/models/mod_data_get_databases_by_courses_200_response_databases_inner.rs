/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModDataGetDatabasesByCourses200ResponseDatabasesInner {
    /// addtemplate field
    #[serde(rename = "addtemplate", skip_serializing_if = "Option::is_none")]
    pub addtemplate: Option<String>,
    /// approval field
    #[serde(rename = "approval", skip_serializing_if = "Option::is_none")]
    pub approval: Option<bool>,
    /// asearchtemplate field
    #[serde(rename = "asearchtemplate", skip_serializing_if = "Option::is_none")]
    pub asearchtemplate: Option<String>,
    /// assessed field
    #[serde(rename = "assessed", skip_serializing_if = "Option::is_none")]
    pub assessed: Option<i32>,
    /// assesstimefinish field
    #[serde(rename = "assesstimefinish", skip_serializing_if = "Option::is_none")]
    pub assesstimefinish: Option<i32>,
    /// assesstimestart field
    #[serde(rename = "assesstimestart", skip_serializing_if = "Option::is_none")]
    pub assesstimestart: Option<i32>,
    /// comments enabled
    #[serde(rename = "comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<bool>,
    /// Course id
    #[serde(rename = "course", skip_serializing_if = "Option::is_none")]
    pub course: Option<i32>,
    /// coursemodule
    #[serde(rename = "coursemodule", skip_serializing_if = "Option::is_none")]
    pub coursemodule: Option<i32>,
    /// csstemplate field
    #[serde(rename = "csstemplate", skip_serializing_if = "Option::is_none")]
    pub csstemplate: Option<String>,
    /// defaultsort field
    #[serde(rename = "defaultsort", skip_serializing_if = "Option::is_none")]
    pub defaultsort: Option<i32>,
    /// defaultsortdir field
    #[serde(rename = "defaultsortdir", skip_serializing_if = "Option::is_none")]
    pub defaultsortdir: Option<i32>,
    /// editany field (not used any more)
    #[serde(rename = "editany", skip_serializing_if = "Option::is_none")]
    pub editany: Option<bool>,
    /// Database id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The Database intro
    #[serde(rename = "intro", skip_serializing_if = "Option::is_none")]
    pub intro: Option<String>,
    #[serde(rename = "introfiles", skip_serializing_if = "Option::is_none")]
    pub introfiles: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>>,
    /// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "introformat", skip_serializing_if = "Option::is_none")]
    pub introformat: Option<i32>,
    /// jstemplate field
    #[serde(rename = "jstemplate", skip_serializing_if = "Option::is_none")]
    pub jstemplate: Option<String>,
    /// Forced activity language
    #[serde(rename = "lang", skip_serializing_if = "Option::is_none")]
    pub lang: Option<String>,
    /// listtemplate field
    #[serde(rename = "listtemplate", skip_serializing_if = "Option::is_none")]
    pub listtemplate: Option<String>,
    /// listtemplatefooter field
    #[serde(rename = "listtemplatefooter", skip_serializing_if = "Option::is_none")]
    pub listtemplatefooter: Option<String>,
    /// listtemplateheader field
    #[serde(rename = "listtemplateheader", skip_serializing_if = "Option::is_none")]
    pub listtemplateheader: Option<String>,
    /// manageapproved field
    #[serde(rename = "manageapproved", skip_serializing_if = "Option::is_none")]
    pub manageapproved: Option<bool>,
    /// maxentries field
    #[serde(rename = "maxentries", skip_serializing_if = "Option::is_none")]
    pub maxentries: Option<i32>,
    /// Database name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// notification field (not used any more)
    #[serde(rename = "notification", skip_serializing_if = "Option::is_none")]
    pub notification: Option<i32>,
    /// requiredentries field
    #[serde(rename = "requiredentries", skip_serializing_if = "Option::is_none")]
    pub requiredentries: Option<i32>,
    /// requiredentriestoview field
    #[serde(rename = "requiredentriestoview", skip_serializing_if = "Option::is_none")]
    pub requiredentriestoview: Option<i32>,
    /// rssarticles field
    #[serde(rename = "rssarticles", skip_serializing_if = "Option::is_none")]
    pub rssarticles: Option<i32>,
    /// rsstemplate field
    #[serde(rename = "rsstemplate", skip_serializing_if = "Option::is_none")]
    pub rsstemplate: Option<String>,
    /// rsstitletemplate field
    #[serde(rename = "rsstitletemplate", skip_serializing_if = "Option::is_none")]
    pub rsstitletemplate: Option<String>,
    /// scale field
    #[serde(rename = "scale", skip_serializing_if = "Option::is_none")]
    pub scale: Option<i32>,
    /// singletemplate field
    #[serde(rename = "singletemplate", skip_serializing_if = "Option::is_none")]
    pub singletemplate: Option<String>,
    /// timeavailablefrom field
    #[serde(rename = "timeavailablefrom", skip_serializing_if = "Option::is_none")]
    pub timeavailablefrom: Option<i32>,
    /// timeavailableto field
    #[serde(rename = "timeavailableto", skip_serializing_if = "Option::is_none")]
    pub timeavailableto: Option<i32>,
    /// Time modified
    #[serde(rename = "timemodified", skip_serializing_if = "Option::is_none")]
    pub timemodified: Option<i32>,
    /// timeviewfrom field
    #[serde(rename = "timeviewfrom", skip_serializing_if = "Option::is_none")]
    pub timeviewfrom: Option<i32>,
    /// timeviewto field
    #[serde(rename = "timeviewto", skip_serializing_if = "Option::is_none")]
    pub timeviewto: Option<i32>,
}

impl ModDataGetDatabasesByCourses200ResponseDatabasesInner {
    pub fn new() -> ModDataGetDatabasesByCourses200ResponseDatabasesInner {
        ModDataGetDatabasesByCourses200ResponseDatabasesInner {
            addtemplate: None,
            approval: None,
            asearchtemplate: None,
            assessed: None,
            assesstimefinish: None,
            assesstimestart: None,
            comments: None,
            course: None,
            coursemodule: None,
            csstemplate: None,
            defaultsort: None,
            defaultsortdir: None,
            editany: None,
            id: None,
            intro: None,
            introfiles: None,
            introformat: None,
            jstemplate: None,
            lang: None,
            listtemplate: None,
            listtemplatefooter: None,
            listtemplateheader: None,
            manageapproved: None,
            maxentries: None,
            name: None,
            notification: None,
            requiredentries: None,
            requiredentriestoview: None,
            rssarticles: None,
            rsstemplate: None,
            rsstitletemplate: None,
            scale: None,
            singletemplate: None,
            timeavailablefrom: None,
            timeavailableto: None,
            timemodified: None,
            timeviewfrom: None,
            timeviewto: None,
        }
    }
}

