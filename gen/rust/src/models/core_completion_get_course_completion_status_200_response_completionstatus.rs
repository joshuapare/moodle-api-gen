/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
    /// aggregation method 1 means all, 2 means any
    #[serde(rename = "aggregation")]
    pub aggregation: i32,
    /// true if the course is complete, false otherwise
    #[serde(rename = "completed")]
    pub completed: bool,
    #[serde(rename = "completions")]
    pub completions: Vec<models::CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner>,
}

impl CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
    pub fn new(aggregation: i32, completed: bool, completions: Vec<models::CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner>) -> CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
        CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
            aggregation,
            completed,
            completions,
        }
    }
}

