/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModLessonGetUserAttemptGrade200ResponseGrade {
    /// Number of question attempts
    #[serde(rename = "attempts")]
    pub attempts: i32,
    /// Points earned by student
    #[serde(rename = "earned")]
    pub earned: f64,
    /// Calculated percentage grade
    #[serde(rename = "grade")]
    pub grade: f64,
    /// Point value for manually graded questions
    #[serde(rename = "manualpoints")]
    pub manualpoints: f64,
    /// Number of manually graded questions
    #[serde(rename = "nmanual")]
    pub nmanual: i32,
    /// Number of questions answered
    #[serde(rename = "nquestions")]
    pub nquestions: i32,
    /// Max points possible
    #[serde(rename = "total")]
    pub total: f64,
}

impl ModLessonGetUserAttemptGrade200ResponseGrade {
    pub fn new(attempts: i32, earned: f64, grade: f64, manualpoints: f64, nmanual: i32, nquestions: i32, total: f64) -> ModLessonGetUserAttemptGrade200ResponseGrade {
        ModLessonGetUserAttemptGrade200ResponseGrade {
            attempts,
            earned,
            grade,
            manualpoints,
            nmanual,
            nquestions,
            total,
        }
    }
}

