/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolLpDataForPlanPage200ResponseCompetenciesInner {
    #[serde(rename = "competency", skip_serializing_if = "Option::is_none")]
    pub competency: Option<Box<models::CoreCompetencyCreateCompetency200Response>>,
    #[serde(rename = "comppath", skip_serializing_if = "Option::is_none")]
    pub comppath: Option<Box<models::ToolLpDataForCompetencySummary200ResponseComppath>>,
    #[serde(rename = "usercompetency", skip_serializing_if = "Option::is_none")]
    pub usercompetency: Option<Box<models::ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetency>>,
    #[serde(rename = "usercompetencyplan", skip_serializing_if = "Option::is_none")]
    pub usercompetencyplan: Option<Box<models::ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetencyplan>>,
}

impl ToolLpDataForPlanPage200ResponseCompetenciesInner {
    pub fn new() -> ToolLpDataForPlanPage200ResponseCompetenciesInner {
        ToolLpDataForPlanPage200ResponseCompetenciesInner {
            competency: None,
            comppath: None,
            usercompetency: None,
            usercompetencyplan: None,
        }
    }
}

