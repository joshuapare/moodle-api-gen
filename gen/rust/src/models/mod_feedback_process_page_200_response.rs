/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModFeedbackProcessPage200Response {
    /// If the user completed the feedback.
    #[serde(rename = "completed")]
    pub completed: bool,
    /// The completion page contents.
    #[serde(rename = "completionpagecontents")]
    pub completionpagecontents: String,
    /// The page to jump to.
    #[serde(rename = "jumpto")]
    pub jumpto: i32,
    /// The link (could be relative) to show after submit.
    #[serde(rename = "siteaftersubmit")]
    pub siteaftersubmit: String,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl ModFeedbackProcessPage200Response {
    pub fn new(completed: bool, completionpagecontents: String, jumpto: i32, siteaftersubmit: String) -> ModFeedbackProcessPage200Response {
        ModFeedbackProcessPage200Response {
            completed,
            completionpagecontents,
            jumpto,
            siteaftersubmit,
            warnings: None,
        }
    }
}

