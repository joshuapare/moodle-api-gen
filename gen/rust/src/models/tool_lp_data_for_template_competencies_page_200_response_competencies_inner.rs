/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner {
    #[serde(rename = "competency", skip_serializing_if = "Option::is_none")]
    pub competency: Option<Box<models::CoreCompetencyCreateCompetency200Response>>,
    #[serde(rename = "comppath", skip_serializing_if = "Option::is_none")]
    pub comppath: Option<Box<models::ToolLpDataForCompetencySummary200ResponseComppath>>,
    #[serde(rename = "framework", skip_serializing_if = "Option::is_none")]
    pub framework: Option<Box<models::CoreCompetencyDuplicateCompetencyFramework200Response>>,
    /// hascourses
    #[serde(rename = "hascourses", skip_serializing_if = "Option::is_none")]
    pub hascourses: Option<bool>,
    /// hasrelatedcompetencies
    #[serde(rename = "hasrelatedcompetencies", skip_serializing_if = "Option::is_none")]
    pub hasrelatedcompetencies: Option<bool>,
    #[serde(rename = "linkedcourses", skip_serializing_if = "Option::is_none")]
    pub linkedcourses: Option<Vec<models::CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>>,
    /// pluginbaseurl
    #[serde(rename = "pluginbaseurl", skip_serializing_if = "Option::is_none")]
    pub pluginbaseurl: Option<String>,
    #[serde(rename = "relatedcompetencies", skip_serializing_if = "Option::is_none")]
    pub relatedcompetencies: Option<Vec<models::CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>>,
    /// scaleconfiguration
    #[serde(rename = "scaleconfiguration", skip_serializing_if = "Option::is_none")]
    pub scaleconfiguration: Option<String>,
    /// scaleid
    #[serde(rename = "scaleid", skip_serializing_if = "Option::is_none")]
    pub scaleid: Option<i32>,
    /// taxonomyterm
    #[serde(rename = "taxonomyterm", skip_serializing_if = "Option::is_none")]
    pub taxonomyterm: Option<String>,
}

impl ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner {
    pub fn new() -> ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner {
        ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner {
            competency: None,
            comppath: None,
            framework: None,
            hascourses: None,
            hasrelatedcompetencies: None,
            linkedcourses: None,
            pluginbaseurl: None,
            relatedcompetencies: None,
            scaleconfiguration: None,
            scaleid: None,
            taxonomyterm: None,
        }
    }
}

