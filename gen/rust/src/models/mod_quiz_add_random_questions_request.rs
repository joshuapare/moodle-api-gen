/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModQuizAddRandomQuestionsRequest {
    /// The page where random questions will be added to
    #[serde(rename = "addonpage")]
    pub addonpage: i32,
    /// The cmid of the quiz
    #[serde(rename = "cmid")]
    pub cmid: i32,
    /// (Optional) The filter condition used when adding random questions from an existing category.                     Not required if adding random questions from a new category.
    #[serde(rename = "filtercondition", skip_serializing_if = "Option::is_none")]
    pub filtercondition: Option<String>,
    /// (Optional) The name of a new question category to create and use for the random questions.
    #[serde(rename = "newcategory", skip_serializing_if = "Option::is_none")]
    pub newcategory: Option<String>,
    /// (Optional) The parent of the new question category, if creating one.
    #[serde(rename = "parentcategory", skip_serializing_if = "Option::is_none")]
    pub parentcategory: Option<String>,
    /// Number of random questions
    #[serde(rename = "randomcount")]
    pub randomcount: i32,
}

impl ModQuizAddRandomQuestionsRequest {
    pub fn new(addonpage: i32, cmid: i32, randomcount: i32) -> ModQuizAddRandomQuestionsRequest {
        ModQuizAddRandomQuestionsRequest {
            addonpage,
            cmid,
            filtercondition: None,
            newcategory: None,
            parentcategory: None,
            randomcount,
        }
    }
}

