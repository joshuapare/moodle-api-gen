/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    /// The item id this item depend on.
    #[serde(rename = "dependitem")]
    pub dependitem: i32,
    /// The depend value.
    #[serde(rename = "dependvalue")]
    pub dependvalue: String,
    /// The feedback instance id this records belongs to.
    #[serde(rename = "feedback")]
    pub feedback: i32,
    /// Whether it has a value or not.
    #[serde(rename = "hasvalue")]
    pub hasvalue: i32,
    /// The record id.
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "itemfiles")]
    pub itemfiles: Vec<models::ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>,
    /// The item position number
    #[serde(rename = "itemnumber")]
    pub itemnumber: i32,
    /// The item label.
    #[serde(rename = "label")]
    pub label: String,
    /// The item name.
    #[serde(rename = "name")]
    pub name: String,
    /// Different additional settings for the item (question).
    #[serde(rename = "options")]
    pub options: String,
    /// Additional data that may be required by external functions
    #[serde(rename = "otherdata")]
    pub otherdata: String,
    /// The position in the list of questions.
    #[serde(rename = "position")]
    pub position: i32,
    /// The text describing the item or the available possible answers.
    #[serde(rename = "presentation")]
    pub presentation: String,
    /// Whether is a item (question) required or not.
    #[serde(rename = "required")]
    pub required: bool,
    /// If it belogns to a template, the template id.
    #[serde(rename = "template")]
    pub template: i32,
    /// The type of the item.
    #[serde(rename = "typ")]
    pub typ: String,
}

impl ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    pub fn new(dependitem: i32, dependvalue: String, feedback: i32, hasvalue: i32, id: i32, itemfiles: Vec<models::ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>, itemnumber: i32, label: String, name: String, options: String, otherdata: String, position: i32, presentation: String, required: bool, template: i32, typ: String) -> ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
        ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
            dependitem,
            dependvalue,
            feedback,
            hasvalue,
            id,
            itemfiles,
            itemnumber,
            label,
            name,
            options,
            otherdata,
            position,
            presentation,
            required,
            template,
            typ,
        }
    }
}

