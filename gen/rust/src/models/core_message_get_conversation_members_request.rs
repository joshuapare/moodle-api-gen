/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreMessageGetConversationMembersRequest {
    /// The id of the conversation
    #[serde(rename = "conversationid")]
    pub conversationid: i32,
    /// Do we want to include contact requests?
    #[serde(rename = "includecontactrequests", skip_serializing_if = "Option::is_none")]
    pub includecontactrequests: Option<bool>,
    /// Do we want to include privacy info?
    #[serde(rename = "includeprivacyinfo", skip_serializing_if = "Option::is_none")]
    pub includeprivacyinfo: Option<bool>,
    /// Limit from
    #[serde(rename = "limitfrom", skip_serializing_if = "Option::is_none")]
    pub limitfrom: Option<i32>,
    /// Limit number
    #[serde(rename = "limitnum", skip_serializing_if = "Option::is_none")]
    pub limitnum: Option<i32>,
    /// The id of the user we are performing this action on behalf of
    #[serde(rename = "userid")]
    pub userid: i32,
}

impl CoreMessageGetConversationMembersRequest {
    pub fn new(conversationid: i32, userid: i32) -> CoreMessageGetConversationMembersRequest {
        CoreMessageGetConversationMembersRequest {
            conversationid,
            includecontactrequests: None,
            includeprivacyinfo: None,
            limitfrom: None,
            limitnum: None,
            userid,
        }
    }
}

