/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreRoleUnassignRolesRequestUnassignmentsInner {
    /// The context to unassign the user role from
    #[serde(rename = "contextid", skip_serializing_if = "Option::is_none")]
    pub contextid: Option<i32>,
    /// The context level to unassign the user role in +                                    (block, course, coursecat, system, user, module)
    #[serde(rename = "contextlevel", skip_serializing_if = "Option::is_none")]
    pub contextlevel: Option<String>,
    /// The Instance id of item where the role needs to be unassigned
    #[serde(rename = "instanceid", skip_serializing_if = "Option::is_none")]
    pub instanceid: Option<i32>,
    /// Role to assign to the user
    #[serde(rename = "roleid", skip_serializing_if = "Option::is_none")]
    pub roleid: Option<i32>,
    /// The user that is going to be assigned
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
}

impl CoreRoleUnassignRolesRequestUnassignmentsInner {
    pub fn new() -> CoreRoleUnassignRolesRequestUnassignmentsInner {
        CoreRoleUnassignRolesRequestUnassignmentsInner {
            contextid: None,
            contextlevel: None,
            instanceid: None,
            roleid: None,
            userid: None,
        }
    }
}

