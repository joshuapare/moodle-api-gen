/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCourseSearchCoursesRequest {
    /// criteria name                                                         (search, modulelist (only admins), blocklist (only admins), tagid)
    #[serde(rename = "criterianame")]
    pub criterianame: String,
    /// criteria value
    #[serde(rename = "criteriavalue")]
    pub criteriavalue: String,
    /// limit to enrolled courses
    #[serde(rename = "limittoenrolled", skip_serializing_if = "Option::is_none")]
    pub limittoenrolled: Option<bool>,
    /// limit to courses where completion is enabled
    #[serde(rename = "onlywithcompletion", skip_serializing_if = "Option::is_none")]
    pub onlywithcompletion: Option<bool>,
    /// page number (0 based)
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// items per page
    #[serde(rename = "perpage", skip_serializing_if = "Option::is_none")]
    pub perpage: Option<i32>,
    #[serde(rename = "requiredcapabilities", skip_serializing_if = "Option::is_none")]
    pub requiredcapabilities: Option<Vec<serde_json::Value>>,
}

impl CoreCourseSearchCoursesRequest {
    pub fn new(criterianame: String, criteriavalue: String) -> CoreCourseSearchCoursesRequest {
        CoreCourseSearchCoursesRequest {
            criterianame,
            criteriavalue,
            limittoenrolled: None,
            onlywithcompletion: None,
            page: None,
            perpage: None,
            requiredcapabilities: None,
        }
    }
}

