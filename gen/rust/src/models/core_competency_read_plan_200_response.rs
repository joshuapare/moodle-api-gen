/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCompetencyReadPlan200Response {
    /// canbeedited
    #[serde(rename = "canbeedited")]
    pub canbeedited: bool,
    /// canmanage
    #[serde(rename = "canmanage")]
    pub canmanage: bool,
    /// canrequestreview
    #[serde(rename = "canrequestreview")]
    pub canrequestreview: bool,
    /// canreview
    #[serde(rename = "canreview")]
    pub canreview: bool,
    #[serde(rename = "commentarea")]
    pub commentarea: Box<models::CoreCompetencyReadPlan200ResponseCommentarea>,
    /// description
    #[serde(rename = "description")]
    pub description: String,
    /// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "descriptionformat", skip_serializing_if = "Option::is_none")]
    pub descriptionformat: Option<i32>,
    /// duedate
    #[serde(rename = "duedate")]
    pub duedate: i32,
    /// duedateformatted
    #[serde(rename = "duedateformatted")]
    pub duedateformatted: String,
    /// id
    #[serde(rename = "id")]
    pub id: i32,
    /// isactive
    #[serde(rename = "isactive")]
    pub isactive: bool,
    /// isapproveallowed
    #[serde(rename = "isapproveallowed")]
    pub isapproveallowed: bool,
    /// isbasedontemplate
    #[serde(rename = "isbasedontemplate")]
    pub isbasedontemplate: bool,
    /// iscancelreviewrequestallowed
    #[serde(rename = "iscancelreviewrequestallowed")]
    pub iscancelreviewrequestallowed: bool,
    /// iscompleteallowed
    #[serde(rename = "iscompleteallowed")]
    pub iscompleteallowed: bool,
    /// iscompleted
    #[serde(rename = "iscompleted")]
    pub iscompleted: bool,
    /// isdraft
    #[serde(rename = "isdraft")]
    pub isdraft: bool,
    /// isinreview
    #[serde(rename = "isinreview")]
    pub isinreview: bool,
    /// isreopenallowed
    #[serde(rename = "isreopenallowed")]
    pub isreopenallowed: bool,
    /// isrequestreviewallowed
    #[serde(rename = "isrequestreviewallowed")]
    pub isrequestreviewallowed: bool,
    /// isstartreviewallowed
    #[serde(rename = "isstartreviewallowed")]
    pub isstartreviewallowed: bool,
    /// isstopreviewallowed
    #[serde(rename = "isstopreviewallowed")]
    pub isstopreviewallowed: bool,
    /// isunapproveallowed
    #[serde(rename = "isunapproveallowed")]
    pub isunapproveallowed: bool,
    /// isunlinkallowed
    #[serde(rename = "isunlinkallowed")]
    pub isunlinkallowed: bool,
    /// iswaitingforreview
    #[serde(rename = "iswaitingforreview")]
    pub iswaitingforreview: bool,
    /// name
    #[serde(rename = "name")]
    pub name: String,
    /// origtemplateid
    #[serde(rename = "origtemplateid")]
    pub origtemplateid: i32,
    #[serde(rename = "reviewer", skip_serializing_if = "Option::is_none")]
    pub reviewer: Option<Box<models::CoreCompetencyGradeCompetency200ResponseActionuser>>,
    /// reviewerid
    #[serde(rename = "reviewerid")]
    pub reviewerid: i32,
    /// status
    #[serde(rename = "status")]
    pub status: i32,
    /// statusname
    #[serde(rename = "statusname")]
    pub statusname: String,
    #[serde(rename = "template", skip_serializing_if = "Option::is_none")]
    pub template: Option<Box<models::CoreCompetencyCreateTemplate200Response>>,
    /// templateid
    #[serde(rename = "templateid")]
    pub templateid: i32,
    /// timecreated
    #[serde(rename = "timecreated")]
    pub timecreated: i32,
    /// timemodified
    #[serde(rename = "timemodified")]
    pub timemodified: i32,
    /// url
    #[serde(rename = "url")]
    pub url: String,
    /// userid
    #[serde(rename = "userid")]
    pub userid: i32,
    /// usermodified
    #[serde(rename = "usermodified")]
    pub usermodified: i32,
}

impl CoreCompetencyReadPlan200Response {
    pub fn new(canbeedited: bool, canmanage: bool, canrequestreview: bool, canreview: bool, commentarea: models::CoreCompetencyReadPlan200ResponseCommentarea, description: String, duedate: i32, duedateformatted: String, id: i32, isactive: bool, isapproveallowed: bool, isbasedontemplate: bool, iscancelreviewrequestallowed: bool, iscompleteallowed: bool, iscompleted: bool, isdraft: bool, isinreview: bool, isreopenallowed: bool, isrequestreviewallowed: bool, isstartreviewallowed: bool, isstopreviewallowed: bool, isunapproveallowed: bool, isunlinkallowed: bool, iswaitingforreview: bool, name: String, origtemplateid: i32, reviewerid: i32, status: i32, statusname: String, templateid: i32, timecreated: i32, timemodified: i32, url: String, userid: i32, usermodified: i32) -> CoreCompetencyReadPlan200Response {
        CoreCompetencyReadPlan200Response {
            canbeedited,
            canmanage,
            canrequestreview,
            canreview,
            commentarea: Box::new(commentarea),
            description,
            descriptionformat: None,
            duedate,
            duedateformatted,
            id,
            isactive,
            isapproveallowed,
            isbasedontemplate,
            iscancelreviewrequestallowed,
            iscompleteallowed,
            iscompleted,
            isdraft,
            isinreview,
            isreopenallowed,
            isrequestreviewallowed,
            isstartreviewallowed,
            isstopreviewallowed,
            isunapproveallowed,
            isunlinkallowed,
            iswaitingforreview,
            name,
            origtemplateid,
            reviewer: None,
            reviewerid,
            status,
            statusname,
            template: None,
            templateid,
            timecreated,
            timemodified,
            url,
            userid,
            usermodified,
        }
    }
}

