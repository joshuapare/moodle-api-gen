/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// CoreMessageGetMessages200ResponseMessagesInner : message
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreMessageGetMessages200ResponseMessagesInner {
    /// The component that generated the notification
    #[serde(rename = "component", skip_serializing_if = "Option::is_none")]
    pub component: Option<String>,
    /// Context URL
    #[serde(rename = "contexturl", skip_serializing_if = "Option::is_none")]
    pub contexturl: Option<String>,
    /// Context URL link name
    #[serde(rename = "contexturlname", skip_serializing_if = "Option::is_none")]
    pub contexturlname: Option<String>,
    /// Custom data to be passed to the message processor.                                 The data here is serialised using json_encode().
    #[serde(rename = "customdata", skip_serializing_if = "Option::is_none")]
    pub customdata: Option<String>,
    /// The type of notification
    #[serde(rename = "eventtype", skip_serializing_if = "Option::is_none")]
    pub eventtype: Option<String>,
    /// The message
    #[serde(rename = "fullmessage", skip_serializing_if = "Option::is_none")]
    pub fullmessage: Option<String>,
    /// fullmessage format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "fullmessageformat", skip_serializing_if = "Option::is_none")]
    pub fullmessageformat: Option<i32>,
    /// The message in html
    #[serde(rename = "fullmessagehtml", skip_serializing_if = "Option::is_none")]
    pub fullmessagehtml: Option<String>,
    /// URL for icon, only for notifications.
    #[serde(rename = "iconurl", skip_serializing_if = "Option::is_none")]
    pub iconurl: Option<String>,
    /// Message id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Is a notification?
    #[serde(rename = "notification", skip_serializing_if = "Option::is_none")]
    pub notification: Option<i32>,
    /// The shorten message
    #[serde(rename = "smallmessage", skip_serializing_if = "Option::is_none")]
    pub smallmessage: Option<String>,
    /// The message subject
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    /// The message text formated
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
    /// Time created
    #[serde(rename = "timecreated", skip_serializing_if = "Option::is_none")]
    pub timecreated: Option<i32>,
    /// Time read
    #[serde(rename = "timeread", skip_serializing_if = "Option::is_none")]
    pub timeread: Option<i32>,
    /// User from full name
    #[serde(rename = "userfromfullname", skip_serializing_if = "Option::is_none")]
    pub userfromfullname: Option<String>,
    /// User from id
    #[serde(rename = "useridfrom", skip_serializing_if = "Option::is_none")]
    pub useridfrom: Option<i32>,
    /// User to id
    #[serde(rename = "useridto", skip_serializing_if = "Option::is_none")]
    pub useridto: Option<i32>,
    /// User to full name
    #[serde(rename = "usertofullname", skip_serializing_if = "Option::is_none")]
    pub usertofullname: Option<String>,
}

impl CoreMessageGetMessages200ResponseMessagesInner {
    /// message
    pub fn new() -> CoreMessageGetMessages200ResponseMessagesInner {
        CoreMessageGetMessages200ResponseMessagesInner {
            component: None,
            contexturl: None,
            contexturlname: None,
            customdata: None,
            eventtype: None,
            fullmessage: None,
            fullmessageformat: None,
            fullmessagehtml: None,
            iconurl: None,
            id: None,
            notification: None,
            smallmessage: None,
            subject: None,
            text: None,
            timecreated: None,
            timeread: None,
            userfromfullname: None,
            useridfrom: None,
            useridto: None,
            usertofullname: None,
        }
    }
}

