/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModIomadcertificateIssueIomadcertificate200ResponseIssue {
    /// Certificate code
    #[serde(rename = "code")]
    pub code: String,
    /// Time created
    #[serde(rename = "filename")]
    pub filename: String,
    /// Time created
    #[serde(rename = "fileurl")]
    pub fileurl: String,
    /// Certificate grade
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<String>,
    /// Issue id
    #[serde(rename = "id")]
    pub id: i32,
    /// Certificate id
    #[serde(rename = "iomadcertificateid")]
    pub iomadcertificateid: i32,
    /// mime type
    #[serde(rename = "mimetype")]
    pub mimetype: String,
    /// Time created
    #[serde(rename = "timecreated")]
    pub timecreated: i32,
    /// User id
    #[serde(rename = "userid")]
    pub userid: i32,
}

impl ModIomadcertificateIssueIomadcertificate200ResponseIssue {
    pub fn new(code: String, filename: String, fileurl: String, id: i32, iomadcertificateid: i32, mimetype: String, timecreated: i32, userid: i32) -> ModIomadcertificateIssueIomadcertificate200ResponseIssue {
        ModIomadcertificateIssueIomadcertificate200ResponseIssue {
            code,
            filename,
            fileurl,
            grade: None,
            id,
            iomadcertificateid,
            mimetype,
            timecreated,
            userid,
        }
    }
}

