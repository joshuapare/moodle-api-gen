/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ModLessonGetUserTimers200ResponseTimersInner : The timers
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModLessonGetUserTimers200ResponseTimersInner {
    /// If the lesson for this timer was completed
    #[serde(rename = "completed", skip_serializing_if = "Option::is_none")]
    pub completed: Option<i32>,
    /// The attempt id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The lesson id
    #[serde(rename = "lessonid", skip_serializing_if = "Option::is_none")]
    pub lessonid: Option<i32>,
    /// Last access time to the lesson during the timer session
    #[serde(rename = "lessontime", skip_serializing_if = "Option::is_none")]
    pub lessontime: Option<i32>,
    /// First access time for a new timer session
    #[serde(rename = "starttime", skip_serializing_if = "Option::is_none")]
    pub starttime: Option<i32>,
    /// Last modified time via webservices.
    #[serde(rename = "timemodifiedoffline", skip_serializing_if = "Option::is_none")]
    pub timemodifiedoffline: Option<i32>,
    /// The user id
    #[serde(rename = "userid", skip_serializing_if = "Option::is_none")]
    pub userid: Option<i32>,
}

impl ModLessonGetUserTimers200ResponseTimersInner {
    /// The timers
    pub fn new() -> ModLessonGetUserTimers200ResponseTimersInner {
        ModLessonGetUserTimers200ResponseTimersInner {
            completed: None,
            id: None,
            lessonid: None,
            lessontime: None,
            starttime: None,
            timemodifiedoffline: None,
            userid: None,
        }
    }
}

