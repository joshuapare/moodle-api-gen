/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolLpDataForTemplatesManagePage200Response {
    /// Whether the user manage the templates
    #[serde(rename = "canmanage")]
    pub canmanage: bool,
    #[serde(rename = "navigation")]
    pub navigation: Vec<serde_json::Value>,
    /// The page context id
    #[serde(rename = "pagecontextid")]
    pub pagecontextid: i32,
    /// Url to the tool_lp plugin folder on this Moodle site
    #[serde(rename = "pluginbaseurl")]
    pub pluginbaseurl: String,
    #[serde(rename = "templates")]
    pub templates: Vec<models::ToolLpDataForTemplatesManagePage200ResponseTemplatesInner>,
}

impl ToolLpDataForTemplatesManagePage200Response {
    pub fn new(canmanage: bool, navigation: Vec<serde_json::Value>, pagecontextid: i32, pluginbaseurl: String, templates: Vec<models::ToolLpDataForTemplatesManagePage200ResponseTemplatesInner>) -> ToolLpDataForTemplatesManagePage200Response {
        ToolLpDataForTemplatesManagePage200Response {
            canmanage,
            navigation,
            pagecontextid,
            pluginbaseurl,
            templates,
        }
    }
}

