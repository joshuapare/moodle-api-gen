/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner {
    #[serde(rename = "editorfields", skip_serializing_if = "Option::is_none")]
    pub editorfields: Option<Vec<models::ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInnerEditorfieldsInner>>,
    #[serde(rename = "fileareas", skip_serializing_if = "Option::is_none")]
    pub fileareas: Option<Vec<models::ModAssignGetSubmissionStatus200ResponseFeedbackPluginsInnerFileareasInner>>,
    /// submission plugin name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// submission plugin type
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner {
    pub fn new() -> ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner {
        ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner {
            editorfields: None,
            fileareas: None,
            name: None,
            r#type: None,
        }
    }
}

