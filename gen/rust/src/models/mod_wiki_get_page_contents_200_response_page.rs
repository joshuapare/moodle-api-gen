/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModWikiGetPageContents200ResponsePage {
    /// Page contents.
    #[serde(rename = "cachedcontent")]
    pub cachedcontent: String,
    /// True if user can edit the page.
    #[serde(rename = "caneditpage")]
    pub caneditpage: bool,
    /// cachedcontent format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "contentformat", skip_serializing_if = "Option::is_none")]
    pub contentformat: Option<i32>,
    /// Page's group ID.
    #[serde(rename = "groupid")]
    pub groupid: i32,
    /// Page ID.
    #[serde(rename = "id")]
    pub id: i32,
    /// Page's subwiki ID.
    #[serde(rename = "subwikiid")]
    pub subwikiid: i32,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<models::ModDataGetEntries200ResponseEntriesInnerTagsInner>>,
    /// Page title.
    #[serde(rename = "title")]
    pub title: String,
    /// Page's user ID.
    #[serde(rename = "userid")]
    pub userid: i32,
    /// Latest version of the page.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
    /// Page's wiki ID.
    #[serde(rename = "wikiid")]
    pub wikiid: i32,
}

impl ModWikiGetPageContents200ResponsePage {
    pub fn new(cachedcontent: String, caneditpage: bool, groupid: i32, id: i32, subwikiid: i32, title: String, userid: i32, wikiid: i32) -> ModWikiGetPageContents200ResponsePage {
        ModWikiGetPageContents200ResponsePage {
            cachedcontent,
            caneditpage,
            contentformat: None,
            groupid,
            id,
            subwikiid,
            tags: None,
            title,
            userid,
            version: None,
            wikiid,
        }
    }
}

