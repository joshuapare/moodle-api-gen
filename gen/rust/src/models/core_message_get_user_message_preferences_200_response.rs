/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreMessageGetUserMessagePreferences200Response {
    /// Privacy messaging setting to define who can message you
    #[serde(rename = "blocknoncontacts")]
    pub blocknoncontacts: i32,
    /// User preference for using enter to send messages
    #[serde(rename = "entertosend")]
    pub entertosend: bool,
    #[serde(rename = "preferences")]
    pub preferences: Box<models::CoreMessageGetUserMessagePreferences200ResponsePreferences>,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl CoreMessageGetUserMessagePreferences200Response {
    pub fn new(blocknoncontacts: i32, entertosend: bool, preferences: models::CoreMessageGetUserMessagePreferences200ResponsePreferences) -> CoreMessageGetUserMessagePreferences200Response {
        CoreMessageGetUserMessagePreferences200Response {
            blocknoncontacts,
            entertosend,
            preferences: Box::new(preferences),
            warnings: None,
        }
    }
}

