/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolLpDataForUserEvidenceListPage200Response {
    /// Can the current user manage the user's evidence
    #[serde(rename = "canmanage")]
    pub canmanage: bool,
    #[serde(rename = "evidence")]
    pub evidence: Vec<models::ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner>,
    #[serde(rename = "navigation")]
    pub navigation: Vec<serde_json::Value>,
    /// Url to the tool_lp plugin folder on this Moodle site
    #[serde(rename = "pluginbaseurl")]
    pub pluginbaseurl: String,
    /// The user ID
    #[serde(rename = "userid")]
    pub userid: i32,
}

impl ToolLpDataForUserEvidenceListPage200Response {
    pub fn new(canmanage: bool, evidence: Vec<models::ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner>, navigation: Vec<serde_json::Value>, pluginbaseurl: String, userid: i32) -> ToolLpDataForUserEvidenceListPage200Response {
        ToolLpDataForUserEvidenceListPage200Response {
            canmanage,
            evidence,
            navigation,
            pluginbaseurl,
            userid,
        }
    }
}

