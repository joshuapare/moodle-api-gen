/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions {
    /// exclude empty grades
    #[serde(rename = "aggregateonlygraded", skip_serializing_if = "Option::is_none")]
    pub aggregateonlygraded: Option<bool>,
    /// aggregate outcomes
    #[serde(rename = "aggregateoutcomes", skip_serializing_if = "Option::is_none")]
    pub aggregateoutcomes: Option<bool>,
    /// aggregation method
    #[serde(rename = "aggregation", skip_serializing_if = "Option::is_none")]
    pub aggregation: Option<i32>,
    /// weight coefficient
    #[serde(rename = "aggregationcoef2", skip_serializing_if = "Option::is_none")]
    pub aggregationcoef2: Option<String>,
    /// the decimal count
    #[serde(rename = "decimals", skip_serializing_if = "Option::is_none")]
    pub decimals: Option<i32>,
    /// the display type
    #[serde(rename = "display", skip_serializing_if = "Option::is_none")]
    pub display: Option<i32>,
    /// drop low grades
    #[serde(rename = "droplow", skip_serializing_if = "Option::is_none")]
    pub droplow: Option<i32>,
    /// the grade max
    #[serde(rename = "grademax", skip_serializing_if = "Option::is_none")]
    pub grademax: Option<i32>,
    /// the grade min
    #[serde(rename = "grademin", skip_serializing_if = "Option::is_none")]
    pub grademin: Option<i32>,
    /// the grade to pass
    #[serde(rename = "gradepass", skip_serializing_if = "Option::is_none")]
    pub gradepass: Option<i32>,
    /// the grade type
    #[serde(rename = "gradetype", skip_serializing_if = "Option::is_none")]
    pub gradetype: Option<i32>,
    /// grades hidden until
    #[serde(rename = "hiddenuntil", skip_serializing_if = "Option::is_none")]
    pub hiddenuntil: Option<i32>,
    /// the category idnumber
    #[serde(rename = "idnumber", skip_serializing_if = "Option::is_none")]
    pub idnumber: Option<String>,
    /// the category iteminfo
    #[serde(rename = "iteminfo", skip_serializing_if = "Option::is_none")]
    pub iteminfo: Option<String>,
    /// the category total name
    #[serde(rename = "itemname", skip_serializing_if = "Option::is_none")]
    pub itemname: Option<String>,
    /// lock grades after
    #[serde(rename = "locktime", skip_serializing_if = "Option::is_none")]
    pub locktime: Option<i32>,
    /// The parent category id
    #[serde(rename = "parentcategoryid", skip_serializing_if = "Option::is_none")]
    pub parentcategoryid: Option<i32>,
    /// the parent category idnumber
    #[serde(rename = "parentcategoryidnumber", skip_serializing_if = "Option::is_none")]
    pub parentcategoryidnumber: Option<String>,
    /// weight adjusted
    #[serde(rename = "weightoverride", skip_serializing_if = "Option::is_none")]
    pub weightoverride: Option<bool>,
}

impl CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions {
    pub fn new() -> CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions {
        CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions {
            aggregateonlygraded: None,
            aggregateoutcomes: None,
            aggregation: None,
            aggregationcoef2: None,
            decimals: None,
            display: None,
            droplow: None,
            grademax: None,
            grademin: None,
            gradepass: None,
            gradetype: None,
            hiddenuntil: None,
            idnumber: None,
            iteminfo: None,
            itemname: None,
            locktime: None,
            parentcategoryid: None,
            parentcategoryidnumber: None,
            weightoverride: None,
        }
    }
}

