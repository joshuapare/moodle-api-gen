/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModWorkshopGetSubmission200ResponseSubmission {
    /// Used by File API file_postupdate_standard_filemanager.
    #[serde(rename = "attachment")]
    pub attachment: i32,
    #[serde(rename = "attachmentfiles", skip_serializing_if = "Option::is_none")]
    pub attachmentfiles: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>>,
    /// The author of the submission.
    #[serde(rename = "authorid")]
    pub authorid: i32,
    /// Submission text.
    #[serde(rename = "content")]
    pub content: String,
    #[serde(rename = "contentfiles", skip_serializing_if = "Option::is_none")]
    pub contentfiles: Option<Vec<models::CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>>,
    /// content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "contentformat", skip_serializing_if = "Option::is_none")]
    pub contentformat: Option<i32>,
    /// The trust mode of the data.
    #[serde(rename = "contenttrust")]
    pub contenttrust: i32,
    /// Is this submission an example from teacher.
    #[serde(rename = "example")]
    pub example: bool,
    /// Teacher comment/feedback for the author of the submission, for example describing the reasons                     for the grade overriding.
    #[serde(rename = "feedbackauthor", skip_serializing_if = "Option::is_none")]
    pub feedbackauthor: Option<String>,
    /// feedbackauthor format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    #[serde(rename = "feedbackauthorformat", skip_serializing_if = "Option::is_none")]
    pub feedbackauthorformat: Option<i32>,
    /// Aggregated grade for the submission. The grade is a decimal number from interval 0..100.                     If NULL then the grade for submission has not been aggregated yet.
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<f64>,
    /// Grade for the submission manually overridden by a teacher. Grade is always from interval 0..100.                     If NULL then the grade is not overriden.
    #[serde(rename = "gradeover", skip_serializing_if = "Option::is_none")]
    pub gradeover: Option<f64>,
    /// The id of the user who has overridden the grade for submission.
    #[serde(rename = "gradeoverby", skip_serializing_if = "Option::is_none")]
    pub gradeoverby: Option<i32>,
    /// The primary key of the record.
    #[serde(rename = "id")]
    pub id: i32,
    /// Has this submission been submitted after the deadline or during the assessment phase?
    #[serde(rename = "late")]
    pub late: i32,
    /// Shall the submission be available to other when the workshop is closed.
    #[serde(rename = "published")]
    pub published: bool,
    /// Timestamp when the work was submitted for the first time.
    #[serde(rename = "timecreated")]
    pub timecreated: i32,
    /// The timestamp when grade or gradeover was recently modified.
    #[serde(rename = "timegraded", skip_serializing_if = "Option::is_none")]
    pub timegraded: Option<i32>,
    /// Timestamp when the submission has been updated.
    #[serde(rename = "timemodified")]
    pub timemodified: i32,
    /// The submission title.
    #[serde(rename = "title")]
    pub title: String,
    /// The id of the workshop instance.
    #[serde(rename = "workshopid")]
    pub workshopid: i32,
}

impl ModWorkshopGetSubmission200ResponseSubmission {
    pub fn new(attachment: i32, authorid: i32, content: String, contenttrust: i32, example: bool, id: i32, late: i32, published: bool, timecreated: i32, timemodified: i32, title: String, workshopid: i32) -> ModWorkshopGetSubmission200ResponseSubmission {
        ModWorkshopGetSubmission200ResponseSubmission {
            attachment,
            attachmentfiles: None,
            authorid,
            content,
            contentfiles: None,
            contentformat: None,
            contenttrust,
            example,
            feedbackauthor: None,
            feedbackauthorformat: None,
            grade: None,
            gradeover: None,
            gradeoverby: None,
            id,
            late,
            published,
            timecreated,
            timegraded: None,
            timemodified,
            title,
            workshopid,
        }
    }
}

