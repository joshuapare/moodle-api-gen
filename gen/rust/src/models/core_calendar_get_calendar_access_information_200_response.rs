/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreCalendarGetCalendarAccessInformation200Response {
    /// Whether the user can manage entries.
    #[serde(rename = "canmanageentries")]
    pub canmanageentries: bool,
    /// Whether the user can manage group entries.
    #[serde(rename = "canmanagegroupentries")]
    pub canmanagegroupentries: bool,
    /// Whether the user can manage its own entries.
    #[serde(rename = "canmanageownentries")]
    pub canmanageownentries: bool,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::AuthEmailSignupUser200ResponseWarningsInner>>,
}

impl CoreCalendarGetCalendarAccessInformation200Response {
    pub fn new(canmanageentries: bool, canmanagegroupentries: bool, canmanageownentries: bool) -> CoreCalendarGetCalendarAccessInformation200Response {
        CoreCalendarGetCalendarAccessInformation200Response {
            canmanageentries,
            canmanagegroupentries,
            canmanageownentries,
            warnings: None,
        }
    }
}

