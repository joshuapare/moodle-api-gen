/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModWorkshopGetGradesReportRequest
    /// </summary>
    [DataContract(Name = "mod_workshop_get_grades_report_request")]
    public partial class ModWorkshopGetGradesReportRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModWorkshopGetGradesReportRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModWorkshopGetGradesReportRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModWorkshopGetGradesReportRequest" /> class.
        /// </summary>
        /// <param name="groupid">Group id, 0 means that the function will determine the user group. (default to 0).</param>
        /// <param name="page">The page of records to return. (default to 0).</param>
        /// <param name="perpage">The number of records to return per page. (default to 0).</param>
        /// <param name="sortby">sort by this element: lastname, firstname, submissiontitle,                     submissionmodified, submissiongrade, gradinggrade. (default to &quot;lastname&quot;).</param>
        /// <param name="sortdirection">sort direction: ASC or DESC (default to &quot;ASC&quot;).</param>
        /// <param name="workshopid">Workshop instance id. (required).</param>
        public ModWorkshopGetGradesReportRequest(int groupid = 0, int page = 0, int perpage = 0, string sortby = @"lastname", string sortdirection = @"ASC", int workshopid = default(int))
        {
            this.Workshopid = workshopid;
            this.Groupid = groupid;
            this.Page = page;
            this.Perpage = perpage;
            // use default value if no "sortby" provided
            this.Sortby = sortby ?? @"lastname";
            // use default value if no "sortdirection" provided
            this.Sortdirection = sortdirection ?? @"ASC";
        }

        /// <summary>
        /// Group id, 0 means that the function will determine the user group.
        /// </summary>
        /// <value>Group id, 0 means that the function will determine the user group.</value>
        [DataMember(Name = "groupid", EmitDefaultValue = false)]
        public int Groupid { get; set; }

        /// <summary>
        /// The page of records to return.
        /// </summary>
        /// <value>The page of records to return.</value>
        [DataMember(Name = "page", EmitDefaultValue = false)]
        public int Page { get; set; }

        /// <summary>
        /// The number of records to return per page.
        /// </summary>
        /// <value>The number of records to return per page.</value>
        [DataMember(Name = "perpage", EmitDefaultValue = false)]
        public int Perpage { get; set; }

        /// <summary>
        /// sort by this element: lastname, firstname, submissiontitle,                     submissionmodified, submissiongrade, gradinggrade.
        /// </summary>
        /// <value>sort by this element: lastname, firstname, submissiontitle,                     submissionmodified, submissiongrade, gradinggrade.</value>
        [DataMember(Name = "sortby", EmitDefaultValue = false)]
        public string Sortby { get; set; }

        /// <summary>
        /// sort direction: ASC or DESC
        /// </summary>
        /// <value>sort direction: ASC or DESC</value>
        [DataMember(Name = "sortdirection", EmitDefaultValue = false)]
        public string Sortdirection { get; set; }

        /// <summary>
        /// Workshop instance id.
        /// </summary>
        /// <value>Workshop instance id.</value>
        [DataMember(Name = "workshopid", IsRequired = true, EmitDefaultValue = true)]
        public int Workshopid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModWorkshopGetGradesReportRequest {\n");
            sb.Append("  Groupid: ").Append(Groupid).Append("\n");
            sb.Append("  Page: ").Append(Page).Append("\n");
            sb.Append("  Perpage: ").Append(Perpage).Append("\n");
            sb.Append("  Sortby: ").Append(Sortby).Append("\n");
            sb.Append("  Sortdirection: ").Append(Sortdirection).Append("\n");
            sb.Append("  Workshopid: ").Append(Workshopid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
