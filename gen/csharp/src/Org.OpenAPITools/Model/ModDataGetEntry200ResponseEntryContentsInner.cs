/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModDataGetEntry200ResponseEntryContentsInner
    /// </summary>
    [DataContract(Name = "mod_data_get_entry_200_response_entry_contents_inner")]
    public partial class ModDataGetEntry200ResponseEntryContentsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModDataGetEntry200ResponseEntryContentsInner" /> class.
        /// </summary>
        /// <param name="content">Contents..</param>
        /// <param name="content1">Contents..</param>
        /// <param name="content2">Contents..</param>
        /// <param name="content3">Contents..</param>
        /// <param name="content4">Contents..</param>
        /// <param name="fieldid">The field type of the content. (default to 0).</param>
        /// <param name="files">files.</param>
        /// <param name="id">Content id..</param>
        /// <param name="recordid">The record this content belongs to. (default to 0).</param>
        public ModDataGetEntry200ResponseEntryContentsInner(string content = default(string), string content1 = default(string), string content2 = default(string), string content3 = default(string), string content4 = default(string), int fieldid = 0, List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> files = default(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>), int id = default(int), int recordid = 0)
        {
            this.Content = content;
            this.Content1 = content1;
            this.Content2 = content2;
            this.Content3 = content3;
            this.Content4 = content4;
            this.Fieldid = fieldid;
            this.Files = files;
            this.Id = id;
            this.Recordid = recordid;
        }

        /// <summary>
        /// Contents.
        /// </summary>
        /// <value>Contents.</value>
        [DataMember(Name = "content", EmitDefaultValue = false)]
        public string Content { get; set; }

        /// <summary>
        /// Contents.
        /// </summary>
        /// <value>Contents.</value>
        [DataMember(Name = "content1", EmitDefaultValue = false)]
        public string Content1 { get; set; }

        /// <summary>
        /// Contents.
        /// </summary>
        /// <value>Contents.</value>
        [DataMember(Name = "content2", EmitDefaultValue = false)]
        public string Content2 { get; set; }

        /// <summary>
        /// Contents.
        /// </summary>
        /// <value>Contents.</value>
        [DataMember(Name = "content3", EmitDefaultValue = false)]
        public string Content3 { get; set; }

        /// <summary>
        /// Contents.
        /// </summary>
        /// <value>Contents.</value>
        [DataMember(Name = "content4", EmitDefaultValue = false)]
        public string Content4 { get; set; }

        /// <summary>
        /// The field type of the content.
        /// </summary>
        /// <value>The field type of the content.</value>
        [DataMember(Name = "fieldid", EmitDefaultValue = false)]
        public int Fieldid { get; set; }

        /// <summary>
        /// Gets or Sets Files
        /// </summary>
        [DataMember(Name = "files", EmitDefaultValue = false)]
        public List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> Files { get; set; }

        /// <summary>
        /// Content id.
        /// </summary>
        /// <value>Content id.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// The record this content belongs to.
        /// </summary>
        /// <value>The record this content belongs to.</value>
        [DataMember(Name = "recordid", EmitDefaultValue = false)]
        public int Recordid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModDataGetEntry200ResponseEntryContentsInner {\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  Content1: ").Append(Content1).Append("\n");
            sb.Append("  Content2: ").Append(Content2).Append("\n");
            sb.Append("  Content3: ").Append(Content3).Append("\n");
            sb.Append("  Content4: ").Append(Content4).Append("\n");
            sb.Append("  Fieldid: ").Append(Fieldid).Append("\n");
            sb.Append("  Files: ").Append(Files).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Recordid: ").Append(Recordid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
