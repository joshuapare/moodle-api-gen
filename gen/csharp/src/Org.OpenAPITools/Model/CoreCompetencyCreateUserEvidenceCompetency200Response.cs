/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreCompetencyCreateUserEvidenceCompetency200Response
    /// </summary>
    [DataContract(Name = "core_competency_create_user_evidence_competency_200_response")]
    public partial class CoreCompetencyCreateUserEvidenceCompetency200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCompetencyCreateUserEvidenceCompetency200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreCompetencyCreateUserEvidenceCompetency200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCompetencyCreateUserEvidenceCompetency200Response" /> class.
        /// </summary>
        /// <param name="competencyid">competencyid (required) (default to null).</param>
        /// <param name="id">id (required) (default to 0).</param>
        /// <param name="timecreated">timecreated (required) (default to 0).</param>
        /// <param name="timemodified">timemodified (required) (default to 0).</param>
        /// <param name="userevidenceid">userevidenceid (required) (default to null).</param>
        /// <param name="usermodified">usermodified (required) (default to 0).</param>
        public CoreCompetencyCreateUserEvidenceCompetency200Response(int competencyid = null, int id = 0, int timecreated = 0, int timemodified = 0, int userevidenceid = null, int usermodified = 0)
        {
            this.Competencyid = competencyid;
            this.Id = id;
            this.Timecreated = timecreated;
            this.Timemodified = timemodified;
            this.Userevidenceid = userevidenceid;
            this.Usermodified = usermodified;
        }

        /// <summary>
        /// competencyid
        /// </summary>
        /// <value>competencyid</value>
        [DataMember(Name = "competencyid", IsRequired = true, EmitDefaultValue = true)]
        public int Competencyid { get; set; }

        /// <summary>
        /// id
        /// </summary>
        /// <value>id</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public int Id { get; set; }

        /// <summary>
        /// timecreated
        /// </summary>
        /// <value>timecreated</value>
        [DataMember(Name = "timecreated", IsRequired = true, EmitDefaultValue = true)]
        public int Timecreated { get; set; }

        /// <summary>
        /// timemodified
        /// </summary>
        /// <value>timemodified</value>
        [DataMember(Name = "timemodified", IsRequired = true, EmitDefaultValue = true)]
        public int Timemodified { get; set; }

        /// <summary>
        /// userevidenceid
        /// </summary>
        /// <value>userevidenceid</value>
        [DataMember(Name = "userevidenceid", IsRequired = true, EmitDefaultValue = true)]
        public int Userevidenceid { get; set; }

        /// <summary>
        /// usermodified
        /// </summary>
        /// <value>usermodified</value>
        [DataMember(Name = "usermodified", IsRequired = true, EmitDefaultValue = true)]
        public int Usermodified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCompetencyCreateUserEvidenceCompetency200Response {\n");
            sb.Append("  Competencyid: ").Append(Competencyid).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Userevidenceid: ").Append(Userevidenceid).Append("\n");
            sb.Append("  Usermodified: ").Append(Usermodified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
