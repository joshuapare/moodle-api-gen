/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreBadgesGetUserBadges200ResponseBadgesInnerAlignmentInner
    /// </summary>
    [DataContract(Name = "core_badges_get_user_badges_200_response_badges_inner_alignment_inner")]
    public partial class CoreBadgesGetUserBadges200ResponseBadgesInnerAlignmentInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreBadgesGetUserBadges200ResponseBadgesInnerAlignmentInner" /> class.
        /// </summary>
        /// <param name="badgeid">Badge id.</param>
        /// <param name="id">Alignment id.</param>
        /// <param name="targetCode">Target code.</param>
        /// <param name="targetDescription">Target description.</param>
        /// <param name="targetFramework">Target framework.</param>
        /// <param name="targetName">Target name.</param>
        /// <param name="targetUrl">Target URL.</param>
        public CoreBadgesGetUserBadges200ResponseBadgesInnerAlignmentInner(int badgeid = default(int), int id = default(int), string targetCode = default(string), string targetDescription = default(string), string targetFramework = default(string), string targetName = default(string), string targetUrl = default(string))
        {
            this.Badgeid = badgeid;
            this.Id = id;
            this.TargetCode = targetCode;
            this.TargetDescription = targetDescription;
            this.TargetFramework = targetFramework;
            this.TargetName = targetName;
            this.TargetUrl = targetUrl;
        }

        /// <summary>
        /// Badge id
        /// </summary>
        /// <value>Badge id</value>
        [DataMember(Name = "badgeid", EmitDefaultValue = false)]
        public int Badgeid { get; set; }

        /// <summary>
        /// Alignment id
        /// </summary>
        /// <value>Alignment id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Target code
        /// </summary>
        /// <value>Target code</value>
        [DataMember(Name = "targetCode", EmitDefaultValue = false)]
        public string TargetCode { get; set; }

        /// <summary>
        /// Target description
        /// </summary>
        /// <value>Target description</value>
        [DataMember(Name = "targetDescription", EmitDefaultValue = false)]
        public string TargetDescription { get; set; }

        /// <summary>
        /// Target framework
        /// </summary>
        /// <value>Target framework</value>
        [DataMember(Name = "targetFramework", EmitDefaultValue = false)]
        public string TargetFramework { get; set; }

        /// <summary>
        /// Target name
        /// </summary>
        /// <value>Target name</value>
        [DataMember(Name = "targetName", EmitDefaultValue = false)]
        public string TargetName { get; set; }

        /// <summary>
        /// Target URL
        /// </summary>
        /// <value>Target URL</value>
        [DataMember(Name = "targetUrl", EmitDefaultValue = false)]
        public string TargetUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreBadgesGetUserBadges200ResponseBadgesInnerAlignmentInner {\n");
            sb.Append("  Badgeid: ").Append(Badgeid).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  TargetCode: ").Append(TargetCode).Append("\n");
            sb.Append("  TargetDescription: ").Append(TargetDescription).Append("\n");
            sb.Append("  TargetFramework: ").Append(TargetFramework).Append("\n");
            sb.Append("  TargetName: ").Append(TargetName).Append("\n");
            sb.Append("  TargetUrl: ").Append(TargetUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
