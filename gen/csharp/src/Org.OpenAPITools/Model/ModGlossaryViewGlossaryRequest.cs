/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModGlossaryViewGlossaryRequest
    /// </summary>
    [DataContract(Name = "mod_glossary_view_glossary_request")]
    public partial class ModGlossaryViewGlossaryRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModGlossaryViewGlossaryRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModGlossaryViewGlossaryRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModGlossaryViewGlossaryRequest" /> class.
        /// </summary>
        /// <param name="id">Glossary instance ID (required) (default to null).</param>
        /// <param name="mode">The mode in which the glossary is viewed (required) (default to &quot;null&quot;).</param>
        public ModGlossaryViewGlossaryRequest(int id = null, string mode = @"null")
        {
            this.Id = id;
            // to ensure "mode" is required (not null)
            if (mode == null)
            {
                throw new ArgumentNullException("mode is a required property for ModGlossaryViewGlossaryRequest and cannot be null");
            }
            this.Mode = mode;
        }

        /// <summary>
        /// Glossary instance ID
        /// </summary>
        /// <value>Glossary instance ID</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public int Id { get; set; }

        /// <summary>
        /// The mode in which the glossary is viewed
        /// </summary>
        /// <value>The mode in which the glossary is viewed</value>
        [DataMember(Name = "mode", IsRequired = true, EmitDefaultValue = true)]
        public string Mode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModGlossaryViewGlossaryRequest {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Mode: ").Append(Mode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
