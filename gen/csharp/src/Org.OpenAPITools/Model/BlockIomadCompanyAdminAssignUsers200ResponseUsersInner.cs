/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// BlockIomadCompanyAdminAssignUsers200ResponseUsersInner
    /// </summary>
    [DataContract(Name = "block_iomad_company_admin_assign_users_200_response_users_inner")]
    public partial class BlockIomadCompanyAdminAssignUsers200ResponseUsersInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BlockIomadCompanyAdminAssignUsers200ResponseUsersInner" /> class.
        /// </summary>
        /// <param name="companyid">Company ID (default to null).</param>
        /// <param name="message">Failure message (default to &quot;null&quot;).</param>
        /// <param name="result">Success or failure (default to null).</param>
        /// <param name="userid">Department ID (default to null).</param>
        public BlockIomadCompanyAdminAssignUsers200ResponseUsersInner(int companyid = null, string message = @"null", bool result = null, int userid = null)
        {
            this.Companyid = companyid;
            // use default value if no "message" provided
            this.Message = message ?? @"null";
            this.Result = result;
            this.Userid = userid;
        }

        /// <summary>
        /// Company ID
        /// </summary>
        /// <value>Company ID</value>
        [DataMember(Name = "companyid", EmitDefaultValue = false)]
        public int Companyid { get; set; }

        /// <summary>
        /// Failure message
        /// </summary>
        /// <value>Failure message</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Success or failure
        /// </summary>
        /// <value>Success or failure</value>
        [DataMember(Name = "result", EmitDefaultValue = true)]
        public bool Result { get; set; }

        /// <summary>
        /// Department ID
        /// </summary>
        /// <value>Department ID</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BlockIomadCompanyAdminAssignUsers200ResponseUsersInner {\n");
            sb.Append("  Companyid: ").Append(Companyid).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
