/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// EnrolMetaAddInstancesRequestInstancesInner
    /// </summary>
    [DataContract(Name = "enrol_meta_add_instances_request_instances_inner")]
    public partial class EnrolMetaAddInstancesRequestInstancesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EnrolMetaAddInstancesRequestInstancesInner" /> class.
        /// </summary>
        /// <param name="courseid">ID of the course where meta enrolment is linked to. (default to &quot;null&quot;).</param>
        /// <param name="creategroup">Creates group in meta course named after linked course and puts all enrolled users in this group (default to false).</param>
        /// <param name="metacourseid">ID of the course where meta enrolment is added. (default to null).</param>
        public EnrolMetaAddInstancesRequestInstancesInner(string courseid = @"null", bool creategroup = false, int metacourseid = null)
        {
            // use default value if no "courseid" provided
            this.Courseid = courseid ?? @"null";
            this.Creategroup = creategroup;
            this.Metacourseid = metacourseid;
        }

        /// <summary>
        /// ID of the course where meta enrolment is linked to.
        /// </summary>
        /// <value>ID of the course where meta enrolment is linked to.</value>
        [DataMember(Name = "courseid", EmitDefaultValue = false)]
        public string Courseid { get; set; }

        /// <summary>
        /// Creates group in meta course named after linked course and puts all enrolled users in this group
        /// </summary>
        /// <value>Creates group in meta course named after linked course and puts all enrolled users in this group</value>
        [DataMember(Name = "creategroup", EmitDefaultValue = true)]
        public bool Creategroup { get; set; }

        /// <summary>
        /// ID of the course where meta enrolment is added.
        /// </summary>
        /// <value>ID of the course where meta enrolment is added.</value>
        [DataMember(Name = "metacourseid", EmitDefaultValue = false)]
        public int Metacourseid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EnrolMetaAddInstancesRequestInstancesInner {\n");
            sb.Append("  Courseid: ").Append(Courseid).Append("\n");
            sb.Append("  Creategroup: ").Append(Creategroup).Append("\n");
            sb.Append("  Metacourseid: ").Append(Metacourseid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
