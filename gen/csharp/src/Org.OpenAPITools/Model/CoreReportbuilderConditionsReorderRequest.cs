/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreReportbuilderConditionsReorderRequest
    /// </summary>
    [DataContract(Name = "core_reportbuilder_conditions_reorder_request")]
    public partial class CoreReportbuilderConditionsReorderRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreReportbuilderConditionsReorderRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreReportbuilderConditionsReorderRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreReportbuilderConditionsReorderRequest" /> class.
        /// </summary>
        /// <param name="conditionid">Condition ID (required).</param>
        /// <param name="position">New condition position (required) (default to null).</param>
        /// <param name="reportid">Report ID (required).</param>
        public CoreReportbuilderConditionsReorderRequest(int conditionid = default(int), int position = null, int reportid = default(int))
        {
            this.Conditionid = conditionid;
            this.Position = position;
            this.Reportid = reportid;
        }

        /// <summary>
        /// Condition ID
        /// </summary>
        /// <value>Condition ID</value>
        [DataMember(Name = "conditionid", IsRequired = true, EmitDefaultValue = true)]
        public int Conditionid { get; set; }

        /// <summary>
        /// New condition position
        /// </summary>
        /// <value>New condition position</value>
        [DataMember(Name = "position", IsRequired = true, EmitDefaultValue = true)]
        public int Position { get; set; }

        /// <summary>
        /// Report ID
        /// </summary>
        /// <value>Report ID</value>
        [DataMember(Name = "reportid", IsRequired = true, EmitDefaultValue = true)]
        public int Reportid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreReportbuilderConditionsReorderRequest {\n");
            sb.Append("  Conditionid: ").Append(Conditionid).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  Reportid: ").Append(Reportid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
