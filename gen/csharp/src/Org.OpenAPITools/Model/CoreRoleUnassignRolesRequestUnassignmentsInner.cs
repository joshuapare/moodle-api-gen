/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreRoleUnassignRolesRequestUnassignmentsInner
    /// </summary>
    [DataContract(Name = "core_role_unassign_roles_request_unassignments_inner")]
    public partial class CoreRoleUnassignRolesRequestUnassignmentsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreRoleUnassignRolesRequestUnassignmentsInner" /> class.
        /// </summary>
        /// <param name="contextid">The context to unassign the user role from (default to null).</param>
        /// <param name="contextlevel">The context level to unassign the user role in +                                    (block, course, coursecat, system, user, module) (default to &quot;null&quot;).</param>
        /// <param name="instanceid">The Instance id of item where the role needs to be unassigned (default to null).</param>
        /// <param name="roleid">Role to assign to the user.</param>
        /// <param name="userid">The user that is going to be assigned.</param>
        public CoreRoleUnassignRolesRequestUnassignmentsInner(int contextid = null, string contextlevel = @"null", int instanceid = null, int roleid = default(int), int userid = default(int))
        {
            this.Contextid = contextid;
            // use default value if no "contextlevel" provided
            this.Contextlevel = contextlevel ?? @"null";
            this.Instanceid = instanceid;
            this.Roleid = roleid;
            this.Userid = userid;
        }

        /// <summary>
        /// The context to unassign the user role from
        /// </summary>
        /// <value>The context to unassign the user role from</value>
        [DataMember(Name = "contextid", EmitDefaultValue = false)]
        public int Contextid { get; set; }

        /// <summary>
        /// The context level to unassign the user role in +                                    (block, course, coursecat, system, user, module)
        /// </summary>
        /// <value>The context level to unassign the user role in +                                    (block, course, coursecat, system, user, module)</value>
        [DataMember(Name = "contextlevel", EmitDefaultValue = false)]
        public string Contextlevel { get; set; }

        /// <summary>
        /// The Instance id of item where the role needs to be unassigned
        /// </summary>
        /// <value>The Instance id of item where the role needs to be unassigned</value>
        [DataMember(Name = "instanceid", EmitDefaultValue = false)]
        public int Instanceid { get; set; }

        /// <summary>
        /// Role to assign to the user
        /// </summary>
        /// <value>Role to assign to the user</value>
        [DataMember(Name = "roleid", EmitDefaultValue = false)]
        public int Roleid { get; set; }

        /// <summary>
        /// The user that is going to be assigned
        /// </summary>
        /// <value>The user that is going to be assigned</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreRoleUnassignRolesRequestUnassignmentsInner {\n");
            sb.Append("  Contextid: ").Append(Contextid).Append("\n");
            sb.Append("  Contextlevel: ").Append(Contextlevel).Append("\n");
            sb.Append("  Instanceid: ").Append(Instanceid).Append("\n");
            sb.Append("  Roleid: ").Append(Roleid).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
