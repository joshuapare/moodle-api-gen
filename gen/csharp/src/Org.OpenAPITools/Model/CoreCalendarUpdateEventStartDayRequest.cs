/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreCalendarUpdateEventStartDayRequest
    /// </summary>
    [DataContract(Name = "core_calendar_update_event_start_day_request")]
    public partial class CoreCalendarUpdateEventStartDayRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCalendarUpdateEventStartDayRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreCalendarUpdateEventStartDayRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCalendarUpdateEventStartDayRequest" /> class.
        /// </summary>
        /// <param name="daytimestamp">Timestamp for the new start day (required) (default to null).</param>
        /// <param name="eventid">Id of event to be updated (required) (default to null).</param>
        public CoreCalendarUpdateEventStartDayRequest(int daytimestamp = null, int eventid = null)
        {
            this.Daytimestamp = daytimestamp;
            this.Eventid = eventid;
        }

        /// <summary>
        /// Timestamp for the new start day
        /// </summary>
        /// <value>Timestamp for the new start day</value>
        [DataMember(Name = "daytimestamp", IsRequired = true, EmitDefaultValue = true)]
        public int Daytimestamp { get; set; }

        /// <summary>
        /// Id of event to be updated
        /// </summary>
        /// <value>Id of event to be updated</value>
        [DataMember(Name = "eventid", IsRequired = true, EmitDefaultValue = true)]
        public int Eventid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCalendarUpdateEventStartDayRequest {\n");
            sb.Append("  Daytimestamp: ").Append(Daytimestamp).Append("\n");
            sb.Append("  Eventid: ").Append(Eventid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
