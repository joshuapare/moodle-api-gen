/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ToolMoodlenetSearchCourses200ResponseCoursesInner
    /// </summary>
    [DataContract(Name = "tool_moodlenet_search_courses_200_response_courses_inner")]
    public partial class ToolMoodlenetSearchCourses200ResponseCoursesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolMoodlenetSearchCourses200ResponseCoursesInner" /> class.
        /// </summary>
        /// <param name="coursecategory">Category name (default to &quot;null&quot;).</param>
        /// <param name="courseimage">course image (default to &quot;null&quot;).</param>
        /// <param name="fullname">course full name.</param>
        /// <param name="hidden">is the course visible (default to null).</param>
        /// <param name="id">course id.</param>
        /// <param name="viewurl">Next step of import (default to &quot;null&quot;).</param>
        public ToolMoodlenetSearchCourses200ResponseCoursesInner(string coursecategory = @"null", string courseimage = @"null", string fullname = default(string), int hidden = null, int id = default(int), string viewurl = @"null")
        {
            // use default value if no "coursecategory" provided
            this.Coursecategory = coursecategory ?? @"null";
            // use default value if no "courseimage" provided
            this.Courseimage = courseimage ?? @"null";
            this.Fullname = fullname;
            this.Hidden = hidden;
            this.Id = id;
            // use default value if no "viewurl" provided
            this.Viewurl = viewurl ?? @"null";
        }

        /// <summary>
        /// Category name
        /// </summary>
        /// <value>Category name</value>
        [DataMember(Name = "coursecategory", EmitDefaultValue = false)]
        public string Coursecategory { get; set; }

        /// <summary>
        /// course image
        /// </summary>
        /// <value>course image</value>
        [DataMember(Name = "courseimage", EmitDefaultValue = false)]
        public string Courseimage { get; set; }

        /// <summary>
        /// course full name
        /// </summary>
        /// <value>course full name</value>
        [DataMember(Name = "fullname", EmitDefaultValue = false)]
        public string Fullname { get; set; }

        /// <summary>
        /// is the course visible
        /// </summary>
        /// <value>is the course visible</value>
        [DataMember(Name = "hidden", EmitDefaultValue = false)]
        public int Hidden { get; set; }

        /// <summary>
        /// course id
        /// </summary>
        /// <value>course id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Next step of import
        /// </summary>
        /// <value>Next step of import</value>
        [DataMember(Name = "viewurl", EmitDefaultValue = false)]
        public string Viewurl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToolMoodlenetSearchCourses200ResponseCoursesInner {\n");
            sb.Append("  Coursecategory: ").Append(Coursecategory).Append("\n");
            sb.Append("  Courseimage: ").Append(Courseimage).Append("\n");
            sb.Append("  Fullname: ").Append(Fullname).Append("\n");
            sb.Append("  Hidden: ").Append(Hidden).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Viewurl: ").Append(Viewurl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
