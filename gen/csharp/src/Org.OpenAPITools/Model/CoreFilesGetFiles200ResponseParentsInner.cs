/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreFilesGetFiles200ResponseParentsInner
    /// </summary>
    [DataContract(Name = "core_files_get_files_200_response_parents_inner")]
    public partial class CoreFilesGetFiles200ResponseParentsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreFilesGetFiles200ResponseParentsInner" /> class.
        /// </summary>
        /// <param name="component">component.</param>
        /// <param name="contextid">contextid.</param>
        /// <param name="filearea">filearea.</param>
        /// <param name="filename">filename.</param>
        /// <param name="filepath">filepath.</param>
        /// <param name="itemid">itemid.</param>
        public CoreFilesGetFiles200ResponseParentsInner(string component = default(string), int contextid = default(int), string filearea = default(string), string filename = default(string), string filepath = default(string), int itemid = default(int))
        {
            this.Component = component;
            this.Contextid = contextid;
            this.Filearea = filearea;
            this.Filename = filename;
            this.Filepath = filepath;
            this.Itemid = itemid;
        }

        /// <summary>
        /// Gets or Sets Component
        /// </summary>
        [DataMember(Name = "component", EmitDefaultValue = false)]
        public string Component { get; set; }

        /// <summary>
        /// Gets or Sets Contextid
        /// </summary>
        [DataMember(Name = "contextid", EmitDefaultValue = false)]
        public int Contextid { get; set; }

        /// <summary>
        /// Gets or Sets Filearea
        /// </summary>
        [DataMember(Name = "filearea", EmitDefaultValue = false)]
        public string Filearea { get; set; }

        /// <summary>
        /// Gets or Sets Filename
        /// </summary>
        [DataMember(Name = "filename", EmitDefaultValue = false)]
        public string Filename { get; set; }

        /// <summary>
        /// Gets or Sets Filepath
        /// </summary>
        [DataMember(Name = "filepath", EmitDefaultValue = false)]
        public string Filepath { get; set; }

        /// <summary>
        /// Gets or Sets Itemid
        /// </summary>
        [DataMember(Name = "itemid", EmitDefaultValue = false)]
        public int Itemid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreFilesGetFiles200ResponseParentsInner {\n");
            sb.Append("  Component: ").Append(Component).Append("\n");
            sb.Append("  Contextid: ").Append(Contextid).Append("\n");
            sb.Append("  Filearea: ").Append(Filearea).Append("\n");
            sb.Append("  Filename: ").Append(Filename).Append("\n");
            sb.Append("  Filepath: ").Append(Filepath).Append("\n");
            sb.Append("  Itemid: ").Append(Itemid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
