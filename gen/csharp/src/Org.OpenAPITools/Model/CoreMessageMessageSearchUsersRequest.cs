/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreMessageMessageSearchUsersRequest
    /// </summary>
    [DataContract(Name = "core_message_message_search_users_request")]
    public partial class CoreMessageMessageSearchUsersRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreMessageMessageSearchUsersRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreMessageMessageSearchUsersRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreMessageMessageSearchUsersRequest" /> class.
        /// </summary>
        /// <param name="limitfrom">Limit from (default to 0).</param>
        /// <param name="limitnum">Limit number (default to 0).</param>
        /// <param name="search">The string being searched (required).</param>
        /// <param name="userid">The id of the user who is performing the search (required).</param>
        public CoreMessageMessageSearchUsersRequest(int limitfrom = 0, int limitnum = 0, string search = default(string), int userid = default(int))
        {
            // to ensure "search" is required (not null)
            if (search == null)
            {
                throw new ArgumentNullException("search is a required property for CoreMessageMessageSearchUsersRequest and cannot be null");
            }
            this.Search = search;
            this.Userid = userid;
            this.Limitfrom = limitfrom;
            this.Limitnum = limitnum;
        }

        /// <summary>
        /// Limit from
        /// </summary>
        /// <value>Limit from</value>
        [DataMember(Name = "limitfrom", EmitDefaultValue = false)]
        public int Limitfrom { get; set; }

        /// <summary>
        /// Limit number
        /// </summary>
        /// <value>Limit number</value>
        [DataMember(Name = "limitnum", EmitDefaultValue = false)]
        public int Limitnum { get; set; }

        /// <summary>
        /// The string being searched
        /// </summary>
        /// <value>The string being searched</value>
        [DataMember(Name = "search", IsRequired = true, EmitDefaultValue = true)]
        public string Search { get; set; }

        /// <summary>
        /// The id of the user who is performing the search
        /// </summary>
        /// <value>The id of the user who is performing the search</value>
        [DataMember(Name = "userid", IsRequired = true, EmitDefaultValue = true)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreMessageMessageSearchUsersRequest {\n");
            sb.Append("  Limitfrom: ").Append(Limitfrom).Append("\n");
            sb.Append("  Limitnum: ").Append(Limitnum).Append("\n");
            sb.Append("  Search: ").Append(Search).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
