/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInner
    /// </summary>
    [DataContract(Name = "gradingform_rubric_grader_gradingpanel_fetch_200_response_grade_criteria_inner")]
    public partial class GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInner" /> class.
        /// </summary>
        /// <param name="description">Description of the Criteria (default to &quot;null&quot;).</param>
        /// <param name="id">ID of the Criteria (default to null).</param>
        /// <param name="levels">levels.</param>
        /// <param name="remark">Any remarks for this criterion for the user being assessed.</param>
        public GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInner(string description = @"null", int id = null, List<GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInnerLevelsInner> levels = default(List<GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInnerLevelsInner>), string remark = default(string))
        {
            // use default value if no "description" provided
            this.Description = description ?? @"null";
            this.Id = id;
            this.Levels = levels;
            this.Remark = remark;
        }

        /// <summary>
        /// Description of the Criteria
        /// </summary>
        /// <value>Description of the Criteria</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// ID of the Criteria
        /// </summary>
        /// <value>ID of the Criteria</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Levels
        /// </summary>
        [DataMember(Name = "levels", EmitDefaultValue = false)]
        public List<GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInnerLevelsInner> Levels { get; set; }

        /// <summary>
        /// Any remarks for this criterion for the user being assessed
        /// </summary>
        /// <value>Any remarks for this criterion for the user being assessed</value>
        [DataMember(Name = "remark", EmitDefaultValue = false)]
        public string Remark { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GradingformRubricGraderGradingpanelFetch200ResponseGradeCriteriaInner {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Levels: ").Append(Levels).Append("\n");
            sb.Append("  Remark: ").Append(Remark).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
