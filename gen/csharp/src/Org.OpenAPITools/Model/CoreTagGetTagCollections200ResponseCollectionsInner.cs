/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreTagGetTagCollections200ResponseCollectionsInner
    /// </summary>
    [DataContract(Name = "core_tag_get_tag_collections_200_response_collections_inner")]
    public partial class CoreTagGetTagCollections200ResponseCollectionsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreTagGetTagCollections200ResponseCollectionsInner" /> class.
        /// </summary>
        /// <param name="component">Component the collection is related to. (default to &quot;null&quot;).</param>
        /// <param name="customurl">Custom URL for the tag page instead of /tag/index.php. (default to &quot;null&quot;).</param>
        /// <param name="id">Collection id. (default to null).</param>
        /// <param name="isdefault">Whether is the default collection. (default to false).</param>
        /// <param name="name">Collection name. (default to &quot;null&quot;).</param>
        /// <param name="searchable">Whether the tag collection is searchable. (default to true).</param>
        /// <param name="sortorder">Collection ordering in the list. (default to null).</param>
        public CoreTagGetTagCollections200ResponseCollectionsInner(string component = @"null", string customurl = @"null", int id = null, bool isdefault = false, string name = @"null", bool searchable = true, int sortorder = null)
        {
            // use default value if no "component" provided
            this.Component = component ?? @"null";
            // use default value if no "customurl" provided
            this.Customurl = customurl ?? @"null";
            this.Id = id;
            this.Isdefault = isdefault;
            // use default value if no "name" provided
            this.Name = name ?? @"null";
            this.Searchable = searchable;
            this.Sortorder = sortorder;
        }

        /// <summary>
        /// Component the collection is related to.
        /// </summary>
        /// <value>Component the collection is related to.</value>
        [DataMember(Name = "component", EmitDefaultValue = false)]
        public string Component { get; set; }

        /// <summary>
        /// Custom URL for the tag page instead of /tag/index.php.
        /// </summary>
        /// <value>Custom URL for the tag page instead of /tag/index.php.</value>
        [DataMember(Name = "customurl", EmitDefaultValue = false)]
        public string Customurl { get; set; }

        /// <summary>
        /// Collection id.
        /// </summary>
        /// <value>Collection id.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Whether is the default collection.
        /// </summary>
        /// <value>Whether is the default collection.</value>
        [DataMember(Name = "isdefault", EmitDefaultValue = true)]
        public bool Isdefault { get; set; }

        /// <summary>
        /// Collection name.
        /// </summary>
        /// <value>Collection name.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Whether the tag collection is searchable.
        /// </summary>
        /// <value>Whether the tag collection is searchable.</value>
        [DataMember(Name = "searchable", EmitDefaultValue = true)]
        public bool Searchable { get; set; }

        /// <summary>
        /// Collection ordering in the list.
        /// </summary>
        /// <value>Collection ordering in the list.</value>
        [DataMember(Name = "sortorder", EmitDefaultValue = false)]
        public int Sortorder { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreTagGetTagCollections200ResponseCollectionsInner {\n");
            sb.Append("  Component: ").Append(Component).Append("\n");
            sb.Append("  Customurl: ").Append(Customurl).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Isdefault: ").Append(Isdefault).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Searchable: ").Append(Searchable).Append("\n");
            sb.Append("  Sortorder: ").Append(Sortorder).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
