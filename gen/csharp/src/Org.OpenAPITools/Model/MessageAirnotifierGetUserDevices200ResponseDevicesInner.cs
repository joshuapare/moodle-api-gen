/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// MessageAirnotifierGetUserDevices200ResponseDevicesInner
    /// </summary>
    [DataContract(Name = "message_airnotifier_get_user_devices_200_response_devices_inner")]
    public partial class MessageAirnotifierGetUserDevices200ResponseDevicesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageAirnotifierGetUserDevices200ResponseDevicesInner" /> class.
        /// </summary>
        /// <param name="appid">The app id, something like com.moodle.moodlemobile.</param>
        /// <param name="enable">Whether the device is enabled or not (default to null).</param>
        /// <param name="id">Device id (in the message_airnotifier table) (default to null).</param>
        /// <param name="model">The device model &#39;Nexus4&#39; or &#39;iPad1,1&#39; etc. (default to &quot;null&quot;).</param>
        /// <param name="name">The device name, &#39;occam&#39; or &#39;iPhone&#39; etc. (default to &quot;null&quot;).</param>
        /// <param name="platform">The device platform &#39;iOS&#39; or &#39;Android&#39; etc. (default to &quot;null&quot;).</param>
        /// <param name="pushid">The device PUSH token/key/identifier/registration id (default to &quot;null&quot;).</param>
        /// <param name="timecreated">Time created.</param>
        /// <param name="timemodified">Time modified (default to null).</param>
        /// <param name="uuid">The device UUID (default to &quot;null&quot;).</param>
        /// <param name="varVersion">The device version &#39;6.1.2&#39; or &#39;4.2.2&#39; etc. (default to &quot;null&quot;).</param>
        public MessageAirnotifierGetUserDevices200ResponseDevicesInner(string appid = default(string), int enable = null, int id = null, string model = @"null", string name = @"null", string platform = @"null", string pushid = @"null", int timecreated = default(int), int timemodified = null, string uuid = @"null", string varVersion = @"null")
        {
            this.Appid = appid;
            this.Enable = enable;
            this.Id = id;
            // use default value if no "model" provided
            this.Model = model ?? @"null";
            // use default value if no "name" provided
            this.Name = name ?? @"null";
            // use default value if no "platform" provided
            this.Platform = platform ?? @"null";
            // use default value if no "pushid" provided
            this.Pushid = pushid ?? @"null";
            this.Timecreated = timecreated;
            this.Timemodified = timemodified;
            // use default value if no "uuid" provided
            this.Uuid = uuid ?? @"null";
            // use default value if no "varVersion" provided
            this.VarVersion = varVersion ?? @"null";
        }

        /// <summary>
        /// The app id, something like com.moodle.moodlemobile
        /// </summary>
        /// <value>The app id, something like com.moodle.moodlemobile</value>
        [DataMember(Name = "appid", EmitDefaultValue = false)]
        public string Appid { get; set; }

        /// <summary>
        /// Whether the device is enabled or not
        /// </summary>
        /// <value>Whether the device is enabled or not</value>
        [DataMember(Name = "enable", EmitDefaultValue = false)]
        public int Enable { get; set; }

        /// <summary>
        /// Device id (in the message_airnotifier table)
        /// </summary>
        /// <value>Device id (in the message_airnotifier table)</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// The device model &#39;Nexus4&#39; or &#39;iPad1,1&#39; etc.
        /// </summary>
        /// <value>The device model &#39;Nexus4&#39; or &#39;iPad1,1&#39; etc.</value>
        [DataMember(Name = "model", EmitDefaultValue = false)]
        public string Model { get; set; }

        /// <summary>
        /// The device name, &#39;occam&#39; or &#39;iPhone&#39; etc.
        /// </summary>
        /// <value>The device name, &#39;occam&#39; or &#39;iPhone&#39; etc.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The device platform &#39;iOS&#39; or &#39;Android&#39; etc.
        /// </summary>
        /// <value>The device platform &#39;iOS&#39; or &#39;Android&#39; etc.</value>
        [DataMember(Name = "platform", EmitDefaultValue = false)]
        public string Platform { get; set; }

        /// <summary>
        /// The device PUSH token/key/identifier/registration id
        /// </summary>
        /// <value>The device PUSH token/key/identifier/registration id</value>
        [DataMember(Name = "pushid", EmitDefaultValue = false)]
        public string Pushid { get; set; }

        /// <summary>
        /// Time created
        /// </summary>
        /// <value>Time created</value>
        [DataMember(Name = "timecreated", EmitDefaultValue = false)]
        public int Timecreated { get; set; }

        /// <summary>
        /// Time modified
        /// </summary>
        /// <value>Time modified</value>
        [DataMember(Name = "timemodified", EmitDefaultValue = false)]
        public int Timemodified { get; set; }

        /// <summary>
        /// The device UUID
        /// </summary>
        /// <value>The device UUID</value>
        [DataMember(Name = "uuid", EmitDefaultValue = false)]
        public string Uuid { get; set; }

        /// <summary>
        /// The device version &#39;6.1.2&#39; or &#39;4.2.2&#39; etc.
        /// </summary>
        /// <value>The device version &#39;6.1.2&#39; or &#39;4.2.2&#39; etc.</value>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MessageAirnotifierGetUserDevices200ResponseDevicesInner {\n");
            sb.Append("  Appid: ").Append(Appid).Append("\n");
            sb.Append("  Enable: ").Append(Enable).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Model: ").Append(Model).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  Pushid: ").Append(Pushid).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
