/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModGlossaryUpdateEntryRequest
    /// </summary>
    [DataContract(Name = "mod_glossary_update_entry_request")]
    public partial class ModGlossaryUpdateEntryRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModGlossaryUpdateEntryRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModGlossaryUpdateEntryRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModGlossaryUpdateEntryRequest" /> class.
        /// </summary>
        /// <param name="concept">Glossary concept (required).</param>
        /// <param name="definition">Glossary concept definition (required).</param>
        /// <param name="definitionformat">definition format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN) (required).</param>
        /// <param name="entryid">Glossary entry id to update (required).</param>
        /// <param name="options">options.</param>
        public ModGlossaryUpdateEntryRequest(string concept = default(string), string definition = default(string), int definitionformat = default(int), int entryid = default(int), List<ModGlossaryUpdateEntryRequestOptionsInner> options = default(List<ModGlossaryUpdateEntryRequestOptionsInner>))
        {
            // to ensure "concept" is required (not null)
            if (concept == null)
            {
                throw new ArgumentNullException("concept is a required property for ModGlossaryUpdateEntryRequest and cannot be null");
            }
            this.Concept = concept;
            // to ensure "definition" is required (not null)
            if (definition == null)
            {
                throw new ArgumentNullException("definition is a required property for ModGlossaryUpdateEntryRequest and cannot be null");
            }
            this.Definition = definition;
            this.Definitionformat = definitionformat;
            this.Entryid = entryid;
            this.Options = options;
        }

        /// <summary>
        /// Glossary concept
        /// </summary>
        /// <value>Glossary concept</value>
        [DataMember(Name = "concept", IsRequired = true, EmitDefaultValue = true)]
        public string Concept { get; set; }

        /// <summary>
        /// Glossary concept definition
        /// </summary>
        /// <value>Glossary concept definition</value>
        [DataMember(Name = "definition", IsRequired = true, EmitDefaultValue = true)]
        public string Definition { get; set; }

        /// <summary>
        /// definition format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
        /// </summary>
        /// <value>definition format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)</value>
        [DataMember(Name = "definitionformat", IsRequired = true, EmitDefaultValue = true)]
        public int Definitionformat { get; set; }

        /// <summary>
        /// Glossary entry id to update
        /// </summary>
        /// <value>Glossary entry id to update</value>
        [DataMember(Name = "entryid", IsRequired = true, EmitDefaultValue = true)]
        public int Entryid { get; set; }

        /// <summary>
        /// Gets or Sets Options
        /// </summary>
        [DataMember(Name = "options", EmitDefaultValue = false)]
        public List<ModGlossaryUpdateEntryRequestOptionsInner> Options { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModGlossaryUpdateEntryRequest {\n");
            sb.Append("  Concept: ").Append(Concept).Append("\n");
            sb.Append("  Definition: ").Append(Definition).Append("\n");
            sb.Append("  Definitionformat: ").Append(Definitionformat).Append("\n");
            sb.Append("  Entryid: ").Append(Entryid).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
