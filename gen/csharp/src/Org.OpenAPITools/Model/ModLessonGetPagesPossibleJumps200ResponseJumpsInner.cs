/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Jump for a page answer
    /// </summary>
    [DataContract(Name = "mod_lesson_get_pages_possible_jumps_200_response_jumps_inner")]
    public partial class ModLessonGetPagesPossibleJumps200ResponseJumpsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModLessonGetPagesPossibleJumps200ResponseJumpsInner" /> class.
        /// </summary>
        /// <param name="answerid">The answer id (default to null).</param>
        /// <param name="calculatedjump">The real page id (or EOL) to jump (default to null).</param>
        /// <param name="jumpto">The jump (page id or type of jump) (default to null).</param>
        /// <param name="pageid">The page id (default to null).</param>
        public ModLessonGetPagesPossibleJumps200ResponseJumpsInner(int answerid = null, int calculatedjump = null, int jumpto = null, int pageid = null)
        {
            this.Answerid = answerid;
            this.Calculatedjump = calculatedjump;
            this.Jumpto = jumpto;
            this.Pageid = pageid;
        }

        /// <summary>
        /// The answer id
        /// </summary>
        /// <value>The answer id</value>
        [DataMember(Name = "answerid", EmitDefaultValue = false)]
        public int Answerid { get; set; }

        /// <summary>
        /// The real page id (or EOL) to jump
        /// </summary>
        /// <value>The real page id (or EOL) to jump</value>
        [DataMember(Name = "calculatedjump", EmitDefaultValue = false)]
        public int Calculatedjump { get; set; }

        /// <summary>
        /// The jump (page id or type of jump)
        /// </summary>
        /// <value>The jump (page id or type of jump)</value>
        [DataMember(Name = "jumpto", EmitDefaultValue = false)]
        public int Jumpto { get; set; }

        /// <summary>
        /// The page id
        /// </summary>
        /// <value>The page id</value>
        [DataMember(Name = "pageid", EmitDefaultValue = false)]
        public int Pageid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModLessonGetPagesPossibleJumps200ResponseJumpsInner {\n");
            sb.Append("  Answerid: ").Append(Answerid).Append("\n");
            sb.Append("  Calculatedjump: ").Append(Calculatedjump).Append("\n");
            sb.Append("  Jumpto: ").Append(Jumpto).Append("\n");
            sb.Append("  Pageid: ").Append(Pageid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
