/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ToolIomadpolicyGetIomadpolicyVersion200ResponseResultIomadpolicy
    /// </summary>
    [DataContract(Name = "tool_iomadpolicy_get_iomadpolicy_version_200_response_result_iomadpolicy")]
    public partial class ToolIomadpolicyGetIomadpolicyVersion200ResponseResultIomadpolicy : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolIomadpolicyGetIomadpolicyVersion200ResponseResultIomadpolicy" /> class.
        /// </summary>
        /// <param name="content">The iomadpolicy version content (default to &quot;null&quot;).</param>
        /// <param name="name">The iomadpolicy version name (default to &quot;null&quot;).</param>
        /// <param name="versionid">The iomadpolicy version id (default to null).</param>
        public ToolIomadpolicyGetIomadpolicyVersion200ResponseResultIomadpolicy(string content = @"null", string name = @"null", int versionid = null)
        {
            // use default value if no "content" provided
            this.Content = content ?? @"null";
            // use default value if no "name" provided
            this.Name = name ?? @"null";
            this.Versionid = versionid;
        }

        /// <summary>
        /// The iomadpolicy version content
        /// </summary>
        /// <value>The iomadpolicy version content</value>
        [DataMember(Name = "content", EmitDefaultValue = false)]
        public string Content { get; set; }

        /// <summary>
        /// The iomadpolicy version name
        /// </summary>
        /// <value>The iomadpolicy version name</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The iomadpolicy version id
        /// </summary>
        /// <value>The iomadpolicy version id</value>
        [DataMember(Name = "versionid", EmitDefaultValue = false)]
        public int Versionid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToolIomadpolicyGetIomadpolicyVersion200ResponseResultIomadpolicy {\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Versionid: ").Append(Versionid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
