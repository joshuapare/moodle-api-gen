/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// BlockIomadCompanyAdminGetCompanies200ResponseCompaniesInner
    /// </summary>
    [DataContract(Name = "block_iomad_company_admin_get_companies_200_response_companies_inner")]
    public partial class BlockIomadCompanyAdminGetCompanies200ResponseCompaniesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BlockIomadCompanyAdminGetCompanies200ResponseCompaniesInner" /> class.
        /// </summary>
        /// <param name="address">Company location address.</param>
        /// <param name="autosubscribe">User default forum auto-subscribe.</param>
        /// <param name="city">Company location city.</param>
        /// <param name="code">Compay code.</param>
        /// <param name="companyterminated">Company contract is terminated when &lt;&gt; 0 (default to 0).</param>
        /// <param name="country">Company location country.</param>
        /// <param name="custom1">Company custom 1.</param>
        /// <param name="custom2">Company custom 2.</param>
        /// <param name="custom3">Company custom 3.</param>
        /// <param name="customcss">Company custom css (default to &quot;&quot;).</param>
        /// <param name="ecommerce">Ecommerce is disabled when &#x3D; 0 (default to 0).</param>
        /// <param name="headingcolor">Company heading color (default to &quot;&quot;).</param>
        /// <param name="hostname">Company hostname (default to &quot;&quot;).</param>
        /// <param name="htmleditor">User default text editor.</param>
        /// <param name="id">Companid ID (default to null).</param>
        /// <param name="lang">User default language.</param>
        /// <param name="linkcolor">Company ink color (default to &quot;&quot;).</param>
        /// <param name="maildigest">User default digest type.</param>
        /// <param name="maildisplay">User default email display.</param>
        /// <param name="mailformat">User default email format.</param>
        /// <param name="maincolor">Company main color (default to &quot;&quot;).</param>
        /// <param name="maxusers">Company maximum number of users (default to 0).</param>
        /// <param name="name">Company long name.</param>
        /// <param name="parentid">ID of parent company (default to 0).</param>
        /// <param name="region">Company location region.</param>
        /// <param name="screenreader">User default screen reader.</param>
        /// <param name="shortname">Compay short name.</param>
        /// <param name="suspendafter">Number of seconds after termination date to suspend the company (default to 0).</param>
        /// <param name="suspended">Company is suspended when &lt;&gt; 0.</param>
        /// <param name="theme">Company theme (default to &quot;&quot;).</param>
        /// <param name="timezone">User default timezone.</param>
        /// <param name="trackforums">User default forum tracking.</param>
        /// <param name="validto">Contract termination date in unix timestamp.</param>
        public BlockIomadCompanyAdminGetCompanies200ResponseCompaniesInner(string address = default(string), int autosubscribe = default(int), string city = default(string), string code = default(string), int companyterminated = 0, string country = default(string), string custom1 = default(string), string custom2 = default(string), string custom3 = default(string), string customcss = @"", int ecommerce = 0, string headingcolor = @"", string hostname = @"", int htmleditor = default(int), int id = null, string lang = default(string), string linkcolor = @"", int maildigest = default(int), int maildisplay = default(int), int mailformat = default(int), string maincolor = @"", int maxusers = 0, string name = default(string), int parentid = 0, string region = default(string), int screenreader = default(int), string shortname = default(string), int suspendafter = 0, int suspended = default(int), string theme = @"", string timezone = default(string), int trackforums = default(int), int validto = default(int))
        {
            this.Address = address;
            this.Autosubscribe = autosubscribe;
            this.City = city;
            this.Code = code;
            this.Companyterminated = companyterminated;
            this.Country = country;
            this.Custom1 = custom1;
            this.Custom2 = custom2;
            this.Custom3 = custom3;
            // use default value if no "customcss" provided
            this.Customcss = customcss ?? @"";
            this.Ecommerce = ecommerce;
            // use default value if no "headingcolor" provided
            this.Headingcolor = headingcolor ?? @"";
            // use default value if no "hostname" provided
            this.Hostname = hostname ?? @"";
            this.Htmleditor = htmleditor;
            this.Id = id;
            this.Lang = lang;
            // use default value if no "linkcolor" provided
            this.Linkcolor = linkcolor ?? @"";
            this.Maildigest = maildigest;
            this.Maildisplay = maildisplay;
            this.Mailformat = mailformat;
            // use default value if no "maincolor" provided
            this.Maincolor = maincolor ?? @"";
            this.Maxusers = maxusers;
            this.Name = name;
            this.Parentid = parentid;
            this.Region = region;
            this.Screenreader = screenreader;
            this.Shortname = shortname;
            this.Suspendafter = suspendafter;
            this.Suspended = suspended;
            // use default value if no "theme" provided
            this.Theme = theme ?? @"";
            this.Timezone = timezone;
            this.Trackforums = trackforums;
            this.Validto = validto;
        }

        /// <summary>
        /// Company location address
        /// </summary>
        /// <value>Company location address</value>
        [DataMember(Name = "address", EmitDefaultValue = false)]
        public string Address { get; set; }

        /// <summary>
        /// User default forum auto-subscribe
        /// </summary>
        /// <value>User default forum auto-subscribe</value>
        [DataMember(Name = "autosubscribe", EmitDefaultValue = false)]
        public int Autosubscribe { get; set; }

        /// <summary>
        /// Company location city
        /// </summary>
        /// <value>Company location city</value>
        [DataMember(Name = "city", EmitDefaultValue = false)]
        public string City { get; set; }

        /// <summary>
        /// Compay code
        /// </summary>
        /// <value>Compay code</value>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public string Code { get; set; }

        /// <summary>
        /// Company contract is terminated when &lt;&gt; 0
        /// </summary>
        /// <value>Company contract is terminated when &lt;&gt; 0</value>
        [DataMember(Name = "companyterminated", EmitDefaultValue = false)]
        public int Companyterminated { get; set; }

        /// <summary>
        /// Company location country
        /// </summary>
        /// <value>Company location country</value>
        [DataMember(Name = "country", EmitDefaultValue = false)]
        public string Country { get; set; }

        /// <summary>
        /// Company custom 1
        /// </summary>
        /// <value>Company custom 1</value>
        [DataMember(Name = "custom1", EmitDefaultValue = false)]
        public string Custom1 { get; set; }

        /// <summary>
        /// Company custom 2
        /// </summary>
        /// <value>Company custom 2</value>
        [DataMember(Name = "custom2", EmitDefaultValue = false)]
        public string Custom2 { get; set; }

        /// <summary>
        /// Company custom 3
        /// </summary>
        /// <value>Company custom 3</value>
        [DataMember(Name = "custom3", EmitDefaultValue = false)]
        public string Custom3 { get; set; }

        /// <summary>
        /// Company custom css
        /// </summary>
        /// <value>Company custom css</value>
        [DataMember(Name = "customcss", EmitDefaultValue = false)]
        public string Customcss { get; set; }

        /// <summary>
        /// Ecommerce is disabled when &#x3D; 0
        /// </summary>
        /// <value>Ecommerce is disabled when &#x3D; 0</value>
        [DataMember(Name = "ecommerce", EmitDefaultValue = false)]
        public int Ecommerce { get; set; }

        /// <summary>
        /// Company heading color
        /// </summary>
        /// <value>Company heading color</value>
        [DataMember(Name = "headingcolor", EmitDefaultValue = false)]
        public string Headingcolor { get; set; }

        /// <summary>
        /// Company hostname
        /// </summary>
        /// <value>Company hostname</value>
        [DataMember(Name = "hostname", EmitDefaultValue = false)]
        public string Hostname { get; set; }

        /// <summary>
        /// User default text editor
        /// </summary>
        /// <value>User default text editor</value>
        [DataMember(Name = "htmleditor", EmitDefaultValue = false)]
        public int Htmleditor { get; set; }

        /// <summary>
        /// Companid ID
        /// </summary>
        /// <value>Companid ID</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// User default language
        /// </summary>
        /// <value>User default language</value>
        [DataMember(Name = "lang", EmitDefaultValue = false)]
        public string Lang { get; set; }

        /// <summary>
        /// Company ink color
        /// </summary>
        /// <value>Company ink color</value>
        [DataMember(Name = "linkcolor", EmitDefaultValue = false)]
        public string Linkcolor { get; set; }

        /// <summary>
        /// User default digest type
        /// </summary>
        /// <value>User default digest type</value>
        [DataMember(Name = "maildigest", EmitDefaultValue = false)]
        public int Maildigest { get; set; }

        /// <summary>
        /// User default email display
        /// </summary>
        /// <value>User default email display</value>
        [DataMember(Name = "maildisplay", EmitDefaultValue = false)]
        public int Maildisplay { get; set; }

        /// <summary>
        /// User default email format
        /// </summary>
        /// <value>User default email format</value>
        [DataMember(Name = "mailformat", EmitDefaultValue = false)]
        public int Mailformat { get; set; }

        /// <summary>
        /// Company main color
        /// </summary>
        /// <value>Company main color</value>
        [DataMember(Name = "maincolor", EmitDefaultValue = false)]
        public string Maincolor { get; set; }

        /// <summary>
        /// Company maximum number of users
        /// </summary>
        /// <value>Company maximum number of users</value>
        [DataMember(Name = "maxusers", EmitDefaultValue = false)]
        public int Maxusers { get; set; }

        /// <summary>
        /// Company long name
        /// </summary>
        /// <value>Company long name</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// ID of parent company
        /// </summary>
        /// <value>ID of parent company</value>
        [DataMember(Name = "parentid", EmitDefaultValue = false)]
        public int Parentid { get; set; }

        /// <summary>
        /// Company location region
        /// </summary>
        /// <value>Company location region</value>
        [DataMember(Name = "region", EmitDefaultValue = false)]
        public string Region { get; set; }

        /// <summary>
        /// User default screen reader
        /// </summary>
        /// <value>User default screen reader</value>
        [DataMember(Name = "screenreader", EmitDefaultValue = false)]
        public int Screenreader { get; set; }

        /// <summary>
        /// Compay short name
        /// </summary>
        /// <value>Compay short name</value>
        [DataMember(Name = "shortname", EmitDefaultValue = false)]
        public string Shortname { get; set; }

        /// <summary>
        /// Number of seconds after termination date to suspend the company
        /// </summary>
        /// <value>Number of seconds after termination date to suspend the company</value>
        [DataMember(Name = "suspendafter", EmitDefaultValue = false)]
        public int Suspendafter { get; set; }

        /// <summary>
        /// Company is suspended when &lt;&gt; 0
        /// </summary>
        /// <value>Company is suspended when &lt;&gt; 0</value>
        [DataMember(Name = "suspended", EmitDefaultValue = false)]
        public int Suspended { get; set; }

        /// <summary>
        /// Company theme
        /// </summary>
        /// <value>Company theme</value>
        [DataMember(Name = "theme", EmitDefaultValue = false)]
        public string Theme { get; set; }

        /// <summary>
        /// User default timezone
        /// </summary>
        /// <value>User default timezone</value>
        [DataMember(Name = "timezone", EmitDefaultValue = false)]
        public string Timezone { get; set; }

        /// <summary>
        /// User default forum tracking
        /// </summary>
        /// <value>User default forum tracking</value>
        [DataMember(Name = "trackforums", EmitDefaultValue = false)]
        public int Trackforums { get; set; }

        /// <summary>
        /// Contract termination date in unix timestamp
        /// </summary>
        /// <value>Contract termination date in unix timestamp</value>
        [DataMember(Name = "validto", EmitDefaultValue = false)]
        public int Validto { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BlockIomadCompanyAdminGetCompanies200ResponseCompaniesInner {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Autosubscribe: ").Append(Autosubscribe).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Companyterminated: ").Append(Companyterminated).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Custom1: ").Append(Custom1).Append("\n");
            sb.Append("  Custom2: ").Append(Custom2).Append("\n");
            sb.Append("  Custom3: ").Append(Custom3).Append("\n");
            sb.Append("  Customcss: ").Append(Customcss).Append("\n");
            sb.Append("  Ecommerce: ").Append(Ecommerce).Append("\n");
            sb.Append("  Headingcolor: ").Append(Headingcolor).Append("\n");
            sb.Append("  Hostname: ").Append(Hostname).Append("\n");
            sb.Append("  Htmleditor: ").Append(Htmleditor).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Lang: ").Append(Lang).Append("\n");
            sb.Append("  Linkcolor: ").Append(Linkcolor).Append("\n");
            sb.Append("  Maildigest: ").Append(Maildigest).Append("\n");
            sb.Append("  Maildisplay: ").Append(Maildisplay).Append("\n");
            sb.Append("  Mailformat: ").Append(Mailformat).Append("\n");
            sb.Append("  Maincolor: ").Append(Maincolor).Append("\n");
            sb.Append("  Maxusers: ").Append(Maxusers).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Parentid: ").Append(Parentid).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  Screenreader: ").Append(Screenreader).Append("\n");
            sb.Append("  Shortname: ").Append(Shortname).Append("\n");
            sb.Append("  Suspendafter: ").Append(Suspendafter).Append("\n");
            sb.Append("  Suspended: ").Append(Suspended).Append("\n");
            sb.Append("  Theme: ").Append(Theme).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  Trackforums: ").Append(Trackforums).Append("\n");
            sb.Append("  Validto: ").Append(Validto).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
