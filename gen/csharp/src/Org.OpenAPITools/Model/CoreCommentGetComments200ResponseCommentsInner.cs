/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// comment
    /// </summary>
    [DataContract(Name = "core_comment_get_comments_200_response_comments_inner")]
    public partial class CoreCommentGetComments200ResponseCommentsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCommentGetComments200ResponseCommentsInner" /> class.
        /// </summary>
        /// <param name="avatar">HTML user picture (default to &quot;null&quot;).</param>
        /// <param name="content">The content text formatted (default to &quot;null&quot;).</param>
        /// <param name="delete">Permission to delete&#x3D;true/false (default to null).</param>
        /// <param name="format">content format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN).</param>
        /// <param name="fullname">fullname (default to &quot;null&quot;).</param>
        /// <param name="id">Comment ID (default to null).</param>
        /// <param name="profileurl">URL profile (default to &quot;null&quot;).</param>
        /// <param name="strftimeformat">Time format (default to &quot;null&quot;).</param>
        /// <param name="time">Time in human format (default to &quot;null&quot;).</param>
        /// <param name="timecreated">Time created (timestamp) (default to null).</param>
        /// <param name="userid">User ID.</param>
        public CoreCommentGetComments200ResponseCommentsInner(string avatar = @"null", string content = @"null", bool delete = null, int format = default(int), string fullname = @"null", int id = null, string profileurl = @"null", string strftimeformat = @"null", string time = @"null", int timecreated = null, int userid = default(int))
        {
            // use default value if no "avatar" provided
            this.Avatar = avatar ?? @"null";
            // use default value if no "content" provided
            this.Content = content ?? @"null";
            this.Delete = delete;
            this.Format = format;
            // use default value if no "fullname" provided
            this.Fullname = fullname ?? @"null";
            this.Id = id;
            // use default value if no "profileurl" provided
            this.Profileurl = profileurl ?? @"null";
            // use default value if no "strftimeformat" provided
            this.Strftimeformat = strftimeformat ?? @"null";
            // use default value if no "time" provided
            this.Time = time ?? @"null";
            this.Timecreated = timecreated;
            this.Userid = userid;
        }

        /// <summary>
        /// HTML user picture
        /// </summary>
        /// <value>HTML user picture</value>
        [DataMember(Name = "avatar", EmitDefaultValue = false)]
        public string Avatar { get; set; }

        /// <summary>
        /// The content text formatted
        /// </summary>
        /// <value>The content text formatted</value>
        [DataMember(Name = "content", EmitDefaultValue = false)]
        public string Content { get; set; }

        /// <summary>
        /// Permission to delete&#x3D;true/false
        /// </summary>
        /// <value>Permission to delete&#x3D;true/false</value>
        [DataMember(Name = "delete", EmitDefaultValue = true)]
        public bool Delete { get; set; }

        /// <summary>
        /// content format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
        /// </summary>
        /// <value>content format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)</value>
        [DataMember(Name = "format", EmitDefaultValue = false)]
        public int Format { get; set; }

        /// <summary>
        /// fullname
        /// </summary>
        /// <value>fullname</value>
        [DataMember(Name = "fullname", EmitDefaultValue = false)]
        public string Fullname { get; set; }

        /// <summary>
        /// Comment ID
        /// </summary>
        /// <value>Comment ID</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// URL profile
        /// </summary>
        /// <value>URL profile</value>
        [DataMember(Name = "profileurl", EmitDefaultValue = false)]
        public string Profileurl { get; set; }

        /// <summary>
        /// Time format
        /// </summary>
        /// <value>Time format</value>
        [DataMember(Name = "strftimeformat", EmitDefaultValue = false)]
        public string Strftimeformat { get; set; }

        /// <summary>
        /// Time in human format
        /// </summary>
        /// <value>Time in human format</value>
        [DataMember(Name = "time", EmitDefaultValue = false)]
        public string Time { get; set; }

        /// <summary>
        /// Time created (timestamp)
        /// </summary>
        /// <value>Time created (timestamp)</value>
        [DataMember(Name = "timecreated", EmitDefaultValue = false)]
        public int Timecreated { get; set; }

        /// <summary>
        /// User ID
        /// </summary>
        /// <value>User ID</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCommentGetComments200ResponseCommentsInner {\n");
            sb.Append("  Avatar: ").Append(Avatar).Append("\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  Delete: ").Append(Delete).Append("\n");
            sb.Append("  Format: ").Append(Format).Append("\n");
            sb.Append("  Fullname: ").Append(Fullname).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Profileurl: ").Append(Profileurl).Append("\n");
            sb.Append("  Strftimeformat: ").Append(Strftimeformat).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
