/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreUserGetPrivateFilesInfo200Response
    /// </summary>
    [DataContract(Name = "core_user_get_private_files_info_200_response")]
    public partial class CoreUserGetPrivateFilesInfo200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreUserGetPrivateFilesInfo200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreUserGetPrivateFilesInfo200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreUserGetPrivateFilesInfo200Response" /> class.
        /// </summary>
        /// <param name="filecount">Number of files in the area. (required) (default to null).</param>
        /// <param name="filesize">Total size of the files in the area. (required) (default to null).</param>
        /// <param name="filesizewithoutreferences">Total size of the area excluding file references (required) (default to null).</param>
        /// <param name="foldercount">Number of folders in the area. (required) (default to null).</param>
        /// <param name="warnings">warnings.</param>
        public CoreUserGetPrivateFilesInfo200Response(int filecount = null, int filesize = null, int filesizewithoutreferences = null, int foldercount = null, List<AuthEmailSignupUser200ResponseWarningsInner> warnings = default(List<AuthEmailSignupUser200ResponseWarningsInner>))
        {
            this.Filecount = filecount;
            this.Filesize = filesize;
            this.Filesizewithoutreferences = filesizewithoutreferences;
            this.Foldercount = foldercount;
            this.Warnings = warnings;
        }

        /// <summary>
        /// Number of files in the area.
        /// </summary>
        /// <value>Number of files in the area.</value>
        [DataMember(Name = "filecount", IsRequired = true, EmitDefaultValue = true)]
        public int Filecount { get; set; }

        /// <summary>
        /// Total size of the files in the area.
        /// </summary>
        /// <value>Total size of the files in the area.</value>
        [DataMember(Name = "filesize", IsRequired = true, EmitDefaultValue = true)]
        public int Filesize { get; set; }

        /// <summary>
        /// Total size of the area excluding file references
        /// </summary>
        /// <value>Total size of the area excluding file references</value>
        [DataMember(Name = "filesizewithoutreferences", IsRequired = true, EmitDefaultValue = true)]
        public int Filesizewithoutreferences { get; set; }

        /// <summary>
        /// Number of folders in the area.
        /// </summary>
        /// <value>Number of folders in the area.</value>
        [DataMember(Name = "foldercount", IsRequired = true, EmitDefaultValue = true)]
        public int Foldercount { get; set; }

        /// <summary>
        /// Gets or Sets Warnings
        /// </summary>
        [DataMember(Name = "warnings", EmitDefaultValue = false)]
        public List<AuthEmailSignupUser200ResponseWarningsInner> Warnings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreUserGetPrivateFilesInfo200Response {\n");
            sb.Append("  Filecount: ").Append(Filecount).Append("\n");
            sb.Append("  Filesize: ").Append(Filesize).Append("\n");
            sb.Append("  Filesizewithoutreferences: ").Append(Filesizewithoutreferences).Append("\n");
            sb.Append("  Foldercount: ").Append(Foldercount).Append("\n");
            sb.Append("  Warnings: ").Append(Warnings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
