/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ToolDataprivacyGetDataRequest200ResponseResult
    /// </summary>
    [DataContract(Name = "tool_dataprivacy_get_data_request_200_response_result")]
    public partial class ToolDataprivacyGetDataRequest200ResponseResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolDataprivacyGetDataRequest200ResponseResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ToolDataprivacyGetDataRequest200ResponseResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolDataprivacyGetDataRequest200ResponseResult" /> class.
        /// </summary>
        /// <param name="allowfiltering">allowfiltering (default to false).</param>
        /// <param name="approvedeny">approvedeny (default to false).</param>
        /// <param name="canmarkcomplete">canmarkcomplete (default to false).</param>
        /// <param name="canreview">canreview (default to false).</param>
        /// <param name="comments">comments (required) (default to &quot;&quot;).</param>
        /// <param name="commentsformat">commentsformat (required) (default to 2).</param>
        /// <param name="creationmethod">creationmethod (required) (default to 0).</param>
        /// <param name="dpo">dpo (required) (default to 0).</param>
        /// <param name="dpocomment">dpocomment (required) (default to &quot;&quot;).</param>
        /// <param name="dpocommentformat">dpocommentformat (required) (default to 2).</param>
        /// <param name="dpouser">dpouser.</param>
        /// <param name="foruser">foruser (required).</param>
        /// <param name="id">id (required) (default to 0).</param>
        /// <param name="messagehtml">messagehtml (default to &quot;null&quot;).</param>
        /// <param name="requestedby">requestedby (required) (default to 0).</param>
        /// <param name="requestedbyuser">requestedbyuser.</param>
        /// <param name="status">status (required) (default to 2).</param>
        /// <param name="statuslabel">statuslabel (required) (default to &quot;null&quot;).</param>
        /// <param name="statuslabelclass">statuslabelclass (required) (default to &quot;null&quot;).</param>
        /// <param name="systemapproved">systemapproved (required) (default to false).</param>
        /// <param name="timecreated">timecreated (required) (default to 0).</param>
        /// <param name="timemodified">timemodified (required) (default to 0).</param>
        /// <param name="type">type (required).</param>
        /// <param name="typename">typename (required) (default to &quot;null&quot;).</param>
        /// <param name="typenameshort">typenameshort (required) (default to &quot;null&quot;).</param>
        /// <param name="userid">userid (required) (default to {}).</param>
        /// <param name="usermodified">usermodified (required) (default to 0).</param>
        public ToolDataprivacyGetDataRequest200ResponseResult(bool allowfiltering = false, bool approvedeny = false, bool canmarkcomplete = false, bool canreview = false, string comments = @"", int commentsformat = 2, int creationmethod = 0, int dpo = 0, string dpocomment = @"", int dpocommentformat = 2, CoreCompetencyGradeCompetency200ResponseActionuser dpouser = default(CoreCompetencyGradeCompetency200ResponseActionuser), CoreCompetencyGradeCompetency200ResponseActionuser foruser = default(CoreCompetencyGradeCompetency200ResponseActionuser), int id = 0, string messagehtml = @"null", int requestedby = 0, CoreCompetencyGradeCompetency200ResponseActionuser requestedbyuser = default(CoreCompetencyGradeCompetency200ResponseActionuser), int status = 2, string statuslabel = @"null", string statuslabelclass = @"null", bool systemapproved = false, int timecreated = 0, int timemodified = 0, int type = default(int), string typename = @"null", string typenameshort = @"null", int userid = {}, int usermodified = 0)
        {
            // to ensure "comments" is required (not null)
            if (comments == null)
            {
                throw new ArgumentNullException("comments is a required property for ToolDataprivacyGetDataRequest200ResponseResult and cannot be null");
            }
            this.Comments = comments;
            this.Commentsformat = commentsformat;
            this.Creationmethod = creationmethod;
            this.Dpo = dpo;
            // to ensure "dpocomment" is required (not null)
            if (dpocomment == null)
            {
                throw new ArgumentNullException("dpocomment is a required property for ToolDataprivacyGetDataRequest200ResponseResult and cannot be null");
            }
            this.Dpocomment = dpocomment;
            this.Dpocommentformat = dpocommentformat;
            // to ensure "foruser" is required (not null)
            if (foruser == null)
            {
                throw new ArgumentNullException("foruser is a required property for ToolDataprivacyGetDataRequest200ResponseResult and cannot be null");
            }
            this.Foruser = foruser;
            this.Id = id;
            this.Requestedby = requestedby;
            this.Status = status;
            // to ensure "statuslabel" is required (not null)
            if (statuslabel == null)
            {
                throw new ArgumentNullException("statuslabel is a required property for ToolDataprivacyGetDataRequest200ResponseResult and cannot be null");
            }
            this.Statuslabel = statuslabel;
            // to ensure "statuslabelclass" is required (not null)
            if (statuslabelclass == null)
            {
                throw new ArgumentNullException("statuslabelclass is a required property for ToolDataprivacyGetDataRequest200ResponseResult and cannot be null");
            }
            this.Statuslabelclass = statuslabelclass;
            this.Systemapproved = systemapproved;
            this.Timecreated = timecreated;
            this.Timemodified = timemodified;
            this.Type = type;
            // to ensure "typename" is required (not null)
            if (typename == null)
            {
                throw new ArgumentNullException("typename is a required property for ToolDataprivacyGetDataRequest200ResponseResult and cannot be null");
            }
            this.Typename = typename;
            // to ensure "typenameshort" is required (not null)
            if (typenameshort == null)
            {
                throw new ArgumentNullException("typenameshort is a required property for ToolDataprivacyGetDataRequest200ResponseResult and cannot be null");
            }
            this.Typenameshort = typenameshort;
            this.Userid = userid;
            this.Usermodified = usermodified;
            this.Allowfiltering = allowfiltering;
            this.Approvedeny = approvedeny;
            this.Canmarkcomplete = canmarkcomplete;
            this.Canreview = canreview;
            this.Dpouser = dpouser;
            // use default value if no "messagehtml" provided
            this.Messagehtml = messagehtml ?? @"null";
            this.Requestedbyuser = requestedbyuser;
        }

        /// <summary>
        /// allowfiltering
        /// </summary>
        /// <value>allowfiltering</value>
        [DataMember(Name = "allowfiltering", EmitDefaultValue = true)]
        public bool Allowfiltering { get; set; }

        /// <summary>
        /// approvedeny
        /// </summary>
        /// <value>approvedeny</value>
        [DataMember(Name = "approvedeny", EmitDefaultValue = true)]
        public bool Approvedeny { get; set; }

        /// <summary>
        /// canmarkcomplete
        /// </summary>
        /// <value>canmarkcomplete</value>
        [DataMember(Name = "canmarkcomplete", EmitDefaultValue = true)]
        public bool Canmarkcomplete { get; set; }

        /// <summary>
        /// canreview
        /// </summary>
        /// <value>canreview</value>
        [DataMember(Name = "canreview", EmitDefaultValue = true)]
        public bool Canreview { get; set; }

        /// <summary>
        /// comments
        /// </summary>
        /// <value>comments</value>
        [DataMember(Name = "comments", IsRequired = true, EmitDefaultValue = true)]
        public string Comments { get; set; }

        /// <summary>
        /// commentsformat
        /// </summary>
        /// <value>commentsformat</value>
        [DataMember(Name = "commentsformat", IsRequired = true, EmitDefaultValue = true)]
        public int Commentsformat { get; set; }

        /// <summary>
        /// creationmethod
        /// </summary>
        /// <value>creationmethod</value>
        [DataMember(Name = "creationmethod", IsRequired = true, EmitDefaultValue = true)]
        public int Creationmethod { get; set; }

        /// <summary>
        /// dpo
        /// </summary>
        /// <value>dpo</value>
        [DataMember(Name = "dpo", IsRequired = true, EmitDefaultValue = true)]
        public int Dpo { get; set; }

        /// <summary>
        /// dpocomment
        /// </summary>
        /// <value>dpocomment</value>
        [DataMember(Name = "dpocomment", IsRequired = true, EmitDefaultValue = true)]
        public string Dpocomment { get; set; }

        /// <summary>
        /// dpocommentformat
        /// </summary>
        /// <value>dpocommentformat</value>
        [DataMember(Name = "dpocommentformat", IsRequired = true, EmitDefaultValue = true)]
        public int Dpocommentformat { get; set; }

        /// <summary>
        /// Gets or Sets Dpouser
        /// </summary>
        [DataMember(Name = "dpouser", EmitDefaultValue = false)]
        public CoreCompetencyGradeCompetency200ResponseActionuser Dpouser { get; set; }

        /// <summary>
        /// Gets or Sets Foruser
        /// </summary>
        [DataMember(Name = "foruser", IsRequired = true, EmitDefaultValue = true)]
        public CoreCompetencyGradeCompetency200ResponseActionuser Foruser { get; set; }

        /// <summary>
        /// id
        /// </summary>
        /// <value>id</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public int Id { get; set; }

        /// <summary>
        /// messagehtml
        /// </summary>
        /// <value>messagehtml</value>
        [DataMember(Name = "messagehtml", EmitDefaultValue = false)]
        public string Messagehtml { get; set; }

        /// <summary>
        /// requestedby
        /// </summary>
        /// <value>requestedby</value>
        [DataMember(Name = "requestedby", IsRequired = true, EmitDefaultValue = true)]
        public int Requestedby { get; set; }

        /// <summary>
        /// Gets or Sets Requestedbyuser
        /// </summary>
        [DataMember(Name = "requestedbyuser", EmitDefaultValue = false)]
        public CoreCompetencyGradeCompetency200ResponseActionuser Requestedbyuser { get; set; }

        /// <summary>
        /// status
        /// </summary>
        /// <value>status</value>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public int Status { get; set; }

        /// <summary>
        /// statuslabel
        /// </summary>
        /// <value>statuslabel</value>
        [DataMember(Name = "statuslabel", IsRequired = true, EmitDefaultValue = true)]
        public string Statuslabel { get; set; }

        /// <summary>
        /// statuslabelclass
        /// </summary>
        /// <value>statuslabelclass</value>
        [DataMember(Name = "statuslabelclass", IsRequired = true, EmitDefaultValue = true)]
        public string Statuslabelclass { get; set; }

        /// <summary>
        /// systemapproved
        /// </summary>
        /// <value>systemapproved</value>
        [DataMember(Name = "systemapproved", IsRequired = true, EmitDefaultValue = true)]
        public bool Systemapproved { get; set; }

        /// <summary>
        /// timecreated
        /// </summary>
        /// <value>timecreated</value>
        [DataMember(Name = "timecreated", IsRequired = true, EmitDefaultValue = true)]
        public int Timecreated { get; set; }

        /// <summary>
        /// timemodified
        /// </summary>
        /// <value>timemodified</value>
        [DataMember(Name = "timemodified", IsRequired = true, EmitDefaultValue = true)]
        public int Timemodified { get; set; }

        /// <summary>
        /// type
        /// </summary>
        /// <value>type</value>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public int Type { get; set; }

        /// <summary>
        /// typename
        /// </summary>
        /// <value>typename</value>
        [DataMember(Name = "typename", IsRequired = true, EmitDefaultValue = true)]
        public string Typename { get; set; }

        /// <summary>
        /// typenameshort
        /// </summary>
        /// <value>typenameshort</value>
        [DataMember(Name = "typenameshort", IsRequired = true, EmitDefaultValue = true)]
        public string Typenameshort { get; set; }

        /// <summary>
        /// userid
        /// </summary>
        /// <value>userid</value>
        [DataMember(Name = "userid", IsRequired = true, EmitDefaultValue = true)]
        public int Userid { get; set; }

        /// <summary>
        /// usermodified
        /// </summary>
        /// <value>usermodified</value>
        [DataMember(Name = "usermodified", IsRequired = true, EmitDefaultValue = true)]
        public int Usermodified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToolDataprivacyGetDataRequest200ResponseResult {\n");
            sb.Append("  Allowfiltering: ").Append(Allowfiltering).Append("\n");
            sb.Append("  Approvedeny: ").Append(Approvedeny).Append("\n");
            sb.Append("  Canmarkcomplete: ").Append(Canmarkcomplete).Append("\n");
            sb.Append("  Canreview: ").Append(Canreview).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Commentsformat: ").Append(Commentsformat).Append("\n");
            sb.Append("  Creationmethod: ").Append(Creationmethod).Append("\n");
            sb.Append("  Dpo: ").Append(Dpo).Append("\n");
            sb.Append("  Dpocomment: ").Append(Dpocomment).Append("\n");
            sb.Append("  Dpocommentformat: ").Append(Dpocommentformat).Append("\n");
            sb.Append("  Dpouser: ").Append(Dpouser).Append("\n");
            sb.Append("  Foruser: ").Append(Foruser).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Messagehtml: ").Append(Messagehtml).Append("\n");
            sb.Append("  Requestedby: ").Append(Requestedby).Append("\n");
            sb.Append("  Requestedbyuser: ").Append(Requestedbyuser).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Statuslabel: ").Append(Statuslabel).Append("\n");
            sb.Append("  Statuslabelclass: ").Append(Statuslabelclass).Append("\n");
            sb.Append("  Systemapproved: ").Append(Systemapproved).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Typename: ").Append(Typename).Append("\n");
            sb.Append("  Typenameshort: ").Append(Typenameshort).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("  Usermodified: ").Append(Usermodified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
