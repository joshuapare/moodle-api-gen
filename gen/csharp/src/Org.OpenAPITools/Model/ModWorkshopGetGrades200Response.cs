/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModWorkshopGetGrades200Response
    /// </summary>
    [DataContract(Name = "mod_workshop_get_grades_200_response")]
    public partial class ModWorkshopGetGrades200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModWorkshopGetGrades200Response" /> class.
        /// </summary>
        /// <param name="assessmentgradehidden">Whether the grade is hidden or not. (default to null).</param>
        /// <param name="assessmentlongstrgrade">The assessment string grade. (default to &quot;null&quot;).</param>
        /// <param name="assessmentrawgrade">The assessment raw (numeric) grade. (default to nullM).</param>
        /// <param name="submissiongradehidden">Whether the grade is hidden or not..</param>
        /// <param name="submissionlongstrgrade">The submission string grade. (default to &quot;null&quot;).</param>
        /// <param name="submissionrawgrade">The submission raw (numeric) grade. (default to nullM).</param>
        /// <param name="warnings">warnings.</param>
        public ModWorkshopGetGrades200Response(bool assessmentgradehidden = null, string assessmentlongstrgrade = @"null", decimal assessmentrawgrade = nullM, bool submissiongradehidden = default(bool), string submissionlongstrgrade = @"null", decimal submissionrawgrade = nullM, List<AuthEmailSignupUser200ResponseWarningsInner> warnings = default(List<AuthEmailSignupUser200ResponseWarningsInner>))
        {
            this.Assessmentgradehidden = assessmentgradehidden;
            // use default value if no "assessmentlongstrgrade" provided
            this.Assessmentlongstrgrade = assessmentlongstrgrade ?? @"null";
            this.Assessmentrawgrade = assessmentrawgrade;
            this.Submissiongradehidden = submissiongradehidden;
            // use default value if no "submissionlongstrgrade" provided
            this.Submissionlongstrgrade = submissionlongstrgrade ?? @"null";
            this.Submissionrawgrade = submissionrawgrade;
            this.Warnings = warnings;
        }

        /// <summary>
        /// Whether the grade is hidden or not.
        /// </summary>
        /// <value>Whether the grade is hidden or not.</value>
        [DataMember(Name = "assessmentgradehidden", EmitDefaultValue = true)]
        public bool Assessmentgradehidden { get; set; }

        /// <summary>
        /// The assessment string grade.
        /// </summary>
        /// <value>The assessment string grade.</value>
        [DataMember(Name = "assessmentlongstrgrade", EmitDefaultValue = false)]
        public string Assessmentlongstrgrade { get; set; }

        /// <summary>
        /// The assessment raw (numeric) grade.
        /// </summary>
        /// <value>The assessment raw (numeric) grade.</value>
        [DataMember(Name = "assessmentrawgrade", EmitDefaultValue = false)]
        public decimal Assessmentrawgrade { get; set; }

        /// <summary>
        /// Whether the grade is hidden or not.
        /// </summary>
        /// <value>Whether the grade is hidden or not.</value>
        [DataMember(Name = "submissiongradehidden", EmitDefaultValue = true)]
        public bool Submissiongradehidden { get; set; }

        /// <summary>
        /// The submission string grade.
        /// </summary>
        /// <value>The submission string grade.</value>
        [DataMember(Name = "submissionlongstrgrade", EmitDefaultValue = false)]
        public string Submissionlongstrgrade { get; set; }

        /// <summary>
        /// The submission raw (numeric) grade.
        /// </summary>
        /// <value>The submission raw (numeric) grade.</value>
        [DataMember(Name = "submissionrawgrade", EmitDefaultValue = false)]
        public decimal Submissionrawgrade { get; set; }

        /// <summary>
        /// Gets or Sets Warnings
        /// </summary>
        [DataMember(Name = "warnings", EmitDefaultValue = false)]
        public List<AuthEmailSignupUser200ResponseWarningsInner> Warnings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModWorkshopGetGrades200Response {\n");
            sb.Append("  Assessmentgradehidden: ").Append(Assessmentgradehidden).Append("\n");
            sb.Append("  Assessmentlongstrgrade: ").Append(Assessmentlongstrgrade).Append("\n");
            sb.Append("  Assessmentrawgrade: ").Append(Assessmentrawgrade).Append("\n");
            sb.Append("  Submissiongradehidden: ").Append(Submissiongradehidden).Append("\n");
            sb.Append("  Submissionlongstrgrade: ").Append(Submissionlongstrgrade).Append("\n");
            sb.Append("  Submissionrawgrade: ").Append(Submissionrawgrade).Append("\n");
            sb.Append("  Warnings: ").Append(Warnings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
