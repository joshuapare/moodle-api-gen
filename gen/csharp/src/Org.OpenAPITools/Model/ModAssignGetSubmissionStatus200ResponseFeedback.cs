/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModAssignGetSubmissionStatus200ResponseFeedback
    /// </summary>
    [DataContract(Name = "mod_assign_get_submission_status_200_response_feedback")]
    public partial class ModAssignGetSubmissionStatus200ResponseFeedback : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModAssignGetSubmissionStatus200ResponseFeedback" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModAssignGetSubmissionStatus200ResponseFeedback() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModAssignGetSubmissionStatus200ResponseFeedback" /> class.
        /// </summary>
        /// <param name="grade">grade.</param>
        /// <param name="gradeddate">The date the user was graded. (required) (default to null).</param>
        /// <param name="gradefordisplay">Grade rendered into a format suitable for display. (required) (default to &quot;null&quot;).</param>
        /// <param name="plugins">plugins.</param>
        public ModAssignGetSubmissionStatus200ResponseFeedback(ModAssignGetSubmissionStatus200ResponseFeedbackGrade grade = default(ModAssignGetSubmissionStatus200ResponseFeedbackGrade), int gradeddate = null, string gradefordisplay = @"null", List<ModAssignGetSubmissionStatus200ResponseFeedbackPluginsInner> plugins = default(List<ModAssignGetSubmissionStatus200ResponseFeedbackPluginsInner>))
        {
            this.Gradeddate = gradeddate;
            // to ensure "gradefordisplay" is required (not null)
            if (gradefordisplay == null)
            {
                throw new ArgumentNullException("gradefordisplay is a required property for ModAssignGetSubmissionStatus200ResponseFeedback and cannot be null");
            }
            this.Gradefordisplay = gradefordisplay;
            this.Grade = grade;
            this.Plugins = plugins;
        }

        /// <summary>
        /// Gets or Sets Grade
        /// </summary>
        [DataMember(Name = "grade", EmitDefaultValue = false)]
        public ModAssignGetSubmissionStatus200ResponseFeedbackGrade Grade { get; set; }

        /// <summary>
        /// The date the user was graded.
        /// </summary>
        /// <value>The date the user was graded.</value>
        [DataMember(Name = "gradeddate", IsRequired = true, EmitDefaultValue = true)]
        public int Gradeddate { get; set; }

        /// <summary>
        /// Grade rendered into a format suitable for display.
        /// </summary>
        /// <value>Grade rendered into a format suitable for display.</value>
        [DataMember(Name = "gradefordisplay", IsRequired = true, EmitDefaultValue = true)]
        public string Gradefordisplay { get; set; }

        /// <summary>
        /// Gets or Sets Plugins
        /// </summary>
        [DataMember(Name = "plugins", EmitDefaultValue = false)]
        public List<ModAssignGetSubmissionStatus200ResponseFeedbackPluginsInner> Plugins { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModAssignGetSubmissionStatus200ResponseFeedback {\n");
            sb.Append("  Grade: ").Append(Grade).Append("\n");
            sb.Append("  Gradeddate: ").Append(Gradeddate).Append("\n");
            sb.Append("  Gradefordisplay: ").Append(Gradefordisplay).Append("\n");
            sb.Append("  Plugins: ").Append(Plugins).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
