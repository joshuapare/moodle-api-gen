/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModChatGetSessionMessages200ResponseMessagesInner
    /// </summary>
    [DataContract(Name = "mod_chat_get_session_messages_200_response_messages_inner")]
    public partial class ModChatGetSessionMessages200ResponseMessagesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModChatGetSessionMessages200ResponseMessagesInner" /> class.
        /// </summary>
        /// <param name="chatid">The chat id. (default to 0).</param>
        /// <param name="groupid">The group this message belongs to. (default to 0).</param>
        /// <param name="id">The message record id. (default to null).</param>
        /// <param name="issystem">Whether is a system message or not. (default to false).</param>
        /// <param name="message">The message text. (default to &quot;null&quot;).</param>
        /// <param name="timestamp">The message timestamp (indicates when the message was sent). (default to 0).</param>
        /// <param name="userid">The user who wrote the message. (default to 0).</param>
        public ModChatGetSessionMessages200ResponseMessagesInner(int chatid = 0, int groupid = 0, int id = null, bool issystem = false, string message = @"null", int timestamp = 0, int userid = 0)
        {
            this.Chatid = chatid;
            this.Groupid = groupid;
            this.Id = id;
            this.Issystem = issystem;
            // use default value if no "message" provided
            this.Message = message ?? @"null";
            this.Timestamp = timestamp;
            this.Userid = userid;
        }

        /// <summary>
        /// The chat id.
        /// </summary>
        /// <value>The chat id.</value>
        [DataMember(Name = "chatid", EmitDefaultValue = false)]
        public int Chatid { get; set; }

        /// <summary>
        /// The group this message belongs to.
        /// </summary>
        /// <value>The group this message belongs to.</value>
        [DataMember(Name = "groupid", EmitDefaultValue = false)]
        public int Groupid { get; set; }

        /// <summary>
        /// The message record id.
        /// </summary>
        /// <value>The message record id.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Whether is a system message or not.
        /// </summary>
        /// <value>Whether is a system message or not.</value>
        [DataMember(Name = "issystem", EmitDefaultValue = true)]
        public bool Issystem { get; set; }

        /// <summary>
        /// The message text.
        /// </summary>
        /// <value>The message text.</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// The message timestamp (indicates when the message was sent).
        /// </summary>
        /// <value>The message timestamp (indicates when the message was sent).</value>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public int Timestamp { get; set; }

        /// <summary>
        /// The user who wrote the message.
        /// </summary>
        /// <value>The user who wrote the message.</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModChatGetSessionMessages200ResponseMessagesInner {\n");
            sb.Append("  Chatid: ").Append(Chatid).Append("\n");
            sb.Append("  Groupid: ").Append(Groupid).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Issystem: ").Append(Issystem).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
