/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// course information object
    /// </summary>
    [DataContract(Name = "mod_assign_get_assignments_200_response_courses_inner")]
    public partial class ModAssignGetAssignments200ResponseCoursesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModAssignGetAssignments200ResponseCoursesInner" /> class.
        /// </summary>
        /// <param name="assignments">assignments.</param>
        /// <param name="fullname">course full name.</param>
        /// <param name="id">course id.</param>
        /// <param name="shortname">course short name.</param>
        /// <param name="timemodified">last time modified (default to null).</param>
        public ModAssignGetAssignments200ResponseCoursesInner(List<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner> assignments = default(List<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner>), string fullname = default(string), int id = default(int), string shortname = default(string), int timemodified = null)
        {
            this.Assignments = assignments;
            this.Fullname = fullname;
            this.Id = id;
            this.Shortname = shortname;
            this.Timemodified = timemodified;
        }

        /// <summary>
        /// Gets or Sets Assignments
        /// </summary>
        [DataMember(Name = "assignments", EmitDefaultValue = false)]
        public List<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner> Assignments { get; set; }

        /// <summary>
        /// course full name
        /// </summary>
        /// <value>course full name</value>
        [DataMember(Name = "fullname", EmitDefaultValue = false)]
        public string Fullname { get; set; }

        /// <summary>
        /// course id
        /// </summary>
        /// <value>course id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// course short name
        /// </summary>
        /// <value>course short name</value>
        [DataMember(Name = "shortname", EmitDefaultValue = false)]
        public string Shortname { get; set; }

        /// <summary>
        /// last time modified
        /// </summary>
        /// <value>last time modified</value>
        [DataMember(Name = "timemodified", EmitDefaultValue = false)]
        public int Timemodified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModAssignGetAssignments200ResponseCoursesInner {\n");
            sb.Append("  Assignments: ").Append(Assignments).Append("\n");
            sb.Append("  Fullname: ").Append(Fullname).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Shortname: ").Append(Shortname).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
