/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreMessageGetUserMessagePreferences200ResponsePreferences
    /// </summary>
    [DataContract(Name = "core_message_get_user_message_preferences_200_response_preferences")]
    public partial class CoreMessageGetUserMessagePreferences200ResponsePreferences : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreMessageGetUserMessagePreferences200ResponsePreferences" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreMessageGetUserMessagePreferences200ResponsePreferences() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreMessageGetUserMessagePreferences200ResponsePreferences" /> class.
        /// </summary>
        /// <param name="components">components (required).</param>
        /// <param name="disableall">Whether all the preferences are disabled (required) (default to null).</param>
        /// <param name="processors">processors (required).</param>
        /// <param name="userid">User id (required).</param>
        public CoreMessageGetUserMessagePreferences200ResponsePreferences(List<CoreMessageGetUserMessagePreferences200ResponsePreferencesComponentsInner> components = default(List<CoreMessageGetUserMessagePreferences200ResponsePreferencesComponentsInner>), int disableall = null, List<CoreMessageGetUserMessagePreferences200ResponsePreferencesProcessorsInner> processors = default(List<CoreMessageGetUserMessagePreferences200ResponsePreferencesProcessorsInner>), int userid = default(int))
        {
            // to ensure "components" is required (not null)
            if (components == null)
            {
                throw new ArgumentNullException("components is a required property for CoreMessageGetUserMessagePreferences200ResponsePreferences and cannot be null");
            }
            this.Components = components;
            this.Disableall = disableall;
            // to ensure "processors" is required (not null)
            if (processors == null)
            {
                throw new ArgumentNullException("processors is a required property for CoreMessageGetUserMessagePreferences200ResponsePreferences and cannot be null");
            }
            this.Processors = processors;
            this.Userid = userid;
        }

        /// <summary>
        /// Gets or Sets Components
        /// </summary>
        [DataMember(Name = "components", IsRequired = true, EmitDefaultValue = true)]
        public List<CoreMessageGetUserMessagePreferences200ResponsePreferencesComponentsInner> Components { get; set; }

        /// <summary>
        /// Whether all the preferences are disabled
        /// </summary>
        /// <value>Whether all the preferences are disabled</value>
        [DataMember(Name = "disableall", IsRequired = true, EmitDefaultValue = true)]
        public int Disableall { get; set; }

        /// <summary>
        /// Gets or Sets Processors
        /// </summary>
        [DataMember(Name = "processors", IsRequired = true, EmitDefaultValue = true)]
        public List<CoreMessageGetUserMessagePreferences200ResponsePreferencesProcessorsInner> Processors { get; set; }

        /// <summary>
        /// User id
        /// </summary>
        /// <value>User id</value>
        [DataMember(Name = "userid", IsRequired = true, EmitDefaultValue = true)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreMessageGetUserMessagePreferences200ResponsePreferences {\n");
            sb.Append("  Components: ").Append(Components).Append("\n");
            sb.Append("  Disableall: ").Append(Disableall).Append("\n");
            sb.Append("  Processors: ").Append(Processors).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
