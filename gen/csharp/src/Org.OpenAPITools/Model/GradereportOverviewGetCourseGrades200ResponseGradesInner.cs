/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GradereportOverviewGetCourseGrades200ResponseGradesInner
    /// </summary>
    [DataContract(Name = "gradereport_overview_get_course_grades_200_response_grades_inner")]
    public partial class GradereportOverviewGetCourseGrades200ResponseGradesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GradereportOverviewGetCourseGrades200ResponseGradesInner" /> class.
        /// </summary>
        /// <param name="courseid">Course id.</param>
        /// <param name="grade">Grade formatted (default to &quot;null&quot;).</param>
        /// <param name="rank">Your rank in the course (default to null).</param>
        /// <param name="rawgrade">Raw grade, not formatted (default to &quot;null&quot;).</param>
        public GradereportOverviewGetCourseGrades200ResponseGradesInner(int courseid = default(int), string grade = @"null", int rank = null, string rawgrade = @"null")
        {
            this.Courseid = courseid;
            // use default value if no "grade" provided
            this.Grade = grade ?? @"null";
            this.Rank = rank;
            // use default value if no "rawgrade" provided
            this.Rawgrade = rawgrade ?? @"null";
        }

        /// <summary>
        /// Course id
        /// </summary>
        /// <value>Course id</value>
        [DataMember(Name = "courseid", EmitDefaultValue = false)]
        public int Courseid { get; set; }

        /// <summary>
        /// Grade formatted
        /// </summary>
        /// <value>Grade formatted</value>
        [DataMember(Name = "grade", EmitDefaultValue = false)]
        public string Grade { get; set; }

        /// <summary>
        /// Your rank in the course
        /// </summary>
        /// <value>Your rank in the course</value>
        [DataMember(Name = "rank", EmitDefaultValue = false)]
        public int Rank { get; set; }

        /// <summary>
        /// Raw grade, not formatted
        /// </summary>
        /// <value>Raw grade, not formatted</value>
        [DataMember(Name = "rawgrade", EmitDefaultValue = false)]
        public string Rawgrade { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GradereportOverviewGetCourseGrades200ResponseGradesInner {\n");
            sb.Append("  Courseid: ").Append(Courseid).Append("\n");
            sb.Append("  Grade: ").Append(Grade).Append("\n");
            sb.Append("  Rank: ").Append(Rank).Append("\n");
            sb.Append("  Rawgrade: ").Append(Rawgrade).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
