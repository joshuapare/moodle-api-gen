/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ToolDataprivacySetContextDefaultsRequest
    /// </summary>
    [DataContract(Name = "tool_dataprivacy_set_context_defaults_request")]
    public partial class ToolDataprivacySetContextDefaultsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolDataprivacySetContextDefaultsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ToolDataprivacySetContextDefaultsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolDataprivacySetContextDefaultsRequest" /> class.
        /// </summary>
        /// <param name="activity">The plugin name of the activity.</param>
        /// <param name="category">The default category for the given context level (required) (default to null).</param>
        /// <param name="contextlevel">The context level (required) (default to null).</param>
        /// <param name="varOverride">Whether to override existing instances with the defaults (default to false).</param>
        /// <param name="purpose">The default purpose for the given context level (required) (default to null).</param>
        public ToolDataprivacySetContextDefaultsRequest(string activity = default(string), int category = null, int contextlevel = null, bool varOverride = false, int purpose = null)
        {
            this.Category = category;
            this.Contextlevel = contextlevel;
            this.Purpose = purpose;
            this.Activity = activity;
            this.Override = varOverride;
        }

        /// <summary>
        /// The plugin name of the activity
        /// </summary>
        /// <value>The plugin name of the activity</value>
        [DataMember(Name = "activity", EmitDefaultValue = false)]
        public string Activity { get; set; }

        /// <summary>
        /// The default category for the given context level
        /// </summary>
        /// <value>The default category for the given context level</value>
        [DataMember(Name = "category", IsRequired = true, EmitDefaultValue = true)]
        public int Category { get; set; }

        /// <summary>
        /// The context level
        /// </summary>
        /// <value>The context level</value>
        [DataMember(Name = "contextlevel", IsRequired = true, EmitDefaultValue = true)]
        public int Contextlevel { get; set; }

        /// <summary>
        /// Whether to override existing instances with the defaults
        /// </summary>
        /// <value>Whether to override existing instances with the defaults</value>
        [DataMember(Name = "override", EmitDefaultValue = true)]
        public bool Override { get; set; }

        /// <summary>
        /// The default purpose for the given context level
        /// </summary>
        /// <value>The default purpose for the given context level</value>
        [DataMember(Name = "purpose", IsRequired = true, EmitDefaultValue = true)]
        public int Purpose { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToolDataprivacySetContextDefaultsRequest {\n");
            sb.Append("  Activity: ").Append(Activity).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("  Contextlevel: ").Append(Contextlevel).Append("\n");
            sb.Append("  Override: ").Append(Override).Append("\n");
            sb.Append("  Purpose: ").Append(Purpose).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
