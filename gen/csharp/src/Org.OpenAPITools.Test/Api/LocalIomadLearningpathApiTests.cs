/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing LocalIomadLearningpathApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LocalIomadLearningpathApiTests : IDisposable
    {
        private LocalIomadLearningpathApi instance;

        public LocalIomadLearningpathApiTests()
        {
            instance = new LocalIomadLearningpathApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LocalIomadLearningpathApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LocalIomadLearningpathApi
            //Assert.IsType<LocalIomadLearningpathApi>(instance);
        }

        /// <summary>
        /// Test LocalIomadLearningpathActivate
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathActivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest = null;
            //var response = instance.LocalIomadLearningpathActivate(localIomadLearningpathActivateRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathAddcourses
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathAddcoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest = null;
            //var response = instance.LocalIomadLearningpathAddcourses(localIomadLearningpathAddcoursesRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathAddusers
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathAddusersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest = null;
            //var response = instance.LocalIomadLearningpathAddusers(localIomadLearningpathAddusersRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathCopypath
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathCopypathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest = null;
            //var response = instance.LocalIomadLearningpathCopypath(localIomadLearningpathCopypathRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathDeletepath
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathDeletepathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest = null;
            //var response = instance.LocalIomadLearningpathDeletepath(localIomadLearningpathCopypathRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathGetcourses
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathGetcoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest = null;
            //var response = instance.LocalIomadLearningpathGetcourses(localIomadLearningpathGetcoursesRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathGetprospectivecourses
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathGetprospectivecoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest = null;
            //var response = instance.LocalIomadLearningpathGetprospectivecourses(localIomadLearningpathGetprospectivecoursesRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathGetprospectiveusers
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathGetprospectiveusersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest = null;
            //var response = instance.LocalIomadLearningpathGetprospectiveusers(localIomadLearningpathGetprospectiveusersRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathGetusers
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathGetusersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest = null;
            //var response = instance.LocalIomadLearningpathGetusers(localIomadLearningpathGetusersRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathOrdercourses
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathOrdercoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest = null;
            //var response = instance.LocalIomadLearningpathOrdercourses(localIomadLearningpathOrdercoursesRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathRemovecourses
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathRemovecoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest = null;
            //var response = instance.LocalIomadLearningpathRemovecourses(localIomadLearningpathRemovecoursesRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LocalIomadLearningpathRemoveusers
        /// </summary>
        [Fact]
        public void LocalIomadLearningpathRemoveusersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest = null;
            //var response = instance.LocalIomadLearningpathRemoveusers(localIomadLearningpathRemoveusersRequest);
            //Assert.IsType<Object>(response);
        }
    }
}
