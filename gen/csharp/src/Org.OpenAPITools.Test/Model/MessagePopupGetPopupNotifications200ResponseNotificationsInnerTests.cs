/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing MessagePopupGetPopupNotifications200ResponseNotificationsInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MessagePopupGetPopupNotifications200ResponseNotificationsInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MessagePopupGetPopupNotifications200ResponseNotificationsInner
        //private MessagePopupGetPopupNotifications200ResponseNotificationsInner instance;

        public MessagePopupGetPopupNotifications200ResponseNotificationsInnerTests()
        {
            // TODO uncomment below to create an instance of MessagePopupGetPopupNotifications200ResponseNotificationsInner
            //instance = new MessagePopupGetPopupNotifications200ResponseNotificationsInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessagePopupGetPopupNotifications200ResponseNotificationsInner
        /// </summary>
        [Fact]
        public void MessagePopupGetPopupNotifications200ResponseNotificationsInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" MessagePopupGetPopupNotifications200ResponseNotificationsInner
            //Assert.IsType<MessagePopupGetPopupNotifications200ResponseNotificationsInner>(instance);
        }

        /// <summary>
        /// Test the property 'Component'
        /// </summary>
        [Fact]
        public void ComponentTest()
        {
            // TODO unit test for the property 'Component'
        }

        /// <summary>
        /// Test the property 'Contexturl'
        /// </summary>
        [Fact]
        public void ContexturlTest()
        {
            // TODO unit test for the property 'Contexturl'
        }

        /// <summary>
        /// Test the property 'Contexturlname'
        /// </summary>
        [Fact]
        public void ContexturlnameTest()
        {
            // TODO unit test for the property 'Contexturlname'
        }

        /// <summary>
        /// Test the property 'Customdata'
        /// </summary>
        [Fact]
        public void CustomdataTest()
        {
            // TODO unit test for the property 'Customdata'
        }

        /// <summary>
        /// Test the property 'Deleted'
        /// </summary>
        [Fact]
        public void DeletedTest()
        {
            // TODO unit test for the property 'Deleted'
        }

        /// <summary>
        /// Test the property 'Eventtype'
        /// </summary>
        [Fact]
        public void EventtypeTest()
        {
            // TODO unit test for the property 'Eventtype'
        }

        /// <summary>
        /// Test the property 'Fullmessage'
        /// </summary>
        [Fact]
        public void FullmessageTest()
        {
            // TODO unit test for the property 'Fullmessage'
        }

        /// <summary>
        /// Test the property 'Fullmessageformat'
        /// </summary>
        [Fact]
        public void FullmessageformatTest()
        {
            // TODO unit test for the property 'Fullmessageformat'
        }

        /// <summary>
        /// Test the property 'Fullmessagehtml'
        /// </summary>
        [Fact]
        public void FullmessagehtmlTest()
        {
            // TODO unit test for the property 'Fullmessagehtml'
        }

        /// <summary>
        /// Test the property 'Iconurl'
        /// </summary>
        [Fact]
        public void IconurlTest()
        {
            // TODO unit test for the property 'Iconurl'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Read'
        /// </summary>
        [Fact]
        public void ReadTest()
        {
            // TODO unit test for the property 'Read'
        }

        /// <summary>
        /// Test the property 'Shortenedsubject'
        /// </summary>
        [Fact]
        public void ShortenedsubjectTest()
        {
            // TODO unit test for the property 'Shortenedsubject'
        }

        /// <summary>
        /// Test the property 'Smallmessage'
        /// </summary>
        [Fact]
        public void SmallmessageTest()
        {
            // TODO unit test for the property 'Smallmessage'
        }

        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Fact]
        public void SubjectTest()
        {
            // TODO unit test for the property 'Subject'
        }

        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Fact]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }

        /// <summary>
        /// Test the property 'Timecreated'
        /// </summary>
        [Fact]
        public void TimecreatedTest()
        {
            // TODO unit test for the property 'Timecreated'
        }

        /// <summary>
        /// Test the property 'Timecreatedpretty'
        /// </summary>
        [Fact]
        public void TimecreatedprettyTest()
        {
            // TODO unit test for the property 'Timecreatedpretty'
        }

        /// <summary>
        /// Test the property 'Timeread'
        /// </summary>
        [Fact]
        public void TimereadTest()
        {
            // TODO unit test for the property 'Timeread'
        }

        /// <summary>
        /// Test the property 'Useridfrom'
        /// </summary>
        [Fact]
        public void UseridfromTest()
        {
            // TODO unit test for the property 'Useridfrom'
        }

        /// <summary>
        /// Test the property 'Useridto'
        /// </summary>
        [Fact]
        public void UseridtoTest()
        {
            // TODO unit test for the property 'Useridto'
        }
    }
}
