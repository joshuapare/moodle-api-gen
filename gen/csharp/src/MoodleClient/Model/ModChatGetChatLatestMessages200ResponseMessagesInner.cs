/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModChatGetChatLatestMessages200ResponseMessagesInner
    /// </summary>
    [DataContract(Name = "mod_chat_get_chat_latest_messages_200_response_messages_inner")]
    public partial class ModChatGetChatLatestMessages200ResponseMessagesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModChatGetChatLatestMessages200ResponseMessagesInner" /> class.
        /// </summary>
        /// <param name="id">message id (default to null).</param>
        /// <param name="message">message text (default to &quot;null&quot;).</param>
        /// <param name="varSystem">true if is a system message (like user joined) (default to null).</param>
        /// <param name="timestamp">timestamp for the message (default to null).</param>
        /// <param name="userid">user id.</param>
        public ModChatGetChatLatestMessages200ResponseMessagesInner(int id = null, string message = @"null", bool varSystem = null, int timestamp = null, int userid = default(int))
        {
            this.Id = id;
            // use default value if no "message" provided
            this.Message = message ?? @"null";
            this.System = varSystem;
            this.Timestamp = timestamp;
            this.Userid = userid;
        }

        /// <summary>
        /// message id
        /// </summary>
        /// <value>message id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// message text
        /// </summary>
        /// <value>message text</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// true if is a system message (like user joined)
        /// </summary>
        /// <value>true if is a system message (like user joined)</value>
        [DataMember(Name = "system", EmitDefaultValue = true)]
        public bool System { get; set; }

        /// <summary>
        /// timestamp for the message
        /// </summary>
        /// <value>timestamp for the message</value>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public int Timestamp { get; set; }

        /// <summary>
        /// user id
        /// </summary>
        /// <value>user id</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModChatGetChatLatestMessages200ResponseMessagesInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  System: ").Append(System).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
