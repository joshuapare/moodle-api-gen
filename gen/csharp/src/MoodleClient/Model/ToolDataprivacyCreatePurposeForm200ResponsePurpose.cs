/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ToolDataprivacyCreatePurposeForm200ResponsePurpose
    /// </summary>
    [DataContract(Name = "tool_dataprivacy_create_purpose_form_200_response_purpose")]
    public partial class ToolDataprivacyCreatePurposeForm200ResponsePurpose : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolDataprivacyCreatePurposeForm200ResponsePurpose" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ToolDataprivacyCreatePurposeForm200ResponsePurpose() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolDataprivacyCreatePurposeForm200ResponsePurpose" /> class.
        /// </summary>
        /// <param name="description">The purpose description. (required) (default to &quot;&quot;).</param>
        /// <param name="descriptionformat">description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN) (default to 1).</param>
        /// <param name="formattedlawfulbases">formattedlawfulbases (required).</param>
        /// <param name="formattedretentionperiod">formattedretentionperiod (required) (default to &quot;null&quot;).</param>
        /// <param name="formattedsensitivedatareasons">formattedsensitivedatareasons.</param>
        /// <param name="id">id (required) (default to 0).</param>
        /// <param name="lawfulbases">Comma-separated IDs matching records in tool_dataprivacy_lawfulbasis. (required) (default to &quot;null&quot;).</param>
        /// <param name="name">The purpose name. (required) (default to &quot;null&quot;).</param>
        /// <param name="varProtected">Data retention with higher precedent over user&#39;s request to be forgotten. (required) (default to 0).</param>
        /// <param name="retentionperiod">Retention period. ISO_8601 durations format (as in DateInterval format). (required) (default to &quot;&quot;).</param>
        /// <param name="roleoverrides">roleoverrides (required) (default to &quot;null&quot;).</param>
        /// <param name="sensitivedatareasons">Comma-separated IDs matching records in tool_dataprivacy_sensitive (required) (default to &quot;&quot;).</param>
        /// <param name="timecreated">timecreated (required) (default to 0).</param>
        /// <param name="timemodified">timemodified (required) (default to 0).</param>
        /// <param name="usermodified">usermodified (required) (default to 0).</param>
        public ToolDataprivacyCreatePurposeForm200ResponsePurpose(string description = @"", int descriptionformat = 1, List<ToolDataprivacyCreatePurposeForm200ResponsePurposeFormattedlawfulbasesInner> formattedlawfulbases = default(List<ToolDataprivacyCreatePurposeForm200ResponsePurposeFormattedlawfulbasesInner>), string formattedretentionperiod = @"null", List<ToolDataprivacyCreatePurposeForm200ResponsePurposeFormattedlawfulbasesInner> formattedsensitivedatareasons = default(List<ToolDataprivacyCreatePurposeForm200ResponsePurposeFormattedlawfulbasesInner>), int id = 0, string lawfulbases = @"null", string name = @"null", int varProtected = 0, string retentionperiod = @"", string roleoverrides = @"null", string sensitivedatareasons = @"", int timecreated = 0, int timemodified = 0, int usermodified = 0)
        {
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Description = description;
            // to ensure "formattedlawfulbases" is required (not null)
            if (formattedlawfulbases == null)
            {
                throw new ArgumentNullException("formattedlawfulbases is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Formattedlawfulbases = formattedlawfulbases;
            // to ensure "formattedretentionperiod" is required (not null)
            if (formattedretentionperiod == null)
            {
                throw new ArgumentNullException("formattedretentionperiod is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Formattedretentionperiod = formattedretentionperiod;
            this.Id = id;
            // to ensure "lawfulbases" is required (not null)
            if (lawfulbases == null)
            {
                throw new ArgumentNullException("lawfulbases is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Lawfulbases = lawfulbases;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Name = name;
            this.Protected = varProtected;
            // to ensure "retentionperiod" is required (not null)
            if (retentionperiod == null)
            {
                throw new ArgumentNullException("retentionperiod is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Retentionperiod = retentionperiod;
            // to ensure "roleoverrides" is required (not null)
            if (roleoverrides == null)
            {
                throw new ArgumentNullException("roleoverrides is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Roleoverrides = roleoverrides;
            // to ensure "sensitivedatareasons" is required (not null)
            if (sensitivedatareasons == null)
            {
                throw new ArgumentNullException("sensitivedatareasons is a required property for ToolDataprivacyCreatePurposeForm200ResponsePurpose and cannot be null");
            }
            this.Sensitivedatareasons = sensitivedatareasons;
            this.Timecreated = timecreated;
            this.Timemodified = timemodified;
            this.Usermodified = usermodified;
            this.Descriptionformat = descriptionformat;
            this.Formattedsensitivedatareasons = formattedsensitivedatareasons;
        }

        /// <summary>
        /// The purpose description.
        /// </summary>
        /// <value>The purpose description.</value>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
        /// </summary>
        /// <value>description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)</value>
        [DataMember(Name = "descriptionformat", EmitDefaultValue = false)]
        public int Descriptionformat { get; set; }

        /// <summary>
        /// Gets or Sets Formattedlawfulbases
        /// </summary>
        [DataMember(Name = "formattedlawfulbases", IsRequired = true, EmitDefaultValue = true)]
        public List<ToolDataprivacyCreatePurposeForm200ResponsePurposeFormattedlawfulbasesInner> Formattedlawfulbases { get; set; }

        /// <summary>
        /// formattedretentionperiod
        /// </summary>
        /// <value>formattedretentionperiod</value>
        [DataMember(Name = "formattedretentionperiod", IsRequired = true, EmitDefaultValue = true)]
        public string Formattedretentionperiod { get; set; }

        /// <summary>
        /// Gets or Sets Formattedsensitivedatareasons
        /// </summary>
        [DataMember(Name = "formattedsensitivedatareasons", EmitDefaultValue = false)]
        public List<ToolDataprivacyCreatePurposeForm200ResponsePurposeFormattedlawfulbasesInner> Formattedsensitivedatareasons { get; set; }

        /// <summary>
        /// id
        /// </summary>
        /// <value>id</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public int Id { get; set; }

        /// <summary>
        /// Comma-separated IDs matching records in tool_dataprivacy_lawfulbasis.
        /// </summary>
        /// <value>Comma-separated IDs matching records in tool_dataprivacy_lawfulbasis.</value>
        [DataMember(Name = "lawfulbases", IsRequired = true, EmitDefaultValue = true)]
        public string Lawfulbases { get; set; }

        /// <summary>
        /// The purpose name.
        /// </summary>
        /// <value>The purpose name.</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Data retention with higher precedent over user&#39;s request to be forgotten.
        /// </summary>
        /// <value>Data retention with higher precedent over user&#39;s request to be forgotten.</value>
        [DataMember(Name = "protected", IsRequired = true, EmitDefaultValue = true)]
        public int Protected { get; set; }

        /// <summary>
        /// Retention period. ISO_8601 durations format (as in DateInterval format).
        /// </summary>
        /// <value>Retention period. ISO_8601 durations format (as in DateInterval format).</value>
        [DataMember(Name = "retentionperiod", IsRequired = true, EmitDefaultValue = true)]
        public string Retentionperiod { get; set; }

        /// <summary>
        /// roleoverrides
        /// </summary>
        /// <value>roleoverrides</value>
        [DataMember(Name = "roleoverrides", IsRequired = true, EmitDefaultValue = true)]
        public string Roleoverrides { get; set; }

        /// <summary>
        /// Comma-separated IDs matching records in tool_dataprivacy_sensitive
        /// </summary>
        /// <value>Comma-separated IDs matching records in tool_dataprivacy_sensitive</value>
        [DataMember(Name = "sensitivedatareasons", IsRequired = true, EmitDefaultValue = true)]
        public string Sensitivedatareasons { get; set; }

        /// <summary>
        /// timecreated
        /// </summary>
        /// <value>timecreated</value>
        [DataMember(Name = "timecreated", IsRequired = true, EmitDefaultValue = true)]
        public int Timecreated { get; set; }

        /// <summary>
        /// timemodified
        /// </summary>
        /// <value>timemodified</value>
        [DataMember(Name = "timemodified", IsRequired = true, EmitDefaultValue = true)]
        public int Timemodified { get; set; }

        /// <summary>
        /// usermodified
        /// </summary>
        /// <value>usermodified</value>
        [DataMember(Name = "usermodified", IsRequired = true, EmitDefaultValue = true)]
        public int Usermodified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToolDataprivacyCreatePurposeForm200ResponsePurpose {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Descriptionformat: ").Append(Descriptionformat).Append("\n");
            sb.Append("  Formattedlawfulbases: ").Append(Formattedlawfulbases).Append("\n");
            sb.Append("  Formattedretentionperiod: ").Append(Formattedretentionperiod).Append("\n");
            sb.Append("  Formattedsensitivedatareasons: ").Append(Formattedsensitivedatareasons).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Lawfulbases: ").Append(Lawfulbases).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Protected: ").Append(Protected).Append("\n");
            sb.Append("  Retentionperiod: ").Append(Retentionperiod).Append("\n");
            sb.Append("  Roleoverrides: ").Append(Roleoverrides).Append("\n");
            sb.Append("  Sensitivedatareasons: ").Append(Sensitivedatareasons).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Usermodified: ").Append(Usermodified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
