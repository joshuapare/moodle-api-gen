/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// Completions
    /// </summary>
    [DataContract(Name = "core_completion_get_course_completion_status_200_response_completionstatus_completions_inner")]
    public partial class CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner" /> class.
        /// </summary>
        /// <param name="complete">Completion status (true/false) (default to null).</param>
        /// <param name="details">details.</param>
        /// <param name="status">Completion status (Yes/No) a % or number (default to &quot;null&quot;).</param>
        /// <param name="timecompleted">Timestamp for criteria completetion (default to null).</param>
        /// <param name="title">Completion criteria Title (default to &quot;null&quot;).</param>
        /// <param name="type">Completion criteria type (default to null).</param>
        public CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner(bool complete = null, CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInnerDetails details = default(CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInnerDetails), string status = @"null", int timecompleted = null, string title = @"null", int type = null)
        {
            this.Complete = complete;
            this.Details = details;
            // use default value if no "status" provided
            this.Status = status ?? @"null";
            this.Timecompleted = timecompleted;
            // use default value if no "title" provided
            this.Title = title ?? @"null";
            this.Type = type;
        }

        /// <summary>
        /// Completion status (true/false)
        /// </summary>
        /// <value>Completion status (true/false)</value>
        [DataMember(Name = "complete", EmitDefaultValue = true)]
        public bool Complete { get; set; }

        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name = "details", EmitDefaultValue = false)]
        public CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInnerDetails Details { get; set; }

        /// <summary>
        /// Completion status (Yes/No) a % or number
        /// </summary>
        /// <value>Completion status (Yes/No) a % or number</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Timestamp for criteria completetion
        /// </summary>
        /// <value>Timestamp for criteria completetion</value>
        [DataMember(Name = "timecompleted", EmitDefaultValue = false)]
        public int Timecompleted { get; set; }

        /// <summary>
        /// Completion criteria Title
        /// </summary>
        /// <value>Completion criteria Title</value>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Completion criteria type
        /// </summary>
        /// <value>Completion criteria type</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public int Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner {\n");
            sb.Append("  Complete: ").Append(Complete).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Timecompleted: ").Append(Timecompleted).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
