/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response
    /// </summary>
    [DataContract(Name = "core_course_get_enrolled_courses_with_action_events_by_timeline_classification_200_response")]
    public partial class CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response" /> class.
        /// </summary>
        /// <param name="courses">courses (required).</param>
        /// <param name="morecoursesavailable">Whether more courses with events exist within the provided parameters (required) (default to null).</param>
        /// <param name="nextoffset">Offset for the next request (required).</param>
        public CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response(List<CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner> courses = default(List<CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>), bool morecoursesavailable = null, int nextoffset = default(int))
        {
            // to ensure "courses" is required (not null)
            if (courses == null)
            {
                throw new ArgumentNullException("courses is a required property for CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response and cannot be null");
            }
            this.Courses = courses;
            this.Morecoursesavailable = morecoursesavailable;
            this.Nextoffset = nextoffset;
        }

        /// <summary>
        /// Gets or Sets Courses
        /// </summary>
        [DataMember(Name = "courses", IsRequired = true, EmitDefaultValue = true)]
        public List<CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner> Courses { get; set; }

        /// <summary>
        /// Whether more courses with events exist within the provided parameters
        /// </summary>
        /// <value>Whether more courses with events exist within the provided parameters</value>
        [DataMember(Name = "morecoursesavailable", IsRequired = true, EmitDefaultValue = true)]
        public bool Morecoursesavailable { get; set; }

        /// <summary>
        /// Offset for the next request
        /// </summary>
        /// <value>Offset for the next request</value>
        [DataMember(Name = "nextoffset", IsRequired = true, EmitDefaultValue = true)]
        public int Nextoffset { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCourseGetEnrolledCoursesWithActionEventsByTimelineClassification200Response {\n");
            sb.Append("  Courses: ").Append(Courses).Append("\n");
            sb.Append("  Morecoursesavailable: ").Append(Morecoursesavailable).Append("\n");
            sb.Append("  Nextoffset: ").Append(Nextoffset).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
