/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModFeedbackGetFinishedResponses200ResponseResponsesInner
    /// </summary>
    [DataContract(Name = "mod_feedback_get_finished_responses_200_response_responses_inner")]
    public partial class ModFeedbackGetFinishedResponses200ResponseResponsesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModFeedbackGetFinishedResponses200ResponseResponsesInner" /> class.
        /// </summary>
        /// <param name="completed">Reference to the feedback_completed table. (default to null).</param>
        /// <param name="courseId">The course id this record belongs to. (default to null).</param>
        /// <param name="id">The record id..</param>
        /// <param name="item">The item id that was responded. (default to null).</param>
        /// <param name="tmpCompleted">Old field - not used anymore. (default to null).</param>
        /// <param name="value">The response value. (default to &quot;null&quot;).</param>
        public ModFeedbackGetFinishedResponses200ResponseResponsesInner(int completed = null, int courseId = null, int id = default(int), int item = null, int tmpCompleted = null, string value = @"null")
        {
            this.Completed = completed;
            this.CourseId = courseId;
            this.Id = id;
            this.Item = item;
            this.TmpCompleted = tmpCompleted;
            // use default value if no "value" provided
            this.Value = value ?? @"null";
        }

        /// <summary>
        /// Reference to the feedback_completed table.
        /// </summary>
        /// <value>Reference to the feedback_completed table.</value>
        [DataMember(Name = "completed", EmitDefaultValue = false)]
        public int Completed { get; set; }

        /// <summary>
        /// The course id this record belongs to.
        /// </summary>
        /// <value>The course id this record belongs to.</value>
        [DataMember(Name = "course_id", EmitDefaultValue = false)]
        public int CourseId { get; set; }

        /// <summary>
        /// The record id.
        /// </summary>
        /// <value>The record id.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// The item id that was responded.
        /// </summary>
        /// <value>The item id that was responded.</value>
        [DataMember(Name = "item", EmitDefaultValue = false)]
        public int Item { get; set; }

        /// <summary>
        /// Old field - not used anymore.
        /// </summary>
        /// <value>Old field - not used anymore.</value>
        [DataMember(Name = "tmp_completed", EmitDefaultValue = false)]
        public int TmpCompleted { get; set; }

        /// <summary>
        /// The response value.
        /// </summary>
        /// <value>The response value.</value>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public string Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModFeedbackGetFinishedResponses200ResponseResponsesInner {\n");
            sb.Append("  Completed: ").Append(Completed).Append("\n");
            sb.Append("  CourseId: ").Append(CourseId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Item: ").Append(Item).Append("\n");
            sb.Append("  TmpCompleted: ").Append(TmpCompleted).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
