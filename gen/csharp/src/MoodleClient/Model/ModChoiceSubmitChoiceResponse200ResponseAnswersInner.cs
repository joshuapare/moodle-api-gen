/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// Answers
    /// </summary>
    [DataContract(Name = "mod_choice_submit_choice_response_200_response_answers_inner")]
    public partial class ModChoiceSubmitChoiceResponse200ResponseAnswersInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModChoiceSubmitChoiceResponse200ResponseAnswersInner" /> class.
        /// </summary>
        /// <param name="choiceid">choiceid (default to null).</param>
        /// <param name="id">answer id.</param>
        /// <param name="optionid">optionid (default to null).</param>
        /// <param name="timemodified">time of last modification.</param>
        /// <param name="userid">user id.</param>
        public ModChoiceSubmitChoiceResponse200ResponseAnswersInner(int choiceid = null, int id = default(int), int optionid = null, int timemodified = default(int), int userid = default(int))
        {
            this.Choiceid = choiceid;
            this.Id = id;
            this.Optionid = optionid;
            this.Timemodified = timemodified;
            this.Userid = userid;
        }

        /// <summary>
        /// choiceid
        /// </summary>
        /// <value>choiceid</value>
        [DataMember(Name = "choiceid", EmitDefaultValue = false)]
        public int Choiceid { get; set; }

        /// <summary>
        /// answer id
        /// </summary>
        /// <value>answer id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// optionid
        /// </summary>
        /// <value>optionid</value>
        [DataMember(Name = "optionid", EmitDefaultValue = false)]
        public int Optionid { get; set; }

        /// <summary>
        /// time of last modification
        /// </summary>
        /// <value>time of last modification</value>
        [DataMember(Name = "timemodified", EmitDefaultValue = false)]
        public int Timemodified { get; set; }

        /// <summary>
        /// user id
        /// </summary>
        /// <value>user id</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModChoiceSubmitChoiceResponse200ResponseAnswersInner {\n");
            sb.Append("  Choiceid: ").Append(Choiceid).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Optionid: ").Append(Optionid).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
