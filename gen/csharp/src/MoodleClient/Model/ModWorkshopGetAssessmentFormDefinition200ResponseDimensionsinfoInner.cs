/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner
    /// </summary>
    [DataContract(Name = "mod_workshop_get_assessment_form_definition_200_response_dimensionsinfo_inner")]
    public partial class ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner" /> class.
        /// </summary>
        /// <param name="id">Dimension id. (default to null).</param>
        /// <param name="max">Maximum grade for the dimension. (default to nullM).</param>
        /// <param name="min">Minimum grade for the dimension. (default to nullM).</param>
        /// <param name="scale">Scale items (if used). (default to &quot;null&quot;).</param>
        /// <param name="weight">The weight of the dimension. (default to &quot;null&quot;).</param>
        public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner(int id = null, decimal max = nullM, decimal min = nullM, string scale = @"null", string weight = @"null")
        {
            this.Id = id;
            this.Max = max;
            this.Min = min;
            // use default value if no "scale" provided
            this.Scale = scale ?? @"null";
            // use default value if no "weight" provided
            this.Weight = weight ?? @"null";
        }

        /// <summary>
        /// Dimension id.
        /// </summary>
        /// <value>Dimension id.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Maximum grade for the dimension.
        /// </summary>
        /// <value>Maximum grade for the dimension.</value>
        [DataMember(Name = "max", EmitDefaultValue = false)]
        public decimal Max { get; set; }

        /// <summary>
        /// Minimum grade for the dimension.
        /// </summary>
        /// <value>Minimum grade for the dimension.</value>
        [DataMember(Name = "min", EmitDefaultValue = false)]
        public decimal Min { get; set; }

        /// <summary>
        /// Scale items (if used).
        /// </summary>
        /// <value>Scale items (if used).</value>
        [DataMember(Name = "scale", EmitDefaultValue = false)]
        public string Scale { get; set; }

        /// <summary>
        /// The weight of the dimension.
        /// </summary>
        /// <value>The weight of the dimension.</value>
        [DataMember(Name = "weight", EmitDefaultValue = false)]
        public string Weight { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Max: ").Append(Max).Append("\n");
            sb.Append("  Min: ").Append(Min).Append("\n");
            sb.Append("  Scale: ").Append(Scale).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
