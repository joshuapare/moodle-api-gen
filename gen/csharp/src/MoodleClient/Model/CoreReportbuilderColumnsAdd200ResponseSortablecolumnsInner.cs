/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner
    /// </summary>
    [DataContract(Name = "core_reportbuilder_columns_add_200_response_sortablecolumns_inner")]
    public partial class CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner" /> class.
        /// </summary>
        /// <param name="heading">heading (default to &quot;null&quot;).</param>
        /// <param name="id">id.</param>
        /// <param name="movetitle">movetitle (default to &quot;null&quot;).</param>
        /// <param name="sortdirection">sortdirection (default to null).</param>
        /// <param name="sortenabled">sortenabled (default to null).</param>
        /// <param name="sortenabledtitle">sortenabledtitle (default to &quot;null&quot;).</param>
        /// <param name="sorticon">sorticon.</param>
        /// <param name="sortorder">sortorder.</param>
        /// <param name="title">title.</param>
        public CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner(string heading = @"null", int id = default(int), string movetitle = @"null", int sortdirection = null, bool sortenabled = null, string sortenabledtitle = @"null", CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInnerSorticon sorticon = default(CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInnerSorticon), int sortorder = default(int), string title = default(string))
        {
            // use default value if no "heading" provided
            this.Heading = heading ?? @"null";
            this.Id = id;
            // use default value if no "movetitle" provided
            this.Movetitle = movetitle ?? @"null";
            this.Sortdirection = sortdirection;
            this.Sortenabled = sortenabled;
            // use default value if no "sortenabledtitle" provided
            this.Sortenabledtitle = sortenabledtitle ?? @"null";
            this.Sorticon = sorticon;
            this.Sortorder = sortorder;
            this.Title = title;
        }

        /// <summary>
        /// heading
        /// </summary>
        /// <value>heading</value>
        [DataMember(Name = "heading", EmitDefaultValue = false)]
        public string Heading { get; set; }

        /// <summary>
        /// id
        /// </summary>
        /// <value>id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// movetitle
        /// </summary>
        /// <value>movetitle</value>
        [DataMember(Name = "movetitle", EmitDefaultValue = false)]
        public string Movetitle { get; set; }

        /// <summary>
        /// sortdirection
        /// </summary>
        /// <value>sortdirection</value>
        [DataMember(Name = "sortdirection", EmitDefaultValue = false)]
        public int Sortdirection { get; set; }

        /// <summary>
        /// sortenabled
        /// </summary>
        /// <value>sortenabled</value>
        [DataMember(Name = "sortenabled", EmitDefaultValue = true)]
        public bool Sortenabled { get; set; }

        /// <summary>
        /// sortenabledtitle
        /// </summary>
        /// <value>sortenabledtitle</value>
        [DataMember(Name = "sortenabledtitle", EmitDefaultValue = false)]
        public string Sortenabledtitle { get; set; }

        /// <summary>
        /// Gets or Sets Sorticon
        /// </summary>
        [DataMember(Name = "sorticon", EmitDefaultValue = false)]
        public CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInnerSorticon Sorticon { get; set; }

        /// <summary>
        /// sortorder
        /// </summary>
        /// <value>sortorder</value>
        [DataMember(Name = "sortorder", EmitDefaultValue = false)]
        public int Sortorder { get; set; }

        /// <summary>
        /// title
        /// </summary>
        /// <value>title</value>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner {\n");
            sb.Append("  Heading: ").Append(Heading).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Movetitle: ").Append(Movetitle).Append("\n");
            sb.Append("  Sortdirection: ").Append(Sortdirection).Append("\n");
            sb.Append("  Sortenabled: ").Append(Sortenabled).Append("\n");
            sb.Append("  Sortenabledtitle: ").Append(Sortenabledtitle).Append("\n");
            sb.Append("  Sorticon: ").Append(Sorticon).Append("\n");
            sb.Append("  Sortorder: ").Append(Sortorder).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
