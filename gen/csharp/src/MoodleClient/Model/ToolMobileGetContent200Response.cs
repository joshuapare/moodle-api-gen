/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ToolMobileGetContent200Response
    /// </summary>
    [DataContract(Name = "tool_mobile_get_content_200_response")]
    public partial class ToolMobileGetContent200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolMobileGetContent200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ToolMobileGetContent200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolMobileGetContent200Response" /> class.
        /// </summary>
        /// <param name="disabled">Whether we consider this disabled or not. (default to null).</param>
        /// <param name="files">files (required).</param>
        /// <param name="javascript">JavaScript code. (required) (default to &quot;null&quot;).</param>
        /// <param name="otherdata">otherdata (required).</param>
        /// <param name="restrict">restrict (required).</param>
        /// <param name="templates">templates (required).</param>
        public ToolMobileGetContent200Response(bool disabled = null, List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> files = default(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>), string javascript = @"null", List<ToolMobileGetContent200ResponseOtherdataInner> otherdata = default(List<ToolMobileGetContent200ResponseOtherdataInner>), ToolMobileGetContent200ResponseRestrict restrict = default(ToolMobileGetContent200ResponseRestrict), List<ToolMobileGetContent200ResponseTemplatesInner> templates = default(List<ToolMobileGetContent200ResponseTemplatesInner>))
        {
            // to ensure "files" is required (not null)
            if (files == null)
            {
                throw new ArgumentNullException("files is a required property for ToolMobileGetContent200Response and cannot be null");
            }
            this.Files = files;
            // to ensure "javascript" is required (not null)
            if (javascript == null)
            {
                throw new ArgumentNullException("javascript is a required property for ToolMobileGetContent200Response and cannot be null");
            }
            this.Javascript = javascript;
            // to ensure "otherdata" is required (not null)
            if (otherdata == null)
            {
                throw new ArgumentNullException("otherdata is a required property for ToolMobileGetContent200Response and cannot be null");
            }
            this.Otherdata = otherdata;
            // to ensure "restrict" is required (not null)
            if (restrict == null)
            {
                throw new ArgumentNullException("restrict is a required property for ToolMobileGetContent200Response and cannot be null");
            }
            this.Restrict = restrict;
            // to ensure "templates" is required (not null)
            if (templates == null)
            {
                throw new ArgumentNullException("templates is a required property for ToolMobileGetContent200Response and cannot be null");
            }
            this.Templates = templates;
            this.Disabled = disabled;
        }

        /// <summary>
        /// Whether we consider this disabled or not.
        /// </summary>
        /// <value>Whether we consider this disabled or not.</value>
        [DataMember(Name = "disabled", EmitDefaultValue = true)]
        public bool Disabled { get; set; }

        /// <summary>
        /// Gets or Sets Files
        /// </summary>
        [DataMember(Name = "files", IsRequired = true, EmitDefaultValue = true)]
        public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> Files { get; set; }

        /// <summary>
        /// JavaScript code.
        /// </summary>
        /// <value>JavaScript code.</value>
        [DataMember(Name = "javascript", IsRequired = true, EmitDefaultValue = true)]
        public string Javascript { get; set; }

        /// <summary>
        /// Gets or Sets Otherdata
        /// </summary>
        [DataMember(Name = "otherdata", IsRequired = true, EmitDefaultValue = true)]
        public List<ToolMobileGetContent200ResponseOtherdataInner> Otherdata { get; set; }

        /// <summary>
        /// Gets or Sets Restrict
        /// </summary>
        [DataMember(Name = "restrict", IsRequired = true, EmitDefaultValue = true)]
        public ToolMobileGetContent200ResponseRestrict Restrict { get; set; }

        /// <summary>
        /// Gets or Sets Templates
        /// </summary>
        [DataMember(Name = "templates", IsRequired = true, EmitDefaultValue = true)]
        public List<ToolMobileGetContent200ResponseTemplatesInner> Templates { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToolMobileGetContent200Response {\n");
            sb.Append("  Disabled: ").Append(Disabled).Append("\n");
            sb.Append("  Files: ").Append(Files).Append("\n");
            sb.Append("  Javascript: ").Append(Javascript).Append("\n");
            sb.Append("  Otherdata: ").Append(Otherdata).Append("\n");
            sb.Append("  Restrict: ").Append(Restrict).Append("\n");
            sb.Append("  Templates: ").Append(Templates).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
