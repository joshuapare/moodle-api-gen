/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModForumUpdateDiscussionPostRequest
    /// </summary>
    [DataContract(Name = "mod_forum_update_discussion_post_request")]
    public partial class ModForumUpdateDiscussionPostRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModForumUpdateDiscussionPostRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModForumUpdateDiscussionPostRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModForumUpdateDiscussionPostRequest" /> class.
        /// </summary>
        /// <param name="message">Updated post message (HTML assumed if messageformat is not provided) (default to &quot;&quot;).</param>
        /// <param name="messageformat">message format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN) (default to 1).</param>
        /// <param name="options">options.</param>
        /// <param name="postid">Post to be updated. It can be a discussion topic post. (required) (default to null).</param>
        /// <param name="subject">Updated post subject (default to &quot;&quot;).</param>
        public ModForumUpdateDiscussionPostRequest(string message = @"", int messageformat = 1, List<ModForumUpdateDiscussionPostRequestOptionsInner> options = default(List<ModForumUpdateDiscussionPostRequestOptionsInner>), int postid = null, string subject = @"")
        {
            this.Postid = postid;
            // use default value if no "message" provided
            this.Message = message ?? @"";
            this.Messageformat = messageformat;
            this.Options = options;
            // use default value if no "subject" provided
            this.Subject = subject ?? @"";
        }

        /// <summary>
        /// Updated post message (HTML assumed if messageformat is not provided)
        /// </summary>
        /// <value>Updated post message (HTML assumed if messageformat is not provided)</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// message format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
        /// </summary>
        /// <value>message format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)</value>
        [DataMember(Name = "messageformat", EmitDefaultValue = false)]
        public int Messageformat { get; set; }

        /// <summary>
        /// Gets or Sets Options
        /// </summary>
        [DataMember(Name = "options", EmitDefaultValue = false)]
        public List<ModForumUpdateDiscussionPostRequestOptionsInner> Options { get; set; }

        /// <summary>
        /// Post to be updated. It can be a discussion topic post.
        /// </summary>
        /// <value>Post to be updated. It can be a discussion topic post.</value>
        [DataMember(Name = "postid", IsRequired = true, EmitDefaultValue = true)]
        public int Postid { get; set; }

        /// <summary>
        /// Updated post subject
        /// </summary>
        /// <value>Updated post subject</value>
        [DataMember(Name = "subject", EmitDefaultValue = false)]
        public string Subject { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModForumUpdateDiscussionPostRequest {\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Messageformat: ").Append(Messageformat).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("  Postid: ").Append(Postid).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
