/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner
    /// </summary>
    [DataContract(Name = "core_course_get_courses_by_field_200_response_courses_inner_filters_inner")]
    public partial class CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner" /> class.
        /// </summary>
        /// <param name="filter">Filter plugin name (default to &quot;null&quot;).</param>
        /// <param name="inheritedstate">1 or 0 to use when localstate is set to inherit (default to null).</param>
        /// <param name="localstate">Filter state: 1 for on, -1 for off, 0 if inherit (default to null).</param>
        public CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner(string filter = @"null", int inheritedstate = null, int localstate = null)
        {
            // use default value if no "filter" provided
            this.Filter = filter ?? @"null";
            this.Inheritedstate = inheritedstate;
            this.Localstate = localstate;
        }

        /// <summary>
        /// Filter plugin name
        /// </summary>
        /// <value>Filter plugin name</value>
        [DataMember(Name = "filter", EmitDefaultValue = false)]
        public string Filter { get; set; }

        /// <summary>
        /// 1 or 0 to use when localstate is set to inherit
        /// </summary>
        /// <value>1 or 0 to use when localstate is set to inherit</value>
        [DataMember(Name = "inheritedstate", EmitDefaultValue = false)]
        public int Inheritedstate { get; set; }

        /// <summary>
        /// Filter state: 1 for on, -1 for off, 0 if inherit
        /// </summary>
        /// <value>Filter state: 1 for on, -1 for off, 0 if inherit</value>
        [DataMember(Name = "localstate", EmitDefaultValue = false)]
        public int Localstate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner {\n");
            sb.Append("  Filter: ").Append(Filter).Append("\n");
            sb.Append("  Inheritedstate: ").Append(Inheritedstate).Append("\n");
            sb.Append("  Localstate: ").Append(Localstate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
