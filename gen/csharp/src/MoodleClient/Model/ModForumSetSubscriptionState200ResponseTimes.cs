/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModForumSetSubscriptionState200ResponseTimes
    /// </summary>
    [DataContract(Name = "mod_forum_set_subscription_state_200_response_times")]
    public partial class ModForumSetSubscriptionState200ResponseTimes : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModForumSetSubscriptionState200ResponseTimes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModForumSetSubscriptionState200ResponseTimes() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModForumSetSubscriptionState200ResponseTimes" /> class.
        /// </summary>
        /// <param name="end">end (required).</param>
        /// <param name="locked">locked (required).</param>
        /// <param name="modified">modified (required).</param>
        /// <param name="start">start (required).</param>
        public ModForumSetSubscriptionState200ResponseTimes(int end = default(int), int locked = default(int), int modified = default(int), int start = default(int))
        {
            this.End = end;
            this.Locked = locked;
            this.Modified = modified;
            this.Start = start;
        }

        /// <summary>
        /// end
        /// </summary>
        /// <value>end</value>
        [DataMember(Name = "end", IsRequired = true, EmitDefaultValue = true)]
        public int End { get; set; }

        /// <summary>
        /// locked
        /// </summary>
        /// <value>locked</value>
        [DataMember(Name = "locked", IsRequired = true, EmitDefaultValue = true)]
        public int Locked { get; set; }

        /// <summary>
        /// modified
        /// </summary>
        /// <value>modified</value>
        [DataMember(Name = "modified", IsRequired = true, EmitDefaultValue = true)]
        public int Modified { get; set; }

        /// <summary>
        /// start
        /// </summary>
        /// <value>start</value>
        [DataMember(Name = "start", IsRequired = true, EmitDefaultValue = true)]
        public int Start { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModForumSetSubscriptionState200ResponseTimes {\n");
            sb.Append("  End: ").Append(End).Append("\n");
            sb.Append("  Locked: ").Append(Locked).Append("\n");
            sb.Append("  Modified: ").Append(Modified).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
