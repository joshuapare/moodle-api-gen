/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// CoreCourseDuplicateCourseRequestOptionsInner
    /// </summary>
    [DataContract(Name = "core_course_duplicate_course_request_options_inner")]
    public partial class CoreCourseDuplicateCourseRequestOptionsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCourseDuplicateCourseRequestOptionsInner" /> class.
        /// </summary>
        /// <param name="name">The backup option name:                                             \&quot;activities\&quot; (int) Include course activites (default to 1 that is equal to yes),                                             \&quot;blocks\&quot; (int) Include course blocks (default to 1 that is equal to yes),                                             \&quot;filters\&quot; (int) Include course filters  (default to 1 that is equal to yes),                                             \&quot;users\&quot; (int) Include users (default to 0 that is equal to no),                                             \&quot;enrolments\&quot; (int) Include enrolment methods (default to 1 - restore only with users),                                             \&quot;role_assignments\&quot; (int) Include role assignments  (default to 0 that is equal to no),                                             \&quot;comments\&quot; (int) Include user comments  (default to 0 that is equal to no),                                             \&quot;userscompletion\&quot; (int) Include user course completion information  (default to 0 that is equal to no),                                             \&quot;logs\&quot; (int) Include course logs  (default to 0 that is equal to no),                                             \&quot;grade_histories\&quot; (int) Include histories  (default to 0 that is equal to no) (default to &quot;null&quot;).</param>
        /// <param name="value">the value for the option 1 (yes) or 0 (no) (default to &quot;null&quot;).</param>
        public CoreCourseDuplicateCourseRequestOptionsInner(string name = @"null", string value = @"null")
        {
            // use default value if no "name" provided
            this.Name = name ?? @"null";
            // use default value if no "value" provided
            this.Value = value ?? @"null";
        }

        /// <summary>
        /// The backup option name:                                             \&quot;activities\&quot; (int) Include course activites (default to 1 that is equal to yes),                                             \&quot;blocks\&quot; (int) Include course blocks (default to 1 that is equal to yes),                                             \&quot;filters\&quot; (int) Include course filters  (default to 1 that is equal to yes),                                             \&quot;users\&quot; (int) Include users (default to 0 that is equal to no),                                             \&quot;enrolments\&quot; (int) Include enrolment methods (default to 1 - restore only with users),                                             \&quot;role_assignments\&quot; (int) Include role assignments  (default to 0 that is equal to no),                                             \&quot;comments\&quot; (int) Include user comments  (default to 0 that is equal to no),                                             \&quot;userscompletion\&quot; (int) Include user course completion information  (default to 0 that is equal to no),                                             \&quot;logs\&quot; (int) Include course logs  (default to 0 that is equal to no),                                             \&quot;grade_histories\&quot; (int) Include histories  (default to 0 that is equal to no)
        /// </summary>
        /// <value>The backup option name:                                             \&quot;activities\&quot; (int) Include course activites (default to 1 that is equal to yes),                                             \&quot;blocks\&quot; (int) Include course blocks (default to 1 that is equal to yes),                                             \&quot;filters\&quot; (int) Include course filters  (default to 1 that is equal to yes),                                             \&quot;users\&quot; (int) Include users (default to 0 that is equal to no),                                             \&quot;enrolments\&quot; (int) Include enrolment methods (default to 1 - restore only with users),                                             \&quot;role_assignments\&quot; (int) Include role assignments  (default to 0 that is equal to no),                                             \&quot;comments\&quot; (int) Include user comments  (default to 0 that is equal to no),                                             \&quot;userscompletion\&quot; (int) Include user course completion information  (default to 0 that is equal to no),                                             \&quot;logs\&quot; (int) Include course logs  (default to 0 that is equal to no),                                             \&quot;grade_histories\&quot; (int) Include histories  (default to 0 that is equal to no)</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// the value for the option 1 (yes) or 0 (no)
        /// </summary>
        /// <value>the value for the option 1 (yes) or 0 (no)</value>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public string Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCourseDuplicateCourseRequestOptionsInner {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
