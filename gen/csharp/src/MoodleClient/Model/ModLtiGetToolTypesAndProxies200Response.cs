/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModLtiGetToolTypesAndProxies200Response
    /// </summary>
    [DataContract(Name = "mod_lti_get_tool_types_and_proxies_200_response")]
    public partial class ModLtiGetToolTypesAndProxies200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModLtiGetToolTypesAndProxies200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModLtiGetToolTypesAndProxies200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModLtiGetToolTypesAndProxies200Response" /> class.
        /// </summary>
        /// <param name="limit">Limit of how many tool types to show (default to null).</param>
        /// <param name="offset">Offset of tool types (default to null).</param>
        /// <param name="proxies">proxies (required).</param>
        /// <param name="types">types (required).</param>
        public ModLtiGetToolTypesAndProxies200Response(int limit = null, int offset = null, List<ModLtiGetToolTypesAndProxies200ResponseProxiesInner> proxies = default(List<ModLtiGetToolTypesAndProxies200ResponseProxiesInner>), List<ModLtiGetToolTypesAndProxies200ResponseTypesInner> types = default(List<ModLtiGetToolTypesAndProxies200ResponseTypesInner>))
        {
            // to ensure "proxies" is required (not null)
            if (proxies == null)
            {
                throw new ArgumentNullException("proxies is a required property for ModLtiGetToolTypesAndProxies200Response and cannot be null");
            }
            this.Proxies = proxies;
            // to ensure "types" is required (not null)
            if (types == null)
            {
                throw new ArgumentNullException("types is a required property for ModLtiGetToolTypesAndProxies200Response and cannot be null");
            }
            this.Types = types;
            this.Limit = limit;
            this.Offset = offset;
        }

        /// <summary>
        /// Limit of how many tool types to show
        /// </summary>
        /// <value>Limit of how many tool types to show</value>
        [DataMember(Name = "limit", EmitDefaultValue = false)]
        public int Limit { get; set; }

        /// <summary>
        /// Offset of tool types
        /// </summary>
        /// <value>Offset of tool types</value>
        [DataMember(Name = "offset", EmitDefaultValue = false)]
        public int Offset { get; set; }

        /// <summary>
        /// Gets or Sets Proxies
        /// </summary>
        [DataMember(Name = "proxies", IsRequired = true, EmitDefaultValue = true)]
        public List<ModLtiGetToolTypesAndProxies200ResponseProxiesInner> Proxies { get; set; }

        /// <summary>
        /// Gets or Sets Types
        /// </summary>
        [DataMember(Name = "types", IsRequired = true, EmitDefaultValue = true)]
        public List<ModLtiGetToolTypesAndProxies200ResponseTypesInner> Types { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModLtiGetToolTypesAndProxies200Response {\n");
            sb.Append("  Limit: ").Append(Limit).Append("\n");
            sb.Append("  Offset: ").Append(Offset).Append("\n");
            sb.Append("  Proxies: ").Append(Proxies).Append("\n");
            sb.Append("  Types: ").Append(Types).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
