/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModChatGetSessions200ResponseSessionsInnerSessionusersInner
    /// </summary>
    [DataContract(Name = "mod_chat_get_sessions_200_response_sessions_inner_sessionusers_inner")]
    public partial class ModChatGetSessions200ResponseSessionsInnerSessionusersInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModChatGetSessions200ResponseSessionsInnerSessionusersInner" /> class.
        /// </summary>
        /// <param name="messagecount">Number of messages in the session. (default to null).</param>
        /// <param name="userid">User id. (default to null).</param>
        public ModChatGetSessions200ResponseSessionsInnerSessionusersInner(int messagecount = null, int userid = null)
        {
            this.Messagecount = messagecount;
            this.Userid = userid;
        }

        /// <summary>
        /// Number of messages in the session.
        /// </summary>
        /// <value>Number of messages in the session.</value>
        [DataMember(Name = "messagecount", EmitDefaultValue = false)]
        public int Messagecount { get; set; }

        /// <summary>
        /// User id.
        /// </summary>
        /// <value>User id.</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModChatGetSessions200ResponseSessionsInnerSessionusersInner {\n");
            sb.Append("  Messagecount: ").Append(Messagecount).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
