/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModChatGetSessions200ResponseSessionsInner
    /// </summary>
    [DataContract(Name = "mod_chat_get_sessions_200_response_sessions_inner")]
    public partial class ModChatGetSessions200ResponseSessionsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModChatGetSessions200ResponseSessionsInner" /> class.
        /// </summary>
        /// <param name="iscomplete">Whether the session is completed or not. (default to null).</param>
        /// <param name="sessionend">Session end time. (default to null).</param>
        /// <param name="sessionstart">Session start time. (default to null).</param>
        /// <param name="sessionusers">sessionusers.</param>
        public ModChatGetSessions200ResponseSessionsInner(bool iscomplete = null, int sessionend = null, int sessionstart = null, List<ModChatGetSessions200ResponseSessionsInnerSessionusersInner> sessionusers = default(List<ModChatGetSessions200ResponseSessionsInnerSessionusersInner>))
        {
            this.Iscomplete = iscomplete;
            this.Sessionend = sessionend;
            this.Sessionstart = sessionstart;
            this.Sessionusers = sessionusers;
        }

        /// <summary>
        /// Whether the session is completed or not.
        /// </summary>
        /// <value>Whether the session is completed or not.</value>
        [DataMember(Name = "iscomplete", EmitDefaultValue = true)]
        public bool Iscomplete { get; set; }

        /// <summary>
        /// Session end time.
        /// </summary>
        /// <value>Session end time.</value>
        [DataMember(Name = "sessionend", EmitDefaultValue = false)]
        public int Sessionend { get; set; }

        /// <summary>
        /// Session start time.
        /// </summary>
        /// <value>Session start time.</value>
        [DataMember(Name = "sessionstart", EmitDefaultValue = false)]
        public int Sessionstart { get; set; }

        /// <summary>
        /// Gets or Sets Sessionusers
        /// </summary>
        [DataMember(Name = "sessionusers", EmitDefaultValue = false)]
        public List<ModChatGetSessions200ResponseSessionsInnerSessionusersInner> Sessionusers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModChatGetSessions200ResponseSessionsInner {\n");
            sb.Append("  Iscomplete: ").Append(Iscomplete).Append("\n");
            sb.Append("  Sessionend: ").Append(Sessionend).Append("\n");
            sb.Append("  Sessionstart: ").Append(Sessionstart).Append("\n");
            sb.Append("  Sessionusers: ").Append(Sessionusers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
