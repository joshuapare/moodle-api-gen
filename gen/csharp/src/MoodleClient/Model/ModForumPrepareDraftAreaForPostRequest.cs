/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModForumPrepareDraftAreaForPostRequest
    /// </summary>
    [DataContract(Name = "mod_forum_prepare_draft_area_for_post_request")]
    public partial class ModForumPrepareDraftAreaForPostRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModForumPrepareDraftAreaForPostRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModForumPrepareDraftAreaForPostRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModForumPrepareDraftAreaForPostRequest" /> class.
        /// </summary>
        /// <param name="area">Area to prepare: attachment or post. (required) (default to &quot;null&quot;).</param>
        /// <param name="draftitemid">The draft item id to use. 0 to generate one. (default to 0).</param>
        /// <param name="filestokeep">filestokeep.</param>
        /// <param name="postid">Post to prepare the draft area for. (required) (default to null).</param>
        public ModForumPrepareDraftAreaForPostRequest(string area = @"null", int draftitemid = 0, List<ModForumPrepareDraftAreaForPostRequestFilestokeepInner> filestokeep = default(List<ModForumPrepareDraftAreaForPostRequestFilestokeepInner>), int postid = null)
        {
            // to ensure "area" is required (not null)
            if (area == null)
            {
                throw new ArgumentNullException("area is a required property for ModForumPrepareDraftAreaForPostRequest and cannot be null");
            }
            this.Area = area;
            this.Postid = postid;
            this.Draftitemid = draftitemid;
            this.Filestokeep = filestokeep;
        }

        /// <summary>
        /// Area to prepare: attachment or post.
        /// </summary>
        /// <value>Area to prepare: attachment or post.</value>
        [DataMember(Name = "area", IsRequired = true, EmitDefaultValue = true)]
        public string Area { get; set; }

        /// <summary>
        /// The draft item id to use. 0 to generate one.
        /// </summary>
        /// <value>The draft item id to use. 0 to generate one.</value>
        [DataMember(Name = "draftitemid", EmitDefaultValue = false)]
        public int Draftitemid { get; set; }

        /// <summary>
        /// Gets or Sets Filestokeep
        /// </summary>
        [DataMember(Name = "filestokeep", EmitDefaultValue = false)]
        public List<ModForumPrepareDraftAreaForPostRequestFilestokeepInner> Filestokeep { get; set; }

        /// <summary>
        /// Post to prepare the draft area for.
        /// </summary>
        /// <value>Post to prepare the draft area for.</value>
        [DataMember(Name = "postid", IsRequired = true, EmitDefaultValue = true)]
        public int Postid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModForumPrepareDraftAreaForPostRequest {\n");
            sb.Append("  Area: ").Append(Area).Append("\n");
            sb.Append("  Draftitemid: ").Append(Draftitemid).Append("\n");
            sb.Append("  Filestokeep: ").Append(Filestokeep).Append("\n");
            sb.Append("  Postid: ").Append(Postid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
