/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModDataGetEntriesRequest
    /// </summary>
    [DataContract(Name = "mod_data_get_entries_request")]
    public partial class ModDataGetEntriesRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModDataGetEntriesRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModDataGetEntriesRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModDataGetEntriesRequest" /> class.
        /// </summary>
        /// <param name="databaseid">data instance id (required).</param>
        /// <param name="groupid">Group id, 0 means that the function will determine the user group (default to 0).</param>
        /// <param name="order">The direction of the sorting: &#39;ASC&#39; or &#39;DESC&#39;.                                                 Empty for using the default database setting. (default to &quot;null&quot;).</param>
        /// <param name="page">The page of records to return. (default to 0).</param>
        /// <param name="perpage">The number of records to return per page (default to 0).</param>
        /// <param name="returncontents">Whether to return contents or not. This will return each entry                                                         raw contents and the complete list view (using the template). (default to false).</param>
        /// <param name="sort">Sort the records by this field id, reserved ids are:                                                 0: timeadded                                                 -1: firstname                                                 -2: lastname                                                 -3: approved                                                 -4: timemodified.                                                 Empty for using the default database setting. (default to null).</param>
        public ModDataGetEntriesRequest(int databaseid = default(int), int groupid = 0, string order = @"null", int page = 0, int perpage = 0, bool returncontents = false, int sort = null)
        {
            this.Databaseid = databaseid;
            this.Groupid = groupid;
            // use default value if no "order" provided
            this.Order = order ?? @"null";
            this.Page = page;
            this.Perpage = perpage;
            this.Returncontents = returncontents;
            this.Sort = sort;
        }

        /// <summary>
        /// data instance id
        /// </summary>
        /// <value>data instance id</value>
        [DataMember(Name = "databaseid", IsRequired = true, EmitDefaultValue = true)]
        public int Databaseid { get; set; }

        /// <summary>
        /// Group id, 0 means that the function will determine the user group
        /// </summary>
        /// <value>Group id, 0 means that the function will determine the user group</value>
        [DataMember(Name = "groupid", EmitDefaultValue = false)]
        public int Groupid { get; set; }

        /// <summary>
        /// The direction of the sorting: &#39;ASC&#39; or &#39;DESC&#39;.                                                 Empty for using the default database setting.
        /// </summary>
        /// <value>The direction of the sorting: &#39;ASC&#39; or &#39;DESC&#39;.                                                 Empty for using the default database setting.</value>
        [DataMember(Name = "order", EmitDefaultValue = false)]
        public string Order { get; set; }

        /// <summary>
        /// The page of records to return.
        /// </summary>
        /// <value>The page of records to return.</value>
        [DataMember(Name = "page", EmitDefaultValue = false)]
        public int Page { get; set; }

        /// <summary>
        /// The number of records to return per page
        /// </summary>
        /// <value>The number of records to return per page</value>
        [DataMember(Name = "perpage", EmitDefaultValue = false)]
        public int Perpage { get; set; }

        /// <summary>
        /// Whether to return contents or not. This will return each entry                                                         raw contents and the complete list view (using the template).
        /// </summary>
        /// <value>Whether to return contents or not. This will return each entry                                                         raw contents and the complete list view (using the template).</value>
        [DataMember(Name = "returncontents", EmitDefaultValue = true)]
        public bool Returncontents { get; set; }

        /// <summary>
        /// Sort the records by this field id, reserved ids are:                                                 0: timeadded                                                 -1: firstname                                                 -2: lastname                                                 -3: approved                                                 -4: timemodified.                                                 Empty for using the default database setting.
        /// </summary>
        /// <value>Sort the records by this field id, reserved ids are:                                                 0: timeadded                                                 -1: firstname                                                 -2: lastname                                                 -3: approved                                                 -4: timemodified.                                                 Empty for using the default database setting.</value>
        [DataMember(Name = "sort", EmitDefaultValue = false)]
        public int Sort { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModDataGetEntriesRequest {\n");
            sb.Append("  Databaseid: ").Append(Databaseid).Append("\n");
            sb.Append("  Groupid: ").Append(Groupid).Append("\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("  Page: ").Append(Page).Append("\n");
            sb.Append("  Perpage: ").Append(Perpage).Append("\n");
            sb.Append("  Returncontents: ").Append(Returncontents).Append("\n");
            sb.Append("  Sort: ").Append(Sort).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
