/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModWorkshopGetGradesReport200ResponseReportGradesInner
    /// </summary>
    [DataContract(Name = "mod_workshop_get_grades_report_200_response_report_grades_inner")]
    public partial class ModWorkshopGetGradesReport200ResponseReportGradesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModWorkshopGetGradesReport200ResponseReportGradesInner" /> class.
        /// </summary>
        /// <param name="gradinggrade">Computed grade for the assessment. (default to nullM).</param>
        /// <param name="reviewedby">reviewedby.</param>
        /// <param name="reviewerof">reviewerof.</param>
        /// <param name="submissiongrade">Aggregated grade for the submission. (default to nullM).</param>
        /// <param name="submissiongradeover">Grade for the assessment overrided                                         by the teacher. (default to nullM).</param>
        /// <param name="submissiongradeoverby">The id of the user who overrided                                         the grade. (default to null).</param>
        /// <param name="submissionid">Submission id. (default to null).</param>
        /// <param name="submissionmodified">Timestamp submission was updated. (default to null).</param>
        /// <param name="submissionpublished">Whether is a submission published. (default to null).</param>
        /// <param name="submissiontitle">Submission title. (default to &quot;null&quot;).</param>
        /// <param name="userid">The id of the user being displayed in the report. (default to null).</param>
        public ModWorkshopGetGradesReport200ResponseReportGradesInner(decimal gradinggrade = nullM, List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner> reviewedby = default(List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner>), List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner> reviewerof = default(List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner>), decimal submissiongrade = nullM, decimal submissiongradeover = nullM, int submissiongradeoverby = null, int submissionid = null, int submissionmodified = null, int submissionpublished = null, string submissiontitle = @"null", int userid = null)
        {
            this.Gradinggrade = gradinggrade;
            this.Reviewedby = reviewedby;
            this.Reviewerof = reviewerof;
            this.Submissiongrade = submissiongrade;
            this.Submissiongradeover = submissiongradeover;
            this.Submissiongradeoverby = submissiongradeoverby;
            this.Submissionid = submissionid;
            this.Submissionmodified = submissionmodified;
            this.Submissionpublished = submissionpublished;
            // use default value if no "submissiontitle" provided
            this.Submissiontitle = submissiontitle ?? @"null";
            this.Userid = userid;
        }

        /// <summary>
        /// Computed grade for the assessment.
        /// </summary>
        /// <value>Computed grade for the assessment.</value>
        [DataMember(Name = "gradinggrade", EmitDefaultValue = false)]
        public decimal Gradinggrade { get; set; }

        /// <summary>
        /// Gets or Sets Reviewedby
        /// </summary>
        [DataMember(Name = "reviewedby", EmitDefaultValue = false)]
        public List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner> Reviewedby { get; set; }

        /// <summary>
        /// Gets or Sets Reviewerof
        /// </summary>
        [DataMember(Name = "reviewerof", EmitDefaultValue = false)]
        public List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner> Reviewerof { get; set; }

        /// <summary>
        /// Aggregated grade for the submission.
        /// </summary>
        /// <value>Aggregated grade for the submission.</value>
        [DataMember(Name = "submissiongrade", EmitDefaultValue = false)]
        public decimal Submissiongrade { get; set; }

        /// <summary>
        /// Grade for the assessment overrided                                         by the teacher.
        /// </summary>
        /// <value>Grade for the assessment overrided                                         by the teacher.</value>
        [DataMember(Name = "submissiongradeover", EmitDefaultValue = false)]
        public decimal Submissiongradeover { get; set; }

        /// <summary>
        /// The id of the user who overrided                                         the grade.
        /// </summary>
        /// <value>The id of the user who overrided                                         the grade.</value>
        [DataMember(Name = "submissiongradeoverby", EmitDefaultValue = false)]
        public int Submissiongradeoverby { get; set; }

        /// <summary>
        /// Submission id.
        /// </summary>
        /// <value>Submission id.</value>
        [DataMember(Name = "submissionid", EmitDefaultValue = false)]
        public int Submissionid { get; set; }

        /// <summary>
        /// Timestamp submission was updated.
        /// </summary>
        /// <value>Timestamp submission was updated.</value>
        [DataMember(Name = "submissionmodified", EmitDefaultValue = false)]
        public int Submissionmodified { get; set; }

        /// <summary>
        /// Whether is a submission published.
        /// </summary>
        /// <value>Whether is a submission published.</value>
        [DataMember(Name = "submissionpublished", EmitDefaultValue = false)]
        public int Submissionpublished { get; set; }

        /// <summary>
        /// Submission title.
        /// </summary>
        /// <value>Submission title.</value>
        [DataMember(Name = "submissiontitle", EmitDefaultValue = false)]
        public string Submissiontitle { get; set; }

        /// <summary>
        /// The id of the user being displayed in the report.
        /// </summary>
        /// <value>The id of the user being displayed in the report.</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModWorkshopGetGradesReport200ResponseReportGradesInner {\n");
            sb.Append("  Gradinggrade: ").Append(Gradinggrade).Append("\n");
            sb.Append("  Reviewedby: ").Append(Reviewedby).Append("\n");
            sb.Append("  Reviewerof: ").Append(Reviewerof).Append("\n");
            sb.Append("  Submissiongrade: ").Append(Submissiongrade).Append("\n");
            sb.Append("  Submissiongradeover: ").Append(Submissiongradeover).Append("\n");
            sb.Append("  Submissiongradeoverby: ").Append(Submissiongradeoverby).Append("\n");
            sb.Append("  Submissionid: ").Append(Submissionid).Append("\n");
            sb.Append("  Submissionmodified: ").Append(Submissionmodified).Append("\n");
            sb.Append("  Submissionpublished: ").Append(Submissionpublished).Append("\n");
            sb.Append("  Submissiontitle: ").Append(Submissiontitle).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
