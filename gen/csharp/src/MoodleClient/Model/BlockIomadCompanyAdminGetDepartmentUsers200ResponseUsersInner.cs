/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// BlockIomadCompanyAdminGetDepartmentUsers200ResponseUsersInner
    /// </summary>
    [DataContract(Name = "block_iomad_company_admin_get_department_users_200_response_users_inner")]
    public partial class BlockIomadCompanyAdminGetDepartmentUsers200ResponseUsersInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BlockIomadCompanyAdminGetDepartmentUsers200ResponseUsersInner" /> class.
        /// </summary>
        /// <param name="companyid">Company ID.</param>
        /// <param name="departmentid">Department ID.</param>
        /// <param name="email">User email address (default to &quot;null&quot;).</param>
        /// <param name="firstname">User firstname (default to &quot;null&quot;).</param>
        /// <param name="id">User ID.</param>
        /// <param name="lastname">User lastname (default to &quot;null&quot;).</param>
        public BlockIomadCompanyAdminGetDepartmentUsers200ResponseUsersInner(int companyid = default(int), int departmentid = default(int), string email = @"null", string firstname = @"null", int id = default(int), string lastname = @"null")
        {
            this.Companyid = companyid;
            this.Departmentid = departmentid;
            // use default value if no "email" provided
            this.Email = email ?? @"null";
            // use default value if no "firstname" provided
            this.Firstname = firstname ?? @"null";
            this.Id = id;
            // use default value if no "lastname" provided
            this.Lastname = lastname ?? @"null";
        }

        /// <summary>
        /// Company ID
        /// </summary>
        /// <value>Company ID</value>
        [DataMember(Name = "companyid", EmitDefaultValue = false)]
        public int Companyid { get; set; }

        /// <summary>
        /// Department ID
        /// </summary>
        /// <value>Department ID</value>
        [DataMember(Name = "departmentid", EmitDefaultValue = false)]
        public int Departmentid { get; set; }

        /// <summary>
        /// User email address
        /// </summary>
        /// <value>User email address</value>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// User firstname
        /// </summary>
        /// <value>User firstname</value>
        [DataMember(Name = "firstname", EmitDefaultValue = false)]
        public string Firstname { get; set; }

        /// <summary>
        /// User ID
        /// </summary>
        /// <value>User ID</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// User lastname
        /// </summary>
        /// <value>User lastname</value>
        [DataMember(Name = "lastname", EmitDefaultValue = false)]
        public string Lastname { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BlockIomadCompanyAdminGetDepartmentUsers200ResponseUsersInner {\n");
            sb.Append("  Companyid: ").Append(Companyid).Append("\n");
            sb.Append("  Departmentid: ").Append(Departmentid).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Firstname: ").Append(Firstname).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Lastname: ").Append(Lastname).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
