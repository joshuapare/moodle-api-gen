/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModDataGetDatabasesByCourses200ResponseDatabasesInner
    /// </summary>
    [DataContract(Name = "mod_data_get_databases_by_courses_200_response_databases_inner")]
    public partial class ModDataGetDatabasesByCourses200ResponseDatabasesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModDataGetDatabasesByCourses200ResponseDatabasesInner" /> class.
        /// </summary>
        /// <param name="addtemplate">addtemplate field (default to &quot;null&quot;).</param>
        /// <param name="approval">approval field (default to null).</param>
        /// <param name="asearchtemplate">asearchtemplate field (default to &quot;null&quot;).</param>
        /// <param name="assessed">assessed field (default to null).</param>
        /// <param name="assesstimefinish">assesstimefinish field (default to null).</param>
        /// <param name="assesstimestart">assesstimestart field (default to null).</param>
        /// <param name="comments">comments enabled (default to null).</param>
        /// <param name="course">Course id (default to null).</param>
        /// <param name="coursemodule">coursemodule (default to null).</param>
        /// <param name="csstemplate">csstemplate field (default to &quot;null&quot;).</param>
        /// <param name="defaultsort">defaultsort field (default to null).</param>
        /// <param name="defaultsortdir">defaultsortdir field (default to null).</param>
        /// <param name="editany">editany field (not used any more) (default to null).</param>
        /// <param name="id">Database id (default to null).</param>
        /// <param name="intro">The Database intro (default to &quot;null&quot;).</param>
        /// <param name="introfiles">introfiles.</param>
        /// <param name="introformat">intro format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN) (default to 0).</param>
        /// <param name="jstemplate">jstemplate field (default to &quot;null&quot;).</param>
        /// <param name="lang">Forced activity language.</param>
        /// <param name="listtemplate">listtemplate field (default to &quot;null&quot;).</param>
        /// <param name="listtemplatefooter">listtemplatefooter field (default to &quot;null&quot;).</param>
        /// <param name="listtemplateheader">listtemplateheader field (default to &quot;null&quot;).</param>
        /// <param name="manageapproved">manageapproved field (default to null).</param>
        /// <param name="maxentries">maxentries field (default to null).</param>
        /// <param name="name">Database name (default to &quot;null&quot;).</param>
        /// <param name="notification">notification field (not used any more) (default to null).</param>
        /// <param name="requiredentries">requiredentries field (default to null).</param>
        /// <param name="requiredentriestoview">requiredentriestoview field (default to null).</param>
        /// <param name="rssarticles">rssarticles field (default to null).</param>
        /// <param name="rsstemplate">rsstemplate field (default to &quot;null&quot;).</param>
        /// <param name="rsstitletemplate">rsstitletemplate field (default to &quot;null&quot;).</param>
        /// <param name="scale">scale field (default to null).</param>
        /// <param name="singletemplate">singletemplate field (default to &quot;null&quot;).</param>
        /// <param name="timeavailablefrom">timeavailablefrom field (default to null).</param>
        /// <param name="timeavailableto">timeavailableto field (default to null).</param>
        /// <param name="timemodified">Time modified (default to null).</param>
        /// <param name="timeviewfrom">timeviewfrom field (default to null).</param>
        /// <param name="timeviewto">timeviewto field (default to null).</param>
        public ModDataGetDatabasesByCourses200ResponseDatabasesInner(string addtemplate = @"null", bool approval = null, string asearchtemplate = @"null", int assessed = null, int assesstimefinish = null, int assesstimestart = null, bool comments = null, int course = null, int coursemodule = null, string csstemplate = @"null", int defaultsort = null, int defaultsortdir = null, bool editany = null, int id = null, string intro = @"null", List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> introfiles = default(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>), int introformat = 0, string jstemplate = @"null", string lang = default(string), string listtemplate = @"null", string listtemplatefooter = @"null", string listtemplateheader = @"null", bool manageapproved = null, int maxentries = null, string name = @"null", int notification = null, int requiredentries = null, int requiredentriestoview = null, int rssarticles = null, string rsstemplate = @"null", string rsstitletemplate = @"null", int scale = null, string singletemplate = @"null", int timeavailablefrom = null, int timeavailableto = null, int timemodified = null, int timeviewfrom = null, int timeviewto = null)
        {
            // use default value if no "addtemplate" provided
            this.Addtemplate = addtemplate ?? @"null";
            this.Approval = approval;
            // use default value if no "asearchtemplate" provided
            this.Asearchtemplate = asearchtemplate ?? @"null";
            this.Assessed = assessed;
            this.Assesstimefinish = assesstimefinish;
            this.Assesstimestart = assesstimestart;
            this.Comments = comments;
            this.Course = course;
            this.Coursemodule = coursemodule;
            // use default value if no "csstemplate" provided
            this.Csstemplate = csstemplate ?? @"null";
            this.Defaultsort = defaultsort;
            this.Defaultsortdir = defaultsortdir;
            this.Editany = editany;
            this.Id = id;
            // use default value if no "intro" provided
            this.Intro = intro ?? @"null";
            this.Introfiles = introfiles;
            this.Introformat = introformat;
            // use default value if no "jstemplate" provided
            this.Jstemplate = jstemplate ?? @"null";
            this.Lang = lang;
            // use default value if no "listtemplate" provided
            this.Listtemplate = listtemplate ?? @"null";
            // use default value if no "listtemplatefooter" provided
            this.Listtemplatefooter = listtemplatefooter ?? @"null";
            // use default value if no "listtemplateheader" provided
            this.Listtemplateheader = listtemplateheader ?? @"null";
            this.Manageapproved = manageapproved;
            this.Maxentries = maxentries;
            // use default value if no "name" provided
            this.Name = name ?? @"null";
            this.Notification = notification;
            this.Requiredentries = requiredentries;
            this.Requiredentriestoview = requiredentriestoview;
            this.Rssarticles = rssarticles;
            // use default value if no "rsstemplate" provided
            this.Rsstemplate = rsstemplate ?? @"null";
            // use default value if no "rsstitletemplate" provided
            this.Rsstitletemplate = rsstitletemplate ?? @"null";
            this.Scale = scale;
            // use default value if no "singletemplate" provided
            this.Singletemplate = singletemplate ?? @"null";
            this.Timeavailablefrom = timeavailablefrom;
            this.Timeavailableto = timeavailableto;
            this.Timemodified = timemodified;
            this.Timeviewfrom = timeviewfrom;
            this.Timeviewto = timeviewto;
        }

        /// <summary>
        /// addtemplate field
        /// </summary>
        /// <value>addtemplate field</value>
        [DataMember(Name = "addtemplate", EmitDefaultValue = false)]
        public string Addtemplate { get; set; }

        /// <summary>
        /// approval field
        /// </summary>
        /// <value>approval field</value>
        [DataMember(Name = "approval", EmitDefaultValue = true)]
        public bool Approval { get; set; }

        /// <summary>
        /// asearchtemplate field
        /// </summary>
        /// <value>asearchtemplate field</value>
        [DataMember(Name = "asearchtemplate", EmitDefaultValue = false)]
        public string Asearchtemplate { get; set; }

        /// <summary>
        /// assessed field
        /// </summary>
        /// <value>assessed field</value>
        [DataMember(Name = "assessed", EmitDefaultValue = false)]
        public int Assessed { get; set; }

        /// <summary>
        /// assesstimefinish field
        /// </summary>
        /// <value>assesstimefinish field</value>
        [DataMember(Name = "assesstimefinish", EmitDefaultValue = false)]
        public int Assesstimefinish { get; set; }

        /// <summary>
        /// assesstimestart field
        /// </summary>
        /// <value>assesstimestart field</value>
        [DataMember(Name = "assesstimestart", EmitDefaultValue = false)]
        public int Assesstimestart { get; set; }

        /// <summary>
        /// comments enabled
        /// </summary>
        /// <value>comments enabled</value>
        [DataMember(Name = "comments", EmitDefaultValue = true)]
        public bool Comments { get; set; }

        /// <summary>
        /// Course id
        /// </summary>
        /// <value>Course id</value>
        [DataMember(Name = "course", EmitDefaultValue = false)]
        public int Course { get; set; }

        /// <summary>
        /// coursemodule
        /// </summary>
        /// <value>coursemodule</value>
        [DataMember(Name = "coursemodule", EmitDefaultValue = false)]
        public int Coursemodule { get; set; }

        /// <summary>
        /// csstemplate field
        /// </summary>
        /// <value>csstemplate field</value>
        [DataMember(Name = "csstemplate", EmitDefaultValue = false)]
        public string Csstemplate { get; set; }

        /// <summary>
        /// defaultsort field
        /// </summary>
        /// <value>defaultsort field</value>
        [DataMember(Name = "defaultsort", EmitDefaultValue = false)]
        public int Defaultsort { get; set; }

        /// <summary>
        /// defaultsortdir field
        /// </summary>
        /// <value>defaultsortdir field</value>
        [DataMember(Name = "defaultsortdir", EmitDefaultValue = false)]
        public int Defaultsortdir { get; set; }

        /// <summary>
        /// editany field (not used any more)
        /// </summary>
        /// <value>editany field (not used any more)</value>
        [DataMember(Name = "editany", EmitDefaultValue = true)]
        public bool Editany { get; set; }

        /// <summary>
        /// Database id
        /// </summary>
        /// <value>Database id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// The Database intro
        /// </summary>
        /// <value>The Database intro</value>
        [DataMember(Name = "intro", EmitDefaultValue = false)]
        public string Intro { get; set; }

        /// <summary>
        /// Gets or Sets Introfiles
        /// </summary>
        [DataMember(Name = "introfiles", EmitDefaultValue = false)]
        public List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> Introfiles { get; set; }

        /// <summary>
        /// intro format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
        /// </summary>
        /// <value>intro format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)</value>
        [DataMember(Name = "introformat", EmitDefaultValue = false)]
        public int Introformat { get; set; }

        /// <summary>
        /// jstemplate field
        /// </summary>
        /// <value>jstemplate field</value>
        [DataMember(Name = "jstemplate", EmitDefaultValue = false)]
        public string Jstemplate { get; set; }

        /// <summary>
        /// Forced activity language
        /// </summary>
        /// <value>Forced activity language</value>
        [DataMember(Name = "lang", EmitDefaultValue = false)]
        public string Lang { get; set; }

        /// <summary>
        /// listtemplate field
        /// </summary>
        /// <value>listtemplate field</value>
        [DataMember(Name = "listtemplate", EmitDefaultValue = false)]
        public string Listtemplate { get; set; }

        /// <summary>
        /// listtemplatefooter field
        /// </summary>
        /// <value>listtemplatefooter field</value>
        [DataMember(Name = "listtemplatefooter", EmitDefaultValue = false)]
        public string Listtemplatefooter { get; set; }

        /// <summary>
        /// listtemplateheader field
        /// </summary>
        /// <value>listtemplateheader field</value>
        [DataMember(Name = "listtemplateheader", EmitDefaultValue = false)]
        public string Listtemplateheader { get; set; }

        /// <summary>
        /// manageapproved field
        /// </summary>
        /// <value>manageapproved field</value>
        [DataMember(Name = "manageapproved", EmitDefaultValue = true)]
        public bool Manageapproved { get; set; }

        /// <summary>
        /// maxentries field
        /// </summary>
        /// <value>maxentries field</value>
        [DataMember(Name = "maxentries", EmitDefaultValue = false)]
        public int Maxentries { get; set; }

        /// <summary>
        /// Database name
        /// </summary>
        /// <value>Database name</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// notification field (not used any more)
        /// </summary>
        /// <value>notification field (not used any more)</value>
        [DataMember(Name = "notification", EmitDefaultValue = false)]
        public int Notification { get; set; }

        /// <summary>
        /// requiredentries field
        /// </summary>
        /// <value>requiredentries field</value>
        [DataMember(Name = "requiredentries", EmitDefaultValue = false)]
        public int Requiredentries { get; set; }

        /// <summary>
        /// requiredentriestoview field
        /// </summary>
        /// <value>requiredentriestoview field</value>
        [DataMember(Name = "requiredentriestoview", EmitDefaultValue = false)]
        public int Requiredentriestoview { get; set; }

        /// <summary>
        /// rssarticles field
        /// </summary>
        /// <value>rssarticles field</value>
        [DataMember(Name = "rssarticles", EmitDefaultValue = false)]
        public int Rssarticles { get; set; }

        /// <summary>
        /// rsstemplate field
        /// </summary>
        /// <value>rsstemplate field</value>
        [DataMember(Name = "rsstemplate", EmitDefaultValue = false)]
        public string Rsstemplate { get; set; }

        /// <summary>
        /// rsstitletemplate field
        /// </summary>
        /// <value>rsstitletemplate field</value>
        [DataMember(Name = "rsstitletemplate", EmitDefaultValue = false)]
        public string Rsstitletemplate { get; set; }

        /// <summary>
        /// scale field
        /// </summary>
        /// <value>scale field</value>
        [DataMember(Name = "scale", EmitDefaultValue = false)]
        public int Scale { get; set; }

        /// <summary>
        /// singletemplate field
        /// </summary>
        /// <value>singletemplate field</value>
        [DataMember(Name = "singletemplate", EmitDefaultValue = false)]
        public string Singletemplate { get; set; }

        /// <summary>
        /// timeavailablefrom field
        /// </summary>
        /// <value>timeavailablefrom field</value>
        [DataMember(Name = "timeavailablefrom", EmitDefaultValue = false)]
        public int Timeavailablefrom { get; set; }

        /// <summary>
        /// timeavailableto field
        /// </summary>
        /// <value>timeavailableto field</value>
        [DataMember(Name = "timeavailableto", EmitDefaultValue = false)]
        public int Timeavailableto { get; set; }

        /// <summary>
        /// Time modified
        /// </summary>
        /// <value>Time modified</value>
        [DataMember(Name = "timemodified", EmitDefaultValue = false)]
        public int Timemodified { get; set; }

        /// <summary>
        /// timeviewfrom field
        /// </summary>
        /// <value>timeviewfrom field</value>
        [DataMember(Name = "timeviewfrom", EmitDefaultValue = false)]
        public int Timeviewfrom { get; set; }

        /// <summary>
        /// timeviewto field
        /// </summary>
        /// <value>timeviewto field</value>
        [DataMember(Name = "timeviewto", EmitDefaultValue = false)]
        public int Timeviewto { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModDataGetDatabasesByCourses200ResponseDatabasesInner {\n");
            sb.Append("  Addtemplate: ").Append(Addtemplate).Append("\n");
            sb.Append("  Approval: ").Append(Approval).Append("\n");
            sb.Append("  Asearchtemplate: ").Append(Asearchtemplate).Append("\n");
            sb.Append("  Assessed: ").Append(Assessed).Append("\n");
            sb.Append("  Assesstimefinish: ").Append(Assesstimefinish).Append("\n");
            sb.Append("  Assesstimestart: ").Append(Assesstimestart).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Course: ").Append(Course).Append("\n");
            sb.Append("  Coursemodule: ").Append(Coursemodule).Append("\n");
            sb.Append("  Csstemplate: ").Append(Csstemplate).Append("\n");
            sb.Append("  Defaultsort: ").Append(Defaultsort).Append("\n");
            sb.Append("  Defaultsortdir: ").Append(Defaultsortdir).Append("\n");
            sb.Append("  Editany: ").Append(Editany).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Intro: ").Append(Intro).Append("\n");
            sb.Append("  Introfiles: ").Append(Introfiles).Append("\n");
            sb.Append("  Introformat: ").Append(Introformat).Append("\n");
            sb.Append("  Jstemplate: ").Append(Jstemplate).Append("\n");
            sb.Append("  Lang: ").Append(Lang).Append("\n");
            sb.Append("  Listtemplate: ").Append(Listtemplate).Append("\n");
            sb.Append("  Listtemplatefooter: ").Append(Listtemplatefooter).Append("\n");
            sb.Append("  Listtemplateheader: ").Append(Listtemplateheader).Append("\n");
            sb.Append("  Manageapproved: ").Append(Manageapproved).Append("\n");
            sb.Append("  Maxentries: ").Append(Maxentries).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Notification: ").Append(Notification).Append("\n");
            sb.Append("  Requiredentries: ").Append(Requiredentries).Append("\n");
            sb.Append("  Requiredentriestoview: ").Append(Requiredentriestoview).Append("\n");
            sb.Append("  Rssarticles: ").Append(Rssarticles).Append("\n");
            sb.Append("  Rsstemplate: ").Append(Rsstemplate).Append("\n");
            sb.Append("  Rsstitletemplate: ").Append(Rsstitletemplate).Append("\n");
            sb.Append("  Scale: ").Append(Scale).Append("\n");
            sb.Append("  Singletemplate: ").Append(Singletemplate).Append("\n");
            sb.Append("  Timeavailablefrom: ").Append(Timeavailablefrom).Append("\n");
            sb.Append("  Timeavailableto: ").Append(Timeavailableto).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Timeviewfrom: ").Append(Timeviewfrom).Append("\n");
            sb.Append("  Timeviewto: ").Append(Timeviewto).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
