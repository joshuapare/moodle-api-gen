/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// SCORM SCO data
    /// </summary>
    [DataContract(Name = "mod_scorm_get_scorm_scoes_200_response_scoes_inner")]
    public partial class ModScormGetScormScoes200ResponseScoesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModScormGetScormScoes200ResponseScoesInner" /> class.
        /// </summary>
        /// <param name="extradata">extradata.</param>
        /// <param name="id">sco id.</param>
        /// <param name="identifier">identifier (default to &quot;null&quot;).</param>
        /// <param name="launch">launch file (default to &quot;null&quot;).</param>
        /// <param name="manifest">manifest id (default to &quot;null&quot;).</param>
        /// <param name="organization">organization id (default to &quot;null&quot;).</param>
        /// <param name="parent">parent (default to &quot;null&quot;).</param>
        /// <param name="scorm">scorm id (default to null).</param>
        /// <param name="scormtype">scorm type (asset, sco) (default to &quot;null&quot;).</param>
        /// <param name="sortorder">sort order (default to null).</param>
        /// <param name="title">sco title (default to &quot;null&quot;).</param>
        public ModScormGetScormScoes200ResponseScoesInner(List<ModScormGetScormScoes200ResponseScoesInnerExtradataInner> extradata = default(List<ModScormGetScormScoes200ResponseScoesInnerExtradataInner>), int id = default(int), string identifier = @"null", string launch = @"null", string manifest = @"null", string organization = @"null", string parent = @"null", int scorm = null, string scormtype = @"null", int sortorder = null, string title = @"null")
        {
            this.Extradata = extradata;
            this.Id = id;
            // use default value if no "identifier" provided
            this.Identifier = identifier ?? @"null";
            // use default value if no "launch" provided
            this.Launch = launch ?? @"null";
            // use default value if no "manifest" provided
            this.Manifest = manifest ?? @"null";
            // use default value if no "organization" provided
            this.Organization = organization ?? @"null";
            // use default value if no "parent" provided
            this.Parent = parent ?? @"null";
            this.Scorm = scorm;
            // use default value if no "scormtype" provided
            this.Scormtype = scormtype ?? @"null";
            this.Sortorder = sortorder;
            // use default value if no "title" provided
            this.Title = title ?? @"null";
        }

        /// <summary>
        /// Gets or Sets Extradata
        /// </summary>
        [DataMember(Name = "extradata", EmitDefaultValue = false)]
        public List<ModScormGetScormScoes200ResponseScoesInnerExtradataInner> Extradata { get; set; }

        /// <summary>
        /// sco id
        /// </summary>
        /// <value>sco id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// identifier
        /// </summary>
        /// <value>identifier</value>
        [DataMember(Name = "identifier", EmitDefaultValue = false)]
        public string Identifier { get; set; }

        /// <summary>
        /// launch file
        /// </summary>
        /// <value>launch file</value>
        [DataMember(Name = "launch", EmitDefaultValue = false)]
        public string Launch { get; set; }

        /// <summary>
        /// manifest id
        /// </summary>
        /// <value>manifest id</value>
        [DataMember(Name = "manifest", EmitDefaultValue = false)]
        public string Manifest { get; set; }

        /// <summary>
        /// organization id
        /// </summary>
        /// <value>organization id</value>
        [DataMember(Name = "organization", EmitDefaultValue = false)]
        public string Organization { get; set; }

        /// <summary>
        /// parent
        /// </summary>
        /// <value>parent</value>
        [DataMember(Name = "parent", EmitDefaultValue = false)]
        public string Parent { get; set; }

        /// <summary>
        /// scorm id
        /// </summary>
        /// <value>scorm id</value>
        [DataMember(Name = "scorm", EmitDefaultValue = false)]
        public int Scorm { get; set; }

        /// <summary>
        /// scorm type (asset, sco)
        /// </summary>
        /// <value>scorm type (asset, sco)</value>
        [DataMember(Name = "scormtype", EmitDefaultValue = false)]
        public string Scormtype { get; set; }

        /// <summary>
        /// sort order
        /// </summary>
        /// <value>sort order</value>
        [DataMember(Name = "sortorder", EmitDefaultValue = false)]
        public int Sortorder { get; set; }

        /// <summary>
        /// sco title
        /// </summary>
        /// <value>sco title</value>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModScormGetScormScoes200ResponseScoesInner {\n");
            sb.Append("  Extradata: ").Append(Extradata).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Identifier: ").Append(Identifier).Append("\n");
            sb.Append("  Launch: ").Append(Launch).Append("\n");
            sb.Append("  Manifest: ").Append(Manifest).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("  Parent: ").Append(Parent).Append("\n");
            sb.Append("  Scorm: ").Append(Scorm).Append("\n");
            sb.Append("  Scormtype: ").Append(Scormtype).Append("\n");
            sb.Append("  Sortorder: ").Append(Sortorder).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
