/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModBigbluebuttonbnGetRecordings200ResponseTabledata
    /// </summary>
    [DataContract(Name = "mod_bigbluebuttonbn_get_recordings_200_response_tabledata")]
    public partial class ModBigbluebuttonbnGetRecordings200ResponseTabledata : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModBigbluebuttonbnGetRecordings200ResponseTabledata" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ModBigbluebuttonbnGetRecordings200ResponseTabledata() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModBigbluebuttonbnGetRecordings200ResponseTabledata" /> class.
        /// </summary>
        /// <param name="activity">activity (required).</param>
        /// <param name="columns">columns (required).</param>
        /// <param name="data">data (required).</param>
        /// <param name="locale">locale (required).</param>
        /// <param name="pingInterval">pingInterval (required).</param>
        /// <param name="profileFeatures">profileFeatures (required).</param>
        public ModBigbluebuttonbnGetRecordings200ResponseTabledata(string activity = default(string), List<ModBigbluebuttonbnGetRecordings200ResponseTabledataColumnsInner> columns = default(List<ModBigbluebuttonbnGetRecordings200ResponseTabledataColumnsInner>), string data = default(string), string locale = default(string), int pingInterval = default(int), List<Object> profileFeatures = default(List<Object>))
        {
            // to ensure "activity" is required (not null)
            if (activity == null)
            {
                throw new ArgumentNullException("activity is a required property for ModBigbluebuttonbnGetRecordings200ResponseTabledata and cannot be null");
            }
            this.Activity = activity;
            // to ensure "columns" is required (not null)
            if (columns == null)
            {
                throw new ArgumentNullException("columns is a required property for ModBigbluebuttonbnGetRecordings200ResponseTabledata and cannot be null");
            }
            this.Columns = columns;
            // to ensure "data" is required (not null)
            if (data == null)
            {
                throw new ArgumentNullException("data is a required property for ModBigbluebuttonbnGetRecordings200ResponseTabledata and cannot be null");
            }
            this.Data = data;
            // to ensure "locale" is required (not null)
            if (locale == null)
            {
                throw new ArgumentNullException("locale is a required property for ModBigbluebuttonbnGetRecordings200ResponseTabledata and cannot be null");
            }
            this.Locale = locale;
            this.PingInterval = pingInterval;
            // to ensure "profileFeatures" is required (not null)
            if (profileFeatures == null)
            {
                throw new ArgumentNullException("profileFeatures is a required property for ModBigbluebuttonbnGetRecordings200ResponseTabledata and cannot be null");
            }
            this.ProfileFeatures = profileFeatures;
        }

        /// <summary>
        /// Gets or Sets Activity
        /// </summary>
        [DataMember(Name = "activity", IsRequired = true, EmitDefaultValue = true)]
        public string Activity { get; set; }

        /// <summary>
        /// Gets or Sets Columns
        /// </summary>
        [DataMember(Name = "columns", IsRequired = true, EmitDefaultValue = true)]
        public List<ModBigbluebuttonbnGetRecordings200ResponseTabledataColumnsInner> Columns { get; set; }

        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name = "data", IsRequired = true, EmitDefaultValue = true)]
        public string Data { get; set; }

        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name = "locale", IsRequired = true, EmitDefaultValue = true)]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or Sets PingInterval
        /// </summary>
        [DataMember(Name = "ping_interval", IsRequired = true, EmitDefaultValue = true)]
        public int PingInterval { get; set; }

        /// <summary>
        /// Gets or Sets ProfileFeatures
        /// </summary>
        [DataMember(Name = "profile_features", IsRequired = true, EmitDefaultValue = true)]
        public List<Object> ProfileFeatures { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModBigbluebuttonbnGetRecordings200ResponseTabledata {\n");
            sb.Append("  Activity: ").Append(Activity).Append("\n");
            sb.Append("  Columns: ").Append(Columns).Append("\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  PingInterval: ").Append(PingInterval).Append("\n");
            sb.Append("  ProfileFeatures: ").Append(ProfileFeatures).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
