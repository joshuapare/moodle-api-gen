/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInnerDeployedfile
    /// </summary>
    [DataContract(Name = "mod_h5pactivity_get_h5pactivities_by_courses_200_response_h5pactivities_inner_deployedfile")]
    public partial class ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInnerDeployedfile : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInnerDeployedfile" /> class.
        /// </summary>
        /// <param name="filename">File name..</param>
        /// <param name="filepath">File path..</param>
        /// <param name="filesize">File size..</param>
        /// <param name="fileurl">Downloadable file url..</param>
        /// <param name="mimetype">File mime type..</param>
        /// <param name="timemodified">Time modified..</param>
        public ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInnerDeployedfile(string filename = default(string), string filepath = default(string), int filesize = default(int), string fileurl = default(string), string mimetype = default(string), int timemodified = default(int))
        {
            this.Filename = filename;
            this.Filepath = filepath;
            this.Filesize = filesize;
            this.Fileurl = fileurl;
            this.Mimetype = mimetype;
            this.Timemodified = timemodified;
        }

        /// <summary>
        /// File name.
        /// </summary>
        /// <value>File name.</value>
        [DataMember(Name = "filename", EmitDefaultValue = false)]
        public string Filename { get; set; }

        /// <summary>
        /// File path.
        /// </summary>
        /// <value>File path.</value>
        [DataMember(Name = "filepath", EmitDefaultValue = false)]
        public string Filepath { get; set; }

        /// <summary>
        /// File size.
        /// </summary>
        /// <value>File size.</value>
        [DataMember(Name = "filesize", EmitDefaultValue = false)]
        public int Filesize { get; set; }

        /// <summary>
        /// Downloadable file url.
        /// </summary>
        /// <value>Downloadable file url.</value>
        [DataMember(Name = "fileurl", EmitDefaultValue = false)]
        public string Fileurl { get; set; }

        /// <summary>
        /// File mime type.
        /// </summary>
        /// <value>File mime type.</value>
        [DataMember(Name = "mimetype", EmitDefaultValue = false)]
        public string Mimetype { get; set; }

        /// <summary>
        /// Time modified.
        /// </summary>
        /// <value>Time modified.</value>
        [DataMember(Name = "timemodified", EmitDefaultValue = false)]
        public int Timemodified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModH5pactivityGetH5pactivitiesByCourses200ResponseH5pactivitiesInnerDeployedfile {\n");
            sb.Append("  Filename: ").Append(Filename).Append("\n");
            sb.Append("  Filepath: ").Append(Filepath).Append("\n");
            sb.Append("  Filesize: ").Append(Filesize).Append("\n");
            sb.Append("  Fileurl: ").Append(Fileurl).Append("\n");
            sb.Append("  Mimetype: ").Append(Mimetype).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
