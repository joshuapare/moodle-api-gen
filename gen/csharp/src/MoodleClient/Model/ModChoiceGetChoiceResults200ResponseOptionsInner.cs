/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// Options
    /// </summary>
    [DataContract(Name = "mod_choice_get_choice_results_200_response_options_inner")]
    public partial class ModChoiceGetChoiceResults200ResponseOptionsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModChoiceGetChoiceResults200ResponseOptionsInner" /> class.
        /// </summary>
        /// <param name="id">choice instance id.</param>
        /// <param name="maxanswer">maximum number of answers.</param>
        /// <param name="numberofuser">number of users answers (default to null).</param>
        /// <param name="percentageamount">percentage of users answers (default to nullM).</param>
        /// <param name="text">text of the choice.</param>
        /// <param name="userresponses">userresponses.</param>
        public ModChoiceGetChoiceResults200ResponseOptionsInner(int id = default(int), int maxanswer = default(int), int numberofuser = null, decimal percentageamount = nullM, string text = default(string), List<ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner> userresponses = default(List<ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner>))
        {
            this.Id = id;
            this.Maxanswer = maxanswer;
            this.Numberofuser = numberofuser;
            this.Percentageamount = percentageamount;
            this.Text = text;
            this.Userresponses = userresponses;
        }

        /// <summary>
        /// choice instance id
        /// </summary>
        /// <value>choice instance id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// maximum number of answers
        /// </summary>
        /// <value>maximum number of answers</value>
        [DataMember(Name = "maxanswer", EmitDefaultValue = false)]
        public int Maxanswer { get; set; }

        /// <summary>
        /// number of users answers
        /// </summary>
        /// <value>number of users answers</value>
        [DataMember(Name = "numberofuser", EmitDefaultValue = false)]
        public int Numberofuser { get; set; }

        /// <summary>
        /// percentage of users answers
        /// </summary>
        /// <value>percentage of users answers</value>
        [DataMember(Name = "percentageamount", EmitDefaultValue = false)]
        public decimal Percentageamount { get; set; }

        /// <summary>
        /// text of the choice
        /// </summary>
        /// <value>text of the choice</value>
        [DataMember(Name = "text", EmitDefaultValue = false)]
        public string Text { get; set; }

        /// <summary>
        /// Gets or Sets Userresponses
        /// </summary>
        [DataMember(Name = "userresponses", EmitDefaultValue = false)]
        public List<ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner> Userresponses { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModChoiceGetChoiceResults200ResponseOptionsInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Maxanswer: ").Append(Maxanswer).Append("\n");
            sb.Append("  Numberofuser: ").Append(Numberofuser).Append("\n");
            sb.Append("  Percentageamount: ").Append(Percentageamount).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Userresponses: ").Append(Userresponses).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
