/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// CoreNotesGetCourseNotes200Response
    /// </summary>
    [DataContract(Name = "core_notes_get_course_notes_200_response")]
    public partial class CoreNotesGetCourseNotes200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreNotesGetCourseNotes200Response" /> class.
        /// </summary>
        /// <param name="canmanagecoursenotes">Whether the user can manage notes at the given course. (default to null).</param>
        /// <param name="canmanagesystemnotes">Whether the user can manage notes at system level. (default to null).</param>
        /// <param name="coursenotes">coursenotes.</param>
        /// <param name="personalnotes">personalnotes.</param>
        /// <param name="sitenotes">sitenotes.</param>
        /// <param name="warnings">warnings.</param>
        public CoreNotesGetCourseNotes200Response(bool canmanagecoursenotes = null, bool canmanagesystemnotes = null, List<CoreNotesGetCourseNotes200ResponseCoursenotesInner> coursenotes = default(List<CoreNotesGetCourseNotes200ResponseCoursenotesInner>), List<CoreNotesGetCourseNotes200ResponsePersonalnotesInner> personalnotes = default(List<CoreNotesGetCourseNotes200ResponsePersonalnotesInner>), List<CoreNotesGetCourseNotes200ResponsePersonalnotesInner> sitenotes = default(List<CoreNotesGetCourseNotes200ResponsePersonalnotesInner>), List<AuthEmailSignupUser200ResponseWarningsInner> warnings = default(List<AuthEmailSignupUser200ResponseWarningsInner>))
        {
            this.Canmanagecoursenotes = canmanagecoursenotes;
            this.Canmanagesystemnotes = canmanagesystemnotes;
            this.Coursenotes = coursenotes;
            this.Personalnotes = personalnotes;
            this.Sitenotes = sitenotes;
            this.Warnings = warnings;
        }

        /// <summary>
        /// Whether the user can manage notes at the given course.
        /// </summary>
        /// <value>Whether the user can manage notes at the given course.</value>
        [DataMember(Name = "canmanagecoursenotes", EmitDefaultValue = true)]
        public bool Canmanagecoursenotes { get; set; }

        /// <summary>
        /// Whether the user can manage notes at system level.
        /// </summary>
        /// <value>Whether the user can manage notes at system level.</value>
        [DataMember(Name = "canmanagesystemnotes", EmitDefaultValue = true)]
        public bool Canmanagesystemnotes { get; set; }

        /// <summary>
        /// Gets or Sets Coursenotes
        /// </summary>
        [DataMember(Name = "coursenotes", EmitDefaultValue = false)]
        public List<CoreNotesGetCourseNotes200ResponseCoursenotesInner> Coursenotes { get; set; }

        /// <summary>
        /// Gets or Sets Personalnotes
        /// </summary>
        [DataMember(Name = "personalnotes", EmitDefaultValue = false)]
        public List<CoreNotesGetCourseNotes200ResponsePersonalnotesInner> Personalnotes { get; set; }

        /// <summary>
        /// Gets or Sets Sitenotes
        /// </summary>
        [DataMember(Name = "sitenotes", EmitDefaultValue = false)]
        public List<CoreNotesGetCourseNotes200ResponsePersonalnotesInner> Sitenotes { get; set; }

        /// <summary>
        /// Gets or Sets Warnings
        /// </summary>
        [DataMember(Name = "warnings", EmitDefaultValue = false)]
        public List<AuthEmailSignupUser200ResponseWarningsInner> Warnings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreNotesGetCourseNotes200Response {\n");
            sb.Append("  Canmanagecoursenotes: ").Append(Canmanagecoursenotes).Append("\n");
            sb.Append("  Canmanagesystemnotes: ").Append(Canmanagesystemnotes).Append("\n");
            sb.Append("  Coursenotes: ").Append(Coursenotes).Append("\n");
            sb.Append("  Personalnotes: ").Append(Personalnotes).Append("\n");
            sb.Append("  Sitenotes: ").Append(Sitenotes).Append("\n");
            sb.Append("  Warnings: ").Append(Warnings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
