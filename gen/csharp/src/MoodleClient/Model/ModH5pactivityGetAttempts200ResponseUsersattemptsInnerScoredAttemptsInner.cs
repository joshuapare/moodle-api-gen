/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner
    /// </summary>
    [DataContract(Name = "mod_h5pactivity_get_attempts_200_response_usersattempts_inner_scored_attempts_inner")]
    public partial class ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner" /> class.
        /// </summary>
        /// <param name="attempt">Attempt number.</param>
        /// <param name="completion">Attempt completion.</param>
        /// <param name="duration">Attempt duration in seconds.</param>
        /// <param name="h5pactivityid">ID of the H5P activity.</param>
        /// <param name="id">ID of the context.</param>
        /// <param name="maxscore">Attempt max score.</param>
        /// <param name="rawscore">Attempt score value.</param>
        /// <param name="scaled">Attempt scaled.</param>
        /// <param name="success">Attempt success.</param>
        /// <param name="timecreated">Attempt creation.</param>
        /// <param name="timemodified">Attempt modified.</param>
        /// <param name="userid">ID of the user.</param>
        public ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner(int attempt = default(int), int completion = default(int), int duration = default(int), int h5pactivityid = default(int), int id = default(int), int maxscore = default(int), int rawscore = default(int), decimal scaled = default(decimal), int success = default(int), int timecreated = default(int), int timemodified = default(int), int userid = default(int))
        {
            this.Attempt = attempt;
            this.Completion = completion;
            this.Duration = duration;
            this.H5pactivityid = h5pactivityid;
            this.Id = id;
            this.Maxscore = maxscore;
            this.Rawscore = rawscore;
            this.Scaled = scaled;
            this.Success = success;
            this.Timecreated = timecreated;
            this.Timemodified = timemodified;
            this.Userid = userid;
        }

        /// <summary>
        /// Attempt number
        /// </summary>
        /// <value>Attempt number</value>
        [DataMember(Name = "attempt", EmitDefaultValue = false)]
        public int Attempt { get; set; }

        /// <summary>
        /// Attempt completion
        /// </summary>
        /// <value>Attempt completion</value>
        [DataMember(Name = "completion", EmitDefaultValue = false)]
        public int Completion { get; set; }

        /// <summary>
        /// Attempt duration in seconds
        /// </summary>
        /// <value>Attempt duration in seconds</value>
        [DataMember(Name = "duration", EmitDefaultValue = false)]
        public int Duration { get; set; }

        /// <summary>
        /// ID of the H5P activity
        /// </summary>
        /// <value>ID of the H5P activity</value>
        [DataMember(Name = "h5pactivityid", EmitDefaultValue = false)]
        public int H5pactivityid { get; set; }

        /// <summary>
        /// ID of the context
        /// </summary>
        /// <value>ID of the context</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Attempt max score
        /// </summary>
        /// <value>Attempt max score</value>
        [DataMember(Name = "maxscore", EmitDefaultValue = false)]
        public int Maxscore { get; set; }

        /// <summary>
        /// Attempt score value
        /// </summary>
        /// <value>Attempt score value</value>
        [DataMember(Name = "rawscore", EmitDefaultValue = false)]
        public int Rawscore { get; set; }

        /// <summary>
        /// Attempt scaled
        /// </summary>
        /// <value>Attempt scaled</value>
        [DataMember(Name = "scaled", EmitDefaultValue = false)]
        public decimal Scaled { get; set; }

        /// <summary>
        /// Attempt success
        /// </summary>
        /// <value>Attempt success</value>
        [DataMember(Name = "success", EmitDefaultValue = false)]
        public int Success { get; set; }

        /// <summary>
        /// Attempt creation
        /// </summary>
        /// <value>Attempt creation</value>
        [DataMember(Name = "timecreated", EmitDefaultValue = false)]
        public int Timecreated { get; set; }

        /// <summary>
        /// Attempt modified
        /// </summary>
        /// <value>Attempt modified</value>
        [DataMember(Name = "timemodified", EmitDefaultValue = false)]
        public int Timemodified { get; set; }

        /// <summary>
        /// ID of the user
        /// </summary>
        /// <value>ID of the user</value>
        [DataMember(Name = "userid", EmitDefaultValue = false)]
        public int Userid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModH5pactivityGetAttempts200ResponseUsersattemptsInnerScoredAttemptsInner {\n");
            sb.Append("  Attempt: ").Append(Attempt).Append("\n");
            sb.Append("  Completion: ").Append(Completion).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  H5pactivityid: ").Append(H5pactivityid).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Maxscore: ").Append(Maxscore).Append("\n");
            sb.Append("  Rawscore: ").Append(Rawscore).Append("\n");
            sb.Append("  Scaled: ").Append(Scaled).Append("\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
