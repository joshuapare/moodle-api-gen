/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// A single result statement tracking information
    /// </summary>
    [DataContract(Name = "mod_h5pactivity_get_results_200_response_attempts_inner_results_inner")]
    public partial class ModH5pactivityGetResults200ResponseAttemptsInnerResultsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModH5pactivityGetResults200ResponseAttemptsInnerResultsInner" /> class.
        /// </summary>
        /// <param name="answerlabel">Label used for user answers (default to &quot;null&quot;).</param>
        /// <param name="attemptid">ID of the H5P attempt (default to null).</param>
        /// <param name="completion">Result completion (default to null).</param>
        /// <param name="content">Result extra content (default to &quot;null&quot;).</param>
        /// <param name="correctlabel">Label used for correct answers (default to &quot;null&quot;).</param>
        /// <param name="description">Result description (default to &quot;null&quot;).</param>
        /// <param name="duration">Result duration in seconds (default to 0).</param>
        /// <param name="id">ID of the context.</param>
        /// <param name="interactiontype">Interaction type (default to &quot;null&quot;).</param>
        /// <param name="maxscore">Result max score (default to null).</param>
        /// <param name="options">options.</param>
        /// <param name="optionslabel">Label used for result options (default to &quot;null&quot;).</param>
        /// <param name="rawscore">Result score value (default to null).</param>
        /// <param name="subcontent">Subcontent identifier (default to &quot;null&quot;).</param>
        /// <param name="success">Result success (default to null).</param>
        /// <param name="timecreated">Result creation (default to null).</param>
        /// <param name="track">If the result has valid track information (default to null).</param>
        public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInner(string answerlabel = @"null", int attemptid = null, int completion = null, string content = @"null", string correctlabel = @"null", string description = @"null", int duration = 0, int id = default(int), string interactiontype = @"null", int maxscore = null, List<ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInner> options = default(List<ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInner>), string optionslabel = @"null", int rawscore = null, string subcontent = @"null", int success = null, int timecreated = null, bool track = null)
        {
            // use default value if no "answerlabel" provided
            this.Answerlabel = answerlabel ?? @"null";
            this.Attemptid = attemptid;
            this.Completion = completion;
            // use default value if no "content" provided
            this.Content = content ?? @"null";
            // use default value if no "correctlabel" provided
            this.Correctlabel = correctlabel ?? @"null";
            // use default value if no "description" provided
            this.Description = description ?? @"null";
            this.Duration = duration;
            this.Id = id;
            // use default value if no "interactiontype" provided
            this.Interactiontype = interactiontype ?? @"null";
            this.Maxscore = maxscore;
            this.Options = options;
            // use default value if no "optionslabel" provided
            this.Optionslabel = optionslabel ?? @"null";
            this.Rawscore = rawscore;
            // use default value if no "subcontent" provided
            this.Subcontent = subcontent ?? @"null";
            this.Success = success;
            this.Timecreated = timecreated;
            this.Track = track;
        }

        /// <summary>
        /// Label used for user answers
        /// </summary>
        /// <value>Label used for user answers</value>
        [DataMember(Name = "answerlabel", EmitDefaultValue = false)]
        public string Answerlabel { get; set; }

        /// <summary>
        /// ID of the H5P attempt
        /// </summary>
        /// <value>ID of the H5P attempt</value>
        [DataMember(Name = "attemptid", EmitDefaultValue = false)]
        public int Attemptid { get; set; }

        /// <summary>
        /// Result completion
        /// </summary>
        /// <value>Result completion</value>
        [DataMember(Name = "completion", EmitDefaultValue = false)]
        public int Completion { get; set; }

        /// <summary>
        /// Result extra content
        /// </summary>
        /// <value>Result extra content</value>
        [DataMember(Name = "content", EmitDefaultValue = false)]
        public string Content { get; set; }

        /// <summary>
        /// Label used for correct answers
        /// </summary>
        /// <value>Label used for correct answers</value>
        [DataMember(Name = "correctlabel", EmitDefaultValue = false)]
        public string Correctlabel { get; set; }

        /// <summary>
        /// Result description
        /// </summary>
        /// <value>Result description</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Result duration in seconds
        /// </summary>
        /// <value>Result duration in seconds</value>
        [DataMember(Name = "duration", EmitDefaultValue = false)]
        public int Duration { get; set; }

        /// <summary>
        /// ID of the context
        /// </summary>
        /// <value>ID of the context</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Interaction type
        /// </summary>
        /// <value>Interaction type</value>
        [DataMember(Name = "interactiontype", EmitDefaultValue = false)]
        public string Interactiontype { get; set; }

        /// <summary>
        /// Result max score
        /// </summary>
        /// <value>Result max score</value>
        [DataMember(Name = "maxscore", EmitDefaultValue = false)]
        public int Maxscore { get; set; }

        /// <summary>
        /// Gets or Sets Options
        /// </summary>
        [DataMember(Name = "options", EmitDefaultValue = false)]
        public List<ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInner> Options { get; set; }

        /// <summary>
        /// Label used for result options
        /// </summary>
        /// <value>Label used for result options</value>
        [DataMember(Name = "optionslabel", EmitDefaultValue = false)]
        public string Optionslabel { get; set; }

        /// <summary>
        /// Result score value
        /// </summary>
        /// <value>Result score value</value>
        [DataMember(Name = "rawscore", EmitDefaultValue = false)]
        public int Rawscore { get; set; }

        /// <summary>
        /// Subcontent identifier
        /// </summary>
        /// <value>Subcontent identifier</value>
        [DataMember(Name = "subcontent", EmitDefaultValue = false)]
        public string Subcontent { get; set; }

        /// <summary>
        /// Result success
        /// </summary>
        /// <value>Result success</value>
        [DataMember(Name = "success", EmitDefaultValue = false)]
        public int Success { get; set; }

        /// <summary>
        /// Result creation
        /// </summary>
        /// <value>Result creation</value>
        [DataMember(Name = "timecreated", EmitDefaultValue = false)]
        public int Timecreated { get; set; }

        /// <summary>
        /// If the result has valid track information
        /// </summary>
        /// <value>If the result has valid track information</value>
        [DataMember(Name = "track", EmitDefaultValue = true)]
        public bool Track { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModH5pactivityGetResults200ResponseAttemptsInnerResultsInner {\n");
            sb.Append("  Answerlabel: ").Append(Answerlabel).Append("\n");
            sb.Append("  Attemptid: ").Append(Attemptid).Append("\n");
            sb.Append("  Completion: ").Append(Completion).Append("\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  Correctlabel: ").Append(Correctlabel).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Interactiontype: ").Append(Interactiontype).Append("\n");
            sb.Append("  Maxscore: ").Append(Maxscore).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("  Optionslabel: ").Append(Optionslabel).Append("\n");
            sb.Append("  Rawscore: ").Append(Rawscore).Append("\n");
            sb.Append("  Subcontent: ").Append(Subcontent).Append("\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Track: ").Append(Track).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
