/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// CoreRatingAddRatingRequest
    /// </summary>
    [DataContract(Name = "core_rating_add_rating_request")]
    public partial class CoreRatingAddRatingRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreRatingAddRatingRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreRatingAddRatingRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreRatingAddRatingRequest" /> class.
        /// </summary>
        /// <param name="aggregation">agreggation method (default to 0).</param>
        /// <param name="component">component (required).</param>
        /// <param name="contextlevel">context level: course, module, user, etc... (required) (default to &quot;null&quot;).</param>
        /// <param name="instanceid">the instance id of item associated with the context level (required) (default to null).</param>
        /// <param name="itemid">associated id (required).</param>
        /// <param name="rateduserid">rated user id (required) (default to null).</param>
        /// <param name="rating">user rating (required) (default to null).</param>
        /// <param name="ratingarea">rating area (required) (default to &quot;null&quot;).</param>
        /// <param name="scaleid">scale id (required) (default to null).</param>
        public CoreRatingAddRatingRequest(int aggregation = 0, string component = default(string), string contextlevel = @"null", int instanceid = null, int itemid = default(int), int rateduserid = null, int rating = null, string ratingarea = @"null", int scaleid = null)
        {
            // to ensure "component" is required (not null)
            if (component == null)
            {
                throw new ArgumentNullException("component is a required property for CoreRatingAddRatingRequest and cannot be null");
            }
            this.Component = component;
            // to ensure "contextlevel" is required (not null)
            if (contextlevel == null)
            {
                throw new ArgumentNullException("contextlevel is a required property for CoreRatingAddRatingRequest and cannot be null");
            }
            this.Contextlevel = contextlevel;
            this.Instanceid = instanceid;
            this.Itemid = itemid;
            this.Rateduserid = rateduserid;
            this.Rating = rating;
            // to ensure "ratingarea" is required (not null)
            if (ratingarea == null)
            {
                throw new ArgumentNullException("ratingarea is a required property for CoreRatingAddRatingRequest and cannot be null");
            }
            this.Ratingarea = ratingarea;
            this.Scaleid = scaleid;
            this.Aggregation = aggregation;
        }

        /// <summary>
        /// agreggation method
        /// </summary>
        /// <value>agreggation method</value>
        [DataMember(Name = "aggregation", EmitDefaultValue = false)]
        public int Aggregation { get; set; }

        /// <summary>
        /// component
        /// </summary>
        /// <value>component</value>
        [DataMember(Name = "component", IsRequired = true, EmitDefaultValue = true)]
        public string Component { get; set; }

        /// <summary>
        /// context level: course, module, user, etc...
        /// </summary>
        /// <value>context level: course, module, user, etc...</value>
        [DataMember(Name = "contextlevel", IsRequired = true, EmitDefaultValue = true)]
        public string Contextlevel { get; set; }

        /// <summary>
        /// the instance id of item associated with the context level
        /// </summary>
        /// <value>the instance id of item associated with the context level</value>
        [DataMember(Name = "instanceid", IsRequired = true, EmitDefaultValue = true)]
        public int Instanceid { get; set; }

        /// <summary>
        /// associated id
        /// </summary>
        /// <value>associated id</value>
        [DataMember(Name = "itemid", IsRequired = true, EmitDefaultValue = true)]
        public int Itemid { get; set; }

        /// <summary>
        /// rated user id
        /// </summary>
        /// <value>rated user id</value>
        [DataMember(Name = "rateduserid", IsRequired = true, EmitDefaultValue = true)]
        public int Rateduserid { get; set; }

        /// <summary>
        /// user rating
        /// </summary>
        /// <value>user rating</value>
        [DataMember(Name = "rating", IsRequired = true, EmitDefaultValue = true)]
        public int Rating { get; set; }

        /// <summary>
        /// rating area
        /// </summary>
        /// <value>rating area</value>
        [DataMember(Name = "ratingarea", IsRequired = true, EmitDefaultValue = true)]
        public string Ratingarea { get; set; }

        /// <summary>
        /// scale id
        /// </summary>
        /// <value>scale id</value>
        [DataMember(Name = "scaleid", IsRequired = true, EmitDefaultValue = true)]
        public int Scaleid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreRatingAddRatingRequest {\n");
            sb.Append("  Aggregation: ").Append(Aggregation).Append("\n");
            sb.Append("  Component: ").Append(Component).Append("\n");
            sb.Append("  Contextlevel: ").Append(Contextlevel).Append("\n");
            sb.Append("  Instanceid: ").Append(Instanceid).Append("\n");
            sb.Append("  Itemid: ").Append(Itemid).Append("\n");
            sb.Append("  Rateduserid: ").Append(Rateduserid).Append("\n");
            sb.Append("  Rating: ").Append(Rating).Append("\n");
            sb.Append("  Ratingarea: ").Append(Ratingarea).Append("\n");
            sb.Append("  Scaleid: ").Append(Scaleid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
