/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MoodleClient.Client.OpenAPIDateConverter;

namespace MoodleClient.Model
{
    /// <summary>
    /// CoreCompetencyCreatePlanRequestPlan
    /// </summary>
    [DataContract(Name = "core_competency_create_plan_request_plan")]
    public partial class CoreCompetencyCreatePlanRequestPlan : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCompetencyCreatePlanRequestPlan" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreCompetencyCreatePlanRequestPlan() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreCompetencyCreatePlanRequestPlan" /> class.
        /// </summary>
        /// <param name="description">description (default to &quot;&quot;).</param>
        /// <param name="descriptionformat">description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN) (default to 1).</param>
        /// <param name="duedate">duedate (default to 0).</param>
        /// <param name="name">name (required).</param>
        /// <param name="origtemplateid">origtemplateid (default to null).</param>
        /// <param name="reviewerid">reviewerid (default to null).</param>
        /// <param name="status">status (default to 0).</param>
        /// <param name="templateid">templateid (default to null).</param>
        /// <param name="timecreated">timecreated (default to 0).</param>
        /// <param name="timemodified">timemodified (default to 0).</param>
        /// <param name="userid">userid (required) (default to null).</param>
        /// <param name="usermodified">usermodified (default to 0).</param>
        public CoreCompetencyCreatePlanRequestPlan(string description = @"", int descriptionformat = 1, int duedate = 0, string name = default(string), int origtemplateid = null, int reviewerid = null, int status = 0, int templateid = null, int timecreated = 0, int timemodified = 0, int userid = null, int usermodified = 0)
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for CoreCompetencyCreatePlanRequestPlan and cannot be null");
            }
            this.Name = name;
            this.Userid = userid;
            // use default value if no "description" provided
            this.Description = description ?? @"";
            this.Descriptionformat = descriptionformat;
            this.Duedate = duedate;
            this.Origtemplateid = origtemplateid;
            this.Reviewerid = reviewerid;
            this.Status = status;
            this.Templateid = templateid;
            this.Timecreated = timecreated;
            this.Timemodified = timemodified;
            this.Usermodified = usermodified;
        }

        /// <summary>
        /// description
        /// </summary>
        /// <value>description</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
        /// </summary>
        /// <value>description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)</value>
        [DataMember(Name = "descriptionformat", EmitDefaultValue = false)]
        public int Descriptionformat { get; set; }

        /// <summary>
        /// duedate
        /// </summary>
        /// <value>duedate</value>
        [DataMember(Name = "duedate", EmitDefaultValue = false)]
        public int Duedate { get; set; }

        /// <summary>
        /// name
        /// </summary>
        /// <value>name</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// origtemplateid
        /// </summary>
        /// <value>origtemplateid</value>
        [DataMember(Name = "origtemplateid", EmitDefaultValue = false)]
        public int Origtemplateid { get; set; }

        /// <summary>
        /// reviewerid
        /// </summary>
        /// <value>reviewerid</value>
        [DataMember(Name = "reviewerid", EmitDefaultValue = false)]
        public int Reviewerid { get; set; }

        /// <summary>
        /// status
        /// </summary>
        /// <value>status</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public int Status { get; set; }

        /// <summary>
        /// templateid
        /// </summary>
        /// <value>templateid</value>
        [DataMember(Name = "templateid", EmitDefaultValue = false)]
        public int Templateid { get; set; }

        /// <summary>
        /// timecreated
        /// </summary>
        /// <value>timecreated</value>
        [DataMember(Name = "timecreated", EmitDefaultValue = false)]
        public int Timecreated { get; set; }

        /// <summary>
        /// timemodified
        /// </summary>
        /// <value>timemodified</value>
        [DataMember(Name = "timemodified", EmitDefaultValue = false)]
        public int Timemodified { get; set; }

        /// <summary>
        /// userid
        /// </summary>
        /// <value>userid</value>
        [DataMember(Name = "userid", IsRequired = true, EmitDefaultValue = true)]
        public int Userid { get; set; }

        /// <summary>
        /// usermodified
        /// </summary>
        /// <value>usermodified</value>
        [DataMember(Name = "usermodified", EmitDefaultValue = false)]
        public int Usermodified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoreCompetencyCreatePlanRequestPlan {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Descriptionformat: ").Append(Descriptionformat).Append("\n");
            sb.Append("  Duedate: ").Append(Duedate).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Origtemplateid: ").Append(Origtemplateid).Append("\n");
            sb.Append("  Reviewerid: ").Append(Reviewerid).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Templateid: ").Append(Templateid).Append("\n");
            sb.Append("  Timecreated: ").Append(Timecreated).Append("\n");
            sb.Append("  Timemodified: ").Append(Timemodified).Append("\n");
            sb.Append("  Userid: ").Append(Userid).Append("\n");
            sb.Append("  Usermodified: ").Append(Usermodified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
