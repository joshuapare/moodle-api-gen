/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using MoodleClient.Client;
using MoodleClient.Model;

namespace MoodleClient.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ILocalIomadLearningpathApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Activates / deactivates learning path
        /// </summary>
        /// <remarks>
        /// Activates / deactivates learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathActivate(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0);

        /// <summary>
        /// Activates / deactivates learning path
        /// </summary>
        /// <remarks>
        /// Activates / deactivates learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathActivateWithHttpInfo(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0);
        /// <summary>
        /// Add courses to learning path
        /// </summary>
        /// <remarks>
        /// Add courses to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathAddcourses(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0);

        /// <summary>
        /// Add courses to learning path
        /// </summary>
        /// <remarks>
        /// Add courses to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathAddcoursesWithHttpInfo(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0);
        /// <summary>
        /// Add users to learning path
        /// </summary>
        /// <remarks>
        /// Add users to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathAddusers(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0);

        /// <summary>
        /// Add users to learning path
        /// </summary>
        /// <remarks>
        /// Add users to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathAddusersWithHttpInfo(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0);
        /// <summary>
        /// Copy a learning path
        /// </summary>
        /// <remarks>
        /// Copy a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathCopypath(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0);

        /// <summary>
        /// Copy a learning path
        /// </summary>
        /// <remarks>
        /// Copy a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathCopypathWithHttpInfo(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0);
        /// <summary>
        /// Completely delete a learning path
        /// </summary>
        /// <remarks>
        /// Completely delete a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathDeletepath(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0);

        /// <summary>
        /// Completely delete a learning path
        /// </summary>
        /// <remarks>
        /// Completely delete a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathDeletepathWithHttpInfo(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0);
        /// <summary>
        /// Read list of courses for given learning
        /// </summary>
        /// <remarks>
        /// Read list of courses for given learning
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathGetcourses(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0);

        /// <summary>
        /// Read list of courses for given learning
        /// </summary>
        /// <remarks>
        /// Read list of courses for given learning
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathGetcoursesWithHttpInfo(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0);
        /// <summary>
        /// Read set of filtered courses for given company
        /// </summary>
        /// <remarks>
        /// Read set of filtered courses for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathGetprospectivecourses(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0);

        /// <summary>
        /// Read set of filtered courses for given company
        /// </summary>
        /// <remarks>
        /// Read set of filtered courses for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathGetprospectivecoursesWithHttpInfo(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0);
        /// <summary>
        /// Get set of filtered users for given company
        /// </summary>
        /// <remarks>
        /// Get set of filtered users for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathGetprospectiveusers(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0);

        /// <summary>
        /// Get set of filtered users for given company
        /// </summary>
        /// <remarks>
        /// Get set of filtered users for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathGetprospectiveusersWithHttpInfo(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0);
        /// <summary>
        /// Get users assigned to path
        /// </summary>
        /// <remarks>
        /// Get users assigned to path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathGetusers(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0);

        /// <summary>
        /// Get users assigned to path
        /// </summary>
        /// <remarks>
        /// Get users assigned to path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathGetusersWithHttpInfo(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0);
        /// <summary>
        /// Set sequence of courses in learning path
        /// </summary>
        /// <remarks>
        /// Set sequence of courses in learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathOrdercourses(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0);

        /// <summary>
        /// Set sequence of courses in learning path
        /// </summary>
        /// <remarks>
        /// Set sequence of courses in learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathOrdercoursesWithHttpInfo(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0);
        /// <summary>
        /// Remove courses from learning path
        /// </summary>
        /// <remarks>
        /// Remove courses from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathRemovecourses(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0);

        /// <summary>
        /// Remove courses from learning path
        /// </summary>
        /// <remarks>
        /// Remove courses from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathRemovecoursesWithHttpInfo(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0);
        /// <summary>
        /// Remove users from learning path
        /// </summary>
        /// <remarks>
        /// Remove users from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object LocalIomadLearningpathRemoveusers(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0);

        /// <summary>
        /// Remove users from learning path
        /// </summary>
        /// <remarks>
        /// Remove users from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> LocalIomadLearningpathRemoveusersWithHttpInfo(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ILocalIomadLearningpathApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Activates / deactivates learning path
        /// </summary>
        /// <remarks>
        /// Activates / deactivates learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathActivateAsync(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Activates / deactivates learning path
        /// </summary>
        /// <remarks>
        /// Activates / deactivates learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathActivateWithHttpInfoAsync(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add courses to learning path
        /// </summary>
        /// <remarks>
        /// Add courses to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathAddcoursesAsync(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Add courses to learning path
        /// </summary>
        /// <remarks>
        /// Add courses to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathAddcoursesWithHttpInfoAsync(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add users to learning path
        /// </summary>
        /// <remarks>
        /// Add users to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathAddusersAsync(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Add users to learning path
        /// </summary>
        /// <remarks>
        /// Add users to learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathAddusersWithHttpInfoAsync(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Copy a learning path
        /// </summary>
        /// <remarks>
        /// Copy a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathCopypathAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Copy a learning path
        /// </summary>
        /// <remarks>
        /// Copy a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathCopypathWithHttpInfoAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Completely delete a learning path
        /// </summary>
        /// <remarks>
        /// Completely delete a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathDeletepathAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Completely delete a learning path
        /// </summary>
        /// <remarks>
        /// Completely delete a learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathDeletepathWithHttpInfoAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Read list of courses for given learning
        /// </summary>
        /// <remarks>
        /// Read list of courses for given learning
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetcoursesAsync(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Read list of courses for given learning
        /// </summary>
        /// <remarks>
        /// Read list of courses for given learning
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathGetcoursesWithHttpInfoAsync(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Read set of filtered courses for given company
        /// </summary>
        /// <remarks>
        /// Read set of filtered courses for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetprospectivecoursesAsync(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Read set of filtered courses for given company
        /// </summary>
        /// <remarks>
        /// Read set of filtered courses for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathGetprospectivecoursesWithHttpInfoAsync(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get set of filtered users for given company
        /// </summary>
        /// <remarks>
        /// Get set of filtered users for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetprospectiveusersAsync(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get set of filtered users for given company
        /// </summary>
        /// <remarks>
        /// Get set of filtered users for given company
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathGetprospectiveusersWithHttpInfoAsync(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get users assigned to path
        /// </summary>
        /// <remarks>
        /// Get users assigned to path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetusersAsync(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get users assigned to path
        /// </summary>
        /// <remarks>
        /// Get users assigned to path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathGetusersWithHttpInfoAsync(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Set sequence of courses in learning path
        /// </summary>
        /// <remarks>
        /// Set sequence of courses in learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathOrdercoursesAsync(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Set sequence of courses in learning path
        /// </summary>
        /// <remarks>
        /// Set sequence of courses in learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathOrdercoursesWithHttpInfoAsync(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remove courses from learning path
        /// </summary>
        /// <remarks>
        /// Remove courses from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathRemovecoursesAsync(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remove courses from learning path
        /// </summary>
        /// <remarks>
        /// Remove courses from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathRemovecoursesWithHttpInfoAsync(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remove users from learning path
        /// </summary>
        /// <remarks>
        /// Remove users from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> LocalIomadLearningpathRemoveusersAsync(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remove users from learning path
        /// </summary>
        /// <remarks>
        /// Remove users from learning path
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> LocalIomadLearningpathRemoveusersWithHttpInfoAsync(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ILocalIomadLearningpathApi : ILocalIomadLearningpathApiSync, ILocalIomadLearningpathApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class LocalIomadLearningpathApi : ILocalIomadLearningpathApi
    {
        private MoodleClient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="LocalIomadLearningpathApi"/> class.
        /// </summary>
        /// <returns></returns>
        public LocalIomadLearningpathApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="LocalIomadLearningpathApi"/> class.
        /// </summary>
        /// <returns></returns>
        public LocalIomadLearningpathApi(string basePath)
        {
            this.Configuration = MoodleClient.Client.Configuration.MergeConfigurations(
                MoodleClient.Client.GlobalConfiguration.Instance,
                new MoodleClient.Client.Configuration { BasePath = basePath }
            );
            this.Client = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = MoodleClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="LocalIomadLearningpathApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public LocalIomadLearningpathApi(MoodleClient.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = MoodleClient.Client.Configuration.MergeConfigurations(
                MoodleClient.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = MoodleClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="LocalIomadLearningpathApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public LocalIomadLearningpathApi(MoodleClient.Client.ISynchronousClient client, MoodleClient.Client.IAsynchronousClient asyncClient, MoodleClient.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = MoodleClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public MoodleClient.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public MoodleClient.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public MoodleClient.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public MoodleClient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Activates / deactivates learning path Activates / deactivates learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathActivate(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathActivateWithHttpInfo(localIomadLearningpathActivateRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Activates / deactivates learning path Activates / deactivates learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathActivateWithHttpInfo(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathActivateRequest' is set
            if (localIomadLearningpathActivateRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathActivateRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathActivate");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathActivateRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathActivate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_activate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathActivate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Activates / deactivates learning path Activates / deactivates learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathActivateAsync(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathActivateWithHttpInfoAsync(localIomadLearningpathActivateRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Activates / deactivates learning path Activates / deactivates learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathActivateRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathActivateWithHttpInfoAsync(LocalIomadLearningpathActivateRequest localIomadLearningpathActivateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathActivateRequest' is set
            if (localIomadLearningpathActivateRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathActivateRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathActivate");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathActivateRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathActivate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_activate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathActivate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add courses to learning path Add courses to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathAddcourses(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathAddcoursesWithHttpInfo(localIomadLearningpathAddcoursesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add courses to learning path Add courses to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathAddcoursesWithHttpInfo(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathAddcoursesRequest' is set
            if (localIomadLearningpathAddcoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathAddcoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathAddcourses");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathAddcoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathAddcourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_addcourses", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathAddcourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add courses to learning path Add courses to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathAddcoursesAsync(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathAddcoursesWithHttpInfoAsync(localIomadLearningpathAddcoursesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add courses to learning path Add courses to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathAddcoursesWithHttpInfoAsync(LocalIomadLearningpathAddcoursesRequest localIomadLearningpathAddcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathAddcoursesRequest' is set
            if (localIomadLearningpathAddcoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathAddcoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathAddcourses");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathAddcoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathAddcourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_addcourses", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathAddcourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add users to learning path Add users to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathAddusers(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathAddusersWithHttpInfo(localIomadLearningpathAddusersRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add users to learning path Add users to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathAddusersWithHttpInfo(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathAddusersRequest' is set
            if (localIomadLearningpathAddusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathAddusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathAddusers");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathAddusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathAddusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_addusers", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathAddusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add users to learning path Add users to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathAddusersAsync(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathAddusersWithHttpInfoAsync(localIomadLearningpathAddusersRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add users to learning path Add users to learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathAddusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathAddusersWithHttpInfoAsync(LocalIomadLearningpathAddusersRequest localIomadLearningpathAddusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathAddusersRequest' is set
            if (localIomadLearningpathAddusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathAddusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathAddusers");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathAddusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathAddusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_addusers", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathAddusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Copy a learning path Copy a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathCopypath(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathCopypathWithHttpInfo(localIomadLearningpathCopypathRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Copy a learning path Copy a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathCopypathWithHttpInfo(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathCopypathRequest' is set
            if (localIomadLearningpathCopypathRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathCopypathRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathCopypath");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathCopypathRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathCopypath";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_copypath", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathCopypath", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Copy a learning path Copy a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathCopypathAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathCopypathWithHttpInfoAsync(localIomadLearningpathCopypathRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Copy a learning path Copy a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathCopypathWithHttpInfoAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathCopypathRequest' is set
            if (localIomadLearningpathCopypathRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathCopypathRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathCopypath");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathCopypathRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathCopypath";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_copypath", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathCopypath", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Completely delete a learning path Completely delete a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathDeletepath(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathDeletepathWithHttpInfo(localIomadLearningpathCopypathRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Completely delete a learning path Completely delete a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathDeletepathWithHttpInfo(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathCopypathRequest' is set
            if (localIomadLearningpathCopypathRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathCopypathRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathDeletepath");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathCopypathRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathDeletepath";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_deletepath", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathDeletepath", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Completely delete a learning path Completely delete a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathDeletepathAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathDeletepathWithHttpInfoAsync(localIomadLearningpathCopypathRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Completely delete a learning path Completely delete a learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathCopypathRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathDeletepathWithHttpInfoAsync(LocalIomadLearningpathCopypathRequest localIomadLearningpathCopypathRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathCopypathRequest' is set
            if (localIomadLearningpathCopypathRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathCopypathRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathDeletepath");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathCopypathRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathDeletepath";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_deletepath", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathDeletepath", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Read list of courses for given learning Read list of courses for given learning
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathGetcourses(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathGetcoursesWithHttpInfo(localIomadLearningpathGetcoursesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Read list of courses for given learning Read list of courses for given learning
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathGetcoursesWithHttpInfo(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathGetcoursesRequest' is set
            if (localIomadLearningpathGetcoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetcoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetcourses");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetcoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetcourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_getcourses", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetcourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Read list of courses for given learning Read list of courses for given learning
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetcoursesAsync(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathGetcoursesWithHttpInfoAsync(localIomadLearningpathGetcoursesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Read list of courses for given learning Read list of courses for given learning
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetcoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathGetcoursesWithHttpInfoAsync(LocalIomadLearningpathGetcoursesRequest localIomadLearningpathGetcoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathGetcoursesRequest' is set
            if (localIomadLearningpathGetcoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetcoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetcourses");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetcoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetcourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_getcourses", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetcourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Read set of filtered courses for given company Read set of filtered courses for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathGetprospectivecourses(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathGetprospectivecoursesWithHttpInfo(localIomadLearningpathGetprospectivecoursesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Read set of filtered courses for given company Read set of filtered courses for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathGetprospectivecoursesWithHttpInfo(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathGetprospectivecoursesRequest' is set
            if (localIomadLearningpathGetprospectivecoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetprospectivecoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetprospectivecourses");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetprospectivecoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetprospectivecourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_getprospectivecourses", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetprospectivecourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Read set of filtered courses for given company Read set of filtered courses for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetprospectivecoursesAsync(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathGetprospectivecoursesWithHttpInfoAsync(localIomadLearningpathGetprospectivecoursesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Read set of filtered courses for given company Read set of filtered courses for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectivecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathGetprospectivecoursesWithHttpInfoAsync(LocalIomadLearningpathGetprospectivecoursesRequest localIomadLearningpathGetprospectivecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathGetprospectivecoursesRequest' is set
            if (localIomadLearningpathGetprospectivecoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetprospectivecoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetprospectivecourses");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetprospectivecoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetprospectivecourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_getprospectivecourses", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetprospectivecourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get set of filtered users for given company Get set of filtered users for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathGetprospectiveusers(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathGetprospectiveusersWithHttpInfo(localIomadLearningpathGetprospectiveusersRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get set of filtered users for given company Get set of filtered users for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathGetprospectiveusersWithHttpInfo(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathGetprospectiveusersRequest' is set
            if (localIomadLearningpathGetprospectiveusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetprospectiveusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetprospectiveusers");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetprospectiveusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetprospectiveusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_getprospectiveusers", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetprospectiveusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get set of filtered users for given company Get set of filtered users for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetprospectiveusersAsync(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathGetprospectiveusersWithHttpInfoAsync(localIomadLearningpathGetprospectiveusersRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get set of filtered users for given company Get set of filtered users for given company
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetprospectiveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathGetprospectiveusersWithHttpInfoAsync(LocalIomadLearningpathGetprospectiveusersRequest localIomadLearningpathGetprospectiveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathGetprospectiveusersRequest' is set
            if (localIomadLearningpathGetprospectiveusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetprospectiveusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetprospectiveusers");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetprospectiveusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetprospectiveusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_getprospectiveusers", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetprospectiveusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get users assigned to path Get users assigned to path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathGetusers(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathGetusersWithHttpInfo(localIomadLearningpathGetusersRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get users assigned to path Get users assigned to path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathGetusersWithHttpInfo(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathGetusersRequest' is set
            if (localIomadLearningpathGetusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetusers");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_getusers", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get users assigned to path Get users assigned to path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathGetusersAsync(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathGetusersWithHttpInfoAsync(localIomadLearningpathGetusersRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get users assigned to path Get users assigned to path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathGetusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathGetusersWithHttpInfoAsync(LocalIomadLearningpathGetusersRequest localIomadLearningpathGetusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathGetusersRequest' is set
            if (localIomadLearningpathGetusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathGetusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathGetusers");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathGetusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathGetusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_getusers", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathGetusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Set sequence of courses in learning path Set sequence of courses in learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathOrdercourses(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathOrdercoursesWithHttpInfo(localIomadLearningpathOrdercoursesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Set sequence of courses in learning path Set sequence of courses in learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathOrdercoursesWithHttpInfo(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathOrdercoursesRequest' is set
            if (localIomadLearningpathOrdercoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathOrdercoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathOrdercourses");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathOrdercoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathOrdercourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_ordercourses", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathOrdercourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Set sequence of courses in learning path Set sequence of courses in learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathOrdercoursesAsync(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathOrdercoursesWithHttpInfoAsync(localIomadLearningpathOrdercoursesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Set sequence of courses in learning path Set sequence of courses in learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathOrdercoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathOrdercoursesWithHttpInfoAsync(LocalIomadLearningpathOrdercoursesRequest localIomadLearningpathOrdercoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathOrdercoursesRequest' is set
            if (localIomadLearningpathOrdercoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathOrdercoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathOrdercourses");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathOrdercoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathOrdercourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_ordercourses", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathOrdercourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remove courses from learning path Remove courses from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathRemovecourses(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathRemovecoursesWithHttpInfo(localIomadLearningpathRemovecoursesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remove courses from learning path Remove courses from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathRemovecoursesWithHttpInfo(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathRemovecoursesRequest' is set
            if (localIomadLearningpathRemovecoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathRemovecoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathRemovecourses");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathRemovecoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathRemovecourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_removecourses", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathRemovecourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remove courses from learning path Remove courses from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathRemovecoursesAsync(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathRemovecoursesWithHttpInfoAsync(localIomadLearningpathRemovecoursesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remove courses from learning path Remove courses from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemovecoursesRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathRemovecoursesWithHttpInfoAsync(LocalIomadLearningpathRemovecoursesRequest localIomadLearningpathRemovecoursesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathRemovecoursesRequest' is set
            if (localIomadLearningpathRemovecoursesRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathRemovecoursesRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathRemovecourses");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathRemovecoursesRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathRemovecourses";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_removecourses", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathRemovecourses", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remove users from learning path Remove users from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object LocalIomadLearningpathRemoveusers(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = LocalIomadLearningpathRemoveusersWithHttpInfo(localIomadLearningpathRemoveusersRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remove users from learning path Remove users from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> LocalIomadLearningpathRemoveusersWithHttpInfo(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0)
        {
            // verify the required parameter 'localIomadLearningpathRemoveusersRequest' is set
            if (localIomadLearningpathRemoveusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathRemoveusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathRemoveusers");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathRemoveusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathRemoveusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/local_iomad_learningpath_removeusers", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathRemoveusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remove users from learning path Remove users from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> LocalIomadLearningpathRemoveusersAsync(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await LocalIomadLearningpathRemoveusersWithHttpInfoAsync(localIomadLearningpathRemoveusersRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Remove users from learning path Remove users from learning path
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="localIomadLearningpathRemoveusersRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> LocalIomadLearningpathRemoveusersWithHttpInfoAsync(LocalIomadLearningpathRemoveusersRequest localIomadLearningpathRemoveusersRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'localIomadLearningpathRemoveusersRequest' is set
            if (localIomadLearningpathRemoveusersRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'localIomadLearningpathRemoveusersRequest' when calling LocalIomadLearningpathApi->LocalIomadLearningpathRemoveusers");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = localIomadLearningpathRemoveusersRequest;

            localVarRequestOptions.Operation = "LocalIomadLearningpathApi.LocalIomadLearningpathRemoveusers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/local_iomad_learningpath_removeusers", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("LocalIomadLearningpathRemoveusers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
