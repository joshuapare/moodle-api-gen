/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using MoodleClient.Client;
using MoodleClient.Model;

namespace MoodleClient.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IQbankColumnsortorderApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Column size
        /// </summary>
        /// <remarks>
        /// Column size
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object QbankColumnsortorderSetColumnSize(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0);

        /// <summary>
        /// Column size
        /// </summary>
        /// <remarks>
        /// Column size
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> QbankColumnsortorderSetColumnSizeWithHttpInfo(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0);
        /// <summary>
        /// Sets question columns order in database
        /// </summary>
        /// <remarks>
        /// Sets question columns order in database
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object QbankColumnsortorderSetColumnbankOrder(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0);

        /// <summary>
        /// Sets question columns order in database
        /// </summary>
        /// <remarks>
        /// Sets question columns order in database
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> QbankColumnsortorderSetColumnbankOrderWithHttpInfo(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0);
        /// <summary>
        /// Hidden Columns
        /// </summary>
        /// <remarks>
        /// Hidden Columns
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        Object QbankColumnsortorderSetHiddenColumns(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0);

        /// <summary>
        /// Hidden Columns
        /// </summary>
        /// <remarks>
        /// Hidden Columns
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> QbankColumnsortorderSetHiddenColumnsWithHttpInfo(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IQbankColumnsortorderApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Column size
        /// </summary>
        /// <remarks>
        /// Column size
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> QbankColumnsortorderSetColumnSizeAsync(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Column size
        /// </summary>
        /// <remarks>
        /// Column size
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> QbankColumnsortorderSetColumnSizeWithHttpInfoAsync(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Sets question columns order in database
        /// </summary>
        /// <remarks>
        /// Sets question columns order in database
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> QbankColumnsortorderSetColumnbankOrderAsync(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Sets question columns order in database
        /// </summary>
        /// <remarks>
        /// Sets question columns order in database
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> QbankColumnsortorderSetColumnbankOrderWithHttpInfoAsync(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Hidden Columns
        /// </summary>
        /// <remarks>
        /// Hidden Columns
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> QbankColumnsortorderSetHiddenColumnsAsync(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Hidden Columns
        /// </summary>
        /// <remarks>
        /// Hidden Columns
        /// </remarks>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> QbankColumnsortorderSetHiddenColumnsWithHttpInfoAsync(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IQbankColumnsortorderApi : IQbankColumnsortorderApiSync, IQbankColumnsortorderApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class QbankColumnsortorderApi : IQbankColumnsortorderApi
    {
        private MoodleClient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="QbankColumnsortorderApi"/> class.
        /// </summary>
        /// <returns></returns>
        public QbankColumnsortorderApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QbankColumnsortorderApi"/> class.
        /// </summary>
        /// <returns></returns>
        public QbankColumnsortorderApi(string basePath)
        {
            this.Configuration = MoodleClient.Client.Configuration.MergeConfigurations(
                MoodleClient.Client.GlobalConfiguration.Instance,
                new MoodleClient.Client.Configuration { BasePath = basePath }
            );
            this.Client = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = MoodleClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QbankColumnsortorderApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public QbankColumnsortorderApi(MoodleClient.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = MoodleClient.Client.Configuration.MergeConfigurations(
                MoodleClient.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MoodleClient.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = MoodleClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QbankColumnsortorderApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public QbankColumnsortorderApi(MoodleClient.Client.ISynchronousClient client, MoodleClient.Client.IAsynchronousClient asyncClient, MoodleClient.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = MoodleClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public MoodleClient.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public MoodleClient.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public MoodleClient.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public MoodleClient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Column size Column size
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object QbankColumnsortorderSetColumnSize(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = QbankColumnsortorderSetColumnSizeWithHttpInfo(qbankColumnsortorderSetColumnSizeRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Column size Column size
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> QbankColumnsortorderSetColumnSizeWithHttpInfo(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0)
        {
            // verify the required parameter 'qbankColumnsortorderSetColumnSizeRequest' is set
            if (qbankColumnsortorderSetColumnSizeRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'qbankColumnsortorderSetColumnSizeRequest' when calling QbankColumnsortorderApi->QbankColumnsortorderSetColumnSize");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = qbankColumnsortorderSetColumnSizeRequest;

            localVarRequestOptions.Operation = "QbankColumnsortorderApi.QbankColumnsortorderSetColumnSize";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/qbank_columnsortorder_set_column_size", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QbankColumnsortorderSetColumnSize", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Column size Column size
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> QbankColumnsortorderSetColumnSizeAsync(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await QbankColumnsortorderSetColumnSizeWithHttpInfoAsync(qbankColumnsortorderSetColumnSizeRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Column size Column size
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnSizeRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> QbankColumnsortorderSetColumnSizeWithHttpInfoAsync(QbankColumnsortorderSetColumnSizeRequest qbankColumnsortorderSetColumnSizeRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'qbankColumnsortorderSetColumnSizeRequest' is set
            if (qbankColumnsortorderSetColumnSizeRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'qbankColumnsortorderSetColumnSizeRequest' when calling QbankColumnsortorderApi->QbankColumnsortorderSetColumnSize");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = qbankColumnsortorderSetColumnSizeRequest;

            localVarRequestOptions.Operation = "QbankColumnsortorderApi.QbankColumnsortorderSetColumnSize";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/qbank_columnsortorder_set_column_size", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QbankColumnsortorderSetColumnSize", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Sets question columns order in database Sets question columns order in database
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object QbankColumnsortorderSetColumnbankOrder(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = QbankColumnsortorderSetColumnbankOrderWithHttpInfo(qbankColumnsortorderSetColumnbankOrderRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Sets question columns order in database Sets question columns order in database
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> QbankColumnsortorderSetColumnbankOrderWithHttpInfo(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0)
        {
            // verify the required parameter 'qbankColumnsortorderSetColumnbankOrderRequest' is set
            if (qbankColumnsortorderSetColumnbankOrderRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'qbankColumnsortorderSetColumnbankOrderRequest' when calling QbankColumnsortorderApi->QbankColumnsortorderSetColumnbankOrder");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = qbankColumnsortorderSetColumnbankOrderRequest;

            localVarRequestOptions.Operation = "QbankColumnsortorderApi.QbankColumnsortorderSetColumnbankOrder";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/qbank_columnsortorder_set_columnbank_order", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QbankColumnsortorderSetColumnbankOrder", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Sets question columns order in database Sets question columns order in database
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> QbankColumnsortorderSetColumnbankOrderAsync(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await QbankColumnsortorderSetColumnbankOrderWithHttpInfoAsync(qbankColumnsortorderSetColumnbankOrderRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Sets question columns order in database Sets question columns order in database
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetColumnbankOrderRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> QbankColumnsortorderSetColumnbankOrderWithHttpInfoAsync(QbankColumnsortorderSetColumnbankOrderRequest qbankColumnsortorderSetColumnbankOrderRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'qbankColumnsortorderSetColumnbankOrderRequest' is set
            if (qbankColumnsortorderSetColumnbankOrderRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'qbankColumnsortorderSetColumnbankOrderRequest' when calling QbankColumnsortorderApi->QbankColumnsortorderSetColumnbankOrder");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = qbankColumnsortorderSetColumnbankOrderRequest;

            localVarRequestOptions.Operation = "QbankColumnsortorderApi.QbankColumnsortorderSetColumnbankOrder";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/qbank_columnsortorder_set_columnbank_order", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QbankColumnsortorderSetColumnbankOrder", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Hidden Columns Hidden Columns
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Object</returns>
        public Object QbankColumnsortorderSetHiddenColumns(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0)
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = QbankColumnsortorderSetHiddenColumnsWithHttpInfo(qbankColumnsortorderSetHiddenColumnsRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Hidden Columns Hidden Columns
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object</returns>
        public MoodleClient.Client.ApiResponse<Object> QbankColumnsortorderSetHiddenColumnsWithHttpInfo(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0)
        {
            // verify the required parameter 'qbankColumnsortorderSetHiddenColumnsRequest' is set
            if (qbankColumnsortorderSetHiddenColumnsRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'qbankColumnsortorderSetHiddenColumnsRequest' when calling QbankColumnsortorderApi->QbankColumnsortorderSetHiddenColumns");
            }

            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = qbankColumnsortorderSetHiddenColumnsRequest;

            localVarRequestOptions.Operation = "QbankColumnsortorderApi.QbankColumnsortorderSetHiddenColumns";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/qbank_columnsortorder_set_hidden_columns", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QbankColumnsortorderSetHiddenColumns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Hidden Columns Hidden Columns
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> QbankColumnsortorderSetHiddenColumnsAsync(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MoodleClient.Client.ApiResponse<Object> localVarResponse = await QbankColumnsortorderSetHiddenColumnsWithHttpInfoAsync(qbankColumnsortorderSetHiddenColumnsRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Hidden Columns Hidden Columns
        /// </summary>
        /// <exception cref="MoodleClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="qbankColumnsortorderSetHiddenColumnsRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<MoodleClient.Client.ApiResponse<Object>> QbankColumnsortorderSetHiddenColumnsWithHttpInfoAsync(QbankColumnsortorderSetHiddenColumnsRequest qbankColumnsortorderSetHiddenColumnsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'qbankColumnsortorderSetHiddenColumnsRequest' is set
            if (qbankColumnsortorderSetHiddenColumnsRequest == null)
            {
                throw new MoodleClient.Client.ApiException(400, "Missing required parameter 'qbankColumnsortorderSetHiddenColumnsRequest' when calling QbankColumnsortorderApi->QbankColumnsortorderSetHiddenColumns");
            }


            MoodleClient.Client.RequestOptions localVarRequestOptions = new MoodleClient.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MoodleClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MoodleClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = qbankColumnsortorderSetHiddenColumnsRequest;

            localVarRequestOptions.Operation = "QbankColumnsortorderApi.QbankColumnsortorderSetHiddenColumns";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (apiKey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/qbank_columnsortorder_set_hidden_columns", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QbankColumnsortorderSetHiddenColumns", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
