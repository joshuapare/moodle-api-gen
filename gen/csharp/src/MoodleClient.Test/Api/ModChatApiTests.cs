/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MoodleClient.Client;
using MoodleClient.Api;
// uncomment below to import models
//using MoodleClient.Model;

namespace MoodleClient.Test.Api
{
    /// <summary>
    ///  Class for testing ModChatApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ModChatApiTests : IDisposable
    {
        private ModChatApi instance;

        public ModChatApiTests()
        {
            instance = new ModChatApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModChatApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ModChatApi
            //Assert.IsType<ModChatApi>(instance);
        }

        /// <summary>
        /// Test ModChatGetChatLatestMessages
        /// </summary>
        [Fact]
        public void ModChatGetChatLatestMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatGetChatLatestMessagesRequest modChatGetChatLatestMessagesRequest = null;
            //var response = instance.ModChatGetChatLatestMessages(modChatGetChatLatestMessagesRequest);
            //Assert.IsType<ModChatGetChatLatestMessages200Response>(response);
        }

        /// <summary>
        /// Test ModChatGetChatUsers
        /// </summary>
        [Fact]
        public void ModChatGetChatUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatGetChatUsersRequest modChatGetChatUsersRequest = null;
            //var response = instance.ModChatGetChatUsers(modChatGetChatUsersRequest);
            //Assert.IsType<ModChatGetChatUsers200Response>(response);
        }

        /// <summary>
        /// Test ModChatGetChatsByCourses
        /// </summary>
        [Fact]
        public void ModChatGetChatsByCoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatGetChatsByCoursesRequest modChatGetChatsByCoursesRequest = null;
            //var response = instance.ModChatGetChatsByCourses(modChatGetChatsByCoursesRequest);
            //Assert.IsType<ModChatGetChatsByCourses200Response>(response);
        }

        /// <summary>
        /// Test ModChatGetSessionMessages
        /// </summary>
        [Fact]
        public void ModChatGetSessionMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatGetSessionMessagesRequest modChatGetSessionMessagesRequest = null;
            //var response = instance.ModChatGetSessionMessages(modChatGetSessionMessagesRequest);
            //Assert.IsType<ModChatGetSessionMessages200Response>(response);
        }

        /// <summary>
        /// Test ModChatGetSessions
        /// </summary>
        [Fact]
        public void ModChatGetSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatGetSessionsRequest modChatGetSessionsRequest = null;
            //var response = instance.ModChatGetSessions(modChatGetSessionsRequest);
            //Assert.IsType<ModChatGetSessions200Response>(response);
        }

        /// <summary>
        /// Test ModChatLoginUser
        /// </summary>
        [Fact]
        public void ModChatLoginUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatLoginUserRequest modChatLoginUserRequest = null;
            //var response = instance.ModChatLoginUser(modChatLoginUserRequest);
            //Assert.IsType<ModChatLoginUser200Response>(response);
        }

        /// <summary>
        /// Test ModChatSendChatMessage
        /// </summary>
        [Fact]
        public void ModChatSendChatMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatSendChatMessageRequest modChatSendChatMessageRequest = null;
            //var response = instance.ModChatSendChatMessage(modChatSendChatMessageRequest);
            //Assert.IsType<ModChatSendChatMessage200Response>(response);
        }

        /// <summary>
        /// Test ModChatViewChat
        /// </summary>
        [Fact]
        public void ModChatViewChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatViewChatRequest modChatViewChatRequest = null;
            //var response = instance.ModChatViewChat(modChatViewChatRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }

        /// <summary>
        /// Test ModChatViewSessions
        /// </summary>
        [Fact]
        public void ModChatViewSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatViewSessionsRequest modChatViewSessionsRequest = null;
            //var response = instance.ModChatViewSessions(modChatViewSessionsRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }
    }
}
