/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MoodleClient.Client;
using MoodleClient.Api;
// uncomment below to import models
//using MoodleClient.Model;

namespace MoodleClient.Test.Api
{
    /// <summary>
    ///  Class for testing ModGlossaryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ModGlossaryApiTests : IDisposable
    {
        private ModGlossaryApi instance;

        public ModGlossaryApiTests()
        {
            instance = new ModGlossaryApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModGlossaryApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ModGlossaryApi
            //Assert.IsType<ModGlossaryApi>(instance);
        }

        /// <summary>
        /// Test ModGlossaryAddEntry
        /// </summary>
        [Fact]
        public void ModGlossaryAddEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryAddEntryRequest modGlossaryAddEntryRequest = null;
            //var response = instance.ModGlossaryAddEntry(modGlossaryAddEntryRequest);
            //Assert.IsType<ModGlossaryAddEntry200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryDeleteEntry
        /// </summary>
        [Fact]
        public void ModGlossaryDeleteEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryDeleteEntryRequest modGlossaryDeleteEntryRequest = null;
            //var response = instance.ModGlossaryDeleteEntry(modGlossaryDeleteEntryRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetAuthors
        /// </summary>
        [Fact]
        public void ModGlossaryGetAuthorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetAuthorsRequest modGlossaryGetAuthorsRequest = null;
            //var response = instance.ModGlossaryGetAuthors(modGlossaryGetAuthorsRequest);
            //Assert.IsType<ModGlossaryGetAuthors200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetCategories
        /// </summary>
        [Fact]
        public void ModGlossaryGetCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetCategoriesRequest modGlossaryGetCategoriesRequest = null;
            //var response = instance.ModGlossaryGetCategories(modGlossaryGetCategoriesRequest);
            //Assert.IsType<ModGlossaryGetCategories200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesByAuthor
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesByAuthorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesByAuthorRequest modGlossaryGetEntriesByAuthorRequest = null;
            //var response = instance.ModGlossaryGetEntriesByAuthor(modGlossaryGetEntriesByAuthorRequest);
            //Assert.IsType<ModGlossaryGetEntriesByAuthor200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesByAuthorId
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesByAuthorIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesByAuthorIdRequest modGlossaryGetEntriesByAuthorIdRequest = null;
            //var response = instance.ModGlossaryGetEntriesByAuthorId(modGlossaryGetEntriesByAuthorIdRequest);
            //Assert.IsType<ModGlossaryGetEntriesByAuthorId200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesByCategory
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesByCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesByCategoryRequest modGlossaryGetEntriesByCategoryRequest = null;
            //var response = instance.ModGlossaryGetEntriesByCategory(modGlossaryGetEntriesByCategoryRequest);
            //Assert.IsType<ModGlossaryGetEntriesByCategory200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesByDate
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesByDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesByDateRequest modGlossaryGetEntriesByDateRequest = null;
            //var response = instance.ModGlossaryGetEntriesByDate(modGlossaryGetEntriesByDateRequest);
            //Assert.IsType<ModGlossaryGetEntriesByAuthorId200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesByLetter
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesByLetterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesByLetterRequest modGlossaryGetEntriesByLetterRequest = null;
            //var response = instance.ModGlossaryGetEntriesByLetter(modGlossaryGetEntriesByLetterRequest);
            //Assert.IsType<ModGlossaryGetEntriesByAuthorId200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesBySearch
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesBySearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesBySearchRequest modGlossaryGetEntriesBySearchRequest = null;
            //var response = instance.ModGlossaryGetEntriesBySearch(modGlossaryGetEntriesBySearchRequest);
            //Assert.IsType<ModGlossaryGetEntriesByAuthorId200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesByTerm
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesByTermTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesByTermRequest modGlossaryGetEntriesByTermRequest = null;
            //var response = instance.ModGlossaryGetEntriesByTerm(modGlossaryGetEntriesByTermRequest);
            //Assert.IsType<ModGlossaryGetEntriesByAuthorId200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntriesToApprove
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntriesToApproveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntriesToApproveRequest modGlossaryGetEntriesToApproveRequest = null;
            //var response = instance.ModGlossaryGetEntriesToApprove(modGlossaryGetEntriesToApproveRequest);
            //Assert.IsType<ModGlossaryGetEntriesByAuthorId200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetEntryById
        /// </summary>
        [Fact]
        public void ModGlossaryGetEntryByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntryByIdRequest modGlossaryGetEntryByIdRequest = null;
            //var response = instance.ModGlossaryGetEntryById(modGlossaryGetEntryByIdRequest);
            //Assert.IsType<ModGlossaryGetEntryById200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryGetGlossariesByCourses
        /// </summary>
        [Fact]
        public void ModGlossaryGetGlossariesByCoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatGetChatsByCoursesRequest modChatGetChatsByCoursesRequest = null;
            //var response = instance.ModGlossaryGetGlossariesByCourses(modChatGetChatsByCoursesRequest);
            //Assert.IsType<ModGlossaryGetGlossariesByCourses200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryPrepareEntryForEdition
        /// </summary>
        [Fact]
        public void ModGlossaryPrepareEntryForEditionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryPrepareEntryForEditionRequest modGlossaryPrepareEntryForEditionRequest = null;
            //var response = instance.ModGlossaryPrepareEntryForEdition(modGlossaryPrepareEntryForEditionRequest);
            //Assert.IsType<ModGlossaryPrepareEntryForEdition200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryUpdateEntry
        /// </summary>
        [Fact]
        public void ModGlossaryUpdateEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryUpdateEntryRequest modGlossaryUpdateEntryRequest = null;
            //var response = instance.ModGlossaryUpdateEntry(modGlossaryUpdateEntryRequest);
            //Assert.IsType<ModGlossaryUpdateEntry200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryViewEntry
        /// </summary>
        [Fact]
        public void ModGlossaryViewEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryGetEntryByIdRequest modGlossaryGetEntryByIdRequest = null;
            //var response = instance.ModGlossaryViewEntry(modGlossaryGetEntryByIdRequest);
            //Assert.IsType<ModGlossaryViewEntry200Response>(response);
        }

        /// <summary>
        /// Test ModGlossaryViewGlossary
        /// </summary>
        [Fact]
        public void ModGlossaryViewGlossaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModGlossaryViewGlossaryRequest modGlossaryViewGlossaryRequest = null;
            //var response = instance.ModGlossaryViewGlossary(modGlossaryViewGlossaryRequest);
            //Assert.IsType<ModGlossaryViewGlossary200Response>(response);
        }
    }
}
