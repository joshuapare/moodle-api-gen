/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MoodleClient.Client;
using MoodleClient.Api;
// uncomment below to import models
//using MoodleClient.Model;

namespace MoodleClient.Test.Api
{
    /// <summary>
    ///  Class for testing ToolDataprivacyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ToolDataprivacyApiTests : IDisposable
    {
        private ToolDataprivacyApi instance;

        public ToolDataprivacyApiTests()
        {
            instance = new ToolDataprivacyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ToolDataprivacyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ToolDataprivacyApi
            //Assert.IsType<ToolDataprivacyApi>(instance);
        }

        /// <summary>
        /// Test ToolDataprivacyApproveDataRequest
        /// </summary>
        [Fact]
        public void ToolDataprivacyApproveDataRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyApproveDataRequestRequest toolDataprivacyApproveDataRequestRequest = null;
            //var response = instance.ToolDataprivacyApproveDataRequest(toolDataprivacyApproveDataRequestRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyBulkApproveDataRequests
        /// </summary>
        [Fact]
        public void ToolDataprivacyBulkApproveDataRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyBulkApproveDataRequestsRequest toolDataprivacyBulkApproveDataRequestsRequest = null;
            //var response = instance.ToolDataprivacyBulkApproveDataRequests(toolDataprivacyBulkApproveDataRequestsRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyBulkDenyDataRequests
        /// </summary>
        [Fact]
        public void ToolDataprivacyBulkDenyDataRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyBulkDenyDataRequestsRequest toolDataprivacyBulkDenyDataRequestsRequest = null;
            //var response = instance.ToolDataprivacyBulkDenyDataRequests(toolDataprivacyBulkDenyDataRequestsRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyCancelDataRequest
        /// </summary>
        [Fact]
        public void ToolDataprivacyCancelDataRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyCancelDataRequestRequest toolDataprivacyCancelDataRequestRequest = null;
            //var response = instance.ToolDataprivacyCancelDataRequest(toolDataprivacyCancelDataRequestRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyConfirmContextsForDeletion
        /// </summary>
        [Fact]
        public void ToolDataprivacyConfirmContextsForDeletionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyConfirmContextsForDeletionRequest toolDataprivacyConfirmContextsForDeletionRequest = null;
            //var response = instance.ToolDataprivacyConfirmContextsForDeletion(toolDataprivacyConfirmContextsForDeletionRequest);
            //Assert.IsType<ToolDataprivacyConfirmContextsForDeletion200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyContactDpo
        /// </summary>
        [Fact]
        public void ToolDataprivacyContactDpoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyContactDpoRequest toolDataprivacyContactDpoRequest = null;
            //var response = instance.ToolDataprivacyContactDpo(toolDataprivacyContactDpoRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyCreateCategoryForm
        /// </summary>
        [Fact]
        public void ToolDataprivacyCreateCategoryFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyCreateCategoryFormRequest toolDataprivacyCreateCategoryFormRequest = null;
            //var response = instance.ToolDataprivacyCreateCategoryForm(toolDataprivacyCreateCategoryFormRequest);
            //Assert.IsType<ToolDataprivacyCreateCategoryForm200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyCreatePurposeForm
        /// </summary>
        [Fact]
        public void ToolDataprivacyCreatePurposeFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyCreatePurposeFormRequest toolDataprivacyCreatePurposeFormRequest = null;
            //var response = instance.ToolDataprivacyCreatePurposeForm(toolDataprivacyCreatePurposeFormRequest);
            //Assert.IsType<ToolDataprivacyCreatePurposeForm200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyDeleteCategory
        /// </summary>
        [Fact]
        public void ToolDataprivacyDeleteCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyDeleteCategoryRequest toolDataprivacyDeleteCategoryRequest = null;
            //var response = instance.ToolDataprivacyDeleteCategory(toolDataprivacyDeleteCategoryRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyDeletePurpose
        /// </summary>
        [Fact]
        public void ToolDataprivacyDeletePurposeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyDeletePurposeRequest toolDataprivacyDeletePurposeRequest = null;
            //var response = instance.ToolDataprivacyDeletePurpose(toolDataprivacyDeletePurposeRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyDenyDataRequest
        /// </summary>
        [Fact]
        public void ToolDataprivacyDenyDataRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyCancelDataRequestRequest toolDataprivacyCancelDataRequestRequest = null;
            //var response = instance.ToolDataprivacyDenyDataRequest(toolDataprivacyCancelDataRequestRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyGetActivityOptions
        /// </summary>
        [Fact]
        public void ToolDataprivacyGetActivityOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyGetActivityOptionsRequest toolDataprivacyGetActivityOptionsRequest = null;
            //var response = instance.ToolDataprivacyGetActivityOptions(toolDataprivacyGetActivityOptionsRequest);
            //Assert.IsType<ToolDataprivacyGetActivityOptions200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyGetCategoryOptions
        /// </summary>
        [Fact]
        public void ToolDataprivacyGetCategoryOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyGetCategoryOptionsRequest toolDataprivacyGetCategoryOptionsRequest = null;
            //var response = instance.ToolDataprivacyGetCategoryOptions(toolDataprivacyGetCategoryOptionsRequest);
            //Assert.IsType<ToolDataprivacyGetCategoryOptions200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyGetDataRequest
        /// </summary>
        [Fact]
        public void ToolDataprivacyGetDataRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyCancelDataRequestRequest toolDataprivacyCancelDataRequestRequest = null;
            //var response = instance.ToolDataprivacyGetDataRequest(toolDataprivacyCancelDataRequestRequest);
            //Assert.IsType<ToolDataprivacyGetDataRequest200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyGetPurposeOptions
        /// </summary>
        [Fact]
        public void ToolDataprivacyGetPurposeOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyGetCategoryOptionsRequest toolDataprivacyGetCategoryOptionsRequest = null;
            //var response = instance.ToolDataprivacyGetPurposeOptions(toolDataprivacyGetCategoryOptionsRequest);
            //Assert.IsType<ToolDataprivacyGetPurposeOptions200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyGetUsers
        /// </summary>
        [Fact]
        public void ToolDataprivacyGetUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyGetUsersRequest toolDataprivacyGetUsersRequest = null;
            //var response = instance.ToolDataprivacyGetUsers(toolDataprivacyGetUsersRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyMarkComplete
        /// </summary>
        [Fact]
        public void ToolDataprivacyMarkCompleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyCancelDataRequestRequest toolDataprivacyCancelDataRequestRequest = null;
            //var response = instance.ToolDataprivacyMarkComplete(toolDataprivacyCancelDataRequestRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacySetContextDefaults
        /// </summary>
        [Fact]
        public void ToolDataprivacySetContextDefaultsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacySetContextDefaultsRequest toolDataprivacySetContextDefaultsRequest = null;
            //var response = instance.ToolDataprivacySetContextDefaults(toolDataprivacySetContextDefaultsRequest);
            //Assert.IsType<ToolDataprivacySetContextDefaults200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacySetContextForm
        /// </summary>
        [Fact]
        public void ToolDataprivacySetContextFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacySetContextFormRequest toolDataprivacySetContextFormRequest = null;
            //var response = instance.ToolDataprivacySetContextForm(toolDataprivacySetContextFormRequest);
            //Assert.IsType<ToolDataprivacySetContextForm200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacySetContextlevelForm
        /// </summary>
        [Fact]
        public void ToolDataprivacySetContextlevelFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacySetContextlevelFormRequest toolDataprivacySetContextlevelFormRequest = null;
            //var response = instance.ToolDataprivacySetContextlevelForm(toolDataprivacySetContextlevelFormRequest);
            //Assert.IsType<ToolDataprivacySetContextlevelForm200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacySubmitSelectedCoursesForm
        /// </summary>
        [Fact]
        public void ToolDataprivacySubmitSelectedCoursesFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacySubmitSelectedCoursesFormRequest toolDataprivacySubmitSelectedCoursesFormRequest = null;
            //var response = instance.ToolDataprivacySubmitSelectedCoursesForm(toolDataprivacySubmitSelectedCoursesFormRequest);
            //Assert.IsType<CoreContentbankRenameContent200Response>(response);
        }

        /// <summary>
        /// Test ToolDataprivacyTreeExtraBranches
        /// </summary>
        [Fact]
        public void ToolDataprivacyTreeExtraBranchesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ToolDataprivacyTreeExtraBranchesRequest toolDataprivacyTreeExtraBranchesRequest = null;
            //var response = instance.ToolDataprivacyTreeExtraBranches(toolDataprivacyTreeExtraBranchesRequest);
            //Assert.IsType<ToolDataprivacyTreeExtraBranches200Response>(response);
        }
    }
}
