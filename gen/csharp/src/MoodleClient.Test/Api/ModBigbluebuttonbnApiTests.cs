/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MoodleClient.Client;
using MoodleClient.Api;
// uncomment below to import models
//using MoodleClient.Model;

namespace MoodleClient.Test.Api
{
    /// <summary>
    ///  Class for testing ModBigbluebuttonbnApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ModBigbluebuttonbnApiTests : IDisposable
    {
        private ModBigbluebuttonbnApi instance;

        public ModBigbluebuttonbnApiTests()
        {
            instance = new ModBigbluebuttonbnApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModBigbluebuttonbnApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ModBigbluebuttonbnApi
            //Assert.IsType<ModBigbluebuttonbnApi>(instance);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnCanJoin
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnCanJoinTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnCanJoinRequest modBigbluebuttonbnCanJoinRequest = null;
            //var response = instance.ModBigbluebuttonbnCanJoin(modBigbluebuttonbnCanJoinRequest);
            //Assert.IsType<ModBigbluebuttonbnCanJoin200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnCompletionValidate
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnCompletionValidateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnCompletionValidateRequest modBigbluebuttonbnCompletionValidateRequest = null;
            //var response = instance.ModBigbluebuttonbnCompletionValidate(modBigbluebuttonbnCompletionValidateRequest);
            //Assert.IsType<CoreCohortAddCohortMembers200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnEndMeeting
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnEndMeetingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnEndMeetingRequest modBigbluebuttonbnEndMeetingRequest = null;
            //var response = instance.ModBigbluebuttonbnEndMeeting(modBigbluebuttonbnEndMeetingRequest);
            //Assert.IsType<CoreCohortAddCohortMembers200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnGetBigbluebuttonbnsByCourses
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest = null;
            //var response = instance.ModBigbluebuttonbnGetBigbluebuttonbnsByCourses(modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest);
            //Assert.IsType<ModBigbluebuttonbnGetBigbluebuttonbnsByCourses200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnGetJoinUrl
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnGetJoinUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnCanJoinRequest modBigbluebuttonbnCanJoinRequest = null;
            //var response = instance.ModBigbluebuttonbnGetJoinUrl(modBigbluebuttonbnCanJoinRequest);
            //Assert.IsType<ModBigbluebuttonbnGetJoinUrl200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnGetRecordings
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnGetRecordingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnGetRecordingsRequest modBigbluebuttonbnGetRecordingsRequest = null;
            //var response = instance.ModBigbluebuttonbnGetRecordings(modBigbluebuttonbnGetRecordingsRequest);
            //Assert.IsType<ModBigbluebuttonbnGetRecordings200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnGetRecordingsToImport
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnGetRecordingsToImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnGetRecordingsToImportRequest modBigbluebuttonbnGetRecordingsToImportRequest = null;
            //var response = instance.ModBigbluebuttonbnGetRecordingsToImport(modBigbluebuttonbnGetRecordingsToImportRequest);
            //Assert.IsType<ModBigbluebuttonbnGetRecordingsToImport200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnMeetingInfo
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnMeetingInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnMeetingInfoRequest modBigbluebuttonbnMeetingInfoRequest = null;
            //var response = instance.ModBigbluebuttonbnMeetingInfo(modBigbluebuttonbnMeetingInfoRequest);
            //Assert.IsType<ModBigbluebuttonbnMeetingInfo200Response>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnUpdateRecording
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnUpdateRecordingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnUpdateRecordingRequest modBigbluebuttonbnUpdateRecordingRequest = null;
            //var response = instance.ModBigbluebuttonbnUpdateRecording(modBigbluebuttonbnUpdateRecordingRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModBigbluebuttonbnViewBigbluebuttonbn
        /// </summary>
        [Fact]
        public void ModBigbluebuttonbnViewBigbluebuttonbnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModBigbluebuttonbnViewBigbluebuttonbnRequest modBigbluebuttonbnViewBigbluebuttonbnRequest = null;
            //var response = instance.ModBigbluebuttonbnViewBigbluebuttonbn(modBigbluebuttonbnViewBigbluebuttonbnRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }
    }
}
