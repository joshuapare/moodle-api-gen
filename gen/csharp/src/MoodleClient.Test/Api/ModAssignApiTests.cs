/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MoodleClient.Client;
using MoodleClient.Api;
// uncomment below to import models
//using MoodleClient.Model;

namespace MoodleClient.Test.Api
{
    /// <summary>
    ///  Class for testing ModAssignApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ModAssignApiTests : IDisposable
    {
        private ModAssignApi instance;

        public ModAssignApiTests()
        {
            instance = new ModAssignApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModAssignApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ModAssignApi
            //Assert.IsType<ModAssignApi>(instance);
        }

        /// <summary>
        /// Test ModAssignCopyPreviousAttempt
        /// </summary>
        [Fact]
        public void ModAssignCopyPreviousAttemptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignCopyPreviousAttemptRequest modAssignCopyPreviousAttemptRequest = null;
            //var response = instance.ModAssignCopyPreviousAttempt(modAssignCopyPreviousAttemptRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignGetAssignments
        /// </summary>
        [Fact]
        public void ModAssignGetAssignmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignGetAssignmentsRequest modAssignGetAssignmentsRequest = null;
            //var response = instance.ModAssignGetAssignments(modAssignGetAssignmentsRequest);
            //Assert.IsType<ModAssignGetAssignments200Response>(response);
        }

        /// <summary>
        /// Test ModAssignGetGrades
        /// </summary>
        [Fact]
        public void ModAssignGetGradesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignGetGradesRequest modAssignGetGradesRequest = null;
            //var response = instance.ModAssignGetGrades(modAssignGetGradesRequest);
            //Assert.IsType<ModAssignGetGrades200Response>(response);
        }

        /// <summary>
        /// Test ModAssignGetParticipant
        /// </summary>
        [Fact]
        public void ModAssignGetParticipantTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignGetParticipantRequest modAssignGetParticipantRequest = null;
            //var response = instance.ModAssignGetParticipant(modAssignGetParticipantRequest);
            //Assert.IsType<ModAssignGetParticipant200Response>(response);
        }

        /// <summary>
        /// Test ModAssignGetSubmissionStatus
        /// </summary>
        [Fact]
        public void ModAssignGetSubmissionStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignGetSubmissionStatusRequest modAssignGetSubmissionStatusRequest = null;
            //var response = instance.ModAssignGetSubmissionStatus(modAssignGetSubmissionStatusRequest);
            //Assert.IsType<ModAssignGetSubmissionStatus200Response>(response);
        }

        /// <summary>
        /// Test ModAssignGetSubmissions
        /// </summary>
        [Fact]
        public void ModAssignGetSubmissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignGetSubmissionsRequest modAssignGetSubmissionsRequest = null;
            //var response = instance.ModAssignGetSubmissions(modAssignGetSubmissionsRequest);
            //Assert.IsType<ModAssignGetSubmissions200Response>(response);
        }

        /// <summary>
        /// Test ModAssignGetUserFlags
        /// </summary>
        [Fact]
        public void ModAssignGetUserFlagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignGetUserFlagsRequest modAssignGetUserFlagsRequest = null;
            //var response = instance.ModAssignGetUserFlags(modAssignGetUserFlagsRequest);
            //Assert.IsType<ModAssignGetUserFlags200Response>(response);
        }

        /// <summary>
        /// Test ModAssignGetUserMappings
        /// </summary>
        [Fact]
        public void ModAssignGetUserMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignGetUserFlagsRequest modAssignGetUserFlagsRequest = null;
            //var response = instance.ModAssignGetUserMappings(modAssignGetUserFlagsRequest);
            //Assert.IsType<ModAssignGetUserMappings200Response>(response);
        }

        /// <summary>
        /// Test ModAssignListParticipants
        /// </summary>
        [Fact]
        public void ModAssignListParticipantsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignListParticipantsRequest modAssignListParticipantsRequest = null;
            //var response = instance.ModAssignListParticipants(modAssignListParticipantsRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignLockSubmissions
        /// </summary>
        [Fact]
        public void ModAssignLockSubmissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignLockSubmissionsRequest modAssignLockSubmissionsRequest = null;
            //var response = instance.ModAssignLockSubmissions(modAssignLockSubmissionsRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignRevealIdentities
        /// </summary>
        [Fact]
        public void ModAssignRevealIdentitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignRevealIdentitiesRequest modAssignRevealIdentitiesRequest = null;
            //var response = instance.ModAssignRevealIdentities(modAssignRevealIdentitiesRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignRevertSubmissionsToDraft
        /// </summary>
        [Fact]
        public void ModAssignRevertSubmissionsToDraftTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignRevertSubmissionsToDraftRequest modAssignRevertSubmissionsToDraftRequest = null;
            //var response = instance.ModAssignRevertSubmissionsToDraft(modAssignRevertSubmissionsToDraftRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignSaveGrade
        /// </summary>
        [Fact]
        public void ModAssignSaveGradeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignSaveGradeRequest modAssignSaveGradeRequest = null;
            //var response = instance.ModAssignSaveGrade(modAssignSaveGradeRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignSaveGrades
        /// </summary>
        [Fact]
        public void ModAssignSaveGradesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignSaveGradesRequest modAssignSaveGradesRequest = null;
            //var response = instance.ModAssignSaveGrades(modAssignSaveGradesRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignSaveSubmission
        /// </summary>
        [Fact]
        public void ModAssignSaveSubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignSaveSubmissionRequest modAssignSaveSubmissionRequest = null;
            //var response = instance.ModAssignSaveSubmission(modAssignSaveSubmissionRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignSaveUserExtensions
        /// </summary>
        [Fact]
        public void ModAssignSaveUserExtensionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignSaveUserExtensionsRequest modAssignSaveUserExtensionsRequest = null;
            //var response = instance.ModAssignSaveUserExtensions(modAssignSaveUserExtensionsRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignSetUserFlags
        /// </summary>
        [Fact]
        public void ModAssignSetUserFlagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignSetUserFlagsRequest modAssignSetUserFlagsRequest = null;
            //var response = instance.ModAssignSetUserFlags(modAssignSetUserFlagsRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignStartSubmission
        /// </summary>
        [Fact]
        public void ModAssignStartSubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignStartSubmissionRequest modAssignStartSubmissionRequest = null;
            //var response = instance.ModAssignStartSubmission(modAssignStartSubmissionRequest);
            //Assert.IsType<ModAssignStartSubmission200Response>(response);
        }

        /// <summary>
        /// Test ModAssignSubmitForGrading
        /// </summary>
        [Fact]
        public void ModAssignSubmitForGradingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignSubmitForGradingRequest modAssignSubmitForGradingRequest = null;
            //var response = instance.ModAssignSubmitForGrading(modAssignSubmitForGradingRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignSubmitGradingForm
        /// </summary>
        [Fact]
        public void ModAssignSubmitGradingFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignSubmitGradingFormRequest modAssignSubmitGradingFormRequest = null;
            //var response = instance.ModAssignSubmitGradingForm(modAssignSubmitGradingFormRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignUnlockSubmissions
        /// </summary>
        [Fact]
        public void ModAssignUnlockSubmissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignRevertSubmissionsToDraftRequest modAssignRevertSubmissionsToDraftRequest = null;
            //var response = instance.ModAssignUnlockSubmissions(modAssignRevertSubmissionsToDraftRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ModAssignViewAssign
        /// </summary>
        [Fact]
        public void ModAssignViewAssignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignViewAssignRequest modAssignViewAssignRequest = null;
            //var response = instance.ModAssignViewAssign(modAssignViewAssignRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }

        /// <summary>
        /// Test ModAssignViewGradingTable
        /// </summary>
        [Fact]
        public void ModAssignViewGradingTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignViewAssignRequest modAssignViewAssignRequest = null;
            //var response = instance.ModAssignViewGradingTable(modAssignViewAssignRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }

        /// <summary>
        /// Test ModAssignViewSubmissionStatus
        /// </summary>
        [Fact]
        public void ModAssignViewSubmissionStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModAssignViewAssignRequest modAssignViewAssignRequest = null;
            //var response = instance.ModAssignViewSubmissionStatus(modAssignViewAssignRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }
    }
}
