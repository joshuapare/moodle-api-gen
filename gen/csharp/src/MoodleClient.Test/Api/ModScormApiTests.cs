/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MoodleClient.Client;
using MoodleClient.Api;
// uncomment below to import models
//using MoodleClient.Model;

namespace MoodleClient.Test.Api
{
    /// <summary>
    ///  Class for testing ModScormApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ModScormApiTests : IDisposable
    {
        private ModScormApi instance;

        public ModScormApiTests()
        {
            instance = new ModScormApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModScormApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ModScormApi
            //Assert.IsType<ModScormApi>(instance);
        }

        /// <summary>
        /// Test ModScormGetScormAccessInformation
        /// </summary>
        [Fact]
        public void ModScormGetScormAccessInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormGetScormAccessInformationRequest modScormGetScormAccessInformationRequest = null;
            //var response = instance.ModScormGetScormAccessInformation(modScormGetScormAccessInformationRequest);
            //Assert.IsType<ModScormGetScormAccessInformation200Response>(response);
        }

        /// <summary>
        /// Test ModScormGetScormAttemptCount
        /// </summary>
        [Fact]
        public void ModScormGetScormAttemptCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormGetScormAttemptCountRequest modScormGetScormAttemptCountRequest = null;
            //var response = instance.ModScormGetScormAttemptCount(modScormGetScormAttemptCountRequest);
            //Assert.IsType<ModScormGetScormAttemptCount200Response>(response);
        }

        /// <summary>
        /// Test ModScormGetScormScoTracks
        /// </summary>
        [Fact]
        public void ModScormGetScormScoTracksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormGetScormScoTracksRequest modScormGetScormScoTracksRequest = null;
            //var response = instance.ModScormGetScormScoTracks(modScormGetScormScoTracksRequest);
            //Assert.IsType<ModScormGetScormScoTracks200Response>(response);
        }

        /// <summary>
        /// Test ModScormGetScormScoes
        /// </summary>
        [Fact]
        public void ModScormGetScormScoesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormGetScormScoesRequest modScormGetScormScoesRequest = null;
            //var response = instance.ModScormGetScormScoes(modScormGetScormScoesRequest);
            //Assert.IsType<ModScormGetScormScoes200Response>(response);
        }

        /// <summary>
        /// Test ModScormGetScormUserData
        /// </summary>
        [Fact]
        public void ModScormGetScormUserDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormGetScormUserDataRequest modScormGetScormUserDataRequest = null;
            //var response = instance.ModScormGetScormUserData(modScormGetScormUserDataRequest);
            //Assert.IsType<ModScormGetScormUserData200Response>(response);
        }

        /// <summary>
        /// Test ModScormGetScormsByCourses
        /// </summary>
        [Fact]
        public void ModScormGetScormsByCoursesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModChatGetChatsByCoursesRequest modChatGetChatsByCoursesRequest = null;
            //var response = instance.ModScormGetScormsByCourses(modChatGetChatsByCoursesRequest);
            //Assert.IsType<ModScormGetScormsByCourses200Response>(response);
        }

        /// <summary>
        /// Test ModScormInsertScormTracks
        /// </summary>
        [Fact]
        public void ModScormInsertScormTracksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormInsertScormTracksRequest modScormInsertScormTracksRequest = null;
            //var response = instance.ModScormInsertScormTracks(modScormInsertScormTracksRequest);
            //Assert.IsType<ModScormInsertScormTracks200Response>(response);
        }

        /// <summary>
        /// Test ModScormLaunchSco
        /// </summary>
        [Fact]
        public void ModScormLaunchScoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormLaunchScoRequest modScormLaunchScoRequest = null;
            //var response = instance.ModScormLaunchSco(modScormLaunchScoRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }

        /// <summary>
        /// Test ModScormViewScorm
        /// </summary>
        [Fact]
        public void ModScormViewScormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModScormViewScormRequest modScormViewScormRequest = null;
            //var response = instance.ModScormViewScorm(modScormViewScormRequest);
            //Assert.IsType<CoreCalendarDeleteSubscription200Response>(response);
        }
    }
}
