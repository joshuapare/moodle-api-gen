/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MoodleClient.Model;
using MoodleClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MoodleClient.Test.Model
{
    /// <summary>
    ///  Class for testing ModForumGetForumAccessInformation200Response
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModForumGetForumAccessInformation200ResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModForumGetForumAccessInformation200Response
        //private ModForumGetForumAccessInformation200Response instance;

        public ModForumGetForumAccessInformation200ResponseTests()
        {
            // TODO uncomment below to create an instance of ModForumGetForumAccessInformation200Response
            //instance = new ModForumGetForumAccessInformation200Response();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModForumGetForumAccessInformation200Response
        /// </summary>
        [Fact]
        public void ModForumGetForumAccessInformation200ResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModForumGetForumAccessInformation200Response
            //Assert.IsType<ModForumGetForumAccessInformation200Response>(instance);
        }

        /// <summary>
        /// Test the property 'Canaddinstance'
        /// </summary>
        [Fact]
        public void CanaddinstanceTest()
        {
            // TODO unit test for the property 'Canaddinstance'
        }

        /// <summary>
        /// Test the property 'Canaddnews'
        /// </summary>
        [Fact]
        public void CanaddnewsTest()
        {
            // TODO unit test for the property 'Canaddnews'
        }

        /// <summary>
        /// Test the property 'Canaddquestion'
        /// </summary>
        [Fact]
        public void CanaddquestionTest()
        {
            // TODO unit test for the property 'Canaddquestion'
        }

        /// <summary>
        /// Test the property 'Canallowforcesubscribe'
        /// </summary>
        [Fact]
        public void CanallowforcesubscribeTest()
        {
            // TODO unit test for the property 'Canallowforcesubscribe'
        }

        /// <summary>
        /// Test the property 'Cancanmailnow'
        /// </summary>
        [Fact]
        public void CancanmailnowTest()
        {
            // TODO unit test for the property 'Cancanmailnow'
        }

        /// <summary>
        /// Test the property 'Cancanoverridecutoff'
        /// </summary>
        [Fact]
        public void CancanoverridecutoffTest()
        {
            // TODO unit test for the property 'Cancanoverridecutoff'
        }

        /// <summary>
        /// Test the property 'Cancanoverridediscussionlock'
        /// </summary>
        [Fact]
        public void CancanoverridediscussionlockTest()
        {
            // TODO unit test for the property 'Cancanoverridediscussionlock'
        }

        /// <summary>
        /// Test the property 'Cancanposttomygroups'
        /// </summary>
        [Fact]
        public void CancanposttomygroupsTest()
        {
            // TODO unit test for the property 'Cancanposttomygroups'
        }

        /// <summary>
        /// Test the property 'Cancantogglefavourite'
        /// </summary>
        [Fact]
        public void CancantogglefavouriteTest()
        {
            // TODO unit test for the property 'Cancantogglefavourite'
        }

        /// <summary>
        /// Test the property 'Cancreateattachment'
        /// </summary>
        [Fact]
        public void CancreateattachmentTest()
        {
            // TODO unit test for the property 'Cancreateattachment'
        }

        /// <summary>
        /// Test the property 'Candeleteanypost'
        /// </summary>
        [Fact]
        public void CandeleteanypostTest()
        {
            // TODO unit test for the property 'Candeleteanypost'
        }

        /// <summary>
        /// Test the property 'Candeleteownpost'
        /// </summary>
        [Fact]
        public void CandeleteownpostTest()
        {
            // TODO unit test for the property 'Candeleteownpost'
        }

        /// <summary>
        /// Test the property 'Caneditanypost'
        /// </summary>
        [Fact]
        public void CaneditanypostTest()
        {
            // TODO unit test for the property 'Caneditanypost'
        }

        /// <summary>
        /// Test the property 'Canexportdiscussion'
        /// </summary>
        [Fact]
        public void CanexportdiscussionTest()
        {
            // TODO unit test for the property 'Canexportdiscussion'
        }

        /// <summary>
        /// Test the property 'Canexportforum'
        /// </summary>
        [Fact]
        public void CanexportforumTest()
        {
            // TODO unit test for the property 'Canexportforum'
        }

        /// <summary>
        /// Test the property 'Canexportownpost'
        /// </summary>
        [Fact]
        public void CanexportownpostTest()
        {
            // TODO unit test for the property 'Canexportownpost'
        }

        /// <summary>
        /// Test the property 'Canexportpost'
        /// </summary>
        [Fact]
        public void CanexportpostTest()
        {
            // TODO unit test for the property 'Canexportpost'
        }

        /// <summary>
        /// Test the property 'Cangrade'
        /// </summary>
        [Fact]
        public void CangradeTest()
        {
            // TODO unit test for the property 'Cangrade'
        }

        /// <summary>
        /// Test the property 'Canmanagesubscriptions'
        /// </summary>
        [Fact]
        public void CanmanagesubscriptionsTest()
        {
            // TODO unit test for the property 'Canmanagesubscriptions'
        }

        /// <summary>
        /// Test the property 'Canmovediscussions'
        /// </summary>
        [Fact]
        public void CanmovediscussionsTest()
        {
            // TODO unit test for the property 'Canmovediscussions'
        }

        /// <summary>
        /// Test the property 'Canpindiscussions'
        /// </summary>
        [Fact]
        public void CanpindiscussionsTest()
        {
            // TODO unit test for the property 'Canpindiscussions'
        }

        /// <summary>
        /// Test the property 'Canpostprivatereply'
        /// </summary>
        [Fact]
        public void CanpostprivatereplyTest()
        {
            // TODO unit test for the property 'Canpostprivatereply'
        }

        /// <summary>
        /// Test the property 'Canpostwithoutthrottling'
        /// </summary>
        [Fact]
        public void CanpostwithoutthrottlingTest()
        {
            // TODO unit test for the property 'Canpostwithoutthrottling'
        }

        /// <summary>
        /// Test the property 'Canrate'
        /// </summary>
        [Fact]
        public void CanrateTest()
        {
            // TODO unit test for the property 'Canrate'
        }

        /// <summary>
        /// Test the property 'Canreadprivatereplies'
        /// </summary>
        [Fact]
        public void CanreadprivaterepliesTest()
        {
            // TODO unit test for the property 'Canreadprivatereplies'
        }

        /// <summary>
        /// Test the property 'Canreplynews'
        /// </summary>
        [Fact]
        public void CanreplynewsTest()
        {
            // TODO unit test for the property 'Canreplynews'
        }

        /// <summary>
        /// Test the property 'Canreplypost'
        /// </summary>
        [Fact]
        public void CanreplypostTest()
        {
            // TODO unit test for the property 'Canreplypost'
        }

        /// <summary>
        /// Test the property 'Cansplitdiscussions'
        /// </summary>
        [Fact]
        public void CansplitdiscussionsTest()
        {
            // TODO unit test for the property 'Cansplitdiscussions'
        }

        /// <summary>
        /// Test the property 'Canstartdiscussion'
        /// </summary>
        [Fact]
        public void CanstartdiscussionTest()
        {
            // TODO unit test for the property 'Canstartdiscussion'
        }

        /// <summary>
        /// Test the property 'Canviewallratings'
        /// </summary>
        [Fact]
        public void CanviewallratingsTest()
        {
            // TODO unit test for the property 'Canviewallratings'
        }

        /// <summary>
        /// Test the property 'Canviewanyrating'
        /// </summary>
        [Fact]
        public void CanviewanyratingTest()
        {
            // TODO unit test for the property 'Canviewanyrating'
        }

        /// <summary>
        /// Test the property 'Canviewdiscussion'
        /// </summary>
        [Fact]
        public void CanviewdiscussionTest()
        {
            // TODO unit test for the property 'Canviewdiscussion'
        }

        /// <summary>
        /// Test the property 'Canviewhiddentimedposts'
        /// </summary>
        [Fact]
        public void CanviewhiddentimedpostsTest()
        {
            // TODO unit test for the property 'Canviewhiddentimedposts'
        }

        /// <summary>
        /// Test the property 'Canviewqandawithoutposting'
        /// </summary>
        [Fact]
        public void CanviewqandawithoutpostingTest()
        {
            // TODO unit test for the property 'Canviewqandawithoutposting'
        }

        /// <summary>
        /// Test the property 'Canviewrating'
        /// </summary>
        [Fact]
        public void CanviewratingTest()
        {
            // TODO unit test for the property 'Canviewrating'
        }

        /// <summary>
        /// Test the property 'Canviewsubscribers'
        /// </summary>
        [Fact]
        public void CanviewsubscribersTest()
        {
            // TODO unit test for the property 'Canviewsubscribers'
        }

        /// <summary>
        /// Test the property 'Warnings'
        /// </summary>
        [Fact]
        public void WarningsTest()
        {
            // TODO unit test for the property 'Warnings'
        }
    }
}
