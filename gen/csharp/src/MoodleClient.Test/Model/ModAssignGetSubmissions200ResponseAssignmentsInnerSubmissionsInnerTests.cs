/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MoodleClient.Model;
using MoodleClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MoodleClient.Test.Model
{
    /// <summary>
    ///  Class for testing ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner
        //private ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner instance;

        public ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInnerTests()
        {
            // TODO uncomment below to create an instance of ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner
            //instance = new ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner
        /// </summary>
        [Fact]
        public void ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner
            //Assert.IsType<ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner>(instance);
        }

        /// <summary>
        /// Test the property 'Assignment'
        /// </summary>
        [Fact]
        public void AssignmentTest()
        {
            // TODO unit test for the property 'Assignment'
        }

        /// <summary>
        /// Test the property 'Attemptnumber'
        /// </summary>
        [Fact]
        public void AttemptnumberTest()
        {
            // TODO unit test for the property 'Attemptnumber'
        }

        /// <summary>
        /// Test the property 'Gradingstatus'
        /// </summary>
        [Fact]
        public void GradingstatusTest()
        {
            // TODO unit test for the property 'Gradingstatus'
        }

        /// <summary>
        /// Test the property 'Groupid'
        /// </summary>
        [Fact]
        public void GroupidTest()
        {
            // TODO unit test for the property 'Groupid'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Latest'
        /// </summary>
        [Fact]
        public void LatestTest()
        {
            // TODO unit test for the property 'Latest'
        }

        /// <summary>
        /// Test the property 'Plugins'
        /// </summary>
        [Fact]
        public void PluginsTest()
        {
            // TODO unit test for the property 'Plugins'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'Timecreated'
        /// </summary>
        [Fact]
        public void TimecreatedTest()
        {
            // TODO unit test for the property 'Timecreated'
        }

        /// <summary>
        /// Test the property 'Timemodified'
        /// </summary>
        [Fact]
        public void TimemodifiedTest()
        {
            // TODO unit test for the property 'Timemodified'
        }

        /// <summary>
        /// Test the property 'Timestarted'
        /// </summary>
        [Fact]
        public void TimestartedTest()
        {
            // TODO unit test for the property 'Timestarted'
        }

        /// <summary>
        /// Test the property 'Userid'
        /// </summary>
        [Fact]
        public void UseridTest()
        {
            // TODO unit test for the property 'Userid'
        }
    }
}
