/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MoodleClient.Model;
using MoodleClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MoodleClient.Test.Model
{
    /// <summary>
    ///  Class for testing ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ToolLpDataForTemplateCompetenciesPage200ResponseStatisticsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
        //private ToolLpDataForTemplateCompetenciesPage200ResponseStatistics instance;

        public ToolLpDataForTemplateCompetenciesPage200ResponseStatisticsTests()
        {
            // TODO uncomment below to create an instance of ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
            //instance = new ToolLpDataForTemplateCompetenciesPage200ResponseStatistics();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
        /// </summary>
        [Fact]
        public void ToolLpDataForTemplateCompetenciesPage200ResponseStatisticsInstanceTest()
        {
            // TODO uncomment below to test "IsType" ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
            //Assert.IsType<ToolLpDataForTemplateCompetenciesPage200ResponseStatistics>(instance);
        }

        /// <summary>
        /// Test the property 'Competencycount'
        /// </summary>
        [Fact]
        public void CompetencycountTest()
        {
            // TODO unit test for the property 'Competencycount'
        }

        /// <summary>
        /// Test the property 'Completedplancount'
        /// </summary>
        [Fact]
        public void CompletedplancountTest()
        {
            // TODO unit test for the property 'Completedplancount'
        }

        /// <summary>
        /// Test the property 'Completedplanpercentage'
        /// </summary>
        [Fact]
        public void CompletedplanpercentageTest()
        {
            // TODO unit test for the property 'Completedplanpercentage'
        }

        /// <summary>
        /// Test the property 'Completedplanpercentageformatted'
        /// </summary>
        [Fact]
        public void CompletedplanpercentageformattedTest()
        {
            // TODO unit test for the property 'Completedplanpercentageformatted'
        }

        /// <summary>
        /// Test the property 'Leastproficient'
        /// </summary>
        [Fact]
        public void LeastproficientTest()
        {
            // TODO unit test for the property 'Leastproficient'
        }

        /// <summary>
        /// Test the property 'Leastproficientcount'
        /// </summary>
        [Fact]
        public void LeastproficientcountTest()
        {
            // TODO unit test for the property 'Leastproficientcount'
        }

        /// <summary>
        /// Test the property 'Linkedcompetencycount'
        /// </summary>
        [Fact]
        public void LinkedcompetencycountTest()
        {
            // TODO unit test for the property 'Linkedcompetencycount'
        }

        /// <summary>
        /// Test the property 'Linkedcompetencypercentage'
        /// </summary>
        [Fact]
        public void LinkedcompetencypercentageTest()
        {
            // TODO unit test for the property 'Linkedcompetencypercentage'
        }

        /// <summary>
        /// Test the property 'Linkedcompetencypercentageformatted'
        /// </summary>
        [Fact]
        public void LinkedcompetencypercentageformattedTest()
        {
            // TODO unit test for the property 'Linkedcompetencypercentageformatted'
        }

        /// <summary>
        /// Test the property 'Plancount'
        /// </summary>
        [Fact]
        public void PlancountTest()
        {
            // TODO unit test for the property 'Plancount'
        }

        /// <summary>
        /// Test the property 'Proficientusercompetencyplancount'
        /// </summary>
        [Fact]
        public void ProficientusercompetencyplancountTest()
        {
            // TODO unit test for the property 'Proficientusercompetencyplancount'
        }

        /// <summary>
        /// Test the property 'Proficientusercompetencyplanpercentage'
        /// </summary>
        [Fact]
        public void ProficientusercompetencyplanpercentageTest()
        {
            // TODO unit test for the property 'Proficientusercompetencyplanpercentage'
        }

        /// <summary>
        /// Test the property 'Proficientusercompetencyplanpercentageformatted'
        /// </summary>
        [Fact]
        public void ProficientusercompetencyplanpercentageformattedTest()
        {
            // TODO unit test for the property 'Proficientusercompetencyplanpercentageformatted'
        }

        /// <summary>
        /// Test the property 'Unlinkedcompetencycount'
        /// </summary>
        [Fact]
        public void UnlinkedcompetencycountTest()
        {
            // TODO unit test for the property 'Unlinkedcompetencycount'
        }

        /// <summary>
        /// Test the property 'Usercompetencyplancount'
        /// </summary>
        [Fact]
        public void UsercompetencyplancountTest()
        {
            // TODO unit test for the property 'Usercompetencyplancount'
        }
    }
}
