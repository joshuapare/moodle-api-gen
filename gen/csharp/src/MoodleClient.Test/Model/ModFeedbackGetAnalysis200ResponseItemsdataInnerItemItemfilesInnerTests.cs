/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MoodleClient.Model;
using MoodleClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MoodleClient.Test.Model
{
    /// <summary>
    ///  Class for testing ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
        //private ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner instance;

        public ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerTests()
        {
            // TODO uncomment below to create an instance of ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
            //instance = new ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
        /// </summary>
        [Fact]
        public void ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
            //Assert.IsType<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>(instance);
        }

        /// <summary>
        /// Test the property 'Author'
        /// </summary>
        [Fact]
        public void AuthorTest()
        {
            // TODO unit test for the property 'Author'
        }

        /// <summary>
        /// Test the property 'Component'
        /// </summary>
        [Fact]
        public void ComponentTest()
        {
            // TODO unit test for the property 'Component'
        }

        /// <summary>
        /// Test the property 'Contextid'
        /// </summary>
        [Fact]
        public void ContextidTest()
        {
            // TODO unit test for the property 'Contextid'
        }

        /// <summary>
        /// Test the property 'Filearea'
        /// </summary>
        [Fact]
        public void FileareaTest()
        {
            // TODO unit test for the property 'Filearea'
        }

        /// <summary>
        /// Test the property 'Filename'
        /// </summary>
        [Fact]
        public void FilenameTest()
        {
            // TODO unit test for the property 'Filename'
        }

        /// <summary>
        /// Test the property 'Filenameshort'
        /// </summary>
        [Fact]
        public void FilenameshortTest()
        {
            // TODO unit test for the property 'Filenameshort'
        }

        /// <summary>
        /// Test the property 'Filepath'
        /// </summary>
        [Fact]
        public void FilepathTest()
        {
            // TODO unit test for the property 'Filepath'
        }

        /// <summary>
        /// Test the property 'Filesize'
        /// </summary>
        [Fact]
        public void FilesizeTest()
        {
            // TODO unit test for the property 'Filesize'
        }

        /// <summary>
        /// Test the property 'Filesizeformatted'
        /// </summary>
        [Fact]
        public void FilesizeformattedTest()
        {
            // TODO unit test for the property 'Filesizeformatted'
        }

        /// <summary>
        /// Test the property 'Icon'
        /// </summary>
        [Fact]
        public void IconTest()
        {
            // TODO unit test for the property 'Icon'
        }

        /// <summary>
        /// Test the property 'Isdir'
        /// </summary>
        [Fact]
        public void IsdirTest()
        {
            // TODO unit test for the property 'Isdir'
        }

        /// <summary>
        /// Test the property 'Isimage'
        /// </summary>
        [Fact]
        public void IsimageTest()
        {
            // TODO unit test for the property 'Isimage'
        }

        /// <summary>
        /// Test the property 'Itemid'
        /// </summary>
        [Fact]
        public void ItemidTest()
        {
            // TODO unit test for the property 'Itemid'
        }

        /// <summary>
        /// Test the property 'License'
        /// </summary>
        [Fact]
        public void LicenseTest()
        {
            // TODO unit test for the property 'License'
        }

        /// <summary>
        /// Test the property 'Timecreated'
        /// </summary>
        [Fact]
        public void TimecreatedTest()
        {
            // TODO unit test for the property 'Timecreated'
        }

        /// <summary>
        /// Test the property 'Timecreatedformatted'
        /// </summary>
        [Fact]
        public void TimecreatedformattedTest()
        {
            // TODO unit test for the property 'Timecreatedformatted'
        }

        /// <summary>
        /// Test the property 'Timemodified'
        /// </summary>
        [Fact]
        public void TimemodifiedTest()
        {
            // TODO unit test for the property 'Timemodified'
        }

        /// <summary>
        /// Test the property 'Timemodifiedformatted'
        /// </summary>
        [Fact]
        public void TimemodifiedformattedTest()
        {
            // TODO unit test for the property 'Timemodifiedformatted'
        }

        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }
    }
}
