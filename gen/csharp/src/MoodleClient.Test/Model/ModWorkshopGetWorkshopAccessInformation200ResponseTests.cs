/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MoodleClient.Model;
using MoodleClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MoodleClient.Test.Model
{
    /// <summary>
    ///  Class for testing ModWorkshopGetWorkshopAccessInformation200Response
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModWorkshopGetWorkshopAccessInformation200ResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModWorkshopGetWorkshopAccessInformation200Response
        //private ModWorkshopGetWorkshopAccessInformation200Response instance;

        public ModWorkshopGetWorkshopAccessInformation200ResponseTests()
        {
            // TODO uncomment below to create an instance of ModWorkshopGetWorkshopAccessInformation200Response
            //instance = new ModWorkshopGetWorkshopAccessInformation200Response();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModWorkshopGetWorkshopAccessInformation200Response
        /// </summary>
        [Fact]
        public void ModWorkshopGetWorkshopAccessInformation200ResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModWorkshopGetWorkshopAccessInformation200Response
            //Assert.IsType<ModWorkshopGetWorkshopAccessInformation200Response>(instance);
        }

        /// <summary>
        /// Test the property 'Assessingallowed'
        /// </summary>
        [Fact]
        public void AssessingallowedTest()
        {
            // TODO unit test for the property 'Assessingallowed'
        }

        /// <summary>
        /// Test the property 'Assessingexamplesallowed'
        /// </summary>
        [Fact]
        public void AssessingexamplesallowedTest()
        {
            // TODO unit test for the property 'Assessingexamplesallowed'
        }

        /// <summary>
        /// Test the property 'Canaddinstance'
        /// </summary>
        [Fact]
        public void CanaddinstanceTest()
        {
            // TODO unit test for the property 'Canaddinstance'
        }

        /// <summary>
        /// Test the property 'Canallocate'
        /// </summary>
        [Fact]
        public void CanallocateTest()
        {
            // TODO unit test for the property 'Canallocate'
        }

        /// <summary>
        /// Test the property 'Candeletesubmissions'
        /// </summary>
        [Fact]
        public void CandeletesubmissionsTest()
        {
            // TODO unit test for the property 'Candeletesubmissions'
        }

        /// <summary>
        /// Test the property 'Caneditdimensions'
        /// </summary>
        [Fact]
        public void CaneditdimensionsTest()
        {
            // TODO unit test for the property 'Caneditdimensions'
        }

        /// <summary>
        /// Test the property 'Canexportsubmissions'
        /// </summary>
        [Fact]
        public void CanexportsubmissionsTest()
        {
            // TODO unit test for the property 'Canexportsubmissions'
        }

        /// <summary>
        /// Test the property 'Canignoredeadlines'
        /// </summary>
        [Fact]
        public void CanignoredeadlinesTest()
        {
            // TODO unit test for the property 'Canignoredeadlines'
        }

        /// <summary>
        /// Test the property 'Canmanageexamples'
        /// </summary>
        [Fact]
        public void CanmanageexamplesTest()
        {
            // TODO unit test for the property 'Canmanageexamples'
        }

        /// <summary>
        /// Test the property 'Canoverridegrades'
        /// </summary>
        [Fact]
        public void CanoverridegradesTest()
        {
            // TODO unit test for the property 'Canoverridegrades'
        }

        /// <summary>
        /// Test the property 'Canpeerassess'
        /// </summary>
        [Fact]
        public void CanpeerassessTest()
        {
            // TODO unit test for the property 'Canpeerassess'
        }

        /// <summary>
        /// Test the property 'Canpublishsubmissions'
        /// </summary>
        [Fact]
        public void CanpublishsubmissionsTest()
        {
            // TODO unit test for the property 'Canpublishsubmissions'
        }

        /// <summary>
        /// Test the property 'Cansubmit'
        /// </summary>
        [Fact]
        public void CansubmitTest()
        {
            // TODO unit test for the property 'Cansubmit'
        }

        /// <summary>
        /// Test the property 'Canswitchphase'
        /// </summary>
        [Fact]
        public void CanswitchphaseTest()
        {
            // TODO unit test for the property 'Canswitchphase'
        }

        /// <summary>
        /// Test the property 'Canview'
        /// </summary>
        [Fact]
        public void CanviewTest()
        {
            // TODO unit test for the property 'Canview'
        }

        /// <summary>
        /// Test the property 'Canviewallassessments'
        /// </summary>
        [Fact]
        public void CanviewallassessmentsTest()
        {
            // TODO unit test for the property 'Canviewallassessments'
        }

        /// <summary>
        /// Test the property 'Canviewallsubmissions'
        /// </summary>
        [Fact]
        public void CanviewallsubmissionsTest()
        {
            // TODO unit test for the property 'Canviewallsubmissions'
        }

        /// <summary>
        /// Test the property 'Canviewauthornames'
        /// </summary>
        [Fact]
        public void CanviewauthornamesTest()
        {
            // TODO unit test for the property 'Canviewauthornames'
        }

        /// <summary>
        /// Test the property 'Canviewauthorpublished'
        /// </summary>
        [Fact]
        public void CanviewauthorpublishedTest()
        {
            // TODO unit test for the property 'Canviewauthorpublished'
        }

        /// <summary>
        /// Test the property 'Canviewpublishedsubmissions'
        /// </summary>
        [Fact]
        public void CanviewpublishedsubmissionsTest()
        {
            // TODO unit test for the property 'Canviewpublishedsubmissions'
        }

        /// <summary>
        /// Test the property 'Canviewreviewernames'
        /// </summary>
        [Fact]
        public void CanviewreviewernamesTest()
        {
            // TODO unit test for the property 'Canviewreviewernames'
        }

        /// <summary>
        /// Test the property 'Creatingsubmissionallowed'
        /// </summary>
        [Fact]
        public void CreatingsubmissionallowedTest()
        {
            // TODO unit test for the property 'Creatingsubmissionallowed'
        }

        /// <summary>
        /// Test the property 'Examplesassessedbeforeassessment'
        /// </summary>
        [Fact]
        public void ExamplesassessedbeforeassessmentTest()
        {
            // TODO unit test for the property 'Examplesassessedbeforeassessment'
        }

        /// <summary>
        /// Test the property 'Examplesassessedbeforesubmission'
        /// </summary>
        [Fact]
        public void ExamplesassessedbeforesubmissionTest()
        {
            // TODO unit test for the property 'Examplesassessedbeforesubmission'
        }

        /// <summary>
        /// Test the property 'Modifyingsubmissionallowed'
        /// </summary>
        [Fact]
        public void ModifyingsubmissionallowedTest()
        {
            // TODO unit test for the property 'Modifyingsubmissionallowed'
        }

        /// <summary>
        /// Test the property 'Warnings'
        /// </summary>
        [Fact]
        public void WarningsTest()
        {
            // TODO unit test for the property 'Warnings'
        }
    }
}
