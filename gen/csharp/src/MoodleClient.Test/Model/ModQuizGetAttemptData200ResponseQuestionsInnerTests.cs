/*
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MoodleClient.Model;
using MoodleClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MoodleClient.Test.Model
{
    /// <summary>
    ///  Class for testing ModQuizGetAttemptData200ResponseQuestionsInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModQuizGetAttemptData200ResponseQuestionsInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModQuizGetAttemptData200ResponseQuestionsInner
        //private ModQuizGetAttemptData200ResponseQuestionsInner instance;

        public ModQuizGetAttemptData200ResponseQuestionsInnerTests()
        {
            // TODO uncomment below to create an instance of ModQuizGetAttemptData200ResponseQuestionsInner
            //instance = new ModQuizGetAttemptData200ResponseQuestionsInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModQuizGetAttemptData200ResponseQuestionsInner
        /// </summary>
        [Fact]
        public void ModQuizGetAttemptData200ResponseQuestionsInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModQuizGetAttemptData200ResponseQuestionsInner
            //Assert.IsType<ModQuizGetAttemptData200ResponseQuestionsInner>(instance);
        }

        /// <summary>
        /// Test the property 'Blockedbyprevious'
        /// </summary>
        [Fact]
        public void BlockedbypreviousTest()
        {
            // TODO unit test for the property 'Blockedbyprevious'
        }

        /// <summary>
        /// Test the property 'Flagged'
        /// </summary>
        [Fact]
        public void FlaggedTest()
        {
            // TODO unit test for the property 'Flagged'
        }

        /// <summary>
        /// Test the property 'Hasautosavedstep'
        /// </summary>
        [Fact]
        public void HasautosavedstepTest()
        {
            // TODO unit test for the property 'Hasautosavedstep'
        }

        /// <summary>
        /// Test the property 'Html'
        /// </summary>
        [Fact]
        public void HtmlTest()
        {
            // TODO unit test for the property 'Html'
        }

        /// <summary>
        /// Test the property 'Lastactiontime'
        /// </summary>
        [Fact]
        public void LastactiontimeTest()
        {
            // TODO unit test for the property 'Lastactiontime'
        }

        /// <summary>
        /// Test the property 'Mark'
        /// </summary>
        [Fact]
        public void MarkTest()
        {
            // TODO unit test for the property 'Mark'
        }

        /// <summary>
        /// Test the property 'Maxmark'
        /// </summary>
        [Fact]
        public void MaxmarkTest()
        {
            // TODO unit test for the property 'Maxmark'
        }

        /// <summary>
        /// Test the property 'Number'
        /// </summary>
        [Fact]
        public void NumberTest()
        {
            // TODO unit test for the property 'Number'
        }

        /// <summary>
        /// Test the property 'Page'
        /// </summary>
        [Fact]
        public void PageTest()
        {
            // TODO unit test for the property 'Page'
        }

        /// <summary>
        /// Test the property 'Questionnumber'
        /// </summary>
        [Fact]
        public void QuestionnumberTest()
        {
            // TODO unit test for the property 'Questionnumber'
        }

        /// <summary>
        /// Test the property 'Responsefileareas'
        /// </summary>
        [Fact]
        public void ResponsefileareasTest()
        {
            // TODO unit test for the property 'Responsefileareas'
        }

        /// <summary>
        /// Test the property 'Sequencecheck'
        /// </summary>
        [Fact]
        public void SequencecheckTest()
        {
            // TODO unit test for the property 'Sequencecheck'
        }

        /// <summary>
        /// Test the property 'Settings'
        /// </summary>
        [Fact]
        public void SettingsTest()
        {
            // TODO unit test for the property 'Settings'
        }

        /// <summary>
        /// Test the property 'Slot'
        /// </summary>
        [Fact]
        public void SlotTest()
        {
            // TODO unit test for the property 'Slot'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
    }
}
