/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ModQuizGetAttemptReview200ResponseAttempt {
    /**
    * Sequentially numbers this students attempts at this quiz.
    */
    'attempt'?: number;
    /**
    * Attempt current page.
    */
    'currentpage'?: number;
    /**
    * Time when the student was notified that manual grading of their attempt was complete.
    */
    'gradednotificationsenttime'?: number;
    /**
    * Attempt id.
    */
    'id'?: number;
    /**
    * Attempt layout.
    */
    'layout'?: string;
    /**
    * Whether is a preview attempt or not.
    */
    'preview'?: number;
    /**
    * Foreign key reference to the quiz that was attempted.
    */
    'quiz'?: number;
    /**
    * The current state of the attempts. \'inprogress\',                                                 \'overdue\', \'finished\' or \'abandoned\'.
    */
    'state'?: string;
    /**
    * Total marks for this attempt.
    */
    'sumgrades'?: number;
    /**
    * Next time quiz cron should check attempt for                                                         state changes.  NULL means never check.
    */
    'timecheckstate'?: number;
    /**
    * Time when the attempt was submitted.                                                     0 if the attempt has not been submitted yet.
    */
    'timefinish'?: number;
    /**
    * Last modified time.
    */
    'timemodified'?: number;
    /**
    * Last modified time via webservices.
    */
    'timemodifiedoffline'?: number;
    /**
    * Time when the attempt was started.
    */
    'timestart'?: number;
    /**
    * Foreign key reference to the question_usage that holds the                                                     details of the the question_attempts that make up this quiz                                                     attempt.
    */
    'uniqueid'?: number;
    /**
    * Foreign key reference to the user whose attempt this is.
    */
    'userid'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attempt",
            "baseName": "attempt",
            "type": "number"
        },
        {
            "name": "currentpage",
            "baseName": "currentpage",
            "type": "number"
        },
        {
            "name": "gradednotificationsenttime",
            "baseName": "gradednotificationsenttime",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "layout",
            "baseName": "layout",
            "type": "string"
        },
        {
            "name": "preview",
            "baseName": "preview",
            "type": "number"
        },
        {
            "name": "quiz",
            "baseName": "quiz",
            "type": "number"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string"
        },
        {
            "name": "sumgrades",
            "baseName": "sumgrades",
            "type": "number"
        },
        {
            "name": "timecheckstate",
            "baseName": "timecheckstate",
            "type": "number"
        },
        {
            "name": "timefinish",
            "baseName": "timefinish",
            "type": "number"
        },
        {
            "name": "timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "timemodifiedoffline",
            "baseName": "timemodifiedoffline",
            "type": "number"
        },
        {
            "name": "timestart",
            "baseName": "timestart",
            "type": "number"
        },
        {
            "name": "uniqueid",
            "baseName": "uniqueid",
            "type": "number"
        },
        {
            "name": "userid",
            "baseName": "userid",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ModQuizGetAttemptReview200ResponseAttempt.attributeTypeMap;
    }
}

