/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreMessageGetConversationBetweenUsers200ResponseMembersInner } from './coreMessageGetConversationBetweenUsers200ResponseMembersInner';
import { CoreMessageGetConversationBetweenUsers200ResponseMessagesInner } from './coreMessageGetConversationBetweenUsers200ResponseMessagesInner';

export class CoreMessageGetConversations200ResponseConversationsInner {
    /**
    * If the user can delete messages in the conversation for all users
    */
    'candeletemessagesforallusers'?: boolean = false;
    /**
    * The conversation id
    */
    'id'?: number;
    /**
    * A link to the conversation picture, if set
    */
    'imageurl'?: string;
    /**
    * If the user marked this conversation as a favourite
    */
    'isfavourite'?: boolean;
    /**
    * If the user muted this conversation
    */
    'ismuted'?: boolean;
    /**
    * If the user has read all messages in the conversation
    */
    'isread'?: boolean;
    /**
    * Total number of conversation members
    */
    'membercount'?: number;
    'members'?: Array<CoreMessageGetConversationBetweenUsers200ResponseMembersInner>;
    'messages'?: Array<CoreMessageGetConversationBetweenUsers200ResponseMessagesInner>;
    /**
    * The conversation name, if set
    */
    'name'?: string;
    /**
    * A subtitle for the conversation name, if set
    */
    'subname'?: string;
    /**
    * The type of the conversation (1=individual,2=group,3=self)
    */
    'type'?: number;
    /**
    * The number of unread messages in this conversation
    */
    'unreadcount'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "candeletemessagesforallusers",
            "baseName": "candeletemessagesforallusers",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "imageurl",
            "baseName": "imageurl",
            "type": "string"
        },
        {
            "name": "isfavourite",
            "baseName": "isfavourite",
            "type": "boolean"
        },
        {
            "name": "ismuted",
            "baseName": "ismuted",
            "type": "boolean"
        },
        {
            "name": "isread",
            "baseName": "isread",
            "type": "boolean"
        },
        {
            "name": "membercount",
            "baseName": "membercount",
            "type": "number"
        },
        {
            "name": "members",
            "baseName": "members",
            "type": "Array<CoreMessageGetConversationBetweenUsers200ResponseMembersInner>"
        },
        {
            "name": "messages",
            "baseName": "messages",
            "type": "Array<CoreMessageGetConversationBetweenUsers200ResponseMessagesInner>"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "subname",
            "baseName": "subname",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "number"
        },
        {
            "name": "unreadcount",
            "baseName": "unreadcount",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return CoreMessageGetConversations200ResponseConversationsInner.attributeTypeMap;
    }
}

