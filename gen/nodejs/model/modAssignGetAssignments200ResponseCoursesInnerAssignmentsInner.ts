/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './coreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import { ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner } from './modAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner';

/**
* assignment information object
*/
export class ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner {
    /**
    * Description of activity
    */
    'Activity'?: string = 'null';
    'Activityattachments'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * activity format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Activityformat'?: number = null;
    /**
    * allow submissions from date
    */
    'Allowsubmissionsfromdate'?: number = null;
    /**
    * method used to control opening new attempts
    */
    'Attemptreopenmethod'?: string = 'null';
    /**
    * if enabled, hide identities until reveal identities actioned
    */
    'Blindmarking'?: number = null;
    /**
    * course module id
    */
    'Cmid'?: number;
    /**
    * if enabled, set activity as complete following submission
    */
    'Completionsubmit'?: number = null;
    'Configs'?: Array<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner>;
    /**
    * course id
    */
    'Course'?: number;
    /**
    * date after which submission is not accepted without an extension
    */
    'Cutoffdate'?: number = null;
    /**
    * assignment due date
    */
    'Duedate'?: number = null;
    /**
    * grade type
    */
    'Grade'?: number = null;
    /**
    * the expected date for marking the submissions
    */
    'Gradingduedate'?: number = null;
    /**
    * If enabled, hide grader to student
    */
    'Hidegrader'?: number = null;
    /**
    * assignment id
    */
    'Id'?: number;
    /**
    * assignment intro, not allways returned because it deppends on the activity configuration
    */
    'Intro'?: string = 'null';
    'Introattachments'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    'Introfiles'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Introformat'?: number = null;
    /**
    * enable marking allocation
    */
    'Markingallocation'?: number = null;
    /**
    * enable marking workflow
    */
    'Markingworkflow'?: number = null;
    /**
    * maximum number of attempts allowed
    */
    'Maxattempts'?: number = null;
    /**
    * assignment name
    */
    'Name'?: string = 'null';
    /**
    * no submissions
    */
    'Nosubmissions'?: number = null;
    /**
    * Prevent submission not in group
    */
    'Preventsubmissionnotingroup'?: number = null;
    /**
    * if enabled, all team members must submit
    */
    'Requireallteammemberssubmit'?: number = null;
    /**
    * student must accept submission statement
    */
    'Requiresubmissionstatement'?: number = null;
    /**
    * show identities for a blind marking assignment
    */
    'Revealidentities'?: number = null;
    /**
    * send notifications
    */
    'Sendlatenotifications'?: number = null;
    /**
    * send notifications
    */
    'Sendnotifications'?: number;
    /**
    * send student notifications (default)
    */
    'Sendstudentnotifications'?: number = null;
    /**
    * Flag to only show files during submission
    */
    'Submissionattachments'?: number = null;
    /**
    * submissions drafts
    */
    'Submissiondrafts'?: number = null;
    /**
    * Submission statement formatted.
    */
    'Submissionstatement'?: string = 'null';
    /**
    * submissionstatement format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Submissionstatementformat'?: number = null;
    /**
    * if enabled, students submit as a team
    */
    'Teamsubmission'?: number = null;
    /**
    * the grouping id for the team submission groups
    */
    'Teamsubmissiongroupingid'?: number = null;
    /**
    * Time limit to complete assigment
    */
    'Timelimit'?: number = null;
    /**
    * last time assignment was modified
    */
    'Timemodified'?: number = null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Activity",
            "baseName": "activity",
            "type": "string"
        },
        {
            "name": "Activityattachments",
            "baseName": "activityattachments",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "Activityformat",
            "baseName": "activityformat",
            "type": "number"
        },
        {
            "name": "Allowsubmissionsfromdate",
            "baseName": "allowsubmissionsfromdate",
            "type": "number"
        },
        {
            "name": "Attemptreopenmethod",
            "baseName": "attemptreopenmethod",
            "type": "string"
        },
        {
            "name": "Blindmarking",
            "baseName": "blindmarking",
            "type": "number"
        },
        {
            "name": "Cmid",
            "baseName": "cmid",
            "type": "number"
        },
        {
            "name": "Completionsubmit",
            "baseName": "completionsubmit",
            "type": "number"
        },
        {
            "name": "Configs",
            "baseName": "configs",
            "type": "Array<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner>"
        },
        {
            "name": "Course",
            "baseName": "course",
            "type": "number"
        },
        {
            "name": "Cutoffdate",
            "baseName": "cutoffdate",
            "type": "number"
        },
        {
            "name": "Duedate",
            "baseName": "duedate",
            "type": "number"
        },
        {
            "name": "Grade",
            "baseName": "grade",
            "type": "number"
        },
        {
            "name": "Gradingduedate",
            "baseName": "gradingduedate",
            "type": "number"
        },
        {
            "name": "Hidegrader",
            "baseName": "hidegrader",
            "type": "number"
        },
        {
            "name": "Id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "Intro",
            "baseName": "intro",
            "type": "string"
        },
        {
            "name": "Introattachments",
            "baseName": "introattachments",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "Introfiles",
            "baseName": "introfiles",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "Introformat",
            "baseName": "introformat",
            "type": "number"
        },
        {
            "name": "Markingallocation",
            "baseName": "markingallocation",
            "type": "number"
        },
        {
            "name": "Markingworkflow",
            "baseName": "markingworkflow",
            "type": "number"
        },
        {
            "name": "Maxattempts",
            "baseName": "maxattempts",
            "type": "number"
        },
        {
            "name": "Name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "Nosubmissions",
            "baseName": "nosubmissions",
            "type": "number"
        },
        {
            "name": "Preventsubmissionnotingroup",
            "baseName": "preventsubmissionnotingroup",
            "type": "number"
        },
        {
            "name": "Requireallteammemberssubmit",
            "baseName": "requireallteammemberssubmit",
            "type": "number"
        },
        {
            "name": "Requiresubmissionstatement",
            "baseName": "requiresubmissionstatement",
            "type": "number"
        },
        {
            "name": "Revealidentities",
            "baseName": "revealidentities",
            "type": "number"
        },
        {
            "name": "Sendlatenotifications",
            "baseName": "sendlatenotifications",
            "type": "number"
        },
        {
            "name": "Sendnotifications",
            "baseName": "sendnotifications",
            "type": "number"
        },
        {
            "name": "Sendstudentnotifications",
            "baseName": "sendstudentnotifications",
            "type": "number"
        },
        {
            "name": "Submissionattachments",
            "baseName": "submissionattachments",
            "type": "number"
        },
        {
            "name": "Submissiondrafts",
            "baseName": "submissiondrafts",
            "type": "number"
        },
        {
            "name": "Submissionstatement",
            "baseName": "submissionstatement",
            "type": "string"
        },
        {
            "name": "Submissionstatementformat",
            "baseName": "submissionstatementformat",
            "type": "number"
        },
        {
            "name": "Teamsubmission",
            "baseName": "teamsubmission",
            "type": "number"
        },
        {
            "name": "Teamsubmissiongroupingid",
            "baseName": "teamsubmissiongroupingid",
            "type": "number"
        },
        {
            "name": "Timelimit",
            "baseName": "timelimit",
            "type": "number"
        },
        {
            "name": "Timemodified",
            "baseName": "timemodified",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner.attributeTypeMap;
    }
}

