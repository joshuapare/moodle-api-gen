/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './coreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import { ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner } from './modAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner';

/**
* assignment information object
*/
export class ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner {
    /**
    * Description of activity
    */
    'activity'?: string = 'null';
    'activityattachments'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * activity format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'activityformat'?: number = null;
    /**
    * allow submissions from date
    */
    'allowsubmissionsfromdate'?: number = null;
    /**
    * method used to control opening new attempts
    */
    'attemptreopenmethod'?: string = 'null';
    /**
    * if enabled, hide identities until reveal identities actioned
    */
    'blindmarking'?: number = null;
    /**
    * course module id
    */
    'cmid'?: number;
    /**
    * if enabled, set activity as complete following submission
    */
    'completionsubmit'?: number = null;
    'configs'?: Array<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner>;
    /**
    * course id
    */
    'course'?: number;
    /**
    * date after which submission is not accepted without an extension
    */
    'cutoffdate'?: number = null;
    /**
    * assignment due date
    */
    'duedate'?: number = null;
    /**
    * grade type
    */
    'grade'?: number = null;
    /**
    * the expected date for marking the submissions
    */
    'gradingduedate'?: number = null;
    /**
    * If enabled, hide grader to student
    */
    'hidegrader'?: number = null;
    /**
    * assignment id
    */
    'id'?: number;
    /**
    * assignment intro, not allways returned because it deppends on the activity configuration
    */
    'intro'?: string = 'null';
    'introattachments'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    'introfiles'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'introformat'?: number = null;
    /**
    * enable marking allocation
    */
    'markingallocation'?: number = null;
    /**
    * enable marking workflow
    */
    'markingworkflow'?: number = null;
    /**
    * maximum number of attempts allowed
    */
    'maxattempts'?: number = null;
    /**
    * assignment name
    */
    'name'?: string = 'null';
    /**
    * no submissions
    */
    'nosubmissions'?: number = null;
    /**
    * Prevent submission not in group
    */
    'preventsubmissionnotingroup'?: number = null;
    /**
    * if enabled, all team members must submit
    */
    'requireallteammemberssubmit'?: number = null;
    /**
    * student must accept submission statement
    */
    'requiresubmissionstatement'?: number = null;
    /**
    * show identities for a blind marking assignment
    */
    'revealidentities'?: number = null;
    /**
    * send notifications
    */
    'sendlatenotifications'?: number = null;
    /**
    * send notifications
    */
    'sendnotifications'?: number;
    /**
    * send student notifications (default)
    */
    'sendstudentnotifications'?: number = null;
    /**
    * Flag to only show files during submission
    */
    'submissionattachments'?: number = null;
    /**
    * submissions drafts
    */
    'submissiondrafts'?: number = null;
    /**
    * Submission statement formatted.
    */
    'submissionstatement'?: string = 'null';
    /**
    * submissionstatement format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'submissionstatementformat'?: number = null;
    /**
    * if enabled, students submit as a team
    */
    'teamsubmission'?: number = null;
    /**
    * the grouping id for the team submission groups
    */
    'teamsubmissiongroupingid'?: number = null;
    /**
    * Time limit to complete assigment
    */
    'timelimit'?: number = null;
    /**
    * last time assignment was modified
    */
    'timemodified'?: number = null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "activity",
            "baseName": "activity",
            "type": "string"
        },
        {
            "name": "activityattachments",
            "baseName": "activityattachments",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "activityformat",
            "baseName": "activityformat",
            "type": "number"
        },
        {
            "name": "allowsubmissionsfromdate",
            "baseName": "allowsubmissionsfromdate",
            "type": "number"
        },
        {
            "name": "attemptreopenmethod",
            "baseName": "attemptreopenmethod",
            "type": "string"
        },
        {
            "name": "blindmarking",
            "baseName": "blindmarking",
            "type": "number"
        },
        {
            "name": "cmid",
            "baseName": "cmid",
            "type": "number"
        },
        {
            "name": "completionsubmit",
            "baseName": "completionsubmit",
            "type": "number"
        },
        {
            "name": "configs",
            "baseName": "configs",
            "type": "Array<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner>"
        },
        {
            "name": "course",
            "baseName": "course",
            "type": "number"
        },
        {
            "name": "cutoffdate",
            "baseName": "cutoffdate",
            "type": "number"
        },
        {
            "name": "duedate",
            "baseName": "duedate",
            "type": "number"
        },
        {
            "name": "grade",
            "baseName": "grade",
            "type": "number"
        },
        {
            "name": "gradingduedate",
            "baseName": "gradingduedate",
            "type": "number"
        },
        {
            "name": "hidegrader",
            "baseName": "hidegrader",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "intro",
            "baseName": "intro",
            "type": "string"
        },
        {
            "name": "introattachments",
            "baseName": "introattachments",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "introfiles",
            "baseName": "introfiles",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "introformat",
            "baseName": "introformat",
            "type": "number"
        },
        {
            "name": "markingallocation",
            "baseName": "markingallocation",
            "type": "number"
        },
        {
            "name": "markingworkflow",
            "baseName": "markingworkflow",
            "type": "number"
        },
        {
            "name": "maxattempts",
            "baseName": "maxattempts",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "nosubmissions",
            "baseName": "nosubmissions",
            "type": "number"
        },
        {
            "name": "preventsubmissionnotingroup",
            "baseName": "preventsubmissionnotingroup",
            "type": "number"
        },
        {
            "name": "requireallteammemberssubmit",
            "baseName": "requireallteammemberssubmit",
            "type": "number"
        },
        {
            "name": "requiresubmissionstatement",
            "baseName": "requiresubmissionstatement",
            "type": "number"
        },
        {
            "name": "revealidentities",
            "baseName": "revealidentities",
            "type": "number"
        },
        {
            "name": "sendlatenotifications",
            "baseName": "sendlatenotifications",
            "type": "number"
        },
        {
            "name": "sendnotifications",
            "baseName": "sendnotifications",
            "type": "number"
        },
        {
            "name": "sendstudentnotifications",
            "baseName": "sendstudentnotifications",
            "type": "number"
        },
        {
            "name": "submissionattachments",
            "baseName": "submissionattachments",
            "type": "number"
        },
        {
            "name": "submissiondrafts",
            "baseName": "submissiondrafts",
            "type": "number"
        },
        {
            "name": "submissionstatement",
            "baseName": "submissionstatement",
            "type": "string"
        },
        {
            "name": "submissionstatementformat",
            "baseName": "submissionstatementformat",
            "type": "number"
        },
        {
            "name": "teamsubmission",
            "baseName": "teamsubmission",
            "type": "number"
        },
        {
            "name": "teamsubmissiongroupingid",
            "baseName": "teamsubmissiongroupingid",
            "type": "number"
        },
        {
            "name": "timelimit",
            "baseName": "timelimit",
            "type": "number"
        },
        {
            "name": "timemodified",
            "baseName": "timemodified",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner.attributeTypeMap;
    }
}

