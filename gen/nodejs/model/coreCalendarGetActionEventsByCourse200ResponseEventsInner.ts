/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction } from './coreCalendarGetActionEventsByCourse200ResponseEventsInnerAction';
import { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory } from './coreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory';
import { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse } from './coreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse';
import { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon } from './coreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon';
import { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription } from './coreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription';

export class CoreCalendarGetActionEventsByCourse200ResponseEventsInner {
    'action'?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction;
    /**
    * activityname
    */
    'activityname'?: string = 'null';
    /**
    * activitystr
    */
    'activitystr'?: string = 'null';
    /**
    * candelete
    */
    'candelete'?: boolean = null;
    /**
    * canedit
    */
    'canedit'?: boolean = null;
    'category'?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory;
    /**
    * categoryid
    */
    'categoryid'?: number = null;
    /**
    * component
    */
    'component'?: string = 'null';
    'course'?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse;
    /**
    * deleteurl
    */
    'deleteurl'?: string = 'null';
    /**
    * description
    */
    'description'?: string = 'null';
    /**
    * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'descriptionformat'?: number = 1;
    /**
    * editurl
    */
    'editurl'?: string = 'null';
    /**
    * eventcount
    */
    'eventcount'?: number = null;
    /**
    * eventtype
    */
    'eventtype'?: string = 'null';
    /**
    * formattedlocation
    */
    'formattedlocation'?: string = 'null';
    /**
    * formattedtime
    */
    'formattedtime'?: string = 'null';
    /**
    * groupid
    */
    'groupid'?: number = null;
    /**
    * groupname
    */
    'groupname'?: string = 'null';
    'icon'?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon;
    /**
    * id
    */
    'id'?: number;
    /**
    * instance
    */
    'instance'?: number = null;
    /**
    * isactionevent
    */
    'isactionevent'?: boolean = null;
    /**
    * iscategoryevent
    */
    'iscategoryevent'?: boolean = null;
    /**
    * iscourseevent
    */
    'iscourseevent'?: boolean = null;
    /**
    * location
    */
    'location'?: string = 'null';
    /**
    * modulename
    */
    'modulename'?: string = 'null';
    /**
    * name
    */
    'name'?: string;
    /**
    * normalisedeventtype
    */
    'normalisedeventtype'?: string = 'null';
    /**
    * normalisedeventtypetext
    */
    'normalisedeventtypetext'?: string = 'null';
    /**
    * overdue
    */
    'overdue'?: boolean = false;
    /**
    * purpose
    */
    'purpose'?: string = 'null';
    /**
    * repeatid
    */
    'repeatid'?: number = null;
    'subscription'?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription;
    /**
    * timeduration
    */
    'timeduration'?: number = null;
    /**
    * timemodified
    */
    'timemodified'?: number = null;
    /**
    * timesort
    */
    'timesort'?: number = null;
    /**
    * timestart
    */
    'timestart'?: number = null;
    /**
    * timeusermidnight
    */
    'timeusermidnight'?: number = null;
    /**
    * url
    */
    'url'?: string;
    /**
    * userid
    */
    'userid'?: number = null;
    /**
    * viewurl
    */
    'viewurl'?: string;
    /**
    * visible
    */
    'visible'?: number = null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "action",
            "baseName": "action",
            "type": "CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction"
        },
        {
            "name": "activityname",
            "baseName": "activityname",
            "type": "string"
        },
        {
            "name": "activitystr",
            "baseName": "activitystr",
            "type": "string"
        },
        {
            "name": "candelete",
            "baseName": "candelete",
            "type": "boolean"
        },
        {
            "name": "canedit",
            "baseName": "canedit",
            "type": "boolean"
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory"
        },
        {
            "name": "categoryid",
            "baseName": "categoryid",
            "type": "number"
        },
        {
            "name": "component",
            "baseName": "component",
            "type": "string"
        },
        {
            "name": "course",
            "baseName": "course",
            "type": "CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse"
        },
        {
            "name": "deleteurl",
            "baseName": "deleteurl",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "descriptionformat",
            "baseName": "descriptionformat",
            "type": "number"
        },
        {
            "name": "editurl",
            "baseName": "editurl",
            "type": "string"
        },
        {
            "name": "eventcount",
            "baseName": "eventcount",
            "type": "number"
        },
        {
            "name": "eventtype",
            "baseName": "eventtype",
            "type": "string"
        },
        {
            "name": "formattedlocation",
            "baseName": "formattedlocation",
            "type": "string"
        },
        {
            "name": "formattedtime",
            "baseName": "formattedtime",
            "type": "string"
        },
        {
            "name": "groupid",
            "baseName": "groupid",
            "type": "number"
        },
        {
            "name": "groupname",
            "baseName": "groupname",
            "type": "string"
        },
        {
            "name": "icon",
            "baseName": "icon",
            "type": "CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "instance",
            "baseName": "instance",
            "type": "number"
        },
        {
            "name": "isactionevent",
            "baseName": "isactionevent",
            "type": "boolean"
        },
        {
            "name": "iscategoryevent",
            "baseName": "iscategoryevent",
            "type": "boolean"
        },
        {
            "name": "iscourseevent",
            "baseName": "iscourseevent",
            "type": "boolean"
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "string"
        },
        {
            "name": "modulename",
            "baseName": "modulename",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "normalisedeventtype",
            "baseName": "normalisedeventtype",
            "type": "string"
        },
        {
            "name": "normalisedeventtypetext",
            "baseName": "normalisedeventtypetext",
            "type": "string"
        },
        {
            "name": "overdue",
            "baseName": "overdue",
            "type": "boolean"
        },
        {
            "name": "purpose",
            "baseName": "purpose",
            "type": "string"
        },
        {
            "name": "repeatid",
            "baseName": "repeatid",
            "type": "number"
        },
        {
            "name": "subscription",
            "baseName": "subscription",
            "type": "CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription"
        },
        {
            "name": "timeduration",
            "baseName": "timeduration",
            "type": "number"
        },
        {
            "name": "timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "timesort",
            "baseName": "timesort",
            "type": "number"
        },
        {
            "name": "timestart",
            "baseName": "timestart",
            "type": "number"
        },
        {
            "name": "timeusermidnight",
            "baseName": "timeusermidnight",
            "type": "number"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "userid",
            "baseName": "userid",
            "type": "number"
        },
        {
            "name": "viewurl",
            "baseName": "viewurl",
            "type": "string"
        },
        {
            "name": "visible",
            "baseName": "visible",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return CoreCalendarGetActionEventsByCourse200ResponseEventsInner.attributeTypeMap;
    }
}

