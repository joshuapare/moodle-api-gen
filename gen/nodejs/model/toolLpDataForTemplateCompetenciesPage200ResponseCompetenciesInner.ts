/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreCompetencyCreateCompetency200Response } from './coreCompetencyCreateCompetency200Response';
import { CoreCompetencyDuplicateCompetencyFramework200Response } from './coreCompetencyDuplicateCompetencyFramework200Response';
import { CoreCompetencyReadUserEvidence200ResponseCompetenciesInner } from './coreCompetencyReadUserEvidence200ResponseCompetenciesInner';
import { CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner } from './coreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner';
import { ToolLpDataForCompetencySummary200ResponseComppath } from './toolLpDataForCompetencySummary200ResponseComppath';

export class ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner {
    'Competency'?: CoreCompetencyCreateCompetency200Response;
    'Comppath'?: ToolLpDataForCompetencySummary200ResponseComppath;
    'Framework'?: CoreCompetencyDuplicateCompetencyFramework200Response;
    /**
    * hascourses
    */
    'Hascourses'?: boolean;
    /**
    * hasrelatedcompetencies
    */
    'Hasrelatedcompetencies'?: boolean;
    'Linkedcourses'?: Array<CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>;
    /**
    * pluginbaseurl
    */
    'Pluginbaseurl'?: string;
    'Relatedcompetencies'?: Array<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>;
    /**
    * scaleconfiguration
    */
    'Scaleconfiguration'?: string;
    /**
    * scaleid
    */
    'Scaleid'?: number;
    /**
    * taxonomyterm
    */
    'Taxonomyterm'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Competency",
            "baseName": "competency",
            "type": "CoreCompetencyCreateCompetency200Response"
        },
        {
            "name": "Comppath",
            "baseName": "comppath",
            "type": "ToolLpDataForCompetencySummary200ResponseComppath"
        },
        {
            "name": "Framework",
            "baseName": "framework",
            "type": "CoreCompetencyDuplicateCompetencyFramework200Response"
        },
        {
            "name": "Hascourses",
            "baseName": "hascourses",
            "type": "boolean"
        },
        {
            "name": "Hasrelatedcompetencies",
            "baseName": "hasrelatedcompetencies",
            "type": "boolean"
        },
        {
            "name": "Linkedcourses",
            "baseName": "linkedcourses",
            "type": "Array<CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>"
        },
        {
            "name": "Pluginbaseurl",
            "baseName": "pluginbaseurl",
            "type": "string"
        },
        {
            "name": "Relatedcompetencies",
            "baseName": "relatedcompetencies",
            "type": "Array<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>"
        },
        {
            "name": "Scaleconfiguration",
            "baseName": "scaleconfiguration",
            "type": "string"
        },
        {
            "name": "Scaleid",
            "baseName": "scaleid",
            "type": "number"
        },
        {
            "name": "Taxonomyterm",
            "baseName": "taxonomyterm",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner.attributeTypeMap;
    }
}

