/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AuthEmailSignupUser200ResponseWarningsInner } from './authEmailSignupUser200ResponseWarningsInner';

export class ModForumGetForumAccessInformation200Response {
    /**
    * Whether the user has the capability mod/forum:addinstance allowed.
    */
    'canaddinstance'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:addnews allowed.
    */
    'canaddnews'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:addquestion allowed.
    */
    'canaddquestion'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:allowforcesubscribe allowed.
    */
    'canallowforcesubscribe'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:canmailnow allowed.
    */
    'cancanmailnow'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:canoverridecutoff allowed.
    */
    'cancanoverridecutoff'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:canoverridediscussionlock allowed.
    */
    'cancanoverridediscussionlock'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:canposttomygroups allowed.
    */
    'cancanposttomygroups'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:cantogglefavourite allowed.
    */
    'cancantogglefavourite'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:createattachment allowed.
    */
    'cancreateattachment'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:deleteanypost allowed.
    */
    'candeleteanypost'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:deleteownpost allowed.
    */
    'candeleteownpost'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:editanypost allowed.
    */
    'caneditanypost'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:exportdiscussion allowed.
    */
    'canexportdiscussion'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:exportforum allowed.
    */
    'canexportforum'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:exportownpost allowed.
    */
    'canexportownpost'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:exportpost allowed.
    */
    'canexportpost'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:grade allowed.
    */
    'cangrade'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:managesubscriptions allowed.
    */
    'canmanagesubscriptions'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:movediscussions allowed.
    */
    'canmovediscussions'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:pindiscussions allowed.
    */
    'canpindiscussions'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:postprivatereply allowed.
    */
    'canpostprivatereply'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:postwithoutthrottling allowed.
    */
    'canpostwithoutthrottling'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:rate allowed.
    */
    'canrate'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:readprivatereplies allowed.
    */
    'canreadprivatereplies'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:replynews allowed.
    */
    'canreplynews'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:replypost allowed.
    */
    'canreplypost'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:splitdiscussions allowed.
    */
    'cansplitdiscussions'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:startdiscussion allowed.
    */
    'canstartdiscussion'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:viewallratings allowed.
    */
    'canviewallratings'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:viewanyrating allowed.
    */
    'canviewanyrating'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:viewdiscussion allowed.
    */
    'canviewdiscussion'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:viewhiddentimedposts allowed.
    */
    'canviewhiddentimedposts'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:viewqandawithoutposting allowed.
    */
    'canviewqandawithoutposting'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:viewrating allowed.
    */
    'canviewrating'?: boolean = null;
    /**
    * Whether the user has the capability mod/forum:viewsubscribers allowed.
    */
    'canviewsubscribers'?: boolean = null;
    'warnings'?: Array<AuthEmailSignupUser200ResponseWarningsInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "canaddinstance",
            "baseName": "canaddinstance",
            "type": "boolean"
        },
        {
            "name": "canaddnews",
            "baseName": "canaddnews",
            "type": "boolean"
        },
        {
            "name": "canaddquestion",
            "baseName": "canaddquestion",
            "type": "boolean"
        },
        {
            "name": "canallowforcesubscribe",
            "baseName": "canallowforcesubscribe",
            "type": "boolean"
        },
        {
            "name": "cancanmailnow",
            "baseName": "cancanmailnow",
            "type": "boolean"
        },
        {
            "name": "cancanoverridecutoff",
            "baseName": "cancanoverridecutoff",
            "type": "boolean"
        },
        {
            "name": "cancanoverridediscussionlock",
            "baseName": "cancanoverridediscussionlock",
            "type": "boolean"
        },
        {
            "name": "cancanposttomygroups",
            "baseName": "cancanposttomygroups",
            "type": "boolean"
        },
        {
            "name": "cancantogglefavourite",
            "baseName": "cancantogglefavourite",
            "type": "boolean"
        },
        {
            "name": "cancreateattachment",
            "baseName": "cancreateattachment",
            "type": "boolean"
        },
        {
            "name": "candeleteanypost",
            "baseName": "candeleteanypost",
            "type": "boolean"
        },
        {
            "name": "candeleteownpost",
            "baseName": "candeleteownpost",
            "type": "boolean"
        },
        {
            "name": "caneditanypost",
            "baseName": "caneditanypost",
            "type": "boolean"
        },
        {
            "name": "canexportdiscussion",
            "baseName": "canexportdiscussion",
            "type": "boolean"
        },
        {
            "name": "canexportforum",
            "baseName": "canexportforum",
            "type": "boolean"
        },
        {
            "name": "canexportownpost",
            "baseName": "canexportownpost",
            "type": "boolean"
        },
        {
            "name": "canexportpost",
            "baseName": "canexportpost",
            "type": "boolean"
        },
        {
            "name": "cangrade",
            "baseName": "cangrade",
            "type": "boolean"
        },
        {
            "name": "canmanagesubscriptions",
            "baseName": "canmanagesubscriptions",
            "type": "boolean"
        },
        {
            "name": "canmovediscussions",
            "baseName": "canmovediscussions",
            "type": "boolean"
        },
        {
            "name": "canpindiscussions",
            "baseName": "canpindiscussions",
            "type": "boolean"
        },
        {
            "name": "canpostprivatereply",
            "baseName": "canpostprivatereply",
            "type": "boolean"
        },
        {
            "name": "canpostwithoutthrottling",
            "baseName": "canpostwithoutthrottling",
            "type": "boolean"
        },
        {
            "name": "canrate",
            "baseName": "canrate",
            "type": "boolean"
        },
        {
            "name": "canreadprivatereplies",
            "baseName": "canreadprivatereplies",
            "type": "boolean"
        },
        {
            "name": "canreplynews",
            "baseName": "canreplynews",
            "type": "boolean"
        },
        {
            "name": "canreplypost",
            "baseName": "canreplypost",
            "type": "boolean"
        },
        {
            "name": "cansplitdiscussions",
            "baseName": "cansplitdiscussions",
            "type": "boolean"
        },
        {
            "name": "canstartdiscussion",
            "baseName": "canstartdiscussion",
            "type": "boolean"
        },
        {
            "name": "canviewallratings",
            "baseName": "canviewallratings",
            "type": "boolean"
        },
        {
            "name": "canviewanyrating",
            "baseName": "canviewanyrating",
            "type": "boolean"
        },
        {
            "name": "canviewdiscussion",
            "baseName": "canviewdiscussion",
            "type": "boolean"
        },
        {
            "name": "canviewhiddentimedposts",
            "baseName": "canviewhiddentimedposts",
            "type": "boolean"
        },
        {
            "name": "canviewqandawithoutposting",
            "baseName": "canviewqandawithoutposting",
            "type": "boolean"
        },
        {
            "name": "canviewrating",
            "baseName": "canviewrating",
            "type": "boolean"
        },
        {
            "name": "canviewsubscribers",
            "baseName": "canviewsubscribers",
            "type": "boolean"
        },
        {
            "name": "warnings",
            "baseName": "warnings",
            "type": "Array<AuthEmailSignupUser200ResponseWarningsInner>"
        }    ];

    static getAttributeTypeMap() {
        return ModForumGetForumAccessInformation200Response.attributeTypeMap;
    }
}

