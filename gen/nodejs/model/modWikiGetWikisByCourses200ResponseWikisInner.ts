/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './coreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';

/**
* Wikis
*/
export class ModWikiGetWikisByCourses200ResponseWikisInner {
    /**
    * True if user can create pages.
    */
    'Cancreatepages'?: boolean = null;
    /**
    * Course id
    */
    'Course'?: number;
    /**
    * Course module id
    */
    'Coursemodule'?: number;
    /**
    * Wiki\'s default format (html, creole, nwiki).
    */
    'Defaultformat'?: string = 'null';
    /**
    * Edit begin.
    */
    'Editbegin'?: number = null;
    /**
    * Edit end.
    */
    'Editend'?: number = null;
    /**
    * First page title.
    */
    'Firstpagetitle'?: string = 'null';
    /**
    * 1 if format is forced, 0 otherwise.
    */
    'Forceformat'?: number = null;
    /**
    * Group id
    */
    'Groupingid'?: number;
    /**
    * Group mode
    */
    'Groupmode'?: number;
    /**
    * Activity instance id
    */
    'Id'?: number;
    /**
    * Activity introduction
    */
    'Intro'?: string;
    'Introfiles'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Introformat'?: number;
    /**
    * Forced activity language
    */
    'Lang'?: string;
    /**
    * Activity name
    */
    'Name'?: string;
    /**
    * Course section id
    */
    'Section'?: number;
    /**
    * Time of creation.
    */
    'Timecreated'?: number;
    /**
    * Time of last modification.
    */
    'Timemodified'?: number;
    /**
    * Visible
    */
    'Visible'?: boolean;
    /**
    * Wiki mode (individual, collaborative).
    */
    'Wikimode'?: string = 'null';

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Cancreatepages",
            "baseName": "cancreatepages",
            "type": "boolean"
        },
        {
            "name": "Course",
            "baseName": "course",
            "type": "number"
        },
        {
            "name": "Coursemodule",
            "baseName": "coursemodule",
            "type": "number"
        },
        {
            "name": "Defaultformat",
            "baseName": "defaultformat",
            "type": "string"
        },
        {
            "name": "Editbegin",
            "baseName": "editbegin",
            "type": "number"
        },
        {
            "name": "Editend",
            "baseName": "editend",
            "type": "number"
        },
        {
            "name": "Firstpagetitle",
            "baseName": "firstpagetitle",
            "type": "string"
        },
        {
            "name": "Forceformat",
            "baseName": "forceformat",
            "type": "number"
        },
        {
            "name": "Groupingid",
            "baseName": "groupingid",
            "type": "number"
        },
        {
            "name": "Groupmode",
            "baseName": "groupmode",
            "type": "number"
        },
        {
            "name": "Id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "Intro",
            "baseName": "intro",
            "type": "string"
        },
        {
            "name": "Introfiles",
            "baseName": "introfiles",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "Introformat",
            "baseName": "introformat",
            "type": "number"
        },
        {
            "name": "Lang",
            "baseName": "lang",
            "type": "string"
        },
        {
            "name": "Name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "Section",
            "baseName": "section",
            "type": "number"
        },
        {
            "name": "Timecreated",
            "baseName": "timecreated",
            "type": "number"
        },
        {
            "name": "Timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "Visible",
            "baseName": "visible",
            "type": "boolean"
        },
        {
            "name": "Wikimode",
            "baseName": "wikimode",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ModWikiGetWikisByCourses200ResponseWikisInner.attributeTypeMap;
    }
}

