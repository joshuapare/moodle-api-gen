/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './coreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';

export class ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner {
    /**
    * 0 = will be closed manually, greater than 0 the timestamp of the end of the assessment phase.
    */
    'assessmentend'?: number = 0;
    /**
    * 0 = will be started manually, greater than 0 the timestamp of the start of the assessment phase.
    */
    'assessmentstart'?: number = 0;
    /**
    * A text to be displayed at the end of the workshop.
    */
    'conclusion'?: string = 'null';
    'conclusionfiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * conclusion format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'conclusionformat'?: number = 0;
    /**
    * Course id this workshop is part of.
    */
    'course'?: number = null;
    /**
    * coursemodule
    */
    'coursemodule'?: number;
    /**
    * The recently used grading evaluation method.
    */
    'evaluation'?: string = 'null';
    /**
    * 0 = example assessments are voluntary, 1 = examples must be assessed before submission,                     2 = examples are available after own submission and must be assessed before peer/self assessment phase.
    */
    'examplesmode'?: number = 0;
    /**
    * The maximum grade for submission.
    */
    'grade'?: number = 80;
    /**
    * Number of digits that should be shown after the decimal point when displaying grades.
    */
    'gradedecimals'?: number = 0;
    /**
    * The maximum grade for assessment.
    */
    'gradinggrade'?: number = 20;
    /**
    * The primary key of the record.
    */
    'id'?: number;
    /**
    * Instructions for the submission phase.
    */
    'instructauthors'?: string = 'null';
    'instructauthorsfiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * instructauthors format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'instructauthorsformat'?: number = 0;
    /**
    * Instructions for the assessment phase.
    */
    'instructreviewers'?: string = 'null';
    'instructreviewersfiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * instructreviewers format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'instructreviewersformat'?: number = 0;
    /**
    * Workshop introduction text.
    */
    'intro'?: string = '';
    'introfiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'introformat'?: number = 0;
    /**
    * Forced activity language
    */
    'lang'?: string;
    /**
    * Allow submitting the work after the deadline.
    */
    'latesubmissions'?: boolean = false;
    /**
    * Maximum size of the one attached file.
    */
    'maxbytes'?: number = 100000;
    /**
    * Workshop name.
    */
    'name'?: string = 'null';
    /**
    * Maximum number of submission attachments.
    */
    'nattachments'?: number = 1;
    /**
    * Number of allowed attachments to the overall feedback.
    */
    'overallfeedbackfiles'?: number = 0;
    /**
    * Comma separated list of file extensions.
    */
    'overallfeedbackfiletypes'?: string = 'null';
    /**
    * Maximum size of one file attached to the overall feedback.
    */
    'overallfeedbackmaxbytes'?: number = 100000;
    /**
    * Mode of the overall feedback support.
    */
    'overallfeedbackmode'?: number = 1;
    /**
    * The current phase of workshop (0 = not available, 1 = submission, 2 = assessment, 3 = closed).
    */
    'phase'?: number = 0;
    /**
    * Automatically switch to the assessment phase after the submissions deadline.
    */
    'phaseswitchassessment'?: boolean = false;
    /**
    * The type of the current grading strategy used in this workshop.
    */
    'strategy'?: string = 'null';
    /**
    * 0 = will be closed manually, greater than 0 the timestamp of the end of the submission phase.
    */
    'submissionend'?: number = 0;
    /**
    * Comma separated list of file extensions.
    */
    'submissionfiletypes'?: string;
    /**
    * 0 = will be started manually, greater than 0 the timestamp of the start of the submission phase.
    */
    'submissionstart'?: number = 0;
    /**
    * Indicates whether a file upload is required as part of each submission. 0 for no, 1 for optional, 2 for required.
    */
    'submissiontypefile'?: number = 1;
    /**
    * Indicates whether text is required as part of each submission. 0 for no, 1 for optional, 2 for required.
    */
    'submissiontypetext'?: number = 1;
    /**
    * The timestamp when the module was modified.
    */
    'timemodified'?: number = null;
    /**
    * Optional feature: students practise evaluating on example submissions from teacher.
    */
    'useexamples'?: boolean = false;
    /**
    * Optional feature: students perform peer assessment of others\' work.
    */
    'usepeerassessment'?: boolean = false;
    /**
    * Optional feature: students perform self assessment of their own work.
    */
    'useselfassessment'?: boolean = false;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "assessmentend",
            "baseName": "assessmentend",
            "type": "number"
        },
        {
            "name": "assessmentstart",
            "baseName": "assessmentstart",
            "type": "number"
        },
        {
            "name": "conclusion",
            "baseName": "conclusion",
            "type": "string"
        },
        {
            "name": "conclusionfiles",
            "baseName": "conclusionfiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "conclusionformat",
            "baseName": "conclusionformat",
            "type": "number"
        },
        {
            "name": "course",
            "baseName": "course",
            "type": "number"
        },
        {
            "name": "coursemodule",
            "baseName": "coursemodule",
            "type": "number"
        },
        {
            "name": "evaluation",
            "baseName": "evaluation",
            "type": "string"
        },
        {
            "name": "examplesmode",
            "baseName": "examplesmode",
            "type": "number"
        },
        {
            "name": "grade",
            "baseName": "grade",
            "type": "number"
        },
        {
            "name": "gradedecimals",
            "baseName": "gradedecimals",
            "type": "number"
        },
        {
            "name": "gradinggrade",
            "baseName": "gradinggrade",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "instructauthors",
            "baseName": "instructauthors",
            "type": "string"
        },
        {
            "name": "instructauthorsfiles",
            "baseName": "instructauthorsfiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "instructauthorsformat",
            "baseName": "instructauthorsformat",
            "type": "number"
        },
        {
            "name": "instructreviewers",
            "baseName": "instructreviewers",
            "type": "string"
        },
        {
            "name": "instructreviewersfiles",
            "baseName": "instructreviewersfiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "instructreviewersformat",
            "baseName": "instructreviewersformat",
            "type": "number"
        },
        {
            "name": "intro",
            "baseName": "intro",
            "type": "string"
        },
        {
            "name": "introfiles",
            "baseName": "introfiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "introformat",
            "baseName": "introformat",
            "type": "number"
        },
        {
            "name": "lang",
            "baseName": "lang",
            "type": "string"
        },
        {
            "name": "latesubmissions",
            "baseName": "latesubmissions",
            "type": "boolean"
        },
        {
            "name": "maxbytes",
            "baseName": "maxbytes",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "nattachments",
            "baseName": "nattachments",
            "type": "number"
        },
        {
            "name": "overallfeedbackfiles",
            "baseName": "overallfeedbackfiles",
            "type": "number"
        },
        {
            "name": "overallfeedbackfiletypes",
            "baseName": "overallfeedbackfiletypes",
            "type": "string"
        },
        {
            "name": "overallfeedbackmaxbytes",
            "baseName": "overallfeedbackmaxbytes",
            "type": "number"
        },
        {
            "name": "overallfeedbackmode",
            "baseName": "overallfeedbackmode",
            "type": "number"
        },
        {
            "name": "phase",
            "baseName": "phase",
            "type": "number"
        },
        {
            "name": "phaseswitchassessment",
            "baseName": "phaseswitchassessment",
            "type": "boolean"
        },
        {
            "name": "strategy",
            "baseName": "strategy",
            "type": "string"
        },
        {
            "name": "submissionend",
            "baseName": "submissionend",
            "type": "number"
        },
        {
            "name": "submissionfiletypes",
            "baseName": "submissionfiletypes",
            "type": "string"
        },
        {
            "name": "submissionstart",
            "baseName": "submissionstart",
            "type": "number"
        },
        {
            "name": "submissiontypefile",
            "baseName": "submissiontypefile",
            "type": "number"
        },
        {
            "name": "submissiontypetext",
            "baseName": "submissiontypetext",
            "type": "number"
        },
        {
            "name": "timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "useexamples",
            "baseName": "useexamples",
            "type": "boolean"
        },
        {
            "name": "usepeerassessment",
            "baseName": "usepeerassessment",
            "type": "boolean"
        },
        {
            "name": "useselfassessment",
            "baseName": "useselfassessment",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner.attributeTypeMap;
    }
}

