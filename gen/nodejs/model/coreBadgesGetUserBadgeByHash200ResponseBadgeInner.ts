/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerAlignmentInner } from './coreBadgesGetUserBadgeByHash200ResponseBadgeInnerAlignmentInner';
import { CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerEndorsement } from './coreBadgesGetUserBadgeByHash200ResponseBadgeInnerEndorsement';
import { CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerRelatedbadgesInner } from './coreBadgesGetUserBadgeByHash200ResponseBadgeInnerRelatedbadgesInner';

export class CoreBadgesGetUserBadgeByHash200ResponseBadgeInner {
    'Alignment'?: Array<CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerAlignmentInner>;
    /**
    * Attachment
    */
    'Attachment'?: number = 1;
    /**
    * Badge URL
    */
    'Badgeurl'?: string = 'null';
    /**
    * Course id
    */
    'Courseid'?: number = null;
    /**
    * Date expire
    */
    'Dateexpire'?: number = null;
    /**
    * Date issued
    */
    'Dateissued'?: number = 0;
    /**
    * Badge description
    */
    'Description'?: string = 'null';
    /**
    * User email
    */
    'Email'?: string = 'null';
    'Endorsement'?: CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerEndorsement;
    /**
    * Expire date
    */
    'Expiredate'?: number = null;
    /**
    * Expire period
    */
    'Expireperiod'?: number = null;
    /**
    * Badge id
    */
    'Id'?: number;
    /**
    * Email of the image author
    */
    'Imageauthoremail'?: string = 'null';
    /**
    * Name of the image author
    */
    'Imageauthorname'?: string = 'null';
    /**
    * URL of the image author
    */
    'Imageauthorurl'?: string = 'null';
    /**
    * Caption of the image
    */
    'Imagecaption'?: string = 'null';
    /**
    * Issued id
    */
    'Issuedid'?: number = null;
    /**
    * Issuer contact
    */
    'Issuercontact'?: string = 'null';
    /**
    * Issuer name
    */
    'Issuername'?: string = 'null';
    /**
    * Issuer URL
    */
    'Issuerurl'?: string = 'null';
    /**
    * Language
    */
    'Language'?: string = 'null';
    /**
    * Message
    */
    'Message'?: string = 'null';
    /**
    * Message subject
    */
    'Messagesubject'?: string = 'null';
    /**
    * Badge name
    */
    'Name'?: string = 'null';
    /**
    * Next cron
    */
    'Nextcron'?: number = null;
    /**
    * Whether to notify when badge is awarded
    */
    'Notification'?: number = 1;
    'Relatedbadges'?: Array<CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerRelatedbadgesInner>;
    /**
    * Status
    */
    'Status'?: number = 0;
    /**
    * Time created
    */
    'Timecreated'?: number = 0;
    /**
    * Time modified
    */
    'Timemodified'?: number = 0;
    /**
    * Type
    */
    'Type'?: number = 1;
    /**
    * Unique hash
    */
    'Uniquehash'?: string = 'null';
    /**
    * User created
    */
    'Usercreated'?: number = null;
    /**
    * User modified
    */
    'Usermodified'?: number = null;
    /**
    * Version
    */
    'Version'?: string;
    /**
    * Visible
    */
    'Visible'?: number = 0;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Alignment",
            "baseName": "alignment",
            "type": "Array<CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerAlignmentInner>"
        },
        {
            "name": "Attachment",
            "baseName": "attachment",
            "type": "number"
        },
        {
            "name": "Badgeurl",
            "baseName": "badgeurl",
            "type": "string"
        },
        {
            "name": "Courseid",
            "baseName": "courseid",
            "type": "number"
        },
        {
            "name": "Dateexpire",
            "baseName": "dateexpire",
            "type": "number"
        },
        {
            "name": "Dateissued",
            "baseName": "dateissued",
            "type": "number"
        },
        {
            "name": "Description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "Email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "Endorsement",
            "baseName": "endorsement",
            "type": "CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerEndorsement"
        },
        {
            "name": "Expiredate",
            "baseName": "expiredate",
            "type": "number"
        },
        {
            "name": "Expireperiod",
            "baseName": "expireperiod",
            "type": "number"
        },
        {
            "name": "Id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "Imageauthoremail",
            "baseName": "imageauthoremail",
            "type": "string"
        },
        {
            "name": "Imageauthorname",
            "baseName": "imageauthorname",
            "type": "string"
        },
        {
            "name": "Imageauthorurl",
            "baseName": "imageauthorurl",
            "type": "string"
        },
        {
            "name": "Imagecaption",
            "baseName": "imagecaption",
            "type": "string"
        },
        {
            "name": "Issuedid",
            "baseName": "issuedid",
            "type": "number"
        },
        {
            "name": "Issuercontact",
            "baseName": "issuercontact",
            "type": "string"
        },
        {
            "name": "Issuername",
            "baseName": "issuername",
            "type": "string"
        },
        {
            "name": "Issuerurl",
            "baseName": "issuerurl",
            "type": "string"
        },
        {
            "name": "Language",
            "baseName": "language",
            "type": "string"
        },
        {
            "name": "Message",
            "baseName": "message",
            "type": "string"
        },
        {
            "name": "Messagesubject",
            "baseName": "messagesubject",
            "type": "string"
        },
        {
            "name": "Name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "Nextcron",
            "baseName": "nextcron",
            "type": "number"
        },
        {
            "name": "Notification",
            "baseName": "notification",
            "type": "number"
        },
        {
            "name": "Relatedbadges",
            "baseName": "relatedbadges",
            "type": "Array<CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerRelatedbadgesInner>"
        },
        {
            "name": "Status",
            "baseName": "status",
            "type": "number"
        },
        {
            "name": "Timecreated",
            "baseName": "timecreated",
            "type": "number"
        },
        {
            "name": "Timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "Type",
            "baseName": "type",
            "type": "number"
        },
        {
            "name": "Uniquehash",
            "baseName": "uniquehash",
            "type": "string"
        },
        {
            "name": "Usercreated",
            "baseName": "usercreated",
            "type": "number"
        },
        {
            "name": "Usermodified",
            "baseName": "usermodified",
            "type": "number"
        },
        {
            "name": "Version",
            "baseName": "version",
            "type": "string"
        },
        {
            "name": "Visible",
            "baseName": "visible",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return CoreBadgesGetUserBadgeByHash200ResponseBadgeInner.attributeTypeMap;
    }
}

