/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner } from './modFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import { ModForumGetDiscussionPost200ResponsePostAttachmentsInner } from './modForumGetDiscussionPost200ResponsePostAttachmentsInner';
import { ModForumGetDiscussionPost200ResponsePostAuthor } from './modForumGetDiscussionPost200ResponsePostAuthor';
import { ModForumGetDiscussionPost200ResponsePostCapabilities } from './modForumGetDiscussionPost200ResponsePostCapabilities';
import { ModForumGetDiscussionPost200ResponsePostHtml } from './modForumGetDiscussionPost200ResponsePostHtml';
import { ModForumGetDiscussionPost200ResponsePostTagsInner } from './modForumGetDiscussionPost200ResponsePostTagsInner';
import { ModForumGetDiscussionPost200ResponsePostUrls } from './modForumGetDiscussionPost200ResponsePostUrls';

export class ModForumGetDiscussionPost200ResponsePost {
    'Attachments': Array<ModForumGetDiscussionPost200ResponsePostAttachmentsInner>;
    'Author': ModForumGetDiscussionPost200ResponsePostAuthor;
    'Capabilities': ModForumGetDiscussionPost200ResponsePostCapabilities;
    /**
    * charcount
    */
    'Charcount'?: number;
    /**
    * discussionid
    */
    'Discussionid': number;
    /**
    * hasparent
    */
    'Hasparent': boolean;
    /**
    * haswordcount
    */
    'Haswordcount': boolean;
    'Html'?: ModForumGetDiscussionPost200ResponsePostHtml;
    /**
    * id
    */
    'Id': number;
    /**
    * isdeleted
    */
    'Isdeleted': boolean;
    /**
    * isprivatereply
    */
    'Isprivatereply': boolean;
    /**
    * message
    */
    'Message': string;
    /**
    * message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Messageformat': number;
    'Messageinlinefiles'?: Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>;
    /**
    * parentid
    */
    'Parentid'?: number;
    /**
    * replysubject
    */
    'Replysubject': string;
    /**
    * subject
    */
    'Subject': string;
    'Tags'?: Array<ModForumGetDiscussionPost200ResponsePostTagsInner>;
    /**
    * timecreated
    */
    'Timecreated': number;
    /**
    * timemodified
    */
    'Timemodified': number;
    /**
    * unread
    */
    'Unread'?: boolean;
    'Urls'?: ModForumGetDiscussionPost200ResponsePostUrls;
    /**
    * wordcount
    */
    'Wordcount'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Attachments",
            "baseName": "attachments",
            "type": "Array<ModForumGetDiscussionPost200ResponsePostAttachmentsInner>"
        },
        {
            "name": "Author",
            "baseName": "author",
            "type": "ModForumGetDiscussionPost200ResponsePostAuthor"
        },
        {
            "name": "Capabilities",
            "baseName": "capabilities",
            "type": "ModForumGetDiscussionPost200ResponsePostCapabilities"
        },
        {
            "name": "Charcount",
            "baseName": "charcount",
            "type": "number"
        },
        {
            "name": "Discussionid",
            "baseName": "discussionid",
            "type": "number"
        },
        {
            "name": "Hasparent",
            "baseName": "hasparent",
            "type": "boolean"
        },
        {
            "name": "Haswordcount",
            "baseName": "haswordcount",
            "type": "boolean"
        },
        {
            "name": "Html",
            "baseName": "html",
            "type": "ModForumGetDiscussionPost200ResponsePostHtml"
        },
        {
            "name": "Id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "Isdeleted",
            "baseName": "isdeleted",
            "type": "boolean"
        },
        {
            "name": "Isprivatereply",
            "baseName": "isprivatereply",
            "type": "boolean"
        },
        {
            "name": "Message",
            "baseName": "message",
            "type": "string"
        },
        {
            "name": "Messageformat",
            "baseName": "messageformat",
            "type": "number"
        },
        {
            "name": "Messageinlinefiles",
            "baseName": "messageinlinefiles",
            "type": "Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>"
        },
        {
            "name": "Parentid",
            "baseName": "parentid",
            "type": "number"
        },
        {
            "name": "Replysubject",
            "baseName": "replysubject",
            "type": "string"
        },
        {
            "name": "Subject",
            "baseName": "subject",
            "type": "string"
        },
        {
            "name": "Tags",
            "baseName": "tags",
            "type": "Array<ModForumGetDiscussionPost200ResponsePostTagsInner>"
        },
        {
            "name": "Timecreated",
            "baseName": "timecreated",
            "type": "number"
        },
        {
            "name": "Timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "Unread",
            "baseName": "unread",
            "type": "boolean"
        },
        {
            "name": "Urls",
            "baseName": "urls",
            "type": "ModForumGetDiscussionPost200ResponsePostUrls"
        },
        {
            "name": "Wordcount",
            "baseName": "wordcount",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ModForumGetDiscussionPost200ResponsePost.attributeTypeMap;
    }
}

