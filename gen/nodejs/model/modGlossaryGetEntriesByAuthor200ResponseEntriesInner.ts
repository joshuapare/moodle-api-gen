/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './coreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import { ModDataGetEntries200ResponseEntriesInnerTagsInner } from './modDataGetEntries200ResponseEntriesInnerTagsInner';

export class ModGlossaryGetEntriesByAuthor200ResponseEntriesInner {
    /**
    * Whether the entry was approved
    */
    'Approved'?: boolean = null;
    /**
    * Whether or not the entry has attachments
    */
    'Attachment'?: boolean = null;
    'Attachments'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * When true, the matching is case sensitive
    */
    'Casesensitive'?: boolean = null;
    /**
    * The concept
    */
    'Concept'?: string = 'null';
    /**
    * The definition
    */
    'Definition'?: string = 'null';
    /**
    * definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Definitionformat'?: number;
    'Definitioninlinefiles'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * The definition trust flag
    */
    'Definitiontrust'?: boolean = null;
    /**
    * When true, the matching is done on full words only
    */
    'Fullmatch'?: boolean = null;
    /**
    * The glossary ID
    */
    'Glossaryid'?: number;
    /**
    * The entry ID
    */
    'Id'?: number = null;
    /**
    * The source glossary ID
    */
    'Sourceglossaryid'?: number = null;
    'Tags'?: Array<ModDataGetEntries200ResponseEntriesInnerTagsInner>;
    /**
    * The entry was created by a teacher, or equivalent.
    */
    'Teacherentry'?: boolean = null;
    /**
    * Time created
    */
    'Timecreated'?: number;
    /**
    * Time modified
    */
    'Timemodified'?: number;
    /**
    * Whether the concept should be automatically linked
    */
    'Usedynalink'?: boolean = null;
    /**
    * Author full name
    */
    'Userfullname'?: string = 'null';
    /**
    * Author ID
    */
    'Userid'?: number = null;
    /**
    * Author picture
    */
    'Userpictureurl'?: string = 'null';

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Approved",
            "baseName": "approved",
            "type": "boolean"
        },
        {
            "name": "Attachment",
            "baseName": "attachment",
            "type": "boolean"
        },
        {
            "name": "Attachments",
            "baseName": "attachments",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "Casesensitive",
            "baseName": "casesensitive",
            "type": "boolean"
        },
        {
            "name": "Concept",
            "baseName": "concept",
            "type": "string"
        },
        {
            "name": "Definition",
            "baseName": "definition",
            "type": "string"
        },
        {
            "name": "Definitionformat",
            "baseName": "definitionformat",
            "type": "number"
        },
        {
            "name": "Definitioninlinefiles",
            "baseName": "definitioninlinefiles",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "Definitiontrust",
            "baseName": "definitiontrust",
            "type": "boolean"
        },
        {
            "name": "Fullmatch",
            "baseName": "fullmatch",
            "type": "boolean"
        },
        {
            "name": "Glossaryid",
            "baseName": "glossaryid",
            "type": "number"
        },
        {
            "name": "Id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "Sourceglossaryid",
            "baseName": "sourceglossaryid",
            "type": "number"
        },
        {
            "name": "Tags",
            "baseName": "tags",
            "type": "Array<ModDataGetEntries200ResponseEntriesInnerTagsInner>"
        },
        {
            "name": "Teacherentry",
            "baseName": "teacherentry",
            "type": "boolean"
        },
        {
            "name": "Timecreated",
            "baseName": "timecreated",
            "type": "number"
        },
        {
            "name": "Timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "Usedynalink",
            "baseName": "usedynalink",
            "type": "boolean"
        },
        {
            "name": "Userfullname",
            "baseName": "userfullname",
            "type": "string"
        },
        {
            "name": "Userid",
            "baseName": "userid",
            "type": "number"
        },
        {
            "name": "Userpictureurl",
            "baseName": "userpictureurl",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ModGlossaryGetEntriesByAuthor200ResponseEntriesInner.attributeTypeMap;
    }
}

