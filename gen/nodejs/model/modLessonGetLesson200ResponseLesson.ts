/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './coreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';

export class ModLessonGetLesson200ResponseLesson {
    /**
    * Id of the next activity to be linked once the lesson is completed
    */
    'Activitylink'?: number = null;
    /**
    * Whether to allow the lesson to be attempted offline in the mobile app
    */
    'Allowofflineattempts': boolean = null;
    /**
    * Available from
    */
    'Available'?: number = null;
    /**
    * Slideshow bgcolor
    */
    'Bgcolor'?: string = 'null';
    /**
    * Require end reached for completion?
    */
    'Completionendreached'?: number = null;
    /**
    * Student must do this activity at least for
    */
    'Completiontimespent'?: number = null;
    /**
    * Conditions to enable the lesson
    */
    'Conditions'?: string = 'null';
    /**
    * Foreign key reference to the course this lesson is part of.
    */
    'Course': number = null;
    /**
    * Course module id.
    */
    'Coursemodule': number = null;
    /**
    * Custom scoring?
    */
    'Custom'?: boolean = null;
    /**
    * Available until
    */
    'Deadline'?: number = null;
    /**
    * Dependent on (another lesson id)
    */
    'Dependency'?: number = null;
    /**
    * Display left pages menu?
    */
    'Displayleft'?: boolean = null;
    /**
    * Minimum grade to display menu
    */
    'Displayleftif'?: number = null;
    /**
    * Display default feedback
    */
    'Feedback'?: boolean = null;
    /**
    * The total that the grade is scaled to be out of
    */
    'Grade'?: number = null;
    /**
    * Slideshow height
    */
    'Height'?: number = null;
    /**
    * Standard Moodle primary key.
    */
    'Id': number = null;
    /**
    * Lesson introduction text.
    */
    'Intro'?: string = 'null';
    'Introfiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Introformat'?: number = 0;
    /**
    * Forced activity language
    */
    'Lang': string;
    /**
    * Maximum answers per page
    */
    'Maxanswers'?: number = null;
    /**
    * Maximum attempts
    */
    'Maxattempts'?: number = null;
    /**
    * Number of pages to show
    */
    'Maxpages'?: number = null;
    /**
    * Display a close button in the popup?
    */
    'Mediaclose'?: number = null;
    /**
    * Local file path or full external URL
    */
    'Mediafile'?: string = 'null';
    'Mediafiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * Popup for media file height
    */
    'Mediaheight'?: number = null;
    /**
    * Popup for media with
    */
    'Mediawidth'?: number = null;
    /**
    * Minimum number of questions
    */
    'Minquestions'?: number = null;
    /**
    * Allow student review?
    */
    'Modattempts'?: boolean = null;
    /**
    * Lesson name.
    */
    'Name': string = 'null';
    /**
    * Action for a correct answer
    */
    'Nextpagedefault'?: number = null;
    /**
    * Display ongoing score?
    */
    'Ongoing'?: boolean = null;
    /**
    * Password
    */
    'Password'?: string = 'null';
    /**
    * Practice lesson?
    */
    'Practice'?: boolean = null;
    /**
    * Display progress bar?
    */
    'Progressbar'?: boolean = null;
    /**
    * Re-takes allowed
    */
    'Retake'?: boolean = null;
    /**
    * Provide option to try a question again
    */
    'Review'?: boolean = null;
    /**
    * Display lesson as slideshow
    */
    'Slideshow'?: boolean = null;
    /**
    * Time limit
    */
    'Timelimit'?: number = null;
    /**
    * Last time settings were updated
    */
    'Timemodified'?: number = null;
    /**
    * How to calculate the final grade
    */
    'Usemaxgrade'?: number = null;
    /**
    * Password protected lesson?
    */
    'Usepassword'?: boolean = null;
    /**
    * Slideshow width
    */
    'Width'?: number = null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Activitylink",
            "baseName": "activitylink",
            "type": "number"
        },
        {
            "name": "Allowofflineattempts",
            "baseName": "allowofflineattempts",
            "type": "boolean"
        },
        {
            "name": "Available",
            "baseName": "available",
            "type": "number"
        },
        {
            "name": "Bgcolor",
            "baseName": "bgcolor",
            "type": "string"
        },
        {
            "name": "Completionendreached",
            "baseName": "completionendreached",
            "type": "number"
        },
        {
            "name": "Completiontimespent",
            "baseName": "completiontimespent",
            "type": "number"
        },
        {
            "name": "Conditions",
            "baseName": "conditions",
            "type": "string"
        },
        {
            "name": "Course",
            "baseName": "course",
            "type": "number"
        },
        {
            "name": "Coursemodule",
            "baseName": "coursemodule",
            "type": "number"
        },
        {
            "name": "Custom",
            "baseName": "custom",
            "type": "boolean"
        },
        {
            "name": "Deadline",
            "baseName": "deadline",
            "type": "number"
        },
        {
            "name": "Dependency",
            "baseName": "dependency",
            "type": "number"
        },
        {
            "name": "Displayleft",
            "baseName": "displayleft",
            "type": "boolean"
        },
        {
            "name": "Displayleftif",
            "baseName": "displayleftif",
            "type": "number"
        },
        {
            "name": "Feedback",
            "baseName": "feedback",
            "type": "boolean"
        },
        {
            "name": "Grade",
            "baseName": "grade",
            "type": "number"
        },
        {
            "name": "Height",
            "baseName": "height",
            "type": "number"
        },
        {
            "name": "Id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "Intro",
            "baseName": "intro",
            "type": "string"
        },
        {
            "name": "Introfiles",
            "baseName": "introfiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "Introformat",
            "baseName": "introformat",
            "type": "number"
        },
        {
            "name": "Lang",
            "baseName": "lang",
            "type": "string"
        },
        {
            "name": "Maxanswers",
            "baseName": "maxanswers",
            "type": "number"
        },
        {
            "name": "Maxattempts",
            "baseName": "maxattempts",
            "type": "number"
        },
        {
            "name": "Maxpages",
            "baseName": "maxpages",
            "type": "number"
        },
        {
            "name": "Mediaclose",
            "baseName": "mediaclose",
            "type": "number"
        },
        {
            "name": "Mediafile",
            "baseName": "mediafile",
            "type": "string"
        },
        {
            "name": "Mediafiles",
            "baseName": "mediafiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "Mediaheight",
            "baseName": "mediaheight",
            "type": "number"
        },
        {
            "name": "Mediawidth",
            "baseName": "mediawidth",
            "type": "number"
        },
        {
            "name": "Minquestions",
            "baseName": "minquestions",
            "type": "number"
        },
        {
            "name": "Modattempts",
            "baseName": "modattempts",
            "type": "boolean"
        },
        {
            "name": "Name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "Nextpagedefault",
            "baseName": "nextpagedefault",
            "type": "number"
        },
        {
            "name": "Ongoing",
            "baseName": "ongoing",
            "type": "boolean"
        },
        {
            "name": "Password",
            "baseName": "password",
            "type": "string"
        },
        {
            "name": "Practice",
            "baseName": "practice",
            "type": "boolean"
        },
        {
            "name": "Progressbar",
            "baseName": "progressbar",
            "type": "boolean"
        },
        {
            "name": "Retake",
            "baseName": "retake",
            "type": "boolean"
        },
        {
            "name": "Review",
            "baseName": "review",
            "type": "boolean"
        },
        {
            "name": "Slideshow",
            "baseName": "slideshow",
            "type": "boolean"
        },
        {
            "name": "Timelimit",
            "baseName": "timelimit",
            "type": "number"
        },
        {
            "name": "Timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "Usemaxgrade",
            "baseName": "usemaxgrade",
            "type": "number"
        },
        {
            "name": "Usepassword",
            "baseName": "usepassword",
            "type": "boolean"
        },
        {
            "name": "Width",
            "baseName": "width",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ModLessonGetLesson200ResponseLesson.attributeTypeMap;
    }
}

