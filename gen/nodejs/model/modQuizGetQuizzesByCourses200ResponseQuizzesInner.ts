/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './coreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';

export class ModQuizGetQuizzesByCourses200ResponseQuizzesInner {
    /**
    * Whether to allow the quiz to be attempted                                                                             offline in the mobile app
    */
    'allowofflineattempts'?: number = null;
    /**
    * Whether subsequent attempts start from the answer                                                                     to the previous attempt (1) or start blank (0).
    */
    'attemptonlast'?: number = null;
    /**
    * The maximum number of attempts a student is allowed.
    */
    'attempts'?: number = null;
    /**
    * Auto-save delay
    */
    'autosaveperiod'?: number = null;
    /**
    * Restriciton on the browser the student must                                                                     use. E.g. \'securewindow\'.
    */
    'browsersecurity'?: string = 'null';
    /**
    * Allows students to redo any completed question                                                                         within a quiz attempt.
    */
    'canredoquestions'?: number = null;
    /**
    * Mark quiz complete when the student has                                                                                 exhausted the maximum number of attempts
    */
    'completionattemptsexhausted'?: number = null;
    /**
    * Whether to require passing grade
    */
    'completionpass'?: number = null;
    /**
    * Course id
    */
    'course'?: number;
    /**
    * Course module id
    */
    'coursemodule'?: number;
    /**
    * Number of decimal points to use when displaying                                                                     grades.
    */
    'decimalpoints'?: number = null;
    /**
    * Delay that must be left between the first and second attempt,                                                             in seconds.
    */
    'delay1'?: number = null;
    /**
    * Delay that must be left between the second and subsequent                                                             attempt, in seconds.
    */
    'delay2'?: number = null;
    /**
    * The amount of time (in seconds) after the time limit                                                                 runs out during which attempts can still be submitted,                                                                 if overduehandling is set to allow it.
    */
    'graceperiod'?: number = null;
    /**
    * The total that the quiz overall grade is scaled to be                                                             out of.
    */
    'grade'?: number = null;
    /**
    * One of the values QUIZ_GRADEHIGHEST, QUIZ_GRADEAVERAGE,                                                                     QUIZ_ATTEMPTFIRST or QUIZ_ATTEMPTLAST.
    */
    'grademethod'?: number = null;
    /**
    * Group id
    */
    'groupingid'?: number;
    /**
    * Group mode
    */
    'groupmode'?: number;
    /**
    * Whether the quiz has any non-blank feedback text
    */
    'hasfeedback'?: number = null;
    /**
    * Whether the quiz has questions
    */
    'hasquestions'?: number = null;
    /**
    * Activity instance id
    */
    'id'?: number;
    /**
    * Activity introduction
    */
    'intro'?: string;
    'introfiles'?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
    * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'introformat'?: number;
    /**
    * Forced activity language
    */
    'lang'?: string;
    /**
    * Activity name
    */
    'name'?: string;
    /**
    * Any constraints on how the user is allowed to navigate                                                                 around the quiz. Currently recognised values are                                                                 \'free\' and \'seq\'.
    */
    'navmethod'?: string = 'null';
    /**
    * The method used to handle overdue attempts.                                                                     \'autosubmit\', \'graceperiod\' or \'autoabandon\'.
    */
    'overduehandling'?: string = 'null';
    /**
    * A password that the student must enter before starting or                                                                 continuing a quiz attempt.
    */
    'password'?: string = 'null';
    /**
    * The behaviour to ask questions to use.
    */
    'preferredbehaviour'?: string = 'null';
    /**
    * Number of decimal points to use when                                                                             displaying question grades.                                                                             (-1 means use decimalpoints.)
    */
    'questiondecimalpoints'?: number = null;
    /**
    * How often to insert a page break when editing                                                                         the quiz, or when shuffling the question order.
    */
    'questionsperpage'?: number = null;
    /**
    * Whether users are allowed to review their quiz                                                                     attempts at various times. This is a bit field, decoded by the                                                                     \\mod_quiz\\question\\display_options class. It is formed by ORing                                                                     together the constants defined there.
    */
    'reviewattempt'?: number = null;
    /**
    * Whether users are allowed to review their quiz                                                        attempts at various times.A bit field, like reviewattempt.
    */
    'reviewcorrectness'?: number = null;
    /**
    * Whether users are allowed to review their                                                                             quiz attempts at various times. A bit field, like                                                                             reviewattempt.
    */
    'reviewgeneralfeedback'?: number = null;
    /**
    * Whether users are allowed to review their quiz attempts                                                                 at various times. A bit field, like reviewattempt.
    */
    'reviewmarks'?: number = null;
    /**
    * Whether users are allowed to review their quiz                                                   attempts at various times. A bit field, like reviewattempt.
    */
    'reviewmaxmarks'?: number = null;
    /**
    * Whether users are allowed to review their quiz                                                                             attempts at various times. A bit field, like                                                                             reviewattempt.
    */
    'reviewoverallfeedback'?: number = null;
    /**
    * Whether users are allowed to review their quiz                                                                         attempts at various times. A bit field, like                                                                         reviewattempt.
    */
    'reviewrightanswer'?: number = null;
    /**
    * Whether users are allowed to review their                                                                             quiz attempts at various times. A bit field, like                                                                             reviewattempt.
    */
    'reviewspecificfeedback'?: number;
    /**
    * Course section id
    */
    'section'?: number;
    /**
    * Whether blocks should be shown on the attempt.php and                                                                 review.php pages.
    */
    'showblocks'?: number = null;
    /**
    * Option to show the user\'s picture during the                                                                     attempt and on the review page.
    */
    'showuserpicture'?: number = null;
    /**
    * Whether the parts of the question should be shuffled,                                                                     in those question types that support it.
    */
    'shuffleanswers'?: number = null;
    /**
    * Used to restrict the IP addresses from which this quiz can                                                             be attempted. The format is as requried by the address_in_subnet                                                             function.
    */
    'subnet'?: string = 'null';
    /**
    * The total of all the question instance maxmarks.
    */
    'sumgrades'?: number = null;
    /**
    * The time when this quiz closes. (0 = no restriction.)
    */
    'timeclose'?: number = null;
    /**
    * The time when the quiz was added to the course.
    */
    'timecreated'?: number = null;
    /**
    * The time limit for quiz attempts, in seconds.
    */
    'timelimit'?: number = null;
    /**
    * Last modified time.
    */
    'timemodified'?: number;
    /**
    * The time when this quiz opens. (0 = no restriction.)
    */
    'timeopen'?: number = null;
    /**
    * Visible
    */
    'visible'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "allowofflineattempts",
            "baseName": "allowofflineattempts",
            "type": "number"
        },
        {
            "name": "attemptonlast",
            "baseName": "attemptonlast",
            "type": "number"
        },
        {
            "name": "attempts",
            "baseName": "attempts",
            "type": "number"
        },
        {
            "name": "autosaveperiod",
            "baseName": "autosaveperiod",
            "type": "number"
        },
        {
            "name": "browsersecurity",
            "baseName": "browsersecurity",
            "type": "string"
        },
        {
            "name": "canredoquestions",
            "baseName": "canredoquestions",
            "type": "number"
        },
        {
            "name": "completionattemptsexhausted",
            "baseName": "completionattemptsexhausted",
            "type": "number"
        },
        {
            "name": "completionpass",
            "baseName": "completionpass",
            "type": "number"
        },
        {
            "name": "course",
            "baseName": "course",
            "type": "number"
        },
        {
            "name": "coursemodule",
            "baseName": "coursemodule",
            "type": "number"
        },
        {
            "name": "decimalpoints",
            "baseName": "decimalpoints",
            "type": "number"
        },
        {
            "name": "delay1",
            "baseName": "delay1",
            "type": "number"
        },
        {
            "name": "delay2",
            "baseName": "delay2",
            "type": "number"
        },
        {
            "name": "graceperiod",
            "baseName": "graceperiod",
            "type": "number"
        },
        {
            "name": "grade",
            "baseName": "grade",
            "type": "number"
        },
        {
            "name": "grademethod",
            "baseName": "grademethod",
            "type": "number"
        },
        {
            "name": "groupingid",
            "baseName": "groupingid",
            "type": "number"
        },
        {
            "name": "groupmode",
            "baseName": "groupmode",
            "type": "number"
        },
        {
            "name": "hasfeedback",
            "baseName": "hasfeedback",
            "type": "number"
        },
        {
            "name": "hasquestions",
            "baseName": "hasquestions",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "intro",
            "baseName": "intro",
            "type": "string"
        },
        {
            "name": "introfiles",
            "baseName": "introfiles",
            "type": "Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>"
        },
        {
            "name": "introformat",
            "baseName": "introformat",
            "type": "number"
        },
        {
            "name": "lang",
            "baseName": "lang",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "navmethod",
            "baseName": "navmethod",
            "type": "string"
        },
        {
            "name": "overduehandling",
            "baseName": "overduehandling",
            "type": "string"
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string"
        },
        {
            "name": "preferredbehaviour",
            "baseName": "preferredbehaviour",
            "type": "string"
        },
        {
            "name": "questiondecimalpoints",
            "baseName": "questiondecimalpoints",
            "type": "number"
        },
        {
            "name": "questionsperpage",
            "baseName": "questionsperpage",
            "type": "number"
        },
        {
            "name": "reviewattempt",
            "baseName": "reviewattempt",
            "type": "number"
        },
        {
            "name": "reviewcorrectness",
            "baseName": "reviewcorrectness",
            "type": "number"
        },
        {
            "name": "reviewgeneralfeedback",
            "baseName": "reviewgeneralfeedback",
            "type": "number"
        },
        {
            "name": "reviewmarks",
            "baseName": "reviewmarks",
            "type": "number"
        },
        {
            "name": "reviewmaxmarks",
            "baseName": "reviewmaxmarks",
            "type": "number"
        },
        {
            "name": "reviewoverallfeedback",
            "baseName": "reviewoverallfeedback",
            "type": "number"
        },
        {
            "name": "reviewrightanswer",
            "baseName": "reviewrightanswer",
            "type": "number"
        },
        {
            "name": "reviewspecificfeedback",
            "baseName": "reviewspecificfeedback",
            "type": "number"
        },
        {
            "name": "section",
            "baseName": "section",
            "type": "number"
        },
        {
            "name": "showblocks",
            "baseName": "showblocks",
            "type": "number"
        },
        {
            "name": "showuserpicture",
            "baseName": "showuserpicture",
            "type": "number"
        },
        {
            "name": "shuffleanswers",
            "baseName": "shuffleanswers",
            "type": "number"
        },
        {
            "name": "subnet",
            "baseName": "subnet",
            "type": "string"
        },
        {
            "name": "sumgrades",
            "baseName": "sumgrades",
            "type": "number"
        },
        {
            "name": "timeclose",
            "baseName": "timeclose",
            "type": "number"
        },
        {
            "name": "timecreated",
            "baseName": "timecreated",
            "type": "number"
        },
        {
            "name": "timelimit",
            "baseName": "timelimit",
            "type": "number"
        },
        {
            "name": "timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "timeopen",
            "baseName": "timeopen",
            "type": "number"
        },
        {
            "name": "visible",
            "baseName": "visible",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ModQuizGetQuizzesByCourses200ResponseQuizzesInner.attributeTypeMap;
    }
}

