/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './coreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';

export class ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner {
    /**
    * Whether the feedback is anonymous.
    */
    'Anonymous'?: number = null;
    /**
    * Whether questions should be auto-numbered.
    */
    'Autonumbering'?: boolean = 1;
    /**
    * If this field is set to 1, then the activity will be automatically marked as complete on submission.
    */
    'Completionsubmit'?: boolean = 0;
    /**
    * Course id this feedback is part of.
    */
    'Course'?: number = null;
    /**
    * coursemodule
    */
    'Coursemodule'?: number;
    /**
    * Whether email notifications will be sent to teachers.
    */
    'EmailNotification'?: boolean = null;
    /**
    * The primary key of the record.
    */
    'Id'?: number = null;
    /**
    * Feedback introduction text.
    */
    'Intro'?: string = '';
    'Introfiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'Introformat'?: number = 0;
    /**
    * Forced activity language
    */
    'Lang'?: string;
    /**
    * Whether multiple submissions are allowed.
    */
    'MultipleSubmit'?: boolean = 1;
    /**
    * Feedback name.
    */
    'Name'?: string = 'null';
    /**
    * Text to display after submission.
    */
    'PageAfterSubmit'?: string = 'null';
    /**
    * page_after_submit format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'PageAfterSubmitformat'?: number = 0;
    'Pageaftersubmitfiles'?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
    * Whether stats should be published.
    */
    'PublishStats'?: boolean = 0;
    /**
    * Link to next page after submission.
    */
    'SiteAfterSubmit'?: string = 'null';
    /**
    * Allow answers until this time.
    */
    'Timeclose'?: number = null;
    /**
    * The time this record was modified.
    */
    'Timemodified'?: number = null;
    /**
    * Allow answers from this time.
    */
    'Timeopen'?: number = null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Anonymous",
            "baseName": "anonymous",
            "type": "number"
        },
        {
            "name": "Autonumbering",
            "baseName": "autonumbering",
            "type": "boolean"
        },
        {
            "name": "Completionsubmit",
            "baseName": "completionsubmit",
            "type": "boolean"
        },
        {
            "name": "Course",
            "baseName": "course",
            "type": "number"
        },
        {
            "name": "Coursemodule",
            "baseName": "coursemodule",
            "type": "number"
        },
        {
            "name": "EmailNotification",
            "baseName": "email_notification",
            "type": "boolean"
        },
        {
            "name": "Id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "Intro",
            "baseName": "intro",
            "type": "string"
        },
        {
            "name": "Introfiles",
            "baseName": "introfiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "Introformat",
            "baseName": "introformat",
            "type": "number"
        },
        {
            "name": "Lang",
            "baseName": "lang",
            "type": "string"
        },
        {
            "name": "MultipleSubmit",
            "baseName": "multiple_submit",
            "type": "boolean"
        },
        {
            "name": "Name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "PageAfterSubmit",
            "baseName": "page_after_submit",
            "type": "string"
        },
        {
            "name": "PageAfterSubmitformat",
            "baseName": "page_after_submitformat",
            "type": "number"
        },
        {
            "name": "Pageaftersubmitfiles",
            "baseName": "pageaftersubmitfiles",
            "type": "Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>"
        },
        {
            "name": "PublishStats",
            "baseName": "publish_stats",
            "type": "boolean"
        },
        {
            "name": "SiteAfterSubmit",
            "baseName": "site_after_submit",
            "type": "string"
        },
        {
            "name": "Timeclose",
            "baseName": "timeclose",
            "type": "number"
        },
        {
            "name": "Timemodified",
            "baseName": "timemodified",
            "type": "number"
        },
        {
            "name": "Timeopen",
            "baseName": "timeopen",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner.attributeTypeMap;
    }
}

