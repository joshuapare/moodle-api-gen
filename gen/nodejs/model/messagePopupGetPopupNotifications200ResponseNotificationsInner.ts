/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* message
*/
export class MessagePopupGetPopupNotifications200ResponseNotificationsInner {
    /**
    * The component that generated the notification
    */
    'component'?: string;
    /**
    * Context URL
    */
    'contexturl'?: string;
    /**
    * Context URL link name
    */
    'contexturlname'?: string;
    /**
    * Custom data to be passed to the message processor.                                 The data here is serialised using json_encode().
    */
    'customdata'?: string;
    /**
    * notification deletion status
    */
    'deleted'?: boolean = null;
    /**
    * The type of notification
    */
    'eventtype'?: string;
    /**
    * The message
    */
    'fullmessage'?: string;
    /**
    * fullmessage format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
    */
    'fullmessageformat'?: number;
    /**
    * The message in html
    */
    'fullmessagehtml'?: string;
    /**
    * URL for notification icon
    */
    'iconurl'?: string = 'null';
    /**
    * Notification id (this is not guaranteed to be unique                                 within this result set)
    */
    'id'?: number = null;
    /**
    * notification read status
    */
    'read'?: boolean = null;
    /**
    * The notification subject shortened                                 with ellipsis
    */
    'shortenedsubject'?: string = 'null';
    /**
    * The shorten message
    */
    'smallmessage'?: string;
    /**
    * The notification subject
    */
    'subject'?: string = 'null';
    /**
    * The message text formated
    */
    'text'?: string;
    /**
    * Time created
    */
    'timecreated'?: number;
    /**
    * Time created in a pretty format
    */
    'timecreatedpretty'?: string = 'null';
    /**
    * Time read
    */
    'timeread'?: number;
    /**
    * User from id
    */
    'useridfrom'?: number;
    /**
    * User to id
    */
    'useridto'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "component",
            "baseName": "component",
            "type": "string"
        },
        {
            "name": "contexturl",
            "baseName": "contexturl",
            "type": "string"
        },
        {
            "name": "contexturlname",
            "baseName": "contexturlname",
            "type": "string"
        },
        {
            "name": "customdata",
            "baseName": "customdata",
            "type": "string"
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean"
        },
        {
            "name": "eventtype",
            "baseName": "eventtype",
            "type": "string"
        },
        {
            "name": "fullmessage",
            "baseName": "fullmessage",
            "type": "string"
        },
        {
            "name": "fullmessageformat",
            "baseName": "fullmessageformat",
            "type": "number"
        },
        {
            "name": "fullmessagehtml",
            "baseName": "fullmessagehtml",
            "type": "string"
        },
        {
            "name": "iconurl",
            "baseName": "iconurl",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "read",
            "baseName": "read",
            "type": "boolean"
        },
        {
            "name": "shortenedsubject",
            "baseName": "shortenedsubject",
            "type": "string"
        },
        {
            "name": "smallmessage",
            "baseName": "smallmessage",
            "type": "string"
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string"
        },
        {
            "name": "timecreated",
            "baseName": "timecreated",
            "type": "number"
        },
        {
            "name": "timecreatedpretty",
            "baseName": "timecreatedpretty",
            "type": "string"
        },
        {
            "name": "timeread",
            "baseName": "timeread",
            "type": "number"
        },
        {
            "name": "useridfrom",
            "baseName": "useridfrom",
            "type": "number"
        },
        {
            "name": "useridto",
            "baseName": "useridto",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return MessagePopupGetPopupNotifications200ResponseNotificationsInner.attributeTypeMap;
    }
}

