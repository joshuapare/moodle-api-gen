/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner } from './blockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner';

/**
* one or many licenses
*/
export class BlockIomadCompanyAdminCreateLicensesRequestLicensesInner {
    /**
    * Number of license slots
    */
    'Allocation'?: number = null;
    /**
    * Clear license assignments on expire - 0 = no, 1 = yes
    */
    'Clearonexpire'?: number = null;
    /**
    * Company id
    */
    'Companyid'?: number = null;
    'Courses'?: Array<BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner>;
    /**
    * License cut off date (int = timestamp)
    */
    'Cutoffdate'?: number = null;
    /**
    * License expiry date (int = timestamp)
    */
    'Expirydate'?: number = null;
    /**
    * Instant access - 0 = no, 1 = yes
    */
    'Instant'?: number = null;
    /**
    * License name
    */
    'Name'?: string = 'null';
    /**
    * Parent license id
    */
    'Parentid'?: number = null;
    /**
    * Program pf courses 0 = no, 1 = yes
    */
    'Program'?: number = null;
    /**
    * License reference
    */
    'Reference'?: string = 'null';
    /**
    * Date from which the liucense is available (int = timestamp) 
    */
    'Startdate'?: number = null;
    /**
    * License type - 0 = standard, 1 = reusable, 2 = standard educator, 3 = reusable educator
    */
    'Type'?: number = null;
    /**
    * Number how often the lic can be allocated
    */
    'Used'?: number = null;
    /**
    * Course access length (days)
    */
    'Validlength'?: number = null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Allocation",
            "baseName": "allocation",
            "type": "number"
        },
        {
            "name": "Clearonexpire",
            "baseName": "clearonexpire",
            "type": "number"
        },
        {
            "name": "Companyid",
            "baseName": "companyid",
            "type": "number"
        },
        {
            "name": "Courses",
            "baseName": "courses",
            "type": "Array<BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner>"
        },
        {
            "name": "Cutoffdate",
            "baseName": "cutoffdate",
            "type": "number"
        },
        {
            "name": "Expirydate",
            "baseName": "expirydate",
            "type": "number"
        },
        {
            "name": "Instant",
            "baseName": "instant",
            "type": "number"
        },
        {
            "name": "Name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "Parentid",
            "baseName": "parentid",
            "type": "number"
        },
        {
            "name": "Program",
            "baseName": "program",
            "type": "number"
        },
        {
            "name": "Reference",
            "baseName": "reference",
            "type": "string"
        },
        {
            "name": "Startdate",
            "baseName": "startdate",
            "type": "number"
        },
        {
            "name": "Type",
            "baseName": "type",
            "type": "number"
        },
        {
            "name": "Used",
            "baseName": "used",
            "type": "number"
        },
        {
            "name": "Validlength",
            "baseName": "validlength",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return BlockIomadCompanyAdminCreateLicensesRequestLicensesInner.attributeTypeMap;
    }
}

