/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CoreCompetencyCreateCompetency200Response } from './coreCompetencyCreateCompetency200Response';
import { CoreCompetencyDuplicateCompetencyFramework200Response } from './coreCompetencyDuplicateCompetencyFramework200Response';
import { CoreCompetencyReadUserEvidence200ResponseCompetenciesInner } from './coreCompetencyReadUserEvidence200ResponseCompetenciesInner';
import { CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner } from './coreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner';
import { ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppath } from './reportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppath';

export class ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency {
    'competency': CoreCompetencyCreateCompetency200Response;
    'comppath': ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppath;
    'framework': CoreCompetencyDuplicateCompetencyFramework200Response;
    /**
    * hascourses
    */
    'hascourses': boolean = null;
    /**
    * hasrelatedcompetencies
    */
    'hasrelatedcompetencies': boolean = null;
    'linkedcourses': Array<CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>;
    /**
    * pluginbaseurl
    */
    'pluginbaseurl': string;
    'relatedcompetencies': Array<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>;
    /**
    * scaleconfiguration
    */
    'scaleconfiguration': string;
    /**
    * scaleid
    */
    'scaleid': number;
    /**
    * taxonomyterm
    */
    'taxonomyterm': string = 'null';

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "competency",
            "baseName": "competency",
            "type": "CoreCompetencyCreateCompetency200Response"
        },
        {
            "name": "comppath",
            "baseName": "comppath",
            "type": "ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppath"
        },
        {
            "name": "framework",
            "baseName": "framework",
            "type": "CoreCompetencyDuplicateCompetencyFramework200Response"
        },
        {
            "name": "hascourses",
            "baseName": "hascourses",
            "type": "boolean"
        },
        {
            "name": "hasrelatedcompetencies",
            "baseName": "hasrelatedcompetencies",
            "type": "boolean"
        },
        {
            "name": "linkedcourses",
            "baseName": "linkedcourses",
            "type": "Array<CoreCourseGetEnrolledCoursesByTimelineClassification200ResponseCoursesInner>"
        },
        {
            "name": "pluginbaseurl",
            "baseName": "pluginbaseurl",
            "type": "string"
        },
        {
            "name": "relatedcompetencies",
            "baseName": "relatedcompetencies",
            "type": "Array<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>"
        },
        {
            "name": "scaleconfiguration",
            "baseName": "scaleconfiguration",
            "type": "string"
        },
        {
            "name": "scaleid",
            "baseName": "scaleid",
            "type": "number"
        },
        {
            "name": "taxonomyterm",
            "baseName": "taxonomyterm",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency.attributeTypeMap;
    }
}

