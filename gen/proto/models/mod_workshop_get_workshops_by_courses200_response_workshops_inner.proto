/*
  Moodle Webservice API

  Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

  The version of the OpenAPI document: 4.3.4

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools;

import public "models/core_blog_get_entries200_response_entries_inner_summaryfiles_inner.proto";

message ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner {

  // 0 = will be closed manually, greater than 0 the timestamp of the end of the assessment phase.
  int32 assessmentend = 172834090;

  // 0 = will be started manually, greater than 0 the timestamp of the start of the assessment phase.
  int32 assessmentstart = 187336992;

  // A text to be displayed at the end of the workshop.
  string conclusion = 120647140;

  repeated CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner conclusionfiles = 494853195;

  // conclusion format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
  int32 conclusionformat = 302336299;

  // Course id this workshop is part of.
  int32 course = 280829927;

  // coursemodule
  int32 coursemodule = 506381898;

  // The recently used grading evaluation method.
  string evaluation = 321652541;

  // 0 = example assessments are voluntary, 1 = examples must be assessed before submission,                     2 = examples are available after own submission and must be assessed before peer/self assessment phase.
  int32 examplesmode = 70842004;

  // The maximum grade for submission.
  float grade = 98615255;

  // Number of digits that should be shown after the decimal point when displaying grades.
  int32 gradedecimals = 69185512;

  // The maximum grade for assessment.
  float gradinggrade = 322100861;

  // The primary key of the record.
  int32 id = 3355;

  // Instructions for the submission phase.
  string instructauthors = 16469556;

  repeated CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner instructauthorsfiles = 311884140;

  // instructauthors format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
  int32 instructauthorsformat = 526411963;

  // Instructions for the assessment phase.
  string instructreviewers = 166819053;

  repeated CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner instructreviewersfiles = 473955299;

  // instructreviewers format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
  int32 instructreviewersformat = 202826766;

  // Workshop introduction text.
  string intro = 100361836;

  repeated CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner introfiles = 189691789;

  // intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
  int32 introformat = 517463395;

  // Forced activity language
  string lang = 3314158;

  // Allow submitting the work after the deadline.
  bool latesubmissions = 56584130;

  // Maximum size of the one attached file.
  int32 maxbytes = 411031943;

  // Workshop name.
  string name = 3373707;

  // Maximum number of submission attachments.
  int32 nattachments = 38328963;

  // Number of allowed attachments to the overall feedback.
  int32 overallfeedbackfiles = 344505627;

  // Comma separated list of file extensions.
  string overallfeedbackfiletypes = 115872235;

  // Maximum size of one file attached to the overall feedback.
  int32 overallfeedbackmaxbytes = 270773673;

  // Mode of the overall feedback support.
  int32 overallfeedbackmode = 62854286;

  // The current phase of workshop (0 = not available, 1 = submission, 2 = assessment, 3 = closed).
  int32 phase = 106629499;

  // Automatically switch to the assessment phase after the submissions deadline.
  bool phaseswitchassessment = 277950580;

  // The type of the current grading strategy used in this workshop.
  string strategy = 177185654;

  // 0 = will be closed manually, greater than 0 the timestamp of the end of the submission phase.
  int32 submissionend = 486540787;

  // Comma separated list of file extensions.
  string submissionfiletypes = 31511887;

  // 0 = will be started manually, greater than 0 the timestamp of the start of the submission phase.
  int32 submissionstart = 474892138;

  // Indicates whether a file upload is required as part of each submission. 0 for no, 1 for optional, 2 for required.
  int32 submissiontypefile = 271284481;

  // Indicates whether text is required as part of each submission. 0 for no, 1 for optional, 2 for required.
  int32 submissiontypetext = 270870864;

  // The timestamp when the module was modified.
  int32 timemodified = 337561450;

  // Optional feature: students practise evaluating on example submissions from teacher.
  bool useexamples = 67081522;

  // Optional feature: students perform peer assessment of others' work.
  bool usepeerassessment = 95740654;

  // Optional feature: students perform self assessment of their own work.
  bool useselfassessment = 108094551;

}
