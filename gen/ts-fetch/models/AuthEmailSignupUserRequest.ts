/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUserRequestCustomprofilefieldsInner } from './AuthEmailSignupUserRequestCustomprofilefieldsInner';
import {
    AuthEmailSignupUserRequestCustomprofilefieldsInnerFromJSON,
    AuthEmailSignupUserRequestCustomprofilefieldsInnerFromJSONTyped,
    AuthEmailSignupUserRequestCustomprofilefieldsInnerToJSON,
} from './AuthEmailSignupUserRequestCustomprofilefieldsInner';

/**
 * 
 * @export
 * @interface AuthEmailSignupUserRequest
 */
export interface AuthEmailSignupUserRequest {
    /**
     * Home city of the user
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    city?: string;
    /**
     * Home country code
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    country?: string;
    /**
     * 
     * @type {Array<AuthEmailSignupUserRequestCustomprofilefieldsInner>}
     * @memberof AuthEmailSignupUserRequest
     */
    customprofilefields?: Array<AuthEmailSignupUserRequestCustomprofilefieldsInner>;
    /**
     * A valid and unique email address
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    email: string;
    /**
     * The first name(s) of the user
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    firstname: string;
    /**
     * The family name of the user
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    lastname: string;
    /**
     * Plain text password
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    password: string;
    /**
     * Recaptcha challenge hash
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    recaptchachallengehash?: string;
    /**
     * Recaptcha response
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    recaptcharesponse?: string;
    /**
     * Redirect the user to this site url after confirmation.
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    redirect?: string;
    /**
     * Username
     * @type {string}
     * @memberof AuthEmailSignupUserRequest
     */
    username: string;
}

/**
 * Check if a given object implements the AuthEmailSignupUserRequest interface.
 */
export function instanceOfAuthEmailSignupUserRequest(value: object): boolean {
    if (!('email' in value)) return false;
    if (!('firstname' in value)) return false;
    if (!('lastname' in value)) return false;
    if (!('password' in value)) return false;
    if (!('username' in value)) return false;
    return true;
}

export function AuthEmailSignupUserRequestFromJSON(json: any): AuthEmailSignupUserRequest {
    return AuthEmailSignupUserRequestFromJSONTyped(json, false);
}

export function AuthEmailSignupUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthEmailSignupUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'city': json['city'] == null ? undefined : json['city'],
        'country': json['country'] == null ? undefined : json['country'],
        'customprofilefields': json['customprofilefields'] == null ? undefined : ((json['customprofilefields'] as Array<any>).map(AuthEmailSignupUserRequestCustomprofilefieldsInnerFromJSON)),
        'email': json['email'],
        'firstname': json['firstname'],
        'lastname': json['lastname'],
        'password': json['password'],
        'recaptchachallengehash': json['recaptchachallengehash'] == null ? undefined : json['recaptchachallengehash'],
        'recaptcharesponse': json['recaptcharesponse'] == null ? undefined : json['recaptcharesponse'],
        'redirect': json['redirect'] == null ? undefined : json['redirect'],
        'username': json['username'],
    };
}

export function AuthEmailSignupUserRequestToJSON(value?: AuthEmailSignupUserRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'city': value['city'],
        'country': value['country'],
        'customprofilefields': value['customprofilefields'] == null ? undefined : ((value['customprofilefields'] as Array<any>).map(AuthEmailSignupUserRequestCustomprofilefieldsInnerToJSON)),
        'email': value['email'],
        'firstname': value['firstname'],
        'lastname': value['lastname'],
        'password': value['password'],
        'recaptchachallengehash': value['recaptchachallengehash'],
        'recaptcharesponse': value['recaptcharesponse'],
        'redirect': value['redirect'],
        'username': value['username'],
    };
}

