/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreEnrolGetPotentialUsersRequest
 */
export interface CoreEnrolGetPotentialUsersRequest {
    /**
     * course id
     * @type {number}
     * @memberof CoreEnrolGetPotentialUsersRequest
     */
    courseid: number;
    /**
     * enrolment id
     * @type {number}
     * @memberof CoreEnrolGetPotentialUsersRequest
     */
    enrolid: number;
    /**
     * Page number
     * @type {number}
     * @memberof CoreEnrolGetPotentialUsersRequest
     */
    page: number;
    /**
     * Number per page
     * @type {number}
     * @memberof CoreEnrolGetPotentialUsersRequest
     */
    perpage: number;
    /**
     * query
     * @type {string}
     * @memberof CoreEnrolGetPotentialUsersRequest
     */
    search: string;
    /**
     * find a match anywhere, or only at the beginning
     * @type {boolean}
     * @memberof CoreEnrolGetPotentialUsersRequest
     */
    searchanywhere: boolean;
}

/**
 * Check if a given object implements the CoreEnrolGetPotentialUsersRequest interface.
 */
export function instanceOfCoreEnrolGetPotentialUsersRequest(value: object): boolean {
    if (!('courseid' in value)) return false;
    if (!('enrolid' in value)) return false;
    if (!('page' in value)) return false;
    if (!('perpage' in value)) return false;
    if (!('search' in value)) return false;
    if (!('searchanywhere' in value)) return false;
    return true;
}

export function CoreEnrolGetPotentialUsersRequestFromJSON(json: any): CoreEnrolGetPotentialUsersRequest {
    return CoreEnrolGetPotentialUsersRequestFromJSONTyped(json, false);
}

export function CoreEnrolGetPotentialUsersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreEnrolGetPotentialUsersRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'courseid': json['courseid'],
        'enrolid': json['enrolid'],
        'page': json['page'],
        'perpage': json['perpage'],
        'search': json['search'],
        'searchanywhere': json['searchanywhere'],
    };
}

export function CoreEnrolGetPotentialUsersRequestToJSON(value?: CoreEnrolGetPotentialUsersRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'courseid': value['courseid'],
        'enrolid': value['enrolid'],
        'page': value['page'],
        'perpage': value['perpage'],
        'search': value['search'],
        'searchanywhere': value['searchanywhere'],
    };
}

