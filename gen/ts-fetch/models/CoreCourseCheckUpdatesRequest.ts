/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCourseCheckUpdatesRequestTocheckInner } from './CoreCourseCheckUpdatesRequestTocheckInner';
import {
    CoreCourseCheckUpdatesRequestTocheckInnerFromJSON,
    CoreCourseCheckUpdatesRequestTocheckInnerFromJSONTyped,
    CoreCourseCheckUpdatesRequestTocheckInnerToJSON,
} from './CoreCourseCheckUpdatesRequestTocheckInner';

/**
 * 
 * @export
 * @interface CoreCourseCheckUpdatesRequest
 */
export interface CoreCourseCheckUpdatesRequest {
    /**
     * Course id to check
     * @type {number}
     * @memberof CoreCourseCheckUpdatesRequest
     */
    courseid: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreCourseCheckUpdatesRequest
     */
    filter?: Array<object>;
    /**
     * 
     * @type {Array<CoreCourseCheckUpdatesRequestTocheckInner>}
     * @memberof CoreCourseCheckUpdatesRequest
     */
    tocheck: Array<CoreCourseCheckUpdatesRequestTocheckInner>;
}

/**
 * Check if a given object implements the CoreCourseCheckUpdatesRequest interface.
 */
export function instanceOfCoreCourseCheckUpdatesRequest(value: object): boolean {
    if (!('courseid' in value)) return false;
    if (!('tocheck' in value)) return false;
    return true;
}

export function CoreCourseCheckUpdatesRequestFromJSON(json: any): CoreCourseCheckUpdatesRequest {
    return CoreCourseCheckUpdatesRequestFromJSONTyped(json, false);
}

export function CoreCourseCheckUpdatesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCourseCheckUpdatesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'courseid': json['courseid'],
        'filter': json['filter'] == null ? undefined : json['filter'],
        'tocheck': ((json['tocheck'] as Array<any>).map(CoreCourseCheckUpdatesRequestTocheckInnerFromJSON)),
    };
}

export function CoreCourseCheckUpdatesRequestToJSON(value?: CoreCourseCheckUpdatesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'courseid': value['courseid'],
        'filter': value['filter'],
        'tocheck': ((value['tocheck'] as Array<any>).map(CoreCourseCheckUpdatesRequestTocheckInnerToJSON)),
    };
}

