/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner } from './CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner';
import {
    CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInnerFromJSON,
    CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInnerFromJSONTyped,
    CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInnerToJSON,
} from './CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner';

/**
 * 
 * @export
 * @interface CoreFormGetFiletypesBrowserData200ResponseGroupsInner
 */
export interface CoreFormGetFiletypesBrowserData200ResponseGroupsInner {
    /**
     * Should the group start as expanded or collapsed
     * @type {boolean}
     * @memberof CoreFormGetFiletypesBrowserData200ResponseGroupsInner
     */
    expanded?: boolean;
    /**
     * The list of file extensions associated with the group
     * @type {string}
     * @memberof CoreFormGetFiletypesBrowserData200ResponseGroupsInner
     */
    ext?: string;
    /**
     * The file type group identifier
     * @type {string}
     * @memberof CoreFormGetFiletypesBrowserData200ResponseGroupsInner
     */
    key?: string;
    /**
     * The file type group name
     * @type {string}
     * @memberof CoreFormGetFiletypesBrowserData200ResponseGroupsInner
     */
    name?: string;
    /**
     * Can it be marked as selected
     * @type {boolean}
     * @memberof CoreFormGetFiletypesBrowserData200ResponseGroupsInner
     */
    selectable?: boolean;
    /**
     * Should it be marked as selected
     * @type {boolean}
     * @memberof CoreFormGetFiletypesBrowserData200ResponseGroupsInner
     */
    selected?: boolean;
    /**
     * 
     * @type {Array<CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner>}
     * @memberof CoreFormGetFiletypesBrowserData200ResponseGroupsInner
     */
    types?: Array<CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner>;
}

/**
 * Check if a given object implements the CoreFormGetFiletypesBrowserData200ResponseGroupsInner interface.
 */
export function instanceOfCoreFormGetFiletypesBrowserData200ResponseGroupsInner(value: object): boolean {
    return true;
}

export function CoreFormGetFiletypesBrowserData200ResponseGroupsInnerFromJSON(json: any): CoreFormGetFiletypesBrowserData200ResponseGroupsInner {
    return CoreFormGetFiletypesBrowserData200ResponseGroupsInnerFromJSONTyped(json, false);
}

export function CoreFormGetFiletypesBrowserData200ResponseGroupsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreFormGetFiletypesBrowserData200ResponseGroupsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'expanded': json['expanded'] == null ? undefined : json['expanded'],
        'ext': json['ext'] == null ? undefined : json['ext'],
        'key': json['key'] == null ? undefined : json['key'],
        'name': json['name'] == null ? undefined : json['name'],
        'selectable': json['selectable'] == null ? undefined : json['selectable'],
        'selected': json['selected'] == null ? undefined : json['selected'],
        'types': json['types'] == null ? undefined : ((json['types'] as Array<any>).map(CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInnerFromJSON)),
    };
}

export function CoreFormGetFiletypesBrowserData200ResponseGroupsInnerToJSON(value?: CoreFormGetFiletypesBrowserData200ResponseGroupsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'expanded': value['expanded'],
        'ext': value['ext'],
        'key': value['key'],
        'name': value['name'],
        'selectable': value['selectable'],
        'selected': value['selected'],
        'types': value['types'] == null ? undefined : ((value['types'] as Array<any>).map(CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInnerToJSON)),
    };
}

