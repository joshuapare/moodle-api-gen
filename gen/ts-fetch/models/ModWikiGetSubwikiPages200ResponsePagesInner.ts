/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModDataGetEntries200ResponseEntriesInnerTagsInner } from './ModDataGetEntries200ResponseEntriesInnerTagsInner';
import {
    ModDataGetEntries200ResponseEntriesInnerTagsInnerFromJSON,
    ModDataGetEntries200ResponseEntriesInnerTagsInnerFromJSONTyped,
    ModDataGetEntries200ResponseEntriesInnerTagsInnerToJSON,
} from './ModDataGetEntries200ResponseEntriesInnerTagsInner';

/**
 * Pages
 * @export
 * @interface ModWikiGetSubwikiPages200ResponsePagesInner
 */
export interface ModWikiGetSubwikiPages200ResponsePagesInner {
    /**
     * Page contents.
     * @type {string}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    cachedcontent?: string;
    /**
     * True if user can edit the page.
     * @type {boolean}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    caneditpage?: boolean;
    /**
     * cachedcontent format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    contentformat?: number;
    /**
     * Size of page contents in bytes (doesn't include size of attached files).
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    contentsize?: number;
    /**
     * True if it's the first page.
     * @type {boolean}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    firstpage?: boolean;
    /**
     * Page ID.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    id?: number;
    /**
     * Number of times the page has been viewed.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    pageviews?: number;
    /**
     * 1 if readonly, 0 otherwise.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    readonly?: number;
    /**
     * Page's subwiki ID.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    subwikiid?: number;
    /**
     * 
     * @type {Array<ModDataGetEntries200ResponseEntriesInnerTagsInner>}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    tags?: Array<ModDataGetEntries200ResponseEntriesInnerTagsInner>;
    /**
     * Time of creation.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    timecreated?: number;
    /**
     * Time of last modification.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    timemodified?: number;
    /**
     * Time of last renderization.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    timerendered?: number;
    /**
     * Page title.
     * @type {string}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    title?: string;
    /**
     * ID of the user that last modified the page.
     * @type {number}
     * @memberof ModWikiGetSubwikiPages200ResponsePagesInner
     */
    userid?: number;
}

/**
 * Check if a given object implements the ModWikiGetSubwikiPages200ResponsePagesInner interface.
 */
export function instanceOfModWikiGetSubwikiPages200ResponsePagesInner(value: object): boolean {
    return true;
}

export function ModWikiGetSubwikiPages200ResponsePagesInnerFromJSON(json: any): ModWikiGetSubwikiPages200ResponsePagesInner {
    return ModWikiGetSubwikiPages200ResponsePagesInnerFromJSONTyped(json, false);
}

export function ModWikiGetSubwikiPages200ResponsePagesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModWikiGetSubwikiPages200ResponsePagesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'cachedcontent': json['cachedcontent'] == null ? undefined : json['cachedcontent'],
        'caneditpage': json['caneditpage'] == null ? undefined : json['caneditpage'],
        'contentformat': json['contentformat'] == null ? undefined : json['contentformat'],
        'contentsize': json['contentsize'] == null ? undefined : json['contentsize'],
        'firstpage': json['firstpage'] == null ? undefined : json['firstpage'],
        'id': json['id'] == null ? undefined : json['id'],
        'pageviews': json['pageviews'] == null ? undefined : json['pageviews'],
        'readonly': json['readonly'] == null ? undefined : json['readonly'],
        'subwikiid': json['subwikiid'] == null ? undefined : json['subwikiid'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(ModDataGetEntries200ResponseEntriesInnerTagsInnerFromJSON)),
        'timecreated': json['timecreated'] == null ? undefined : json['timecreated'],
        'timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'timerendered': json['timerendered'] == null ? undefined : json['timerendered'],
        'title': json['title'] == null ? undefined : json['title'],
        'userid': json['userid'] == null ? undefined : json['userid'],
    };
}

export function ModWikiGetSubwikiPages200ResponsePagesInnerToJSON(value?: ModWikiGetSubwikiPages200ResponsePagesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cachedcontent': value['cachedcontent'],
        'caneditpage': value['caneditpage'],
        'contentformat': value['contentformat'],
        'contentsize': value['contentsize'],
        'firstpage': value['firstpage'],
        'id': value['id'],
        'pageviews': value['pageviews'],
        'readonly': value['readonly'],
        'subwikiid': value['subwikiid'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(ModDataGetEntries200ResponseEntriesInnerTagsInnerToJSON)),
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'timerendered': value['timerendered'],
        'title': value['title'],
        'userid': value['userid'],
    };
}

