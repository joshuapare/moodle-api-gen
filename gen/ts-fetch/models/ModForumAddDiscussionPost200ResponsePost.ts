/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner } from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import {
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSONTyped,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON,
} from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import type { ModForumAddDiscussionPost200ResponsePostAttachmentsInner } from './ModForumAddDiscussionPost200ResponsePostAttachmentsInner';
import {
    ModForumAddDiscussionPost200ResponsePostAttachmentsInnerFromJSON,
    ModForumAddDiscussionPost200ResponsePostAttachmentsInnerFromJSONTyped,
    ModForumAddDiscussionPost200ResponsePostAttachmentsInnerToJSON,
} from './ModForumAddDiscussionPost200ResponsePostAttachmentsInner';
import type { ModForumAddDiscussionPost200ResponsePostAuthor } from './ModForumAddDiscussionPost200ResponsePostAuthor';
import {
    ModForumAddDiscussionPost200ResponsePostAuthorFromJSON,
    ModForumAddDiscussionPost200ResponsePostAuthorFromJSONTyped,
    ModForumAddDiscussionPost200ResponsePostAuthorToJSON,
} from './ModForumAddDiscussionPost200ResponsePostAuthor';
import type { ModForumAddDiscussionPost200ResponsePostCapabilities } from './ModForumAddDiscussionPost200ResponsePostCapabilities';
import {
    ModForumAddDiscussionPost200ResponsePostCapabilitiesFromJSON,
    ModForumAddDiscussionPost200ResponsePostCapabilitiesFromJSONTyped,
    ModForumAddDiscussionPost200ResponsePostCapabilitiesToJSON,
} from './ModForumAddDiscussionPost200ResponsePostCapabilities';
import type { ModForumAddDiscussionPost200ResponsePostHtml } from './ModForumAddDiscussionPost200ResponsePostHtml';
import {
    ModForumAddDiscussionPost200ResponsePostHtmlFromJSON,
    ModForumAddDiscussionPost200ResponsePostHtmlFromJSONTyped,
    ModForumAddDiscussionPost200ResponsePostHtmlToJSON,
} from './ModForumAddDiscussionPost200ResponsePostHtml';
import type { ModForumAddDiscussionPost200ResponsePostTagsInner } from './ModForumAddDiscussionPost200ResponsePostTagsInner';
import {
    ModForumAddDiscussionPost200ResponsePostTagsInnerFromJSON,
    ModForumAddDiscussionPost200ResponsePostTagsInnerFromJSONTyped,
    ModForumAddDiscussionPost200ResponsePostTagsInnerToJSON,
} from './ModForumAddDiscussionPost200ResponsePostTagsInner';
import type { ModForumAddDiscussionPost200ResponsePostUrls } from './ModForumAddDiscussionPost200ResponsePostUrls';
import {
    ModForumAddDiscussionPost200ResponsePostUrlsFromJSON,
    ModForumAddDiscussionPost200ResponsePostUrlsFromJSONTyped,
    ModForumAddDiscussionPost200ResponsePostUrlsToJSON,
} from './ModForumAddDiscussionPost200ResponsePostUrls';

/**
 * 
 * @export
 * @interface ModForumAddDiscussionPost200ResponsePost
 */
export interface ModForumAddDiscussionPost200ResponsePost {
    /**
     * 
     * @type {Array<ModForumAddDiscussionPost200ResponsePostAttachmentsInner>}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    attachments: Array<ModForumAddDiscussionPost200ResponsePostAttachmentsInner>;
    /**
     * 
     * @type {ModForumAddDiscussionPost200ResponsePostAuthor}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    author: ModForumAddDiscussionPost200ResponsePostAuthor;
    /**
     * 
     * @type {ModForumAddDiscussionPost200ResponsePostCapabilities}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    capabilities: ModForumAddDiscussionPost200ResponsePostCapabilities;
    /**
     * charcount
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    charcount?: number;
    /**
     * discussionid
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    discussionid: number;
    /**
     * hasparent
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    hasparent: boolean;
    /**
     * haswordcount
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    haswordcount: boolean;
    /**
     * 
     * @type {ModForumAddDiscussionPost200ResponsePostHtml}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    html?: ModForumAddDiscussionPost200ResponsePostHtml;
    /**
     * id
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    id: number;
    /**
     * isdeleted
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    isdeleted: boolean;
    /**
     * isprivatereply
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    isprivatereply: boolean;
    /**
     * message
     * @type {string}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    message: string;
    /**
     * message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    messageformat: number;
    /**
     * 
     * @type {Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    messageinlinefiles?: Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>;
    /**
     * parentid
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    parentid?: number;
    /**
     * replysubject
     * @type {string}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    replysubject: string;
    /**
     * subject
     * @type {string}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    subject: string;
    /**
     * 
     * @type {Array<ModForumAddDiscussionPost200ResponsePostTagsInner>}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    tags?: Array<ModForumAddDiscussionPost200ResponsePostTagsInner>;
    /**
     * timecreated
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    timemodified: number;
    /**
     * unread
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    unread?: boolean;
    /**
     * 
     * @type {ModForumAddDiscussionPost200ResponsePostUrls}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    urls?: ModForumAddDiscussionPost200ResponsePostUrls;
    /**
     * wordcount
     * @type {number}
     * @memberof ModForumAddDiscussionPost200ResponsePost
     */
    wordcount?: number;
}

/**
 * Check if a given object implements the ModForumAddDiscussionPost200ResponsePost interface.
 */
export function instanceOfModForumAddDiscussionPost200ResponsePost(value: object): boolean {
    if (!('attachments' in value)) return false;
    if (!('author' in value)) return false;
    if (!('capabilities' in value)) return false;
    if (!('discussionid' in value)) return false;
    if (!('hasparent' in value)) return false;
    if (!('haswordcount' in value)) return false;
    if (!('id' in value)) return false;
    if (!('isdeleted' in value)) return false;
    if (!('isprivatereply' in value)) return false;
    if (!('message' in value)) return false;
    if (!('messageformat' in value)) return false;
    if (!('replysubject' in value)) return false;
    if (!('subject' in value)) return false;
    if (!('timecreated' in value)) return false;
    if (!('timemodified' in value)) return false;
    return true;
}

export function ModForumAddDiscussionPost200ResponsePostFromJSON(json: any): ModForumAddDiscussionPost200ResponsePost {
    return ModForumAddDiscussionPost200ResponsePostFromJSONTyped(json, false);
}

export function ModForumAddDiscussionPost200ResponsePostFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumAddDiscussionPost200ResponsePost {
    if (json == null) {
        return json;
    }
    return {
        
        'attachments': ((json['attachments'] as Array<any>).map(ModForumAddDiscussionPost200ResponsePostAttachmentsInnerFromJSON)),
        'author': ModForumAddDiscussionPost200ResponsePostAuthorFromJSON(json['author']),
        'capabilities': ModForumAddDiscussionPost200ResponsePostCapabilitiesFromJSON(json['capabilities']),
        'charcount': json['charcount'] == null ? undefined : json['charcount'],
        'discussionid': json['discussionid'],
        'hasparent': json['hasparent'],
        'haswordcount': json['haswordcount'],
        'html': json['html'] == null ? undefined : ModForumAddDiscussionPost200ResponsePostHtmlFromJSON(json['html']),
        'id': json['id'],
        'isdeleted': json['isdeleted'],
        'isprivatereply': json['isprivatereply'],
        'message': json['message'],
        'messageformat': json['messageformat'],
        'messageinlinefiles': json['messageinlinefiles'] == null ? undefined : ((json['messageinlinefiles'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON)),
        'parentid': json['parentid'] == null ? undefined : json['parentid'],
        'replysubject': json['replysubject'],
        'subject': json['subject'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(ModForumAddDiscussionPost200ResponsePostTagsInnerFromJSON)),
        'timecreated': json['timecreated'],
        'timemodified': json['timemodified'],
        'unread': json['unread'] == null ? undefined : json['unread'],
        'urls': json['urls'] == null ? undefined : ModForumAddDiscussionPost200ResponsePostUrlsFromJSON(json['urls']),
        'wordcount': json['wordcount'] == null ? undefined : json['wordcount'],
    };
}

export function ModForumAddDiscussionPost200ResponsePostToJSON(value?: ModForumAddDiscussionPost200ResponsePost | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attachments': ((value['attachments'] as Array<any>).map(ModForumAddDiscussionPost200ResponsePostAttachmentsInnerToJSON)),
        'author': ModForumAddDiscussionPost200ResponsePostAuthorToJSON(value['author']),
        'capabilities': ModForumAddDiscussionPost200ResponsePostCapabilitiesToJSON(value['capabilities']),
        'charcount': value['charcount'],
        'discussionid': value['discussionid'],
        'hasparent': value['hasparent'],
        'haswordcount': value['haswordcount'],
        'html': ModForumAddDiscussionPost200ResponsePostHtmlToJSON(value['html']),
        'id': value['id'],
        'isdeleted': value['isdeleted'],
        'isprivatereply': value['isprivatereply'],
        'message': value['message'],
        'messageformat': value['messageformat'],
        'messageinlinefiles': value['messageinlinefiles'] == null ? undefined : ((value['messageinlinefiles'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON)),
        'parentid': value['parentid'],
        'replysubject': value['replysubject'],
        'subject': value['subject'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(ModForumAddDiscussionPost200ResponsePostTagsInnerToJSON)),
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'unread': value['unread'],
        'urls': ModForumAddDiscussionPost200ResponsePostUrlsToJSON(value['urls']),
        'wordcount': value['wordcount'],
    };
}

