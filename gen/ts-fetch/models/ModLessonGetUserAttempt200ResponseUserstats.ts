/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModLessonGetUserAttempt200ResponseUserstatsGradeinfo } from './ModLessonGetUserAttempt200ResponseUserstatsGradeinfo';
import {
    ModLessonGetUserAttempt200ResponseUserstatsGradeinfoFromJSON,
    ModLessonGetUserAttempt200ResponseUserstatsGradeinfoFromJSONTyped,
    ModLessonGetUserAttempt200ResponseUserstatsGradeinfoToJSON,
} from './ModLessonGetUserAttempt200ResponseUserstatsGradeinfo';

/**
 * 
 * @export
 * @interface ModLessonGetUserAttempt200ResponseUserstats
 */
export interface ModLessonGetUserAttempt200ResponseUserstats {
    /**
     * Time completed.
     * @type {number}
     * @memberof ModLessonGetUserAttempt200ResponseUserstats
     */
    completed: number;
    /**
     * Attempt final grade.
     * @type {number}
     * @memberof ModLessonGetUserAttempt200ResponseUserstats
     */
    grade: number;
    /**
     * 
     * @type {ModLessonGetUserAttempt200ResponseUserstatsGradeinfo}
     * @memberof ModLessonGetUserAttempt200ResponseUserstats
     */
    gradeinfo?: ModLessonGetUserAttempt200ResponseUserstatsGradeinfo;
    /**
     * Time taken.
     * @type {number}
     * @memberof ModLessonGetUserAttempt200ResponseUserstats
     */
    timetotake: number;
}

/**
 * Check if a given object implements the ModLessonGetUserAttempt200ResponseUserstats interface.
 */
export function instanceOfModLessonGetUserAttempt200ResponseUserstats(value: object): boolean {
    if (!('completed' in value)) return false;
    if (!('grade' in value)) return false;
    if (!('timetotake' in value)) return false;
    return true;
}

export function ModLessonGetUserAttempt200ResponseUserstatsFromJSON(json: any): ModLessonGetUserAttempt200ResponseUserstats {
    return ModLessonGetUserAttempt200ResponseUserstatsFromJSONTyped(json, false);
}

export function ModLessonGetUserAttempt200ResponseUserstatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonGetUserAttempt200ResponseUserstats {
    if (json == null) {
        return json;
    }
    return {
        
        'completed': json['completed'],
        'grade': json['grade'],
        'gradeinfo': json['gradeinfo'] == null ? undefined : ModLessonGetUserAttempt200ResponseUserstatsGradeinfoFromJSON(json['gradeinfo']),
        'timetotake': json['timetotake'],
    };
}

export function ModLessonGetUserAttempt200ResponseUserstatsToJSON(value?: ModLessonGetUserAttempt200ResponseUserstats | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'completed': value['completed'],
        'grade': value['grade'],
        'gradeinfo': ModLessonGetUserAttempt200ResponseUserstatsGradeinfoToJSON(value['gradeinfo']),
        'timetotake': value['timetotake'],
    };
}

