/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCompetencyCreatePlan200ResponseCommentarea } from './CoreCompetencyCreatePlan200ResponseCommentarea';
import {
    CoreCompetencyCreatePlan200ResponseCommentareaFromJSON,
    CoreCompetencyCreatePlan200ResponseCommentareaFromJSONTyped,
    CoreCompetencyCreatePlan200ResponseCommentareaToJSON,
} from './CoreCompetencyCreatePlan200ResponseCommentarea';
import type { CoreCompetencyCreatePlan200ResponseReviewer } from './CoreCompetencyCreatePlan200ResponseReviewer';
import {
    CoreCompetencyCreatePlan200ResponseReviewerFromJSON,
    CoreCompetencyCreatePlan200ResponseReviewerFromJSONTyped,
    CoreCompetencyCreatePlan200ResponseReviewerToJSON,
} from './CoreCompetencyCreatePlan200ResponseReviewer';
import type { CoreCompetencyCreatePlan200ResponseTemplate } from './CoreCompetencyCreatePlan200ResponseTemplate';
import {
    CoreCompetencyCreatePlan200ResponseTemplateFromJSON,
    CoreCompetencyCreatePlan200ResponseTemplateFromJSONTyped,
    CoreCompetencyCreatePlan200ResponseTemplateToJSON,
} from './CoreCompetencyCreatePlan200ResponseTemplate';

/**
 * 
 * @export
 * @interface CoreCompetencyCreatePlan200Response
 */
export interface CoreCompetencyCreatePlan200Response {
    /**
     * canbeedited
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    canbeedited: boolean;
    /**
     * canmanage
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    canmanage: boolean;
    /**
     * canrequestreview
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    canrequestreview: boolean;
    /**
     * canreview
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    canreview: boolean;
    /**
     * 
     * @type {CoreCompetencyCreatePlan200ResponseCommentarea}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    commentarea: CoreCompetencyCreatePlan200ResponseCommentarea;
    /**
     * description
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    description: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    descriptionformat?: number;
    /**
     * duedate
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    duedate: number;
    /**
     * duedateformatted
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    duedateformatted: string;
    /**
     * id
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    id: number;
    /**
     * isactive
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isactive: boolean;
    /**
     * isapproveallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isapproveallowed: boolean;
    /**
     * isbasedontemplate
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isbasedontemplate: boolean;
    /**
     * iscancelreviewrequestallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    iscancelreviewrequestallowed: boolean;
    /**
     * iscompleteallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    iscompleteallowed: boolean;
    /**
     * iscompleted
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    iscompleted: boolean;
    /**
     * isdraft
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isdraft: boolean;
    /**
     * isinreview
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isinreview: boolean;
    /**
     * isreopenallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isreopenallowed: boolean;
    /**
     * isrequestreviewallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isrequestreviewallowed: boolean;
    /**
     * isstartreviewallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isstartreviewallowed: boolean;
    /**
     * isstopreviewallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isstopreviewallowed: boolean;
    /**
     * isunapproveallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isunapproveallowed: boolean;
    /**
     * isunlinkallowed
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    isunlinkallowed: boolean;
    /**
     * iswaitingforreview
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    iswaitingforreview: boolean;
    /**
     * name
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    name: string;
    /**
     * origtemplateid
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    origtemplateid: number;
    /**
     * 
     * @type {CoreCompetencyCreatePlan200ResponseReviewer}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    reviewer?: CoreCompetencyCreatePlan200ResponseReviewer;
    /**
     * reviewerid
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    reviewerid: number;
    /**
     * status
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    status: number;
    /**
     * statusname
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    statusname: string;
    /**
     * 
     * @type {CoreCompetencyCreatePlan200ResponseTemplate}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    template?: CoreCompetencyCreatePlan200ResponseTemplate;
    /**
     * templateid
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    templateid: number;
    /**
     * timecreated
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    timemodified: number;
    /**
     * url
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    url: string;
    /**
     * userid
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    userid: number;
    /**
     * usermodified
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200Response
     */
    usermodified: number;
}

/**
 * Check if a given object implements the CoreCompetencyCreatePlan200Response interface.
 */
export function instanceOfCoreCompetencyCreatePlan200Response(value: object): boolean {
    if (!('canbeedited' in value)) return false;
    if (!('canmanage' in value)) return false;
    if (!('canrequestreview' in value)) return false;
    if (!('canreview' in value)) return false;
    if (!('commentarea' in value)) return false;
    if (!('description' in value)) return false;
    if (!('duedate' in value)) return false;
    if (!('duedateformatted' in value)) return false;
    if (!('id' in value)) return false;
    if (!('isactive' in value)) return false;
    if (!('isapproveallowed' in value)) return false;
    if (!('isbasedontemplate' in value)) return false;
    if (!('iscancelreviewrequestallowed' in value)) return false;
    if (!('iscompleteallowed' in value)) return false;
    if (!('iscompleted' in value)) return false;
    if (!('isdraft' in value)) return false;
    if (!('isinreview' in value)) return false;
    if (!('isreopenallowed' in value)) return false;
    if (!('isrequestreviewallowed' in value)) return false;
    if (!('isstartreviewallowed' in value)) return false;
    if (!('isstopreviewallowed' in value)) return false;
    if (!('isunapproveallowed' in value)) return false;
    if (!('isunlinkallowed' in value)) return false;
    if (!('iswaitingforreview' in value)) return false;
    if (!('name' in value)) return false;
    if (!('origtemplateid' in value)) return false;
    if (!('reviewerid' in value)) return false;
    if (!('status' in value)) return false;
    if (!('statusname' in value)) return false;
    if (!('templateid' in value)) return false;
    if (!('timecreated' in value)) return false;
    if (!('timemodified' in value)) return false;
    if (!('url' in value)) return false;
    if (!('userid' in value)) return false;
    if (!('usermodified' in value)) return false;
    return true;
}

export function CoreCompetencyCreatePlan200ResponseFromJSON(json: any): CoreCompetencyCreatePlan200Response {
    return CoreCompetencyCreatePlan200ResponseFromJSONTyped(json, false);
}

export function CoreCompetencyCreatePlan200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompetencyCreatePlan200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'canbeedited': json['canbeedited'],
        'canmanage': json['canmanage'],
        'canrequestreview': json['canrequestreview'],
        'canreview': json['canreview'],
        'commentarea': CoreCompetencyCreatePlan200ResponseCommentareaFromJSON(json['commentarea']),
        'description': json['description'],
        'descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'duedate': json['duedate'],
        'duedateformatted': json['duedateformatted'],
        'id': json['id'],
        'isactive': json['isactive'],
        'isapproveallowed': json['isapproveallowed'],
        'isbasedontemplate': json['isbasedontemplate'],
        'iscancelreviewrequestallowed': json['iscancelreviewrequestallowed'],
        'iscompleteallowed': json['iscompleteallowed'],
        'iscompleted': json['iscompleted'],
        'isdraft': json['isdraft'],
        'isinreview': json['isinreview'],
        'isreopenallowed': json['isreopenallowed'],
        'isrequestreviewallowed': json['isrequestreviewallowed'],
        'isstartreviewallowed': json['isstartreviewallowed'],
        'isstopreviewallowed': json['isstopreviewallowed'],
        'isunapproveallowed': json['isunapproveallowed'],
        'isunlinkallowed': json['isunlinkallowed'],
        'iswaitingforreview': json['iswaitingforreview'],
        'name': json['name'],
        'origtemplateid': json['origtemplateid'],
        'reviewer': json['reviewer'] == null ? undefined : CoreCompetencyCreatePlan200ResponseReviewerFromJSON(json['reviewer']),
        'reviewerid': json['reviewerid'],
        'status': json['status'],
        'statusname': json['statusname'],
        'template': json['template'] == null ? undefined : CoreCompetencyCreatePlan200ResponseTemplateFromJSON(json['template']),
        'templateid': json['templateid'],
        'timecreated': json['timecreated'],
        'timemodified': json['timemodified'],
        'url': json['url'],
        'userid': json['userid'],
        'usermodified': json['usermodified'],
    };
}

export function CoreCompetencyCreatePlan200ResponseToJSON(value?: CoreCompetencyCreatePlan200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canbeedited': value['canbeedited'],
        'canmanage': value['canmanage'],
        'canrequestreview': value['canrequestreview'],
        'canreview': value['canreview'],
        'commentarea': CoreCompetencyCreatePlan200ResponseCommentareaToJSON(value['commentarea']),
        'description': value['description'],
        'descriptionformat': value['descriptionformat'],
        'duedate': value['duedate'],
        'duedateformatted': value['duedateformatted'],
        'id': value['id'],
        'isactive': value['isactive'],
        'isapproveallowed': value['isapproveallowed'],
        'isbasedontemplate': value['isbasedontemplate'],
        'iscancelreviewrequestallowed': value['iscancelreviewrequestallowed'],
        'iscompleteallowed': value['iscompleteallowed'],
        'iscompleted': value['iscompleted'],
        'isdraft': value['isdraft'],
        'isinreview': value['isinreview'],
        'isreopenallowed': value['isreopenallowed'],
        'isrequestreviewallowed': value['isrequestreviewallowed'],
        'isstartreviewallowed': value['isstartreviewallowed'],
        'isstopreviewallowed': value['isstopreviewallowed'],
        'isunapproveallowed': value['isunapproveallowed'],
        'isunlinkallowed': value['isunlinkallowed'],
        'iswaitingforreview': value['iswaitingforreview'],
        'name': value['name'],
        'origtemplateid': value['origtemplateid'],
        'reviewer': CoreCompetencyCreatePlan200ResponseReviewerToJSON(value['reviewer']),
        'reviewerid': value['reviewerid'],
        'status': value['status'],
        'statusname': value['statusname'],
        'template': CoreCompetencyCreatePlan200ResponseTemplateToJSON(value['template']),
        'templateid': value['templateid'],
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'url': value['url'],
        'userid': value['userid'],
        'usermodified': value['usermodified'],
    };
}

