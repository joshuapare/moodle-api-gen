/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModForumSetSubscriptionState200ResponseCapabilities } from './ModForumSetSubscriptionState200ResponseCapabilities';
import {
    ModForumSetSubscriptionState200ResponseCapabilitiesFromJSON,
    ModForumSetSubscriptionState200ResponseCapabilitiesFromJSONTyped,
    ModForumSetSubscriptionState200ResponseCapabilitiesToJSON,
} from './ModForumSetSubscriptionState200ResponseCapabilities';
import type { ModForumSetSubscriptionState200ResponseGroup } from './ModForumSetSubscriptionState200ResponseGroup';
import {
    ModForumSetSubscriptionState200ResponseGroupFromJSON,
    ModForumSetSubscriptionState200ResponseGroupFromJSONTyped,
    ModForumSetSubscriptionState200ResponseGroupToJSON,
} from './ModForumSetSubscriptionState200ResponseGroup';
import type { ModForumSetSubscriptionState200ResponseTimed } from './ModForumSetSubscriptionState200ResponseTimed';
import {
    ModForumSetSubscriptionState200ResponseTimedFromJSON,
    ModForumSetSubscriptionState200ResponseTimedFromJSONTyped,
    ModForumSetSubscriptionState200ResponseTimedToJSON,
} from './ModForumSetSubscriptionState200ResponseTimed';
import type { ModForumSetSubscriptionState200ResponseTimes } from './ModForumSetSubscriptionState200ResponseTimes';
import {
    ModForumSetSubscriptionState200ResponseTimesFromJSON,
    ModForumSetSubscriptionState200ResponseTimesFromJSONTyped,
    ModForumSetSubscriptionState200ResponseTimesToJSON,
} from './ModForumSetSubscriptionState200ResponseTimes';
import type { ModForumSetSubscriptionState200ResponseUrls } from './ModForumSetSubscriptionState200ResponseUrls';
import {
    ModForumSetSubscriptionState200ResponseUrlsFromJSON,
    ModForumSetSubscriptionState200ResponseUrlsFromJSONTyped,
    ModForumSetSubscriptionState200ResponseUrlsToJSON,
} from './ModForumSetSubscriptionState200ResponseUrls';
import type { ModForumSetSubscriptionState200ResponseUserstate } from './ModForumSetSubscriptionState200ResponseUserstate';
import {
    ModForumSetSubscriptionState200ResponseUserstateFromJSON,
    ModForumSetSubscriptionState200ResponseUserstateFromJSONTyped,
    ModForumSetSubscriptionState200ResponseUserstateToJSON,
} from './ModForumSetSubscriptionState200ResponseUserstate';

/**
 * 
 * @export
 * @interface ModForumSetSubscriptionState200Response
 */
export interface ModForumSetSubscriptionState200Response {
    /**
     * 
     * @type {ModForumSetSubscriptionState200ResponseCapabilities}
     * @memberof ModForumSetSubscriptionState200Response
     */
    capabilities: ModForumSetSubscriptionState200ResponseCapabilities;
    /**
     * firstpostid
     * @type {number}
     * @memberof ModForumSetSubscriptionState200Response
     */
    firstpostid: number;
    /**
     * forumid
     * @type {number}
     * @memberof ModForumSetSubscriptionState200Response
     */
    forumid: number;
    /**
     * 
     * @type {ModForumSetSubscriptionState200ResponseGroup}
     * @memberof ModForumSetSubscriptionState200Response
     */
    group?: ModForumSetSubscriptionState200ResponseGroup;
    /**
     * id
     * @type {number}
     * @memberof ModForumSetSubscriptionState200Response
     */
    id: number;
    /**
     * istimelocked
     * @type {boolean}
     * @memberof ModForumSetSubscriptionState200Response
     */
    istimelocked: boolean;
    /**
     * locked
     * @type {boolean}
     * @memberof ModForumSetSubscriptionState200Response
     */
    locked: boolean;
    /**
     * name
     * @type {string}
     * @memberof ModForumSetSubscriptionState200Response
     */
    name: string;
    /**
     * pinned
     * @type {boolean}
     * @memberof ModForumSetSubscriptionState200Response
     */
    pinned: boolean;
    /**
     * 
     * @type {ModForumSetSubscriptionState200ResponseTimed}
     * @memberof ModForumSetSubscriptionState200Response
     */
    timed: ModForumSetSubscriptionState200ResponseTimed;
    /**
     * 
     * @type {ModForumSetSubscriptionState200ResponseTimes}
     * @memberof ModForumSetSubscriptionState200Response
     */
    times: ModForumSetSubscriptionState200ResponseTimes;
    /**
     * 
     * @type {ModForumSetSubscriptionState200ResponseUrls}
     * @memberof ModForumSetSubscriptionState200Response
     */
    urls: ModForumSetSubscriptionState200ResponseUrls;
    /**
     * 
     * @type {ModForumSetSubscriptionState200ResponseUserstate}
     * @memberof ModForumSetSubscriptionState200Response
     */
    userstate: ModForumSetSubscriptionState200ResponseUserstate;
}

/**
 * Check if a given object implements the ModForumSetSubscriptionState200Response interface.
 */
export function instanceOfModForumSetSubscriptionState200Response(value: object): boolean {
    if (!('capabilities' in value)) return false;
    if (!('firstpostid' in value)) return false;
    if (!('forumid' in value)) return false;
    if (!('id' in value)) return false;
    if (!('istimelocked' in value)) return false;
    if (!('locked' in value)) return false;
    if (!('name' in value)) return false;
    if (!('pinned' in value)) return false;
    if (!('timed' in value)) return false;
    if (!('times' in value)) return false;
    if (!('urls' in value)) return false;
    if (!('userstate' in value)) return false;
    return true;
}

export function ModForumSetSubscriptionState200ResponseFromJSON(json: any): ModForumSetSubscriptionState200Response {
    return ModForumSetSubscriptionState200ResponseFromJSONTyped(json, false);
}

export function ModForumSetSubscriptionState200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumSetSubscriptionState200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'capabilities': ModForumSetSubscriptionState200ResponseCapabilitiesFromJSON(json['capabilities']),
        'firstpostid': json['firstpostid'],
        'forumid': json['forumid'],
        'group': json['group'] == null ? undefined : ModForumSetSubscriptionState200ResponseGroupFromJSON(json['group']),
        'id': json['id'],
        'istimelocked': json['istimelocked'],
        'locked': json['locked'],
        'name': json['name'],
        'pinned': json['pinned'],
        'timed': ModForumSetSubscriptionState200ResponseTimedFromJSON(json['timed']),
        'times': ModForumSetSubscriptionState200ResponseTimesFromJSON(json['times']),
        'urls': ModForumSetSubscriptionState200ResponseUrlsFromJSON(json['urls']),
        'userstate': ModForumSetSubscriptionState200ResponseUserstateFromJSON(json['userstate']),
    };
}

export function ModForumSetSubscriptionState200ResponseToJSON(value?: ModForumSetSubscriptionState200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'capabilities': ModForumSetSubscriptionState200ResponseCapabilitiesToJSON(value['capabilities']),
        'firstpostid': value['firstpostid'],
        'forumid': value['forumid'],
        'group': ModForumSetSubscriptionState200ResponseGroupToJSON(value['group']),
        'id': value['id'],
        'istimelocked': value['istimelocked'],
        'locked': value['locked'],
        'name': value['name'],
        'pinned': value['pinned'],
        'timed': ModForumSetSubscriptionState200ResponseTimedToJSON(value['timed']),
        'times': ModForumSetSubscriptionState200ResponseTimesToJSON(value['times']),
        'urls': ModForumSetSubscriptionState200ResponseUrlsToJSON(value['urls']),
        'userstate': ModForumSetSubscriptionState200ResponseUserstateToJSON(value['userstate']),
    };
}

