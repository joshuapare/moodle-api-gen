/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModLtiGetToolTypesAndProxiesRequest
 */
export interface ModLtiGetToolTypesAndProxiesRequest {
    /**
     * How many tool types displayed per page
     * @type {number}
     * @memberof ModLtiGetToolTypesAndProxiesRequest
     */
    limit?: number;
    /**
     * Current offset of tool elements
     * @type {number}
     * @memberof ModLtiGetToolTypesAndProxiesRequest
     */
    offset?: number;
    /**
     * Orphaned tool types only
     * @type {boolean}
     * @memberof ModLtiGetToolTypesAndProxiesRequest
     */
    orphanedonly?: boolean;
    /**
     * Tool proxy id
     * @type {number}
     * @memberof ModLtiGetToolTypesAndProxiesRequest
     */
    toolproxyid?: number;
}

/**
 * Check if a given object implements the ModLtiGetToolTypesAndProxiesRequest interface.
 */
export function instanceOfModLtiGetToolTypesAndProxiesRequest(value: object): boolean {
    return true;
}

export function ModLtiGetToolTypesAndProxiesRequestFromJSON(json: any): ModLtiGetToolTypesAndProxiesRequest {
    return ModLtiGetToolTypesAndProxiesRequestFromJSONTyped(json, false);
}

export function ModLtiGetToolTypesAndProxiesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLtiGetToolTypesAndProxiesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'limit': json['limit'] == null ? undefined : json['limit'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'orphanedonly': json['orphanedonly'] == null ? undefined : json['orphanedonly'],
        'toolproxyid': json['toolproxyid'] == null ? undefined : json['toolproxyid'],
    };
}

export function ModLtiGetToolTypesAndProxiesRequestToJSON(value?: ModLtiGetToolTypesAndProxiesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'limit': value['limit'],
        'offset': value['offset'],
        'orphanedonly': value['orphanedonly'],
        'toolproxyid': value['toolproxyid'],
    };
}

