/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreGetUserDatesRequestTimestampsInner } from './CoreGetUserDatesRequestTimestampsInner';
import {
    CoreGetUserDatesRequestTimestampsInnerFromJSON,
    CoreGetUserDatesRequestTimestampsInnerFromJSONTyped,
    CoreGetUserDatesRequestTimestampsInnerToJSON,
} from './CoreGetUserDatesRequestTimestampsInner';

/**
 * 
 * @export
 * @interface CoreGetUserDatesRequest
 */
export interface CoreGetUserDatesRequest {
    /**
     * Context ID. Either use this value, or level and instanceid.
     * @type {number}
     * @memberof CoreGetUserDatesRequest
     */
    contextid?: number;
    /**
     * Context level. To be used with instanceid.
     * @type {string}
     * @memberof CoreGetUserDatesRequest
     */
    contextlevel?: string;
    /**
     * Context instance ID. To be used with level
     * @type {number}
     * @memberof CoreGetUserDatesRequest
     */
    instanceid?: number;
    /**
     * 
     * @type {Array<CoreGetUserDatesRequestTimestampsInner>}
     * @memberof CoreGetUserDatesRequest
     */
    timestamps: Array<CoreGetUserDatesRequestTimestampsInner>;
}

/**
 * Check if a given object implements the CoreGetUserDatesRequest interface.
 */
export function instanceOfCoreGetUserDatesRequest(value: object): boolean {
    if (!('timestamps' in value)) return false;
    return true;
}

export function CoreGetUserDatesRequestFromJSON(json: any): CoreGetUserDatesRequest {
    return CoreGetUserDatesRequestFromJSONTyped(json, false);
}

export function CoreGetUserDatesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreGetUserDatesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'contextid': json['contextid'] == null ? undefined : json['contextid'],
        'contextlevel': json['contextlevel'] == null ? undefined : json['contextlevel'],
        'instanceid': json['instanceid'] == null ? undefined : json['instanceid'],
        'timestamps': ((json['timestamps'] as Array<any>).map(CoreGetUserDatesRequestTimestampsInnerFromJSON)),
    };
}

export function CoreGetUserDatesRequestToJSON(value?: CoreGetUserDatesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contextid': value['contextid'],
        'contextlevel': value['contextlevel'],
        'instanceid': value['instanceid'],
        'timestamps': ((value['timestamps'] as Array<any>).map(CoreGetUserDatesRequestTimestampsInnerToJSON)),
    };
}

