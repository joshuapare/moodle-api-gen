/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner } from './CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner';
import {
    CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInnerFromJSON,
    CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInnerFromJSONTyped,
    CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInnerToJSON,
} from './CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner';
import type { CoreReportbuilderFiltersAdd200ResponseActivefiltersInner } from './CoreReportbuilderFiltersAdd200ResponseActivefiltersInner';
import {
    CoreReportbuilderFiltersAdd200ResponseActivefiltersInnerFromJSON,
    CoreReportbuilderFiltersAdd200ResponseActivefiltersInnerFromJSONTyped,
    CoreReportbuilderFiltersAdd200ResponseActivefiltersInnerToJSON,
} from './CoreReportbuilderFiltersAdd200ResponseActivefiltersInner';

/**
 * 
 * @export
 * @interface CoreReportbuilderFiltersAdd200Response
 */
export interface CoreReportbuilderFiltersAdd200Response {
    /**
     * 
     * @type {Array<CoreReportbuilderFiltersAdd200ResponseActivefiltersInner>}
     * @memberof CoreReportbuilderFiltersAdd200Response
     */
    activefilters: Array<CoreReportbuilderFiltersAdd200ResponseActivefiltersInner>;
    /**
     * 
     * @type {Array<CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner>}
     * @memberof CoreReportbuilderFiltersAdd200Response
     */
    availablefilters: Array<CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner>;
    /**
     * hasactivefilters
     * @type {boolean}
     * @memberof CoreReportbuilderFiltersAdd200Response
     */
    hasactivefilters: boolean;
    /**
     * hasavailablefilters
     * @type {boolean}
     * @memberof CoreReportbuilderFiltersAdd200Response
     */
    hasavailablefilters: boolean;
    /**
     * helpicon
     * @type {string}
     * @memberof CoreReportbuilderFiltersAdd200Response
     */
    helpicon: string;
}

/**
 * Check if a given object implements the CoreReportbuilderFiltersAdd200Response interface.
 */
export function instanceOfCoreReportbuilderFiltersAdd200Response(value: object): boolean {
    if (!('activefilters' in value)) return false;
    if (!('availablefilters' in value)) return false;
    if (!('hasactivefilters' in value)) return false;
    if (!('hasavailablefilters' in value)) return false;
    if (!('helpicon' in value)) return false;
    return true;
}

export function CoreReportbuilderFiltersAdd200ResponseFromJSON(json: any): CoreReportbuilderFiltersAdd200Response {
    return CoreReportbuilderFiltersAdd200ResponseFromJSONTyped(json, false);
}

export function CoreReportbuilderFiltersAdd200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreReportbuilderFiltersAdd200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'activefilters': ((json['activefilters'] as Array<any>).map(CoreReportbuilderFiltersAdd200ResponseActivefiltersInnerFromJSON)),
        'availablefilters': ((json['availablefilters'] as Array<any>).map(CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInnerFromJSON)),
        'hasactivefilters': json['hasactivefilters'],
        'hasavailablefilters': json['hasavailablefilters'],
        'helpicon': json['helpicon'],
    };
}

export function CoreReportbuilderFiltersAdd200ResponseToJSON(value?: CoreReportbuilderFiltersAdd200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'activefilters': ((value['activefilters'] as Array<any>).map(CoreReportbuilderFiltersAdd200ResponseActivefiltersInnerToJSON)),
        'availablefilters': ((value['availablefilters'] as Array<any>).map(CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInnerToJSON)),
        'hasactivefilters': value['hasactivefilters'],
        'hasavailablefilters': value['hasavailablefilters'],
        'helpicon': value['helpicon'],
    };
}

