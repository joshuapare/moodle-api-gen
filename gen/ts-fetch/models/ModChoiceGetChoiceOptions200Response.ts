/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';
import type { ModChoiceGetChoiceOptions200ResponseOptionsInner } from './ModChoiceGetChoiceOptions200ResponseOptionsInner';
import {
    ModChoiceGetChoiceOptions200ResponseOptionsInnerFromJSON,
    ModChoiceGetChoiceOptions200ResponseOptionsInnerFromJSONTyped,
    ModChoiceGetChoiceOptions200ResponseOptionsInnerToJSON,
} from './ModChoiceGetChoiceOptions200ResponseOptionsInner';

/**
 * 
 * @export
 * @interface ModChoiceGetChoiceOptions200Response
 */
export interface ModChoiceGetChoiceOptions200Response {
    /**
     * 
     * @type {Array<ModChoiceGetChoiceOptions200ResponseOptionsInner>}
     * @memberof ModChoiceGetChoiceOptions200Response
     */
    options: Array<ModChoiceGetChoiceOptions200ResponseOptionsInner>;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModChoiceGetChoiceOptions200Response
     */
    warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModChoiceGetChoiceOptions200Response interface.
 */
export function instanceOfModChoiceGetChoiceOptions200Response(value: object): boolean {
    if (!('options' in value)) return false;
    return true;
}

export function ModChoiceGetChoiceOptions200ResponseFromJSON(json: any): ModChoiceGetChoiceOptions200Response {
    return ModChoiceGetChoiceOptions200ResponseFromJSONTyped(json, false);
}

export function ModChoiceGetChoiceOptions200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModChoiceGetChoiceOptions200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'options': ((json['options'] as Array<any>).map(ModChoiceGetChoiceOptions200ResponseOptionsInnerFromJSON)),
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModChoiceGetChoiceOptions200ResponseToJSON(value?: ModChoiceGetChoiceOptions200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'options': ((value['options'] as Array<any>).map(ModChoiceGetChoiceOptions200ResponseOptionsInnerToJSON)),
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

