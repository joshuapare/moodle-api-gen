/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';

/**
 * 
 * @export
 * @interface ModFeedbackGetFeedbackAccessInformation200Response
 */
export interface ModFeedbackGetFeedbackAccessInformation200Response {
    /**
     * Whether the user can complete the feedback or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    cancomplete: boolean;
    /**
     * Whether the user can delete submissions or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    candeletesubmissions: boolean;
    /**
     * Whether the user can edit feedback items or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    canedititems: boolean;
    /**
     * Whether the user can submit the feedback or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    cansubmit: boolean;
    /**
     * Whether the user can view the analysis or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    canviewanalysis: boolean;
    /**
     * Whether the user can view the feedback reports or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    canviewreports: boolean;
    /**
     * Whether the feedback is already submitted or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    isalreadysubmitted: boolean;
    /**
     * Whether the feedback is anonymous or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    isanonymous: boolean;
    /**
     * Whether the feedback has questions or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    isempty: boolean;
    /**
     * Whether the feedback has active access time restrictions or not.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    isopen: boolean;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModFeedbackGetFeedbackAccessInformation200Response
     */
    warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModFeedbackGetFeedbackAccessInformation200Response interface.
 */
export function instanceOfModFeedbackGetFeedbackAccessInformation200Response(value: object): boolean {
    if (!('cancomplete' in value)) return false;
    if (!('candeletesubmissions' in value)) return false;
    if (!('canedititems' in value)) return false;
    if (!('cansubmit' in value)) return false;
    if (!('canviewanalysis' in value)) return false;
    if (!('canviewreports' in value)) return false;
    if (!('isalreadysubmitted' in value)) return false;
    if (!('isanonymous' in value)) return false;
    if (!('isempty' in value)) return false;
    if (!('isopen' in value)) return false;
    return true;
}

export function ModFeedbackGetFeedbackAccessInformation200ResponseFromJSON(json: any): ModFeedbackGetFeedbackAccessInformation200Response {
    return ModFeedbackGetFeedbackAccessInformation200ResponseFromJSONTyped(json, false);
}

export function ModFeedbackGetFeedbackAccessInformation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModFeedbackGetFeedbackAccessInformation200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'cancomplete': json['cancomplete'],
        'candeletesubmissions': json['candeletesubmissions'],
        'canedititems': json['canedititems'],
        'cansubmit': json['cansubmit'],
        'canviewanalysis': json['canviewanalysis'],
        'canviewreports': json['canviewreports'],
        'isalreadysubmitted': json['isalreadysubmitted'],
        'isanonymous': json['isanonymous'],
        'isempty': json['isempty'],
        'isopen': json['isopen'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModFeedbackGetFeedbackAccessInformation200ResponseToJSON(value?: ModFeedbackGetFeedbackAccessInformation200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cancomplete': value['cancomplete'],
        'candeletesubmissions': value['candeletesubmissions'],
        'canedititems': value['canedititems'],
        'cansubmit': value['cansubmit'],
        'canviewanalysis': value['canviewanalysis'],
        'canviewreports': value['canviewreports'],
        'isalreadysubmitted': value['isalreadysubmitted'],
        'isanonymous': value['isanonymous'],
        'isempty': value['isempty'],
        'isopen': value['isopen'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

