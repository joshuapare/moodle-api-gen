/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * event
 * @export
 * @interface CoreCalendarCreateCalendarEvents200ResponseEventsInner
 */
export interface CoreCalendarCreateCalendarEvents200ResponseEventsInner {
    /**
     * course id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    courseid?: number;
    /**
     * Description
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    description?: string;
    /**
     * Event type
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    eventtype?: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    format?: number;
    /**
     * group id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    groupid?: number;
    /**
     * event id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    id?: number;
    /**
     * instance id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    instance?: number;
    /**
     * module name
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    modulename?: string;
    /**
     * event name
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    name?: string;
    /**
     * repeat id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    repeatid?: number;
    /**
     * sequence
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    sequence?: number;
    /**
     * Subscription id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    subscriptionid?: number;
    /**
     * time duration
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    timeduration?: number;
    /**
     * time modified
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    timemodified?: number;
    /**
     * timestart
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    timestart?: number;
    /**
     * user id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    userid?: number;
    /**
     * unique id of ical events
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    uuid?: string;
    /**
     * visible
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    visible?: number;
}

/**
 * Check if a given object implements the CoreCalendarCreateCalendarEvents200ResponseEventsInner interface.
 */
export function instanceOfCoreCalendarCreateCalendarEvents200ResponseEventsInner(value: object): boolean {
    return true;
}

export function CoreCalendarCreateCalendarEvents200ResponseEventsInnerFromJSON(json: any): CoreCalendarCreateCalendarEvents200ResponseEventsInner {
    return CoreCalendarCreateCalendarEvents200ResponseEventsInnerFromJSONTyped(json, false);
}

export function CoreCalendarCreateCalendarEvents200ResponseEventsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarCreateCalendarEvents200ResponseEventsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'courseid': json['courseid'] == null ? undefined : json['courseid'],
        'description': json['description'] == null ? undefined : json['description'],
        'eventtype': json['eventtype'] == null ? undefined : json['eventtype'],
        'format': json['format'] == null ? undefined : json['format'],
        'groupid': json['groupid'] == null ? undefined : json['groupid'],
        'id': json['id'] == null ? undefined : json['id'],
        'instance': json['instance'] == null ? undefined : json['instance'],
        'modulename': json['modulename'] == null ? undefined : json['modulename'],
        'name': json['name'] == null ? undefined : json['name'],
        'repeatid': json['repeatid'] == null ? undefined : json['repeatid'],
        'sequence': json['sequence'] == null ? undefined : json['sequence'],
        'subscriptionid': json['subscriptionid'] == null ? undefined : json['subscriptionid'],
        'timeduration': json['timeduration'] == null ? undefined : json['timeduration'],
        'timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'timestart': json['timestart'] == null ? undefined : json['timestart'],
        'userid': json['userid'] == null ? undefined : json['userid'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function CoreCalendarCreateCalendarEvents200ResponseEventsInnerToJSON(value?: CoreCalendarCreateCalendarEvents200ResponseEventsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'courseid': value['courseid'],
        'description': value['description'],
        'eventtype': value['eventtype'],
        'format': value['format'],
        'groupid': value['groupid'],
        'id': value['id'],
        'instance': value['instance'],
        'modulename': value['modulename'],
        'name': value['name'],
        'repeatid': value['repeatid'],
        'sequence': value['sequence'],
        'subscriptionid': value['subscriptionid'],
        'timeduration': value['timeduration'],
        'timemodified': value['timemodified'],
        'timestart': value['timestart'],
        'userid': value['userid'],
        'uuid': value['uuid'],
        'visible': value['visible'],
    };
}

