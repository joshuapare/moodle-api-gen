/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner } from './ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner';
import {
    ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerFromJSON,
    ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerFromJSONTyped,
    ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerToJSON,
} from './ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner';

/**
 * 
 * @export
 * @interface ToolUsertoursFetchAndStartTour200ResponseTourconfig
 */
export interface ToolUsertoursFetchAndStartTour200ResponseTourconfig {
    /**
     * display step number
     * @type {boolean}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfig
     */
    displaystepnumbers: boolean;
    /**
     * Label of the end tour button
     * @type {string}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfig
     */
    endtourlabel: string;
    /**
     * Tour Name
     * @type {string}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfig
     */
    name: string;
    /**
     * 
     * @type {Array<ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner>}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfig
     */
    steps: Array<ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner>;
}

/**
 * Check if a given object implements the ToolUsertoursFetchAndStartTour200ResponseTourconfig interface.
 */
export function instanceOfToolUsertoursFetchAndStartTour200ResponseTourconfig(value: object): boolean {
    if (!('displaystepnumbers' in value)) return false;
    if (!('endtourlabel' in value)) return false;
    if (!('name' in value)) return false;
    if (!('steps' in value)) return false;
    return true;
}

export function ToolUsertoursFetchAndStartTour200ResponseTourconfigFromJSON(json: any): ToolUsertoursFetchAndStartTour200ResponseTourconfig {
    return ToolUsertoursFetchAndStartTour200ResponseTourconfigFromJSONTyped(json, false);
}

export function ToolUsertoursFetchAndStartTour200ResponseTourconfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolUsertoursFetchAndStartTour200ResponseTourconfig {
    if (json == null) {
        return json;
    }
    return {
        
        'displaystepnumbers': json['displaystepnumbers'],
        'endtourlabel': json['endtourlabel'],
        'name': json['name'],
        'steps': ((json['steps'] as Array<any>).map(ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerFromJSON)),
    };
}

export function ToolUsertoursFetchAndStartTour200ResponseTourconfigToJSON(value?: ToolUsertoursFetchAndStartTour200ResponseTourconfig | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'displaystepnumbers': value['displaystepnumbers'],
        'endtourlabel': value['endtourlabel'],
        'name': value['name'],
        'steps': ((value['steps'] as Array<any>).map(ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerToJSON)),
    };
}

