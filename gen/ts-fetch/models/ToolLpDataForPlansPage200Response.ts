/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner } from './ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner';
import {
    ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInnerFromJSON,
    ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInnerFromJSONTyped,
    ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInnerToJSON,
} from './ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner';

/**
 * 
 * @export
 * @interface ToolLpDataForPlansPage200Response
 */
export interface ToolLpDataForPlansPage200Response {
    /**
     * Can the current user manage the user's plans
     * @type {boolean}
     * @memberof ToolLpDataForPlansPage200Response
     */
    canmanageuserplans: boolean;
    /**
     * Can the current user view the user's evidence
     * @type {boolean}
     * @memberof ToolLpDataForPlansPage200Response
     */
    canreaduserevidence: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof ToolLpDataForPlansPage200Response
     */
    navigation: Array<object>;
    /**
     * 
     * @type {Array<ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner>}
     * @memberof ToolLpDataForPlansPage200Response
     */
    plans: Array<ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner>;
    /**
     * Url to the tool_lp plugin folder on this Moodle site
     * @type {string}
     * @memberof ToolLpDataForPlansPage200Response
     */
    pluginbaseurl: string;
    /**
     * The learning plan user id
     * @type {number}
     * @memberof ToolLpDataForPlansPage200Response
     */
    userid: number;
}

/**
 * Check if a given object implements the ToolLpDataForPlansPage200Response interface.
 */
export function instanceOfToolLpDataForPlansPage200Response(value: object): boolean {
    if (!('canmanageuserplans' in value)) return false;
    if (!('canreaduserevidence' in value)) return false;
    if (!('navigation' in value)) return false;
    if (!('plans' in value)) return false;
    if (!('pluginbaseurl' in value)) return false;
    if (!('userid' in value)) return false;
    return true;
}

export function ToolLpDataForPlansPage200ResponseFromJSON(json: any): ToolLpDataForPlansPage200Response {
    return ToolLpDataForPlansPage200ResponseFromJSONTyped(json, false);
}

export function ToolLpDataForPlansPage200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForPlansPage200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'canmanageuserplans': json['canmanageuserplans'],
        'canreaduserevidence': json['canreaduserevidence'],
        'navigation': json['navigation'],
        'plans': ((json['plans'] as Array<any>).map(ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInnerFromJSON)),
        'pluginbaseurl': json['pluginbaseurl'],
        'userid': json['userid'],
    };
}

export function ToolLpDataForPlansPage200ResponseToJSON(value?: ToolLpDataForPlansPage200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmanageuserplans': value['canmanageuserplans'],
        'canreaduserevidence': value['canreaduserevidence'],
        'navigation': value['navigation'],
        'plans': ((value['plans'] as Array<any>).map(ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInnerToJSON)),
        'pluginbaseurl': value['pluginbaseurl'],
        'userid': value['userid'],
    };
}

