/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModQuizUpdateFilterConditionRequest
 */
export interface ModQuizUpdateFilterConditionRequest {
    /**
     * The cmid of the quiz
     * @type {number}
     * @memberof ModQuizUpdateFilterConditionRequest
     */
    cmid: number;
    /**
     * Filter condition
     * @type {string}
     * @memberof ModQuizUpdateFilterConditionRequest
     */
    filtercondition: string;
    /**
     * The quiz slot ID for the random question.
     * @type {number}
     * @memberof ModQuizUpdateFilterConditionRequest
     */
    slotid: number;
}

/**
 * Check if a given object implements the ModQuizUpdateFilterConditionRequest interface.
 */
export function instanceOfModQuizUpdateFilterConditionRequest(value: object): boolean {
    if (!('cmid' in value)) return false;
    if (!('filtercondition' in value)) return false;
    if (!('slotid' in value)) return false;
    return true;
}

export function ModQuizUpdateFilterConditionRequestFromJSON(json: any): ModQuizUpdateFilterConditionRequest {
    return ModQuizUpdateFilterConditionRequestFromJSONTyped(json, false);
}

export function ModQuizUpdateFilterConditionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModQuizUpdateFilterConditionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'cmid': json['cmid'],
        'filtercondition': json['filtercondition'],
        'slotid': json['slotid'],
    };
}

export function ModQuizUpdateFilterConditionRequestToJSON(value?: ModQuizUpdateFilterConditionRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cmid': value['cmid'],
        'filtercondition': value['filtercondition'],
        'slotid': value['slotid'],
    };
}

