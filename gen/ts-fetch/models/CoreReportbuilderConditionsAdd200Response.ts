/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInner } from './CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInner';
import {
    CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInnerFromJSON,
    CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInnerFromJSONTyped,
    CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInnerToJSON,
} from './CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInner';

/**
 * 
 * @export
 * @interface CoreReportbuilderConditionsAdd200Response
 */
export interface CoreReportbuilderConditionsAdd200Response {
    /**
     * activeconditionsform
     * @type {string}
     * @memberof CoreReportbuilderConditionsAdd200Response
     */
    activeconditionsform: string;
    /**
     * 
     * @type {Array<CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInner>}
     * @memberof CoreReportbuilderConditionsAdd200Response
     */
    availableconditions: Array<CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInner>;
    /**
     * hasactiveconditions
     * @type {boolean}
     * @memberof CoreReportbuilderConditionsAdd200Response
     */
    hasactiveconditions: boolean;
    /**
     * hasavailableconditions
     * @type {boolean}
     * @memberof CoreReportbuilderConditionsAdd200Response
     */
    hasavailableconditions: boolean;
    /**
     * helpicon
     * @type {string}
     * @memberof CoreReportbuilderConditionsAdd200Response
     */
    helpicon: string;
    /**
     * javascript
     * @type {string}
     * @memberof CoreReportbuilderConditionsAdd200Response
     */
    javascript?: string;
}

/**
 * Check if a given object implements the CoreReportbuilderConditionsAdd200Response interface.
 */
export function instanceOfCoreReportbuilderConditionsAdd200Response(value: object): boolean {
    if (!('activeconditionsform' in value)) return false;
    if (!('availableconditions' in value)) return false;
    if (!('hasactiveconditions' in value)) return false;
    if (!('hasavailableconditions' in value)) return false;
    if (!('helpicon' in value)) return false;
    return true;
}

export function CoreReportbuilderConditionsAdd200ResponseFromJSON(json: any): CoreReportbuilderConditionsAdd200Response {
    return CoreReportbuilderConditionsAdd200ResponseFromJSONTyped(json, false);
}

export function CoreReportbuilderConditionsAdd200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreReportbuilderConditionsAdd200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'activeconditionsform': json['activeconditionsform'],
        'availableconditions': ((json['availableconditions'] as Array<any>).map(CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInnerFromJSON)),
        'hasactiveconditions': json['hasactiveconditions'],
        'hasavailableconditions': json['hasavailableconditions'],
        'helpicon': json['helpicon'],
        'javascript': json['javascript'] == null ? undefined : json['javascript'],
    };
}

export function CoreReportbuilderConditionsAdd200ResponseToJSON(value?: CoreReportbuilderConditionsAdd200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'activeconditionsform': value['activeconditionsform'],
        'availableconditions': ((value['availableconditions'] as Array<any>).map(CoreReportbuilderConditionsAdd200ResponseAvailableconditionsInnerToJSON)),
        'hasactiveconditions': value['hasactiveconditions'],
        'hasavailableconditions': value['hasavailableconditions'],
        'helpicon': value['helpicon'],
        'javascript': value['javascript'],
    };
}

