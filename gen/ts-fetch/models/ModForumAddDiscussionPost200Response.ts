/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';
import type { ModForumAddDiscussionPost200ResponseMessagesInner } from './ModForumAddDiscussionPost200ResponseMessagesInner';
import {
    ModForumAddDiscussionPost200ResponseMessagesInnerFromJSON,
    ModForumAddDiscussionPost200ResponseMessagesInnerFromJSONTyped,
    ModForumAddDiscussionPost200ResponseMessagesInnerToJSON,
} from './ModForumAddDiscussionPost200ResponseMessagesInner';
import type { ModForumAddDiscussionPost200ResponsePost } from './ModForumAddDiscussionPost200ResponsePost';
import {
    ModForumAddDiscussionPost200ResponsePostFromJSON,
    ModForumAddDiscussionPost200ResponsePostFromJSONTyped,
    ModForumAddDiscussionPost200ResponsePostToJSON,
} from './ModForumAddDiscussionPost200ResponsePost';

/**
 * 
 * @export
 * @interface ModForumAddDiscussionPost200Response
 */
export interface ModForumAddDiscussionPost200Response {
    /**
     * 
     * @type {Array<ModForumAddDiscussionPost200ResponseMessagesInner>}
     * @memberof ModForumAddDiscussionPost200Response
     */
    messages?: Array<ModForumAddDiscussionPost200ResponseMessagesInner>;
    /**
     * 
     * @type {ModForumAddDiscussionPost200ResponsePost}
     * @memberof ModForumAddDiscussionPost200Response
     */
    post: ModForumAddDiscussionPost200ResponsePost;
    /**
     * new post id
     * @type {number}
     * @memberof ModForumAddDiscussionPost200Response
     */
    postid: number;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModForumAddDiscussionPost200Response
     */
    warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModForumAddDiscussionPost200Response interface.
 */
export function instanceOfModForumAddDiscussionPost200Response(value: object): boolean {
    if (!('post' in value)) return false;
    if (!('postid' in value)) return false;
    return true;
}

export function ModForumAddDiscussionPost200ResponseFromJSON(json: any): ModForumAddDiscussionPost200Response {
    return ModForumAddDiscussionPost200ResponseFromJSONTyped(json, false);
}

export function ModForumAddDiscussionPost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumAddDiscussionPost200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'messages': json['messages'] == null ? undefined : ((json['messages'] as Array<any>).map(ModForumAddDiscussionPost200ResponseMessagesInnerFromJSON)),
        'post': ModForumAddDiscussionPost200ResponsePostFromJSON(json['post']),
        'postid': json['postid'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModForumAddDiscussionPost200ResponseToJSON(value?: ModForumAddDiscussionPost200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'messages': value['messages'] == null ? undefined : ((value['messages'] as Array<any>).map(ModForumAddDiscussionPost200ResponseMessagesInnerToJSON)),
        'post': ModForumAddDiscussionPost200ResponsePostToJSON(value['post']),
        'postid': value['postid'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

