/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModWikiNewPageRequest
 */
export interface ModWikiNewPageRequest {
    /**
     * Page contents.
     * @type {string}
     * @memberof ModWikiNewPageRequest
     */
    content: string;
    /**
     * Page contents format. If an invalid format is provided, default
     *                     wiki format is used.
     * @type {string}
     * @memberof ModWikiNewPageRequest
     */
    contentformat?: string;
    /**
     * Subwiki's group ID. Used if subwiki does not exists.
     * @type {number}
     * @memberof ModWikiNewPageRequest
     */
    groupid?: number;
    /**
     * Page's subwiki ID.
     * @type {number}
     * @memberof ModWikiNewPageRequest
     */
    subwikiid?: number;
    /**
     * New page title.
     * @type {string}
     * @memberof ModWikiNewPageRequest
     */
    title: string;
    /**
     * Subwiki's user ID. Used if subwiki does not exists.
     * @type {number}
     * @memberof ModWikiNewPageRequest
     */
    userid?: number;
    /**
     * Page's wiki ID. Used if subwiki does not exists.
     * @type {number}
     * @memberof ModWikiNewPageRequest
     */
    wikiid?: number;
}

/**
 * Check if a given object implements the ModWikiNewPageRequest interface.
 */
export function instanceOfModWikiNewPageRequest(value: object): boolean {
    if (!('content' in value)) return false;
    if (!('title' in value)) return false;
    return true;
}

export function ModWikiNewPageRequestFromJSON(json: any): ModWikiNewPageRequest {
    return ModWikiNewPageRequestFromJSONTyped(json, false);
}

export function ModWikiNewPageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModWikiNewPageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'contentformat': json['contentformat'] == null ? undefined : json['contentformat'],
        'groupid': json['groupid'] == null ? undefined : json['groupid'],
        'subwikiid': json['subwikiid'] == null ? undefined : json['subwikiid'],
        'title': json['title'],
        'userid': json['userid'] == null ? undefined : json['userid'],
        'wikiid': json['wikiid'] == null ? undefined : json['wikiid'],
    };
}

export function ModWikiNewPageRequestToJSON(value?: ModWikiNewPageRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'content': value['content'],
        'contentformat': value['contentformat'],
        'groupid': value['groupid'],
        'subwikiid': value['subwikiid'],
        'title': value['title'],
        'userid': value['userid'],
        'wikiid': value['wikiid'],
    };
}

