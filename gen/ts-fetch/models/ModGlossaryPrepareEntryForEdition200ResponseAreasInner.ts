/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInner } from './ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInner';
import {
    ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInnerFromJSON,
    ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInnerFromJSONTyped,
    ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInnerToJSON,
} from './ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInner';

/**
 * 
 * @export
 * @interface ModGlossaryPrepareEntryForEdition200ResponseAreasInner
 */
export interface ModGlossaryPrepareEntryForEdition200ResponseAreasInner {
    /**
     * File area name.
     * @type {string}
     * @memberof ModGlossaryPrepareEntryForEdition200ResponseAreasInner
     */
    area?: string;
    /**
     * 
     * @type {Array<ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInner>}
     * @memberof ModGlossaryPrepareEntryForEdition200ResponseAreasInner
     */
    options?: Array<ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInner>;
}

/**
 * Check if a given object implements the ModGlossaryPrepareEntryForEdition200ResponseAreasInner interface.
 */
export function instanceOfModGlossaryPrepareEntryForEdition200ResponseAreasInner(value: object): boolean {
    return true;
}

export function ModGlossaryPrepareEntryForEdition200ResponseAreasInnerFromJSON(json: any): ModGlossaryPrepareEntryForEdition200ResponseAreasInner {
    return ModGlossaryPrepareEntryForEdition200ResponseAreasInnerFromJSONTyped(json, false);
}

export function ModGlossaryPrepareEntryForEdition200ResponseAreasInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModGlossaryPrepareEntryForEdition200ResponseAreasInner {
    if (json == null) {
        return json;
    }
    return {
        
        'area': json['area'] == null ? undefined : json['area'],
        'options': json['options'] == null ? undefined : ((json['options'] as Array<any>).map(ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInnerFromJSON)),
    };
}

export function ModGlossaryPrepareEntryForEdition200ResponseAreasInnerToJSON(value?: ModGlossaryPrepareEntryForEdition200ResponseAreasInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'area': value['area'],
        'options': value['options'] == null ? undefined : ((value['options'] as Array<any>).map(ModGlossaryPrepareEntryForEdition200ResponseAreasInnerOptionsInnerToJSON)),
    };
}

