/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';
import {
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSONTyped,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON,
} from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';

/**
 * 
 * @export
 * @interface ModDataGetEntry200ResponseEntryContentsInner
 */
export interface ModDataGetEntry200ResponseEntryContentsInner {
    /**
     * Contents.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    content?: string;
    /**
     * Contents.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    content1?: string;
    /**
     * Contents.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    content2?: string;
    /**
     * Contents.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    content3?: string;
    /**
     * Contents.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    content4?: string;
    /**
     * The field type of the content.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    fieldid?: number;
    /**
     * 
     * @type {Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    files?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * Content id.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    id?: number;
    /**
     * The record this content belongs to.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseEntryContentsInner
     */
    recordid?: number;
}

/**
 * Check if a given object implements the ModDataGetEntry200ResponseEntryContentsInner interface.
 */
export function instanceOfModDataGetEntry200ResponseEntryContentsInner(value: object): boolean {
    return true;
}

export function ModDataGetEntry200ResponseEntryContentsInnerFromJSON(json: any): ModDataGetEntry200ResponseEntryContentsInner {
    return ModDataGetEntry200ResponseEntryContentsInnerFromJSONTyped(json, false);
}

export function ModDataGetEntry200ResponseEntryContentsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModDataGetEntry200ResponseEntryContentsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : json['content'],
        'content1': json['content1'] == null ? undefined : json['content1'],
        'content2': json['content2'] == null ? undefined : json['content2'],
        'content3': json['content3'] == null ? undefined : json['content3'],
        'content4': json['content4'] == null ? undefined : json['content4'],
        'fieldid': json['fieldid'] == null ? undefined : json['fieldid'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'recordid': json['recordid'] == null ? undefined : json['recordid'],
    };
}

export function ModDataGetEntry200ResponseEntryContentsInnerToJSON(value?: ModDataGetEntry200ResponseEntryContentsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'content': value['content'],
        'content1': value['content1'],
        'content2': value['content2'],
        'content3': value['content3'],
        'content4': value['content4'],
        'fieldid': value['fieldid'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON)),
        'id': value['id'],
        'recordid': value['recordid'],
    };
}

