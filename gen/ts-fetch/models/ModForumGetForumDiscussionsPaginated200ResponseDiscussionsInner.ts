/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import {
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSONTyped,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON,
} from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';

/**
 * post
 * @export
 * @interface ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
 */
export interface ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner {
    /**
     * Has attachments?
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    attachment?: string;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    attachments?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * Can the user lock the discussion
     * @type {boolean}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    canlock?: boolean;
    /**
     * Can the user reply to the discussion
     * @type {boolean}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    canreply?: boolean;
    /**
     * Creation time
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    created?: number;
    /**
     * Discussion id
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    discussion?: number;
    /**
     * Group id
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    groupid?: number;
    /**
     * Post id
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    id?: number;
    /**
     * Is the discussion locked
     * @type {boolean}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    locked?: boolean;
    /**
     * Mailed?
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    mailed?: number;
    /**
     * Mail now?
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    mailnow?: number;
    /**
     * The post message
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    message?: string;
    /**
     * message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    messageformat?: number;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    messageinlinefiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * Can we trust?
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    messagetrust?: number;
    /**
     * Time modified
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    modified?: number;
    /**
     * Discussion name
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    name?: string;
    /**
     * The number of replies in the discussion
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    numreplies?: number;
    /**
     * The number of unread discussions.
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    numunread?: number;
    /**
     * Parent id
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    parent?: number;
    /**
     * Is the discussion pinned
     * @type {boolean}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    pinned?: boolean;
    /**
     * The post subject
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    subject?: string;
    /**
     * Time discussion ends
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    timeend?: number;
    /**
     * Time modified
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    timemodified?: number;
    /**
     * Time discussion can start
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    timestart?: number;
    /**
     * The post message total score
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    totalscore?: number;
    /**
     * Post author full name
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    userfullname?: string;
    /**
     * User who started the discussion id
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    userid?: number;
    /**
     * The id of the user who last modified
     * @type {number}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    usermodified?: number;
    /**
     * Post modifier full name
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    usermodifiedfullname?: string;
    /**
     * Post modifier picture.
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    usermodifiedpictureurl?: string;
    /**
     * Post author picture.
     * @type {string}
     * @memberof ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner
     */
    userpictureurl?: string;
}

/**
 * Check if a given object implements the ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner interface.
 */
export function instanceOfModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner(value: object): boolean {
    return true;
}

export function ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInnerFromJSON(json: any): ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner {
    return ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInnerFromJSONTyped(json, false);
}

export function ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'attachment': json['attachment'] == null ? undefined : json['attachment'],
        'attachments': json['attachments'] == null ? undefined : ((json['attachments'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'canlock': json['canlock'] == null ? undefined : json['canlock'],
        'canreply': json['canreply'] == null ? undefined : json['canreply'],
        'created': json['created'] == null ? undefined : json['created'],
        'discussion': json['discussion'] == null ? undefined : json['discussion'],
        'groupid': json['groupid'] == null ? undefined : json['groupid'],
        'id': json['id'] == null ? undefined : json['id'],
        'locked': json['locked'] == null ? undefined : json['locked'],
        'mailed': json['mailed'] == null ? undefined : json['mailed'],
        'mailnow': json['mailnow'] == null ? undefined : json['mailnow'],
        'message': json['message'] == null ? undefined : json['message'],
        'messageformat': json['messageformat'] == null ? undefined : json['messageformat'],
        'messageinlinefiles': json['messageinlinefiles'] == null ? undefined : ((json['messageinlinefiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'messagetrust': json['messagetrust'] == null ? undefined : json['messagetrust'],
        'modified': json['modified'] == null ? undefined : json['modified'],
        'name': json['name'] == null ? undefined : json['name'],
        'numreplies': json['numreplies'] == null ? undefined : json['numreplies'],
        'numunread': json['numunread'] == null ? undefined : json['numunread'],
        'parent': json['parent'] == null ? undefined : json['parent'],
        'pinned': json['pinned'] == null ? undefined : json['pinned'],
        'subject': json['subject'] == null ? undefined : json['subject'],
        'timeend': json['timeend'] == null ? undefined : json['timeend'],
        'timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'timestart': json['timestart'] == null ? undefined : json['timestart'],
        'totalscore': json['totalscore'] == null ? undefined : json['totalscore'],
        'userfullname': json['userfullname'] == null ? undefined : json['userfullname'],
        'userid': json['userid'] == null ? undefined : json['userid'],
        'usermodified': json['usermodified'] == null ? undefined : json['usermodified'],
        'usermodifiedfullname': json['usermodifiedfullname'] == null ? undefined : json['usermodifiedfullname'],
        'usermodifiedpictureurl': json['usermodifiedpictureurl'] == null ? undefined : json['usermodifiedpictureurl'],
        'userpictureurl': json['userpictureurl'] == null ? undefined : json['userpictureurl'],
    };
}

export function ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInnerToJSON(value?: ModForumGetForumDiscussionsPaginated200ResponseDiscussionsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attachment': value['attachment'],
        'attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'canlock': value['canlock'],
        'canreply': value['canreply'],
        'created': value['created'],
        'discussion': value['discussion'],
        'groupid': value['groupid'],
        'id': value['id'],
        'locked': value['locked'],
        'mailed': value['mailed'],
        'mailnow': value['mailnow'],
        'message': value['message'],
        'messageformat': value['messageformat'],
        'messageinlinefiles': value['messageinlinefiles'] == null ? undefined : ((value['messageinlinefiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'messagetrust': value['messagetrust'],
        'modified': value['modified'],
        'name': value['name'],
        'numreplies': value['numreplies'],
        'numunread': value['numunread'],
        'parent': value['parent'],
        'pinned': value['pinned'],
        'subject': value['subject'],
        'timeend': value['timeend'],
        'timemodified': value['timemodified'],
        'timestart': value['timestart'],
        'totalscore': value['totalscore'],
        'userfullname': value['userfullname'],
        'userid': value['userid'],
        'usermodified': value['usermodified'],
        'usermodifiedfullname': value['usermodifiedfullname'],
        'usermodifiedpictureurl': value['usermodifiedpictureurl'],
        'userpictureurl': value['userpictureurl'],
    };
}

