/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';
import type { ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner } from './ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner';
import {
    ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerFromJSON,
    ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerFromJSONTyped,
    ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerToJSON,
} from './ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner';

/**
 * 
 * @export
 * @interface ModLessonGetLessonAccessInformation200Response
 */
export interface ModLessonGetLessonAccessInformation200Response {
    /**
     * The number of attempts done by the user.
     * @type {number}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    attemptscount: number;
    /**
     * Whether the user can grade the lesson or not.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    cangrade: boolean;
    /**
     * Whether the user can manage the lesson or not.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    canmanage: boolean;
    /**
     * Whether the user can view the lesson reports or not.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    canviewreports: boolean;
    /**
     * The lesson first page id.
     * @type {number}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    firstpageid: number;
    /**
     * The last page seen id.
     * @type {number}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    lastpageseen: number;
    /**
     * Whether the user left during a timed session.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    leftduringtimedsession: boolean;
    /**
     * 
     * @type {Array<ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner>}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    preventaccessreasons: Array<ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner>;
    /**
     * Whether the lesson is in review mode for the current user.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    reviewmode: boolean;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModLessonGetLessonAccessInformation200Response interface.
 */
export function instanceOfModLessonGetLessonAccessInformation200Response(value: object): boolean {
    if (!('attemptscount' in value)) return false;
    if (!('cangrade' in value)) return false;
    if (!('canmanage' in value)) return false;
    if (!('canviewreports' in value)) return false;
    if (!('firstpageid' in value)) return false;
    if (!('lastpageseen' in value)) return false;
    if (!('leftduringtimedsession' in value)) return false;
    if (!('preventaccessreasons' in value)) return false;
    if (!('reviewmode' in value)) return false;
    return true;
}

export function ModLessonGetLessonAccessInformation200ResponseFromJSON(json: any): ModLessonGetLessonAccessInformation200Response {
    return ModLessonGetLessonAccessInformation200ResponseFromJSONTyped(json, false);
}

export function ModLessonGetLessonAccessInformation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonGetLessonAccessInformation200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'attemptscount': json['attemptscount'],
        'cangrade': json['cangrade'],
        'canmanage': json['canmanage'],
        'canviewreports': json['canviewreports'],
        'firstpageid': json['firstpageid'],
        'lastpageseen': json['lastpageseen'],
        'leftduringtimedsession': json['leftduringtimedsession'],
        'preventaccessreasons': ((json['preventaccessreasons'] as Array<any>).map(ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerFromJSON)),
        'reviewmode': json['reviewmode'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModLessonGetLessonAccessInformation200ResponseToJSON(value?: ModLessonGetLessonAccessInformation200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attemptscount': value['attemptscount'],
        'cangrade': value['cangrade'],
        'canmanage': value['canmanage'],
        'canviewreports': value['canviewreports'],
        'firstpageid': value['firstpageid'],
        'lastpageseen': value['lastpageseen'],
        'leftduringtimedsession': value['leftduringtimedsession'],
        'preventaccessreasons': ((value['preventaccessreasons'] as Array<any>).map(ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerToJSON)),
        'reviewmode': value['reviewmode'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

