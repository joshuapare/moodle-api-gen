/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModLtiCreateToolType200ResponseState } from './ModLtiCreateToolType200ResponseState';
import {
    ModLtiCreateToolType200ResponseStateFromJSON,
    ModLtiCreateToolType200ResponseStateFromJSONTyped,
    ModLtiCreateToolType200ResponseStateToJSON,
} from './ModLtiCreateToolType200ResponseState';
import type { ModLtiCreateToolType200ResponseUrls } from './ModLtiCreateToolType200ResponseUrls';
import {
    ModLtiCreateToolType200ResponseUrlsFromJSON,
    ModLtiCreateToolType200ResponseUrlsFromJSONTyped,
    ModLtiCreateToolType200ResponseUrlsToJSON,
} from './ModLtiCreateToolType200ResponseUrls';

/**
 * 
 * @export
 * @interface ModLtiCreateToolType200Response
 */
export interface ModLtiCreateToolType200Response {
    /**
     * 
     * @type {Array<object>}
     * @memberof ModLtiCreateToolType200Response
     */
    capabilitygroups?: Array<object>;
    /**
     * Client ID
     * @type {string}
     * @memberof ModLtiCreateToolType200Response
     */
    clientid: string;
    /**
     * Tool type course
     * @type {number}
     * @memberof ModLtiCreateToolType200Response
     */
    courseid?: number;
    /**
     * Deployment ID
     * @type {number}
     * @memberof ModLtiCreateToolType200Response
     */
    deploymentid: number;
    /**
     * Tool type description
     * @type {string}
     * @memberof ModLtiCreateToolType200Response
     */
    description: string;
    /**
     * Indicate if capabilitygroups is populated
     * @type {boolean}
     * @memberof ModLtiCreateToolType200Response
     */
    hascapabilitygroups: boolean;
    /**
     * Tool type id
     * @type {number}
     * @memberof ModLtiCreateToolType200Response
     */
    id: number;
    /**
     * The number of times this tool is being used
     * @type {number}
     * @memberof ModLtiCreateToolType200Response
     */
    instancecount: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof ModLtiCreateToolType200Response
     */
    instanceids?: Array<object>;
    /**
     * Tool type name
     * @type {string}
     * @memberof ModLtiCreateToolType200Response
     */
    name: string;
    /**
     * Platform ID
     * @type {string}
     * @memberof ModLtiCreateToolType200Response
     */
    platformid: string;
    /**
     * 
     * @type {ModLtiCreateToolType200ResponseState}
     * @memberof ModLtiCreateToolType200Response
     */
    state: ModLtiCreateToolType200ResponseState;
    /**
     * 
     * @type {ModLtiCreateToolType200ResponseUrls}
     * @memberof ModLtiCreateToolType200Response
     */
    urls: ModLtiCreateToolType200ResponseUrls;
}

/**
 * Check if a given object implements the ModLtiCreateToolType200Response interface.
 */
export function instanceOfModLtiCreateToolType200Response(value: object): boolean {
    if (!('clientid' in value)) return false;
    if (!('deploymentid' in value)) return false;
    if (!('description' in value)) return false;
    if (!('hascapabilitygroups' in value)) return false;
    if (!('id' in value)) return false;
    if (!('instancecount' in value)) return false;
    if (!('name' in value)) return false;
    if (!('platformid' in value)) return false;
    if (!('state' in value)) return false;
    if (!('urls' in value)) return false;
    return true;
}

export function ModLtiCreateToolType200ResponseFromJSON(json: any): ModLtiCreateToolType200Response {
    return ModLtiCreateToolType200ResponseFromJSONTyped(json, false);
}

export function ModLtiCreateToolType200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLtiCreateToolType200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'capabilitygroups': json['capabilitygroups'] == null ? undefined : json['capabilitygroups'],
        'clientid': json['clientid'],
        'courseid': json['courseid'] == null ? undefined : json['courseid'],
        'deploymentid': json['deploymentid'],
        'description': json['description'],
        'hascapabilitygroups': json['hascapabilitygroups'],
        'id': json['id'],
        'instancecount': json['instancecount'],
        'instanceids': json['instanceids'] == null ? undefined : json['instanceids'],
        'name': json['name'],
        'platformid': json['platformid'],
        'state': ModLtiCreateToolType200ResponseStateFromJSON(json['state']),
        'urls': ModLtiCreateToolType200ResponseUrlsFromJSON(json['urls']),
    };
}

export function ModLtiCreateToolType200ResponseToJSON(value?: ModLtiCreateToolType200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'capabilitygroups': value['capabilitygroups'],
        'clientid': value['clientid'],
        'courseid': value['courseid'],
        'deploymentid': value['deploymentid'],
        'description': value['description'],
        'hascapabilitygroups': value['hascapabilitygroups'],
        'id': value['id'],
        'instancecount': value['instancecount'],
        'instanceids': value['instanceids'],
        'name': value['name'],
        'platformid': value['platformid'],
        'state': ModLtiCreateToolType200ResponseStateToJSON(value['state']),
        'urls': ModLtiCreateToolType200ResponseUrlsToJSON(value['urls']),
    };
}

