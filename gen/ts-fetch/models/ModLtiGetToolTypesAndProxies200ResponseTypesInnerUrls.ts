/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
 */
export interface ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls {
    /**
     * Access Token URL
     * @type {string}
     * @memberof ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
     */
    accesstoken: string;
    /**
     * Authorisation Request URL
     * @type {string}
     * @memberof ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
     */
    authrequest: string;
    /**
     * Tool type edit URL
     * @type {string}
     * @memberof ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
     */
    course?: string;
    /**
     * Tool type edit URL
     * @type {string}
     * @memberof ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
     */
    edit: string;
    /**
     * Tool type icon URL
     * @type {string}
     * @memberof ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
     */
    icon: string;
    /**
     * Public Keyset URL
     * @type {string}
     * @memberof ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
     */
    publickeyset: string;
}

/**
 * Check if a given object implements the ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls interface.
 */
export function instanceOfModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls(value: object): boolean {
    if (!('accesstoken' in value)) return false;
    if (!('authrequest' in value)) return false;
    if (!('edit' in value)) return false;
    if (!('icon' in value)) return false;
    if (!('publickeyset' in value)) return false;
    return true;
}

export function ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrlsFromJSON(json: any): ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls {
    return ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrlsFromJSONTyped(json, false);
}

export function ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrlsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls {
    if (json == null) {
        return json;
    }
    return {
        
        'accesstoken': json['accesstoken'],
        'authrequest': json['authrequest'],
        'course': json['course'] == null ? undefined : json['course'],
        'edit': json['edit'],
        'icon': json['icon'],
        'publickeyset': json['publickeyset'],
    };
}

export function ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrlsToJSON(value?: ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accesstoken': value['accesstoken'],
        'authrequest': value['authrequest'],
        'course': value['course'],
        'edit': value['edit'],
        'icon': value['icon'],
        'publickeyset': value['publickeyset'],
    };
}

