/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCohortUpdateCohortsRequestCohortsInner } from './CoreCohortUpdateCohortsRequestCohortsInner';
import {
    CoreCohortUpdateCohortsRequestCohortsInnerFromJSON,
    CoreCohortUpdateCohortsRequestCohortsInnerFromJSONTyped,
    CoreCohortUpdateCohortsRequestCohortsInnerToJSON,
} from './CoreCohortUpdateCohortsRequestCohortsInner';

/**
 * 
 * @export
 * @interface CoreCohortUpdateCohortsRequest
 */
export interface CoreCohortUpdateCohortsRequest {
    /**
     * 
     * @type {Array<CoreCohortUpdateCohortsRequestCohortsInner>}
     * @memberof CoreCohortUpdateCohortsRequest
     */
    cohorts: Array<CoreCohortUpdateCohortsRequestCohortsInner>;
}

/**
 * Check if a given object implements the CoreCohortUpdateCohortsRequest interface.
 */
export function instanceOfCoreCohortUpdateCohortsRequest(value: object): boolean {
    if (!('cohorts' in value)) return false;
    return true;
}

export function CoreCohortUpdateCohortsRequestFromJSON(json: any): CoreCohortUpdateCohortsRequest {
    return CoreCohortUpdateCohortsRequestFromJSONTyped(json, false);
}

export function CoreCohortUpdateCohortsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCohortUpdateCohortsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'cohorts': ((json['cohorts'] as Array<any>).map(CoreCohortUpdateCohortsRequestCohortsInnerFromJSON)),
    };
}

export function CoreCohortUpdateCohortsRequestToJSON(value?: CoreCohortUpdateCohortsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cohorts': ((value['cohorts'] as Array<any>).map(CoreCohortUpdateCohortsRequestCohortsInnerToJSON)),
    };
}

