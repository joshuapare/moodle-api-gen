/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCompetencyCreateCompetencyFramework200Response
 */
export interface CoreCompetencyCreateCompetencyFramework200Response {
    /**
     * canmanage
     * @type {boolean}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    canmanage: boolean;
    /**
     * competenciescount
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    competenciescount: number;
    /**
     * contextid
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    contextid: number;
    /**
     * contextname
     * @type {string}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    contextname: string;
    /**
     * contextnamenoprefix
     * @type {string}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    contextnamenoprefix: string;
    /**
     * description
     * @type {string}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    description: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    descriptionformat?: number;
    /**
     * id
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    id: number;
    /**
     * idnumber
     * @type {string}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    idnumber: string;
    /**
     * scaleconfiguration
     * @type {string}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    scaleconfiguration: string;
    /**
     * scaleid
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    scaleid: number;
    /**
     * shortname
     * @type {string}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    shortname: string;
    /**
     * taxonomies
     * @type {string}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    taxonomies: string;
    /**
     * timecreated
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    timemodified: number;
    /**
     * usermodified
     * @type {number}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    usermodified: number;
    /**
     * visible
     * @type {boolean}
     * @memberof CoreCompetencyCreateCompetencyFramework200Response
     */
    visible: boolean;
}

/**
 * Check if a given object implements the CoreCompetencyCreateCompetencyFramework200Response interface.
 */
export function instanceOfCoreCompetencyCreateCompetencyFramework200Response(value: object): boolean {
    if (!('canmanage' in value)) return false;
    if (!('competenciescount' in value)) return false;
    if (!('contextid' in value)) return false;
    if (!('contextname' in value)) return false;
    if (!('contextnamenoprefix' in value)) return false;
    if (!('description' in value)) return false;
    if (!('id' in value)) return false;
    if (!('idnumber' in value)) return false;
    if (!('scaleconfiguration' in value)) return false;
    if (!('scaleid' in value)) return false;
    if (!('shortname' in value)) return false;
    if (!('taxonomies' in value)) return false;
    if (!('timecreated' in value)) return false;
    if (!('timemodified' in value)) return false;
    if (!('usermodified' in value)) return false;
    if (!('visible' in value)) return false;
    return true;
}

export function CoreCompetencyCreateCompetencyFramework200ResponseFromJSON(json: any): CoreCompetencyCreateCompetencyFramework200Response {
    return CoreCompetencyCreateCompetencyFramework200ResponseFromJSONTyped(json, false);
}

export function CoreCompetencyCreateCompetencyFramework200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompetencyCreateCompetencyFramework200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'canmanage': json['canmanage'],
        'competenciescount': json['competenciescount'],
        'contextid': json['contextid'],
        'contextname': json['contextname'],
        'contextnamenoprefix': json['contextnamenoprefix'],
        'description': json['description'],
        'descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'id': json['id'],
        'idnumber': json['idnumber'],
        'scaleconfiguration': json['scaleconfiguration'],
        'scaleid': json['scaleid'],
        'shortname': json['shortname'],
        'taxonomies': json['taxonomies'],
        'timecreated': json['timecreated'],
        'timemodified': json['timemodified'],
        'usermodified': json['usermodified'],
        'visible': json['visible'],
    };
}

export function CoreCompetencyCreateCompetencyFramework200ResponseToJSON(value?: CoreCompetencyCreateCompetencyFramework200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmanage': value['canmanage'],
        'competenciescount': value['competenciescount'],
        'contextid': value['contextid'],
        'contextname': value['contextname'],
        'contextnamenoprefix': value['contextnamenoprefix'],
        'description': value['description'],
        'descriptionformat': value['descriptionformat'],
        'id': value['id'],
        'idnumber': value['idnumber'],
        'scaleconfiguration': value['scaleconfiguration'],
        'scaleid': value['scaleid'],
        'shortname': value['shortname'],
        'taxonomies': value['taxonomies'],
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'usermodified': value['usermodified'],
        'visible': value['visible'],
    };
}

