/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModForumAddDiscussionPostRequestOptionsInner } from './ModForumAddDiscussionPostRequestOptionsInner';
import {
    ModForumAddDiscussionPostRequestOptionsInnerFromJSON,
    ModForumAddDiscussionPostRequestOptionsInnerFromJSONTyped,
    ModForumAddDiscussionPostRequestOptionsInnerToJSON,
} from './ModForumAddDiscussionPostRequestOptionsInner';

/**
 * 
 * @export
 * @interface ModForumAddDiscussionPostRequest
 */
export interface ModForumAddDiscussionPostRequest {
    /**
     * new post message (html assumed if messageformat is not provided)
     * @type {string}
     * @memberof ModForumAddDiscussionPostRequest
     */
    message: string;
    /**
     * message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModForumAddDiscussionPostRequest
     */
    messageformat?: number;
    /**
     * 
     * @type {Array<ModForumAddDiscussionPostRequestOptionsInner>}
     * @memberof ModForumAddDiscussionPostRequest
     */
    options?: Array<ModForumAddDiscussionPostRequestOptionsInner>;
    /**
     * the post id we are going to reply to
     *                                                 (can be the initial discussion post
     * @type {number}
     * @memberof ModForumAddDiscussionPostRequest
     */
    postid: number;
    /**
     * new post subject
     * @type {string}
     * @memberof ModForumAddDiscussionPostRequest
     */
    subject: string;
}

/**
 * Check if a given object implements the ModForumAddDiscussionPostRequest interface.
 */
export function instanceOfModForumAddDiscussionPostRequest(value: object): boolean {
    if (!('message' in value)) return false;
    if (!('postid' in value)) return false;
    if (!('subject' in value)) return false;
    return true;
}

export function ModForumAddDiscussionPostRequestFromJSON(json: any): ModForumAddDiscussionPostRequest {
    return ModForumAddDiscussionPostRequestFromJSONTyped(json, false);
}

export function ModForumAddDiscussionPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumAddDiscussionPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'messageformat': json['messageformat'] == null ? undefined : json['messageformat'],
        'options': json['options'] == null ? undefined : ((json['options'] as Array<any>).map(ModForumAddDiscussionPostRequestOptionsInnerFromJSON)),
        'postid': json['postid'],
        'subject': json['subject'],
    };
}

export function ModForumAddDiscussionPostRequestToJSON(value?: ModForumAddDiscussionPostRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'message': value['message'],
        'messageformat': value['messageformat'],
        'options': value['options'] == null ? undefined : ((value['options'] as Array<any>).map(ModForumAddDiscussionPostRequestOptionsInnerToJSON)),
        'postid': value['postid'],
        'subject': value['subject'],
    };
}

