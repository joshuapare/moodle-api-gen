/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModAssignGetSubmissionStatus200ResponseLastattemptSubmission } from './ModAssignGetSubmissionStatus200ResponseLastattemptSubmission';
import {
    ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionFromJSON,
    ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionFromJSONTyped,
    ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionToJSON,
} from './ModAssignGetSubmissionStatus200ResponseLastattemptSubmission';
import type { ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission } from './ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission';
import {
    ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmissionFromJSON,
    ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmissionFromJSONTyped,
    ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmissionToJSON,
} from './ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission';

/**
 * 
 * @export
 * @interface ModAssignGetSubmissionStatus200ResponseLastattempt
 */
export interface ModAssignGetSubmissionStatus200ResponseLastattempt {
    /**
     * Whether blind marking is enabled.
     * @type {boolean}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    blindmarking: boolean;
    /**
     * Whether the user can edit the current submission.
     * @type {boolean}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    canedit: boolean;
    /**
     * Whether the owner of the submission can edit it.
     * @type {boolean}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    caneditowner: boolean;
    /**
     * Whether the user can submit.
     * @type {boolean}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    cansubmit: boolean;
    /**
     * Extension due date.
     * @type {number}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    extensionduedate: number;
    /**
     * Whether the submission is graded.
     * @type {boolean}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    graded: boolean;
    /**
     * Grading status.
     * @type {string}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    gradingstatus: string;
    /**
     * Whether new submissions are locked.
     * @type {boolean}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    locked: boolean;
    /**
     * 
     * @type {ModAssignGetSubmissionStatus200ResponseLastattemptSubmission}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    submission?: ModAssignGetSubmissionStatus200ResponseLastattemptSubmission;
    /**
     * The submission group id (for group submissions only).
     * @type {number}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    submissiongroup?: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    submissiongroupmemberswhoneedtosubmit?: Array<object>;
    /**
     * Whether submissions are enabled or not.
     * @type {boolean}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    submissionsenabled: boolean;
    /**
     * 
     * @type {ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    teamsubmission?: ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission;
    /**
     * Time limit for submission.
     * @type {number}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    timelimit?: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof ModAssignGetSubmissionStatus200ResponseLastattempt
     */
    usergroups: Array<object>;
}

/**
 * Check if a given object implements the ModAssignGetSubmissionStatus200ResponseLastattempt interface.
 */
export function instanceOfModAssignGetSubmissionStatus200ResponseLastattempt(value: object): boolean {
    if (!('blindmarking' in value)) return false;
    if (!('canedit' in value)) return false;
    if (!('caneditowner' in value)) return false;
    if (!('cansubmit' in value)) return false;
    if (!('extensionduedate' in value)) return false;
    if (!('graded' in value)) return false;
    if (!('gradingstatus' in value)) return false;
    if (!('locked' in value)) return false;
    if (!('submissionsenabled' in value)) return false;
    if (!('usergroups' in value)) return false;
    return true;
}

export function ModAssignGetSubmissionStatus200ResponseLastattemptFromJSON(json: any): ModAssignGetSubmissionStatus200ResponseLastattempt {
    return ModAssignGetSubmissionStatus200ResponseLastattemptFromJSONTyped(json, false);
}

export function ModAssignGetSubmissionStatus200ResponseLastattemptFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModAssignGetSubmissionStatus200ResponseLastattempt {
    if (json == null) {
        return json;
    }
    return {
        
        'blindmarking': json['blindmarking'],
        'canedit': json['canedit'],
        'caneditowner': json['caneditowner'],
        'cansubmit': json['cansubmit'],
        'extensionduedate': json['extensionduedate'],
        'graded': json['graded'],
        'gradingstatus': json['gradingstatus'],
        'locked': json['locked'],
        'submission': json['submission'] == null ? undefined : ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionFromJSON(json['submission']),
        'submissiongroup': json['submissiongroup'] == null ? undefined : json['submissiongroup'],
        'submissiongroupmemberswhoneedtosubmit': json['submissiongroupmemberswhoneedtosubmit'] == null ? undefined : json['submissiongroupmemberswhoneedtosubmit'],
        'submissionsenabled': json['submissionsenabled'],
        'teamsubmission': json['teamsubmission'] == null ? undefined : ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmissionFromJSON(json['teamsubmission']),
        'timelimit': json['timelimit'] == null ? undefined : json['timelimit'],
        'usergroups': json['usergroups'],
    };
}

export function ModAssignGetSubmissionStatus200ResponseLastattemptToJSON(value?: ModAssignGetSubmissionStatus200ResponseLastattempt | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'blindmarking': value['blindmarking'],
        'canedit': value['canedit'],
        'caneditowner': value['caneditowner'],
        'cansubmit': value['cansubmit'],
        'extensionduedate': value['extensionduedate'],
        'graded': value['graded'],
        'gradingstatus': value['gradingstatus'],
        'locked': value['locked'],
        'submission': ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionToJSON(value['submission']),
        'submissiongroup': value['submissiongroup'],
        'submissiongroupmemberswhoneedtosubmit': value['submissiongroupmemberswhoneedtosubmit'],
        'submissionsenabled': value['submissionsenabled'],
        'teamsubmission': ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmissionToJSON(value['teamsubmission']),
        'timelimit': value['timelimit'],
        'usergroups': value['usergroups'],
    };
}

