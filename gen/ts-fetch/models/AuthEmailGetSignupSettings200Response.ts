/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailGetSignupSettings200ResponseProfilefieldsInner } from './AuthEmailGetSignupSettings200ResponseProfilefieldsInner';
import {
    AuthEmailGetSignupSettings200ResponseProfilefieldsInnerFromJSON,
    AuthEmailGetSignupSettings200ResponseProfilefieldsInnerFromJSONTyped,
    AuthEmailGetSignupSettings200ResponseProfilefieldsInnerToJSON,
} from './AuthEmailGetSignupSettings200ResponseProfilefieldsInner';
import type { AuthEmailGetSignupSettings200ResponseWarningsInner } from './AuthEmailGetSignupSettings200ResponseWarningsInner';
import {
    AuthEmailGetSignupSettings200ResponseWarningsInnerFromJSON,
    AuthEmailGetSignupSettings200ResponseWarningsInnerFromJSONTyped,
    AuthEmailGetSignupSettings200ResponseWarningsInnerToJSON,
} from './AuthEmailGetSignupSettings200ResponseWarningsInner';

/**
 * 
 * @export
 * @interface AuthEmailGetSignupSettings200Response
 */
export interface AuthEmailGetSignupSettings200Response {
    /**
     * Default country
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    country?: string;
    /**
     * Default city
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    defaultcity?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    namefields: Array<object>;
    /**
     * Password policy
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    passwordpolicy?: string;
    /**
     * 
     * @type {Array<AuthEmailGetSignupSettings200ResponseProfilefieldsInner>}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    profilefields?: Array<AuthEmailGetSignupSettings200ResponseProfilefieldsInner>;
    /**
     * Recaptcha challenge hash
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    recaptchachallengehash?: string;
    /**
     * Recaptcha challenge noscript image
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    recaptchachallengeimage?: string;
    /**
     * Recaptcha challenge js url
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    recaptchachallengejs?: string;
    /**
     * Recaptcha public key
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    recaptchapublickey?: string;
    /**
     * Site policy
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    sitepolicy?: string;
    /**
     * Site policy handler
     * @type {string}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    sitepolicyhandler?: string;
    /**
     * 
     * @type {Array<AuthEmailGetSignupSettings200ResponseWarningsInner>}
     * @memberof AuthEmailGetSignupSettings200Response
     */
    warnings?: Array<AuthEmailGetSignupSettings200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the AuthEmailGetSignupSettings200Response interface.
 */
export function instanceOfAuthEmailGetSignupSettings200Response(value: object): boolean {
    if (!('namefields' in value)) return false;
    return true;
}

export function AuthEmailGetSignupSettings200ResponseFromJSON(json: any): AuthEmailGetSignupSettings200Response {
    return AuthEmailGetSignupSettings200ResponseFromJSONTyped(json, false);
}

export function AuthEmailGetSignupSettings200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthEmailGetSignupSettings200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'country': json['country'] == null ? undefined : json['country'],
        'defaultcity': json['defaultcity'] == null ? undefined : json['defaultcity'],
        'namefields': json['namefields'],
        'passwordpolicy': json['passwordpolicy'] == null ? undefined : json['passwordpolicy'],
        'profilefields': json['profilefields'] == null ? undefined : ((json['profilefields'] as Array<any>).map(AuthEmailGetSignupSettings200ResponseProfilefieldsInnerFromJSON)),
        'recaptchachallengehash': json['recaptchachallengehash'] == null ? undefined : json['recaptchachallengehash'],
        'recaptchachallengeimage': json['recaptchachallengeimage'] == null ? undefined : json['recaptchachallengeimage'],
        'recaptchachallengejs': json['recaptchachallengejs'] == null ? undefined : json['recaptchachallengejs'],
        'recaptchapublickey': json['recaptchapublickey'] == null ? undefined : json['recaptchapublickey'],
        'sitepolicy': json['sitepolicy'] == null ? undefined : json['sitepolicy'],
        'sitepolicyhandler': json['sitepolicyhandler'] == null ? undefined : json['sitepolicyhandler'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailGetSignupSettings200ResponseWarningsInnerFromJSON)),
    };
}

export function AuthEmailGetSignupSettings200ResponseToJSON(value?: AuthEmailGetSignupSettings200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'country': value['country'],
        'defaultcity': value['defaultcity'],
        'namefields': value['namefields'],
        'passwordpolicy': value['passwordpolicy'],
        'profilefields': value['profilefields'] == null ? undefined : ((value['profilefields'] as Array<any>).map(AuthEmailGetSignupSettings200ResponseProfilefieldsInnerToJSON)),
        'recaptchachallengehash': value['recaptchachallengehash'],
        'recaptchachallengeimage': value['recaptchachallengeimage'],
        'recaptchachallengejs': value['recaptchachallengejs'],
        'recaptchapublickey': value['recaptchapublickey'],
        'sitepolicy': value['sitepolicy'],
        'sitepolicyhandler': value['sitepolicyhandler'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailGetSignupSettings200ResponseWarningsInnerToJSON)),
    };
}

