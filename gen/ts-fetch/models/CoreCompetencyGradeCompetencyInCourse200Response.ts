/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCompetencyGradeCompetency200ResponseActionuser } from './CoreCompetencyGradeCompetency200ResponseActionuser';
import {
    CoreCompetencyGradeCompetency200ResponseActionuserFromJSON,
    CoreCompetencyGradeCompetency200ResponseActionuserFromJSONTyped,
    CoreCompetencyGradeCompetency200ResponseActionuserToJSON,
} from './CoreCompetencyGradeCompetency200ResponseActionuser';

/**
 * 
 * @export
 * @interface CoreCompetencyGradeCompetencyInCourse200Response
 */
export interface CoreCompetencyGradeCompetencyInCourse200Response {
    /**
     * action
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    action: number;
    /**
     * 
     * @type {CoreCompetencyGradeCompetency200ResponseActionuser}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    actionuser?: CoreCompetencyGradeCompetency200ResponseActionuser;
    /**
     * actionuserid
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    actionuserid: number;
    /**
     * candelete
     * @type {boolean}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    candelete: boolean;
    /**
     * contextid
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    contextid: number;
    /**
     * desca
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    desca: string;
    /**
     * desccomponent
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    desccomponent: string;
    /**
     * descidentifier
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    descidentifier: string;
    /**
     * description
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    description: string;
    /**
     * grade
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    grade: number;
    /**
     * gradename
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    gradename: string;
    /**
     * id
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    id: number;
    /**
     * note
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    note: string;
    /**
     * timecreated
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    timemodified: number;
    /**
     * url
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    url: string;
    /**
     * usercompetencyid
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    usercompetencyid: number;
    /**
     * userdate
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    userdate: string;
    /**
     * usermodified
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    usermodified: number;
}

/**
 * Check if a given object implements the CoreCompetencyGradeCompetencyInCourse200Response interface.
 */
export function instanceOfCoreCompetencyGradeCompetencyInCourse200Response(value: object): boolean {
    if (!('action' in value)) return false;
    if (!('actionuserid' in value)) return false;
    if (!('candelete' in value)) return false;
    if (!('contextid' in value)) return false;
    if (!('desca' in value)) return false;
    if (!('desccomponent' in value)) return false;
    if (!('descidentifier' in value)) return false;
    if (!('description' in value)) return false;
    if (!('grade' in value)) return false;
    if (!('gradename' in value)) return false;
    if (!('id' in value)) return false;
    if (!('note' in value)) return false;
    if (!('timecreated' in value)) return false;
    if (!('timemodified' in value)) return false;
    if (!('url' in value)) return false;
    if (!('usercompetencyid' in value)) return false;
    if (!('userdate' in value)) return false;
    if (!('usermodified' in value)) return false;
    return true;
}

export function CoreCompetencyGradeCompetencyInCourse200ResponseFromJSON(json: any): CoreCompetencyGradeCompetencyInCourse200Response {
    return CoreCompetencyGradeCompetencyInCourse200ResponseFromJSONTyped(json, false);
}

export function CoreCompetencyGradeCompetencyInCourse200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompetencyGradeCompetencyInCourse200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'action': json['action'],
        'actionuser': json['actionuser'] == null ? undefined : CoreCompetencyGradeCompetency200ResponseActionuserFromJSON(json['actionuser']),
        'actionuserid': json['actionuserid'],
        'candelete': json['candelete'],
        'contextid': json['contextid'],
        'desca': json['desca'],
        'desccomponent': json['desccomponent'],
        'descidentifier': json['descidentifier'],
        'description': json['description'],
        'grade': json['grade'],
        'gradename': json['gradename'],
        'id': json['id'],
        'note': json['note'],
        'timecreated': json['timecreated'],
        'timemodified': json['timemodified'],
        'url': json['url'],
        'usercompetencyid': json['usercompetencyid'],
        'userdate': json['userdate'],
        'usermodified': json['usermodified'],
    };
}

export function CoreCompetencyGradeCompetencyInCourse200ResponseToJSON(value?: CoreCompetencyGradeCompetencyInCourse200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'action': value['action'],
        'actionuser': CoreCompetencyGradeCompetency200ResponseActionuserToJSON(value['actionuser']),
        'actionuserid': value['actionuserid'],
        'candelete': value['candelete'],
        'contextid': value['contextid'],
        'desca': value['desca'],
        'desccomponent': value['desccomponent'],
        'descidentifier': value['descidentifier'],
        'description': value['description'],
        'grade': value['grade'],
        'gradename': value['gradename'],
        'id': value['id'],
        'note': value['note'],
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'url': value['url'],
        'usercompetencyid': value['usercompetencyid'],
        'userdate': value['userdate'],
        'usermodified': value['usermodified'],
    };
}

