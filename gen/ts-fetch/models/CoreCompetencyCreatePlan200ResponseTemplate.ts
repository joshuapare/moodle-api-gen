/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCompetencyCreatePlan200ResponseTemplate
 */
export interface CoreCompetencyCreatePlan200ResponseTemplate {
    /**
     * canmanage
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    canmanage: boolean;
    /**
     * canread
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    canread: boolean;
    /**
     * cohortscount
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    cohortscount: number;
    /**
     * contextid
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    contextid: number;
    /**
     * contextname
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    contextname: string;
    /**
     * contextnamenoprefix
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    contextnamenoprefix: string;
    /**
     * description
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    description: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    descriptionformat?: number;
    /**
     * duedate
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    duedate: number;
    /**
     * duedateformatted
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    duedateformatted: string;
    /**
     * id
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    id: number;
    /**
     * planscount
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    planscount: number;
    /**
     * shortname
     * @type {string}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    shortname: string;
    /**
     * timecreated
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    timemodified: number;
    /**
     * usermodified
     * @type {number}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    usermodified: number;
    /**
     * visible
     * @type {boolean}
     * @memberof CoreCompetencyCreatePlan200ResponseTemplate
     */
    visible: boolean;
}

/**
 * Check if a given object implements the CoreCompetencyCreatePlan200ResponseTemplate interface.
 */
export function instanceOfCoreCompetencyCreatePlan200ResponseTemplate(value: object): boolean {
    if (!('canmanage' in value)) return false;
    if (!('canread' in value)) return false;
    if (!('cohortscount' in value)) return false;
    if (!('contextid' in value)) return false;
    if (!('contextname' in value)) return false;
    if (!('contextnamenoprefix' in value)) return false;
    if (!('description' in value)) return false;
    if (!('duedate' in value)) return false;
    if (!('duedateformatted' in value)) return false;
    if (!('id' in value)) return false;
    if (!('planscount' in value)) return false;
    if (!('shortname' in value)) return false;
    if (!('timecreated' in value)) return false;
    if (!('timemodified' in value)) return false;
    if (!('usermodified' in value)) return false;
    if (!('visible' in value)) return false;
    return true;
}

export function CoreCompetencyCreatePlan200ResponseTemplateFromJSON(json: any): CoreCompetencyCreatePlan200ResponseTemplate {
    return CoreCompetencyCreatePlan200ResponseTemplateFromJSONTyped(json, false);
}

export function CoreCompetencyCreatePlan200ResponseTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompetencyCreatePlan200ResponseTemplate {
    if (json == null) {
        return json;
    }
    return {
        
        'canmanage': json['canmanage'],
        'canread': json['canread'],
        'cohortscount': json['cohortscount'],
        'contextid': json['contextid'],
        'contextname': json['contextname'],
        'contextnamenoprefix': json['contextnamenoprefix'],
        'description': json['description'],
        'descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'duedate': json['duedate'],
        'duedateformatted': json['duedateformatted'],
        'id': json['id'],
        'planscount': json['planscount'],
        'shortname': json['shortname'],
        'timecreated': json['timecreated'],
        'timemodified': json['timemodified'],
        'usermodified': json['usermodified'],
        'visible': json['visible'],
    };
}

export function CoreCompetencyCreatePlan200ResponseTemplateToJSON(value?: CoreCompetencyCreatePlan200ResponseTemplate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmanage': value['canmanage'],
        'canread': value['canread'],
        'cohortscount': value['cohortscount'],
        'contextid': value['contextid'],
        'contextname': value['contextname'],
        'contextnamenoprefix': value['contextnamenoprefix'],
        'description': value['description'],
        'descriptionformat': value['descriptionformat'],
        'duedate': value['duedate'],
        'duedateformatted': value['duedateformatted'],
        'id': value['id'],
        'planscount': value['planscount'],
        'shortname': value['shortname'],
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'usermodified': value['usermodified'],
        'visible': value['visible'],
    };
}

