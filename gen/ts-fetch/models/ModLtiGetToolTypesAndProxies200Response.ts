/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModLtiGetToolTypesAndProxies200ResponseProxiesInner } from './ModLtiGetToolTypesAndProxies200ResponseProxiesInner';
import {
    ModLtiGetToolTypesAndProxies200ResponseProxiesInnerFromJSON,
    ModLtiGetToolTypesAndProxies200ResponseProxiesInnerFromJSONTyped,
    ModLtiGetToolTypesAndProxies200ResponseProxiesInnerToJSON,
} from './ModLtiGetToolTypesAndProxies200ResponseProxiesInner';
import type { ModLtiGetToolTypesAndProxies200ResponseTypesInner } from './ModLtiGetToolTypesAndProxies200ResponseTypesInner';
import {
    ModLtiGetToolTypesAndProxies200ResponseTypesInnerFromJSON,
    ModLtiGetToolTypesAndProxies200ResponseTypesInnerFromJSONTyped,
    ModLtiGetToolTypesAndProxies200ResponseTypesInnerToJSON,
} from './ModLtiGetToolTypesAndProxies200ResponseTypesInner';

/**
 * 
 * @export
 * @interface ModLtiGetToolTypesAndProxies200Response
 */
export interface ModLtiGetToolTypesAndProxies200Response {
    /**
     * Limit of how many tool types to show
     * @type {number}
     * @memberof ModLtiGetToolTypesAndProxies200Response
     */
    limit?: number;
    /**
     * Offset of tool types
     * @type {number}
     * @memberof ModLtiGetToolTypesAndProxies200Response
     */
    offset?: number;
    /**
     * 
     * @type {Array<ModLtiGetToolTypesAndProxies200ResponseProxiesInner>}
     * @memberof ModLtiGetToolTypesAndProxies200Response
     */
    proxies: Array<ModLtiGetToolTypesAndProxies200ResponseProxiesInner>;
    /**
     * 
     * @type {Array<ModLtiGetToolTypesAndProxies200ResponseTypesInner>}
     * @memberof ModLtiGetToolTypesAndProxies200Response
     */
    types: Array<ModLtiGetToolTypesAndProxies200ResponseTypesInner>;
}

/**
 * Check if a given object implements the ModLtiGetToolTypesAndProxies200Response interface.
 */
export function instanceOfModLtiGetToolTypesAndProxies200Response(value: object): boolean {
    if (!('proxies' in value)) return false;
    if (!('types' in value)) return false;
    return true;
}

export function ModLtiGetToolTypesAndProxies200ResponseFromJSON(json: any): ModLtiGetToolTypesAndProxies200Response {
    return ModLtiGetToolTypesAndProxies200ResponseFromJSONTyped(json, false);
}

export function ModLtiGetToolTypesAndProxies200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLtiGetToolTypesAndProxies200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'limit': json['limit'] == null ? undefined : json['limit'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'proxies': ((json['proxies'] as Array<any>).map(ModLtiGetToolTypesAndProxies200ResponseProxiesInnerFromJSON)),
        'types': ((json['types'] as Array<any>).map(ModLtiGetToolTypesAndProxies200ResponseTypesInnerFromJSON)),
    };
}

export function ModLtiGetToolTypesAndProxies200ResponseToJSON(value?: ModLtiGetToolTypesAndProxies200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'limit': value['limit'],
        'offset': value['offset'],
        'proxies': ((value['proxies'] as Array<any>).map(ModLtiGetToolTypesAndProxies200ResponseProxiesInnerToJSON)),
        'types': ((value['types'] as Array<any>).map(ModLtiGetToolTypesAndProxies200ResponseTypesInnerToJSON)),
    };
}

