/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModDataGetEntry200ResponseRatinginfoRatingsInner } from './ModDataGetEntry200ResponseRatinginfoRatingsInner';
import {
    ModDataGetEntry200ResponseRatinginfoRatingsInnerFromJSON,
    ModDataGetEntry200ResponseRatinginfoRatingsInnerFromJSONTyped,
    ModDataGetEntry200ResponseRatinginfoRatingsInnerToJSON,
} from './ModDataGetEntry200ResponseRatinginfoRatingsInner';
import type { ModDataGetEntry200ResponseRatinginfoScalesInner } from './ModDataGetEntry200ResponseRatinginfoScalesInner';
import {
    ModDataGetEntry200ResponseRatinginfoScalesInnerFromJSON,
    ModDataGetEntry200ResponseRatinginfoScalesInnerFromJSONTyped,
    ModDataGetEntry200ResponseRatinginfoScalesInnerToJSON,
} from './ModDataGetEntry200ResponseRatinginfoScalesInner';

/**
 * 
 * @export
 * @interface ModDataGetEntry200ResponseRatinginfo
 */
export interface ModDataGetEntry200ResponseRatinginfo {
    /**
     * Whether the user can view all the individual ratings.
     * @type {boolean}
     * @memberof ModDataGetEntry200ResponseRatinginfo
     */
    canviewall?: boolean;
    /**
     * Whether the user can view aggregate of ratings of others.
     * @type {boolean}
     * @memberof ModDataGetEntry200ResponseRatinginfo
     */
    canviewany?: boolean;
    /**
     * Context name.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseRatinginfo
     */
    component: string;
    /**
     * Context id.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseRatinginfo
     */
    contextid: number;
    /**
     * Rating area name.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseRatinginfo
     */
    ratingarea: string;
    /**
     * 
     * @type {Array<ModDataGetEntry200ResponseRatinginfoRatingsInner>}
     * @memberof ModDataGetEntry200ResponseRatinginfo
     */
    ratings?: Array<ModDataGetEntry200ResponseRatinginfoRatingsInner>;
    /**
     * 
     * @type {Array<ModDataGetEntry200ResponseRatinginfoScalesInner>}
     * @memberof ModDataGetEntry200ResponseRatinginfo
     */
    scales?: Array<ModDataGetEntry200ResponseRatinginfoScalesInner>;
}

/**
 * Check if a given object implements the ModDataGetEntry200ResponseRatinginfo interface.
 */
export function instanceOfModDataGetEntry200ResponseRatinginfo(value: object): boolean {
    if (!('component' in value)) return false;
    if (!('contextid' in value)) return false;
    if (!('ratingarea' in value)) return false;
    return true;
}

export function ModDataGetEntry200ResponseRatinginfoFromJSON(json: any): ModDataGetEntry200ResponseRatinginfo {
    return ModDataGetEntry200ResponseRatinginfoFromJSONTyped(json, false);
}

export function ModDataGetEntry200ResponseRatinginfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModDataGetEntry200ResponseRatinginfo {
    if (json == null) {
        return json;
    }
    return {
        
        'canviewall': json['canviewall'] == null ? undefined : json['canviewall'],
        'canviewany': json['canviewany'] == null ? undefined : json['canviewany'],
        'component': json['component'],
        'contextid': json['contextid'],
        'ratingarea': json['ratingarea'],
        'ratings': json['ratings'] == null ? undefined : ((json['ratings'] as Array<any>).map(ModDataGetEntry200ResponseRatinginfoRatingsInnerFromJSON)),
        'scales': json['scales'] == null ? undefined : ((json['scales'] as Array<any>).map(ModDataGetEntry200ResponseRatinginfoScalesInnerFromJSON)),
    };
}

export function ModDataGetEntry200ResponseRatinginfoToJSON(value?: ModDataGetEntry200ResponseRatinginfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canviewall': value['canviewall'],
        'canviewany': value['canviewany'],
        'component': value['component'],
        'contextid': value['contextid'],
        'ratingarea': value['ratingarea'],
        'ratings': value['ratings'] == null ? undefined : ((value['ratings'] as Array<any>).map(ModDataGetEntry200ResponseRatinginfoRatingsInnerToJSON)),
        'scales': value['scales'] == null ? undefined : ((value['scales'] as Array<any>).map(ModDataGetEntry200ResponseRatinginfoScalesInnerToJSON)),
    };
}

