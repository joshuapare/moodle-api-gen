/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';

/**
 * 
 * @export
 * @interface ModForumGetForumAccessInformation200Response
 */
export interface ModForumGetForumAccessInformation200Response {
    /**
     * Whether the user has the capability mod/forum:addinstance allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canaddinstance?: boolean;
    /**
     * Whether the user has the capability mod/forum:addnews allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canaddnews?: boolean;
    /**
     * Whether the user has the capability mod/forum:addquestion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canaddquestion?: boolean;
    /**
     * Whether the user has the capability mod/forum:allowforcesubscribe allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canallowforcesubscribe?: boolean;
    /**
     * Whether the user has the capability mod/forum:canmailnow allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cancanmailnow?: boolean;
    /**
     * Whether the user has the capability mod/forum:canoverridecutoff allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cancanoverridecutoff?: boolean;
    /**
     * Whether the user has the capability mod/forum:canoverridediscussionlock allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cancanoverridediscussionlock?: boolean;
    /**
     * Whether the user has the capability mod/forum:canposttomygroups allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cancanposttomygroups?: boolean;
    /**
     * Whether the user has the capability mod/forum:cantogglefavourite allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cancantogglefavourite?: boolean;
    /**
     * Whether the user has the capability mod/forum:createattachment allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cancreateattachment?: boolean;
    /**
     * Whether the user has the capability mod/forum:deleteanypost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    candeleteanypost?: boolean;
    /**
     * Whether the user has the capability mod/forum:deleteownpost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    candeleteownpost?: boolean;
    /**
     * Whether the user has the capability mod/forum:editanypost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    caneditanypost?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportdiscussion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canexportdiscussion?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportforum allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canexportforum?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportownpost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canexportownpost?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportpost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canexportpost?: boolean;
    /**
     * Whether the user has the capability mod/forum:grade allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cangrade?: boolean;
    /**
     * Whether the user has the capability mod/forum:managesubscriptions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canmanagesubscriptions?: boolean;
    /**
     * Whether the user has the capability mod/forum:movediscussions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canmovediscussions?: boolean;
    /**
     * Whether the user has the capability mod/forum:pindiscussions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canpindiscussions?: boolean;
    /**
     * Whether the user has the capability mod/forum:postprivatereply allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canpostprivatereply?: boolean;
    /**
     * Whether the user has the capability mod/forum:postwithoutthrottling allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canpostwithoutthrottling?: boolean;
    /**
     * Whether the user has the capability mod/forum:rate allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canrate?: boolean;
    /**
     * Whether the user has the capability mod/forum:readprivatereplies allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canreadprivatereplies?: boolean;
    /**
     * Whether the user has the capability mod/forum:replynews allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canreplynews?: boolean;
    /**
     * Whether the user has the capability mod/forum:replypost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canreplypost?: boolean;
    /**
     * Whether the user has the capability mod/forum:splitdiscussions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    cansplitdiscussions?: boolean;
    /**
     * Whether the user has the capability mod/forum:startdiscussion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canstartdiscussion?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewallratings allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canviewallratings?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewanyrating allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canviewanyrating?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewdiscussion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canviewdiscussion?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewhiddentimedposts allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canviewhiddentimedposts?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewqandawithoutposting allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canviewqandawithoutposting?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewrating allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canviewrating?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewsubscribers allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    canviewsubscribers?: boolean;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModForumGetForumAccessInformation200Response interface.
 */
export function instanceOfModForumGetForumAccessInformation200Response(value: object): boolean {
    return true;
}

export function ModForumGetForumAccessInformation200ResponseFromJSON(json: any): ModForumGetForumAccessInformation200Response {
    return ModForumGetForumAccessInformation200ResponseFromJSONTyped(json, false);
}

export function ModForumGetForumAccessInformation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumGetForumAccessInformation200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'canaddinstance': json['canaddinstance'] == null ? undefined : json['canaddinstance'],
        'canaddnews': json['canaddnews'] == null ? undefined : json['canaddnews'],
        'canaddquestion': json['canaddquestion'] == null ? undefined : json['canaddquestion'],
        'canallowforcesubscribe': json['canallowforcesubscribe'] == null ? undefined : json['canallowforcesubscribe'],
        'cancanmailnow': json['cancanmailnow'] == null ? undefined : json['cancanmailnow'],
        'cancanoverridecutoff': json['cancanoverridecutoff'] == null ? undefined : json['cancanoverridecutoff'],
        'cancanoverridediscussionlock': json['cancanoverridediscussionlock'] == null ? undefined : json['cancanoverridediscussionlock'],
        'cancanposttomygroups': json['cancanposttomygroups'] == null ? undefined : json['cancanposttomygroups'],
        'cancantogglefavourite': json['cancantogglefavourite'] == null ? undefined : json['cancantogglefavourite'],
        'cancreateattachment': json['cancreateattachment'] == null ? undefined : json['cancreateattachment'],
        'candeleteanypost': json['candeleteanypost'] == null ? undefined : json['candeleteanypost'],
        'candeleteownpost': json['candeleteownpost'] == null ? undefined : json['candeleteownpost'],
        'caneditanypost': json['caneditanypost'] == null ? undefined : json['caneditanypost'],
        'canexportdiscussion': json['canexportdiscussion'] == null ? undefined : json['canexportdiscussion'],
        'canexportforum': json['canexportforum'] == null ? undefined : json['canexportforum'],
        'canexportownpost': json['canexportownpost'] == null ? undefined : json['canexportownpost'],
        'canexportpost': json['canexportpost'] == null ? undefined : json['canexportpost'],
        'cangrade': json['cangrade'] == null ? undefined : json['cangrade'],
        'canmanagesubscriptions': json['canmanagesubscriptions'] == null ? undefined : json['canmanagesubscriptions'],
        'canmovediscussions': json['canmovediscussions'] == null ? undefined : json['canmovediscussions'],
        'canpindiscussions': json['canpindiscussions'] == null ? undefined : json['canpindiscussions'],
        'canpostprivatereply': json['canpostprivatereply'] == null ? undefined : json['canpostprivatereply'],
        'canpostwithoutthrottling': json['canpostwithoutthrottling'] == null ? undefined : json['canpostwithoutthrottling'],
        'canrate': json['canrate'] == null ? undefined : json['canrate'],
        'canreadprivatereplies': json['canreadprivatereplies'] == null ? undefined : json['canreadprivatereplies'],
        'canreplynews': json['canreplynews'] == null ? undefined : json['canreplynews'],
        'canreplypost': json['canreplypost'] == null ? undefined : json['canreplypost'],
        'cansplitdiscussions': json['cansplitdiscussions'] == null ? undefined : json['cansplitdiscussions'],
        'canstartdiscussion': json['canstartdiscussion'] == null ? undefined : json['canstartdiscussion'],
        'canviewallratings': json['canviewallratings'] == null ? undefined : json['canviewallratings'],
        'canviewanyrating': json['canviewanyrating'] == null ? undefined : json['canviewanyrating'],
        'canviewdiscussion': json['canviewdiscussion'] == null ? undefined : json['canviewdiscussion'],
        'canviewhiddentimedposts': json['canviewhiddentimedposts'] == null ? undefined : json['canviewhiddentimedposts'],
        'canviewqandawithoutposting': json['canviewqandawithoutposting'] == null ? undefined : json['canviewqandawithoutposting'],
        'canviewrating': json['canviewrating'] == null ? undefined : json['canviewrating'],
        'canviewsubscribers': json['canviewsubscribers'] == null ? undefined : json['canviewsubscribers'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModForumGetForumAccessInformation200ResponseToJSON(value?: ModForumGetForumAccessInformation200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canaddinstance': value['canaddinstance'],
        'canaddnews': value['canaddnews'],
        'canaddquestion': value['canaddquestion'],
        'canallowforcesubscribe': value['canallowforcesubscribe'],
        'cancanmailnow': value['cancanmailnow'],
        'cancanoverridecutoff': value['cancanoverridecutoff'],
        'cancanoverridediscussionlock': value['cancanoverridediscussionlock'],
        'cancanposttomygroups': value['cancanposttomygroups'],
        'cancantogglefavourite': value['cancantogglefavourite'],
        'cancreateattachment': value['cancreateattachment'],
        'candeleteanypost': value['candeleteanypost'],
        'candeleteownpost': value['candeleteownpost'],
        'caneditanypost': value['caneditanypost'],
        'canexportdiscussion': value['canexportdiscussion'],
        'canexportforum': value['canexportforum'],
        'canexportownpost': value['canexportownpost'],
        'canexportpost': value['canexportpost'],
        'cangrade': value['cangrade'],
        'canmanagesubscriptions': value['canmanagesubscriptions'],
        'canmovediscussions': value['canmovediscussions'],
        'canpindiscussions': value['canpindiscussions'],
        'canpostprivatereply': value['canpostprivatereply'],
        'canpostwithoutthrottling': value['canpostwithoutthrottling'],
        'canrate': value['canrate'],
        'canreadprivatereplies': value['canreadprivatereplies'],
        'canreplynews': value['canreplynews'],
        'canreplypost': value['canreplypost'],
        'cansplitdiscussions': value['cansplitdiscussions'],
        'canstartdiscussion': value['canstartdiscussion'],
        'canviewallratings': value['canviewallratings'],
        'canviewanyrating': value['canviewanyrating'],
        'canviewdiscussion': value['canviewdiscussion'],
        'canviewhiddentimedposts': value['canviewhiddentimedposts'],
        'canviewqandawithoutposting': value['canviewqandawithoutposting'],
        'canviewrating': value['canviewrating'],
        'canviewsubscribers': value['canviewsubscribers'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

