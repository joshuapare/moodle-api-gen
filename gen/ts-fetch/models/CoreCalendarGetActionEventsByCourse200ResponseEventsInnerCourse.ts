/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
 */
export interface CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse {
    /**
     * coursecategory
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    coursecategory: string;
    /**
     * courseimage
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    courseimage: string;
    /**
     * enddate
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    enddate: number;
    /**
     * fullname
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    fullname: string;
    /**
     * fullnamedisplay
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    fullnamedisplay: string;
    /**
     * hasprogress
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    hasprogress: boolean;
    /**
     * hidden
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    hidden: boolean;
    /**
     * id
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    id: number;
    /**
     * idnumber
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    idnumber: string;
    /**
     * isfavourite
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    isfavourite: boolean;
    /**
     * pdfexportfont
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    pdfexportfont: string;
    /**
     * progress
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    progress?: number;
    /**
     * shortname
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    shortname: string;
    /**
     * showactivitydates
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    showactivitydates: boolean;
    /**
     * showcompletionconditions
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    showcompletionconditions: boolean;
    /**
     * showshortname
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    showshortname: boolean;
    /**
     * startdate
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    startdate: number;
    /**
     * summary
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    summary: string;
    /**
     * summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    summaryformat: number;
    /**
     * timeaccess
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    timeaccess?: number;
    /**
     * viewurl
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    viewurl: string;
    /**
     * visible
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse
     */
    visible: boolean;
}

/**
 * Check if a given object implements the CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse interface.
 */
export function instanceOfCoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse(value: object): boolean {
    if (!('coursecategory' in value)) return false;
    if (!('courseimage' in value)) return false;
    if (!('enddate' in value)) return false;
    if (!('fullname' in value)) return false;
    if (!('fullnamedisplay' in value)) return false;
    if (!('hasprogress' in value)) return false;
    if (!('hidden' in value)) return false;
    if (!('id' in value)) return false;
    if (!('idnumber' in value)) return false;
    if (!('isfavourite' in value)) return false;
    if (!('pdfexportfont' in value)) return false;
    if (!('shortname' in value)) return false;
    if (!('showactivitydates' in value)) return false;
    if (!('showcompletionconditions' in value)) return false;
    if (!('showshortname' in value)) return false;
    if (!('startdate' in value)) return false;
    if (!('summary' in value)) return false;
    if (!('summaryformat' in value)) return false;
    if (!('viewurl' in value)) return false;
    if (!('visible' in value)) return false;
    return true;
}

export function CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseFromJSON(json: any): CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse {
    return CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseFromJSONTyped(json, false);
}

export function CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse {
    if (json == null) {
        return json;
    }
    return {
        
        'coursecategory': json['coursecategory'],
        'courseimage': json['courseimage'],
        'enddate': json['enddate'],
        'fullname': json['fullname'],
        'fullnamedisplay': json['fullnamedisplay'],
        'hasprogress': json['hasprogress'],
        'hidden': json['hidden'],
        'id': json['id'],
        'idnumber': json['idnumber'],
        'isfavourite': json['isfavourite'],
        'pdfexportfont': json['pdfexportfont'],
        'progress': json['progress'] == null ? undefined : json['progress'],
        'shortname': json['shortname'],
        'showactivitydates': json['showactivitydates'],
        'showcompletionconditions': json['showcompletionconditions'],
        'showshortname': json['showshortname'],
        'startdate': json['startdate'],
        'summary': json['summary'],
        'summaryformat': json['summaryformat'],
        'timeaccess': json['timeaccess'] == null ? undefined : json['timeaccess'],
        'viewurl': json['viewurl'],
        'visible': json['visible'],
    };
}

export function CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseToJSON(value?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coursecategory': value['coursecategory'],
        'courseimage': value['courseimage'],
        'enddate': value['enddate'],
        'fullname': value['fullname'],
        'fullnamedisplay': value['fullnamedisplay'],
        'hasprogress': value['hasprogress'],
        'hidden': value['hidden'],
        'id': value['id'],
        'idnumber': value['idnumber'],
        'isfavourite': value['isfavourite'],
        'pdfexportfont': value['pdfexportfont'],
        'progress': value['progress'],
        'shortname': value['shortname'],
        'showactivitydates': value['showactivitydates'],
        'showcompletionconditions': value['showcompletionconditions'],
        'showshortname': value['showshortname'],
        'startdate': value['startdate'],
        'summary': value['summary'],
        'summaryformat': value['summaryformat'],
        'timeaccess': value['timeaccess'],
        'viewurl': value['viewurl'],
        'visible': value['visible'],
    };
}

