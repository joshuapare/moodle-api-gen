/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner } from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import {
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSONTyped,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON,
} from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import type { ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner } from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner';
import {
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSON,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSONTyped,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerToJSON,
} from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner';

/**
 * 
 * @export
 * @interface ToolLpDataForUserEvidencePage200ResponseUserevidence
 */
export interface ToolLpDataForUserEvidencePage200ResponseUserevidence {
    /**
     * canmanage
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    canmanage: boolean;
    /**
     * competencycount
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    competencycount: number;
    /**
     * description
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    description: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    descriptionformat?: number;
    /**
     * filecount
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    filecount: number;
    /**
     * 
     * @type {Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    files: Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>;
    /**
     * hasurlorfiles
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    hasurlorfiles: boolean;
    /**
     * id
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    id: number;
    /**
     * name
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    name: string;
    /**
     * timecreated
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    timemodified: number;
    /**
     * url
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    url: string;
    /**
     * urlshort
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    urlshort: string;
    /**
     * 
     * @type {Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner>}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    usercompetencies?: Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner>;
    /**
     * userhasplan
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    userhasplan: boolean;
    /**
     * userid
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    userid: number;
    /**
     * usermodified
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    usermodified: number;
}

/**
 * Check if a given object implements the ToolLpDataForUserEvidencePage200ResponseUserevidence interface.
 */
export function instanceOfToolLpDataForUserEvidencePage200ResponseUserevidence(value: object): boolean {
    if (!('canmanage' in value)) return false;
    if (!('competencycount' in value)) return false;
    if (!('description' in value)) return false;
    if (!('filecount' in value)) return false;
    if (!('files' in value)) return false;
    if (!('hasurlorfiles' in value)) return false;
    if (!('id' in value)) return false;
    if (!('name' in value)) return false;
    if (!('timecreated' in value)) return false;
    if (!('timemodified' in value)) return false;
    if (!('url' in value)) return false;
    if (!('urlshort' in value)) return false;
    if (!('userhasplan' in value)) return false;
    if (!('userid' in value)) return false;
    if (!('usermodified' in value)) return false;
    return true;
}

export function ToolLpDataForUserEvidencePage200ResponseUserevidenceFromJSON(json: any): ToolLpDataForUserEvidencePage200ResponseUserevidence {
    return ToolLpDataForUserEvidencePage200ResponseUserevidenceFromJSONTyped(json, false);
}

export function ToolLpDataForUserEvidencePage200ResponseUserevidenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForUserEvidencePage200ResponseUserevidence {
    if (json == null) {
        return json;
    }
    return {
        
        'canmanage': json['canmanage'],
        'competencycount': json['competencycount'],
        'description': json['description'],
        'descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'filecount': json['filecount'],
        'files': ((json['files'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON)),
        'hasurlorfiles': json['hasurlorfiles'],
        'id': json['id'],
        'name': json['name'],
        'timecreated': json['timecreated'],
        'timemodified': json['timemodified'],
        'url': json['url'],
        'urlshort': json['urlshort'],
        'usercompetencies': json['usercompetencies'] == null ? undefined : ((json['usercompetencies'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSON)),
        'userhasplan': json['userhasplan'],
        'userid': json['userid'],
        'usermodified': json['usermodified'],
    };
}

export function ToolLpDataForUserEvidencePage200ResponseUserevidenceToJSON(value?: ToolLpDataForUserEvidencePage200ResponseUserevidence | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmanage': value['canmanage'],
        'competencycount': value['competencycount'],
        'description': value['description'],
        'descriptionformat': value['descriptionformat'],
        'filecount': value['filecount'],
        'files': ((value['files'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON)),
        'hasurlorfiles': value['hasurlorfiles'],
        'id': value['id'],
        'name': value['name'],
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'url': value['url'],
        'urlshort': value['urlshort'],
        'usercompetencies': value['usercompetencies'] == null ? undefined : ((value['usercompetencies'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerToJSON)),
        'userhasplan': value['userhasplan'],
        'userid': value['userid'],
        'usermodified': value['usermodified'],
    };
}

