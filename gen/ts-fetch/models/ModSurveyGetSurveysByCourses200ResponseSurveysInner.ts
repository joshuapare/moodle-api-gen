/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import {
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSONTyped,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON,
} from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';

/**
 * Surveys
 * @export
 * @interface ModSurveyGetSurveysByCourses200ResponseSurveysInner
 */
export interface ModSurveyGetSurveysByCourses200ResponseSurveysInner {
    /**
     * Course id
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    course?: number;
    /**
     * Course module id
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    coursemodule?: number;
    /**
     * Days
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    days?: number;
    /**
     * Group id
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    groupingid?: number;
    /**
     * Group mode
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    groupmode?: number;
    /**
     * Activity instance id
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    id?: number;
    /**
     * Activity introduction
     * @type {string}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    intro?: string;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    introfiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    introformat?: number;
    /**
     * Forced activity language
     * @type {string}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    lang?: string;
    /**
     * Activity name
     * @type {string}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    name?: string;
    /**
     * Question ids
     * @type {string}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    questions?: string;
    /**
     * Course section id
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    section?: number;
    /**
     * Did I finish the survey?
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    surveydone?: number;
    /**
     * Survey type
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    template?: number;
    /**
     * Time of creation
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    timecreated?: number;
    /**
     * Time of last modification
     * @type {number}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    timemodified?: number;
    /**
     * Visible
     * @type {boolean}
     * @memberof ModSurveyGetSurveysByCourses200ResponseSurveysInner
     */
    visible?: boolean;
}

/**
 * Check if a given object implements the ModSurveyGetSurveysByCourses200ResponseSurveysInner interface.
 */
export function instanceOfModSurveyGetSurveysByCourses200ResponseSurveysInner(value: object): boolean {
    return true;
}

export function ModSurveyGetSurveysByCourses200ResponseSurveysInnerFromJSON(json: any): ModSurveyGetSurveysByCourses200ResponseSurveysInner {
    return ModSurveyGetSurveysByCourses200ResponseSurveysInnerFromJSONTyped(json, false);
}

export function ModSurveyGetSurveysByCourses200ResponseSurveysInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModSurveyGetSurveysByCourses200ResponseSurveysInner {
    if (json == null) {
        return json;
    }
    return {
        
        'course': json['course'] == null ? undefined : json['course'],
        'coursemodule': json['coursemodule'] == null ? undefined : json['coursemodule'],
        'days': json['days'] == null ? undefined : json['days'],
        'groupingid': json['groupingid'] == null ? undefined : json['groupingid'],
        'groupmode': json['groupmode'] == null ? undefined : json['groupmode'],
        'id': json['id'] == null ? undefined : json['id'],
        'intro': json['intro'] == null ? undefined : json['intro'],
        'introfiles': json['introfiles'] == null ? undefined : ((json['introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'introformat': json['introformat'] == null ? undefined : json['introformat'],
        'lang': json['lang'] == null ? undefined : json['lang'],
        'name': json['name'] == null ? undefined : json['name'],
        'questions': json['questions'] == null ? undefined : json['questions'],
        'section': json['section'] == null ? undefined : json['section'],
        'surveydone': json['surveydone'] == null ? undefined : json['surveydone'],
        'template': json['template'] == null ? undefined : json['template'],
        'timecreated': json['timecreated'] == null ? undefined : json['timecreated'],
        'timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function ModSurveyGetSurveysByCourses200ResponseSurveysInnerToJSON(value?: ModSurveyGetSurveysByCourses200ResponseSurveysInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'course': value['course'],
        'coursemodule': value['coursemodule'],
        'days': value['days'],
        'groupingid': value['groupingid'],
        'groupmode': value['groupmode'],
        'id': value['id'],
        'intro': value['intro'],
        'introfiles': value['introfiles'] == null ? undefined : ((value['introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'introformat': value['introformat'],
        'lang': value['lang'],
        'name': value['name'],
        'questions': value['questions'],
        'section': value['section'],
        'surveydone': value['surveydone'],
        'template': value['template'],
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'visible': value['visible'],
    };
}

