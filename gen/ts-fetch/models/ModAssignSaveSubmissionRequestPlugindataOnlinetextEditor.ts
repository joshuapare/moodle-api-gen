/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor
 */
export interface ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor {
    /**
     * The format for this submission
     * @type {number}
     * @memberof ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor
     */
    format: number;
    /**
     * The draft area id for files attached to the submission
     * @type {number}
     * @memberof ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor
     */
    itemid: number;
    /**
     * The text for this submission.
     * @type {string}
     * @memberof ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor
     */
    text: string;
}

/**
 * Check if a given object implements the ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor interface.
 */
export function instanceOfModAssignSaveSubmissionRequestPlugindataOnlinetextEditor(value: object): boolean {
    if (!('format' in value)) return false;
    if (!('itemid' in value)) return false;
    if (!('text' in value)) return false;
    return true;
}

export function ModAssignSaveSubmissionRequestPlugindataOnlinetextEditorFromJSON(json: any): ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor {
    return ModAssignSaveSubmissionRequestPlugindataOnlinetextEditorFromJSONTyped(json, false);
}

export function ModAssignSaveSubmissionRequestPlugindataOnlinetextEditorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor {
    if (json == null) {
        return json;
    }
    return {
        
        'format': json['format'],
        'itemid': json['itemid'],
        'text': json['text'],
    };
}

export function ModAssignSaveSubmissionRequestPlugindataOnlinetextEditorToJSON(value?: ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'format': value['format'],
        'itemid': value['itemid'],
        'text': value['text'],
    };
}

