/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
 */
export interface ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner {
    /**
     * Whether a backdrop should be used
     * @type {boolean}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    backdrop?: boolean;
    /**
     * Step Content
     * @type {string}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    content?: string;
    /**
     * Delay before showing the step (ms)
     * @type {number}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    delay?: number;
    /**
     * Step Target
     * @type {string}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    element?: string;
    /**
     * Whether to display the step even if it could not be found
     * @type {boolean}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    orphan?: boolean;
    /**
     * Step Placement
     * @type {string}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    placement?: string;
    /**
     * Whether to move to the next step when the target element is clicked
     * @type {boolean}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    reflex?: boolean;
    /**
     * The actual ID of the step
     * @type {number}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    stepid?: number;
    /**
     * Step Title
     * @type {string}
     * @memberof ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner
     */
    title?: string;
}

/**
 * Check if a given object implements the ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner interface.
 */
export function instanceOfToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner(value: object): boolean {
    return true;
}

export function ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerFromJSON(json: any): ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner {
    return ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerFromJSONTyped(json, false);
}

export function ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'backdrop': json['backdrop'] == null ? undefined : json['backdrop'],
        'content': json['content'] == null ? undefined : json['content'],
        'delay': json['delay'] == null ? undefined : json['delay'],
        'element': json['element'] == null ? undefined : json['element'],
        'orphan': json['orphan'] == null ? undefined : json['orphan'],
        'placement': json['placement'] == null ? undefined : json['placement'],
        'reflex': json['reflex'] == null ? undefined : json['reflex'],
        'stepid': json['stepid'] == null ? undefined : json['stepid'],
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInnerToJSON(value?: ToolUsertoursFetchAndStartTour200ResponseTourconfigStepsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'backdrop': value['backdrop'],
        'content': value['content'],
        'delay': value['delay'],
        'element': value['element'],
        'orphan': value['orphan'],
        'placement': value['placement'],
        'reflex': value['reflex'],
        'stepid': value['stepid'],
        'title': value['title'],
    };
}

