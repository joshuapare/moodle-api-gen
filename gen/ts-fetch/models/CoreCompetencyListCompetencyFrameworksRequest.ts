/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCohortSearchCohortsRequestContext } from './CoreCohortSearchCohortsRequestContext';
import {
    CoreCohortSearchCohortsRequestContextFromJSON,
    CoreCohortSearchCohortsRequestContextFromJSONTyped,
    CoreCohortSearchCohortsRequestContextToJSON,
} from './CoreCohortSearchCohortsRequestContext';

/**
 * 
 * @export
 * @interface CoreCompetencyListCompetencyFrameworksRequest
 */
export interface CoreCompetencyListCompetencyFrameworksRequest {
    /**
     * 
     * @type {CoreCohortSearchCohortsRequestContext}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    context: CoreCohortSearchCohortsRequestContext;
    /**
     * What other contextes to fetch the frameworks from. (children, parents, self)
     * @type {string}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    includes?: string;
    /**
     * Return this number of records at most.
     * @type {number}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    limit?: number;
    /**
     * Only visible frameworks will be returned if visible true
     * @type {boolean}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    onlyvisible?: boolean;
    /**
     * Sort direction. Should be either ASC or DESC
     * @type {string}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    order?: string;
    /**
     * A query string to filter the results
     * @type {string}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    query?: string;
    /**
     * Skip this number of records before returning results
     * @type {number}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    skip?: number;
    /**
     * Column to sort by.
     * @type {string}
     * @memberof CoreCompetencyListCompetencyFrameworksRequest
     */
    sort?: string;
}

/**
 * Check if a given object implements the CoreCompetencyListCompetencyFrameworksRequest interface.
 */
export function instanceOfCoreCompetencyListCompetencyFrameworksRequest(value: object): boolean {
    if (!('context' in value)) return false;
    return true;
}

export function CoreCompetencyListCompetencyFrameworksRequestFromJSON(json: any): CoreCompetencyListCompetencyFrameworksRequest {
    return CoreCompetencyListCompetencyFrameworksRequestFromJSONTyped(json, false);
}

export function CoreCompetencyListCompetencyFrameworksRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompetencyListCompetencyFrameworksRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'context': CoreCohortSearchCohortsRequestContextFromJSON(json['context']),
        'includes': json['includes'] == null ? undefined : json['includes'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'onlyvisible': json['onlyvisible'] == null ? undefined : json['onlyvisible'],
        'order': json['order'] == null ? undefined : json['order'],
        'query': json['query'] == null ? undefined : json['query'],
        'skip': json['skip'] == null ? undefined : json['skip'],
        'sort': json['sort'] == null ? undefined : json['sort'],
    };
}

export function CoreCompetencyListCompetencyFrameworksRequestToJSON(value?: CoreCompetencyListCompetencyFrameworksRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'context': CoreCohortSearchCohortsRequestContextToJSON(value['context']),
        'includes': value['includes'],
        'limit': value['limit'],
        'onlyvisible': value['onlyvisible'],
        'order': value['order'],
        'query': value['query'],
        'skip': value['skip'],
        'sort': value['sort'],
    };
}

