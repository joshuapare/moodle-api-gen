/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCommentAddCommentsRequestCommentsInner
 */
export interface CoreCommentAddCommentsRequestCommentsInner {
    /**
     * string comment area
     * @type {string}
     * @memberof CoreCommentAddCommentsRequestCommentsInner
     */
    area?: string;
    /**
     * component
     * @type {string}
     * @memberof CoreCommentAddCommentsRequestCommentsInner
     */
    component?: string;
    /**
     * component
     * @type {string}
     * @memberof CoreCommentAddCommentsRequestCommentsInner
     */
    content?: string;
    /**
     * contextlevel system, course, user...
     * @type {string}
     * @memberof CoreCommentAddCommentsRequestCommentsInner
     */
    contextlevel?: string;
    /**
     * the id of item associated with the contextlevel
     * @type {number}
     * @memberof CoreCommentAddCommentsRequestCommentsInner
     */
    instanceid?: number;
    /**
     * associated id
     * @type {number}
     * @memberof CoreCommentAddCommentsRequestCommentsInner
     */
    itemid?: number;
}

/**
 * Check if a given object implements the CoreCommentAddCommentsRequestCommentsInner interface.
 */
export function instanceOfCoreCommentAddCommentsRequestCommentsInner(value: object): boolean {
    return true;
}

export function CoreCommentAddCommentsRequestCommentsInnerFromJSON(json: any): CoreCommentAddCommentsRequestCommentsInner {
    return CoreCommentAddCommentsRequestCommentsInnerFromJSONTyped(json, false);
}

export function CoreCommentAddCommentsRequestCommentsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCommentAddCommentsRequestCommentsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'area': json['area'] == null ? undefined : json['area'],
        'component': json['component'] == null ? undefined : json['component'],
        'content': json['content'] == null ? undefined : json['content'],
        'contextlevel': json['contextlevel'] == null ? undefined : json['contextlevel'],
        'instanceid': json['instanceid'] == null ? undefined : json['instanceid'],
        'itemid': json['itemid'] == null ? undefined : json['itemid'],
    };
}

export function CoreCommentAddCommentsRequestCommentsInnerToJSON(value?: CoreCommentAddCommentsRequestCommentsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'area': value['area'],
        'component': value['component'],
        'content': value['content'],
        'contextlevel': value['contextlevel'],
        'instanceid': value['instanceid'],
        'itemid': value['itemid'],
    };
}

