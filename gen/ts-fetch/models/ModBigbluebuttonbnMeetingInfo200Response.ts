/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner } from './ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner';
import {
    ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerFromJSON,
    ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerFromJSONTyped,
    ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerToJSON,
} from './ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner';
import type { ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner } from './ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner';
import {
    ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerFromJSON,
    ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerFromJSONTyped,
    ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerToJSON,
} from './ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner';

/**
 * 
 * @export
 * @interface ModBigbluebuttonbnMeetingInfo200Response
 */
export interface ModBigbluebuttonbnMeetingInfo200Response {
    /**
     * bigbluebuttonbn instance id
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    bigbluebuttonbnid: string;
    /**
     * Can join
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    canjoin: boolean;
    /**
     * Closing time
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    closingtime?: number;
    /**
     * CM id
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    cmid: number;
    /**
     * 
     * @type {Array<ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner>}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    features?: Array<ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner>;
    /**
     * bigbluebuttonbn group id
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    groupid?: number;
    /**
     * Guest access enabled
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    guestaccessenabled?: boolean;
    /**
     * Guest URL
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    guestjoinurl?: string;
    /**
     * Guest join password
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    guestpassword?: string;
    /**
     * Is moderator
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    ismoderator: boolean;
    /**
     * Join URL
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    joinurl: string;
    /**
     * Meeting id
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    meetingid: string;
    /**
     * Moderator count
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    moderatorcount?: number;
    /**
     * Several moderators ?
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    moderatorplural?: boolean;
    /**
     * Opening time
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    openingtime?: number;
    /**
     * Participant count
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    participantcount?: number;
    /**
     * Several participants ?
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    participantplural?: boolean;
    /**
     * 
     * @type {Array<ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner>}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    presentations: Array<ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner>;
    /**
     * Started at
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    startedat?: number;
    /**
     * Status closed
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    statusclosed?: boolean;
    /**
     * Status message
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    statusmessage?: string;
    /**
     * Status open
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    statusopen?: boolean;
    /**
     * Status running
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    statusrunning?: boolean;
    /**
     * User limit
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    userlimit: number;
}

/**
 * Check if a given object implements the ModBigbluebuttonbnMeetingInfo200Response interface.
 */
export function instanceOfModBigbluebuttonbnMeetingInfo200Response(value: object): boolean {
    if (!('bigbluebuttonbnid' in value)) return false;
    if (!('canjoin' in value)) return false;
    if (!('cmid' in value)) return false;
    if (!('ismoderator' in value)) return false;
    if (!('joinurl' in value)) return false;
    if (!('meetingid' in value)) return false;
    if (!('presentations' in value)) return false;
    if (!('userlimit' in value)) return false;
    return true;
}

export function ModBigbluebuttonbnMeetingInfo200ResponseFromJSON(json: any): ModBigbluebuttonbnMeetingInfo200Response {
    return ModBigbluebuttonbnMeetingInfo200ResponseFromJSONTyped(json, false);
}

export function ModBigbluebuttonbnMeetingInfo200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModBigbluebuttonbnMeetingInfo200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'bigbluebuttonbnid': json['bigbluebuttonbnid'],
        'canjoin': json['canjoin'],
        'closingtime': json['closingtime'] == null ? undefined : json['closingtime'],
        'cmid': json['cmid'],
        'features': json['features'] == null ? undefined : ((json['features'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerFromJSON)),
        'groupid': json['groupid'] == null ? undefined : json['groupid'],
        'guestaccessenabled': json['guestaccessenabled'] == null ? undefined : json['guestaccessenabled'],
        'guestjoinurl': json['guestjoinurl'] == null ? undefined : json['guestjoinurl'],
        'guestpassword': json['guestpassword'] == null ? undefined : json['guestpassword'],
        'ismoderator': json['ismoderator'],
        'joinurl': json['joinurl'],
        'meetingid': json['meetingid'],
        'moderatorcount': json['moderatorcount'] == null ? undefined : json['moderatorcount'],
        'moderatorplural': json['moderatorplural'] == null ? undefined : json['moderatorplural'],
        'openingtime': json['openingtime'] == null ? undefined : json['openingtime'],
        'participantcount': json['participantcount'] == null ? undefined : json['participantcount'],
        'participantplural': json['participantplural'] == null ? undefined : json['participantplural'],
        'presentations': ((json['presentations'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerFromJSON)),
        'startedat': json['startedat'] == null ? undefined : json['startedat'],
        'statusclosed': json['statusclosed'] == null ? undefined : json['statusclosed'],
        'statusmessage': json['statusmessage'] == null ? undefined : json['statusmessage'],
        'statusopen': json['statusopen'] == null ? undefined : json['statusopen'],
        'statusrunning': json['statusrunning'] == null ? undefined : json['statusrunning'],
        'userlimit': json['userlimit'],
    };
}

export function ModBigbluebuttonbnMeetingInfo200ResponseToJSON(value?: ModBigbluebuttonbnMeetingInfo200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'bigbluebuttonbnid': value['bigbluebuttonbnid'],
        'canjoin': value['canjoin'],
        'closingtime': value['closingtime'],
        'cmid': value['cmid'],
        'features': value['features'] == null ? undefined : ((value['features'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerToJSON)),
        'groupid': value['groupid'],
        'guestaccessenabled': value['guestaccessenabled'],
        'guestjoinurl': value['guestjoinurl'],
        'guestpassword': value['guestpassword'],
        'ismoderator': value['ismoderator'],
        'joinurl': value['joinurl'],
        'meetingid': value['meetingid'],
        'moderatorcount': value['moderatorcount'],
        'moderatorplural': value['moderatorplural'],
        'openingtime': value['openingtime'],
        'participantcount': value['participantcount'],
        'participantplural': value['participantplural'],
        'presentations': ((value['presentations'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerToJSON)),
        'startedat': value['startedat'],
        'statusclosed': value['statusclosed'],
        'statusmessage': value['statusmessage'],
        'statusopen': value['statusopen'],
        'statusrunning': value['statusrunning'],
        'userlimit': value['userlimit'],
    };
}

