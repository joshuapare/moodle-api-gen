/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';
import {
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSONTyped,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON,
} from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';

/**
 * 
 * @export
 * @interface ModLessonGetLesson200ResponseLesson
 */
export interface ModLessonGetLesson200ResponseLesson {
    /**
     * Id of the next activity to be linked once the lesson is completed
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    activitylink?: number;
    /**
     * Whether to allow the lesson to be attempted offline in the mobile app
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    allowofflineattempts: boolean;
    /**
     * Available from
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    available?: number;
    /**
     * Slideshow bgcolor
     * @type {string}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    bgcolor?: string;
    /**
     * Require end reached for completion?
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    completionendreached?: number;
    /**
     * Student must do this activity at least for
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    completiontimespent?: number;
    /**
     * Conditions to enable the lesson
     * @type {string}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    conditions?: string;
    /**
     * Foreign key reference to the course this lesson is part of.
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    course: number;
    /**
     * Course module id.
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    coursemodule: number;
    /**
     * Custom scoring?
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    custom?: boolean;
    /**
     * Available until
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    deadline?: number;
    /**
     * Dependent on (another lesson id)
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    dependency?: number;
    /**
     * Display left pages menu?
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    displayleft?: boolean;
    /**
     * Minimum grade to display menu
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    displayleftif?: number;
    /**
     * Display default feedback
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    feedback?: boolean;
    /**
     * The total that the grade is scaled to be out of
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    grade?: number;
    /**
     * Slideshow height
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    height?: number;
    /**
     * Standard Moodle primary key.
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    id: number;
    /**
     * Lesson introduction text.
     * @type {string}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    intro?: string;
    /**
     * 
     * @type {Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    introfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    introformat?: number;
    /**
     * Forced activity language
     * @type {string}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    lang: string;
    /**
     * Maximum answers per page
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    maxanswers?: number;
    /**
     * Maximum attempts
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    maxattempts?: number;
    /**
     * Number of pages to show
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    maxpages?: number;
    /**
     * Display a close button in the popup?
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    mediaclose?: number;
    /**
     * Local file path or full external URL
     * @type {string}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    mediafile?: string;
    /**
     * 
     * @type {Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    mediafiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * Popup for media file height
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    mediaheight?: number;
    /**
     * Popup for media with
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    mediawidth?: number;
    /**
     * Minimum number of questions
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    minquestions?: number;
    /**
     * Allow student review?
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    modattempts?: boolean;
    /**
     * Lesson name.
     * @type {string}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    name: string;
    /**
     * Action for a correct answer
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    nextpagedefault?: number;
    /**
     * Display ongoing score?
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    ongoing?: boolean;
    /**
     * Password
     * @type {string}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    password?: string;
    /**
     * Practice lesson?
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    practice?: boolean;
    /**
     * Display progress bar?
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    progressbar?: boolean;
    /**
     * Re-takes allowed
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    retake?: boolean;
    /**
     * Provide option to try a question again
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    review?: boolean;
    /**
     * Display lesson as slideshow
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    slideshow?: boolean;
    /**
     * Time limit
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    timelimit?: number;
    /**
     * Last time settings were updated
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    timemodified?: number;
    /**
     * How to calculate the final grade
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    usemaxgrade?: number;
    /**
     * Password protected lesson?
     * @type {boolean}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    usepassword?: boolean;
    /**
     * Slideshow width
     * @type {number}
     * @memberof ModLessonGetLesson200ResponseLesson
     */
    width?: number;
}

/**
 * Check if a given object implements the ModLessonGetLesson200ResponseLesson interface.
 */
export function instanceOfModLessonGetLesson200ResponseLesson(value: object): boolean {
    if (!('allowofflineattempts' in value)) return false;
    if (!('course' in value)) return false;
    if (!('coursemodule' in value)) return false;
    if (!('id' in value)) return false;
    if (!('lang' in value)) return false;
    if (!('name' in value)) return false;
    return true;
}

export function ModLessonGetLesson200ResponseLessonFromJSON(json: any): ModLessonGetLesson200ResponseLesson {
    return ModLessonGetLesson200ResponseLessonFromJSONTyped(json, false);
}

export function ModLessonGetLesson200ResponseLessonFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonGetLesson200ResponseLesson {
    if (json == null) {
        return json;
    }
    return {
        
        'activitylink': json['activitylink'] == null ? undefined : json['activitylink'],
        'allowofflineattempts': json['allowofflineattempts'],
        'available': json['available'] == null ? undefined : json['available'],
        'bgcolor': json['bgcolor'] == null ? undefined : json['bgcolor'],
        'completionendreached': json['completionendreached'] == null ? undefined : json['completionendreached'],
        'completiontimespent': json['completiontimespent'] == null ? undefined : json['completiontimespent'],
        'conditions': json['conditions'] == null ? undefined : json['conditions'],
        'course': json['course'],
        'coursemodule': json['coursemodule'],
        'custom': json['custom'] == null ? undefined : json['custom'],
        'deadline': json['deadline'] == null ? undefined : json['deadline'],
        'dependency': json['dependency'] == null ? undefined : json['dependency'],
        'displayleft': json['displayleft'] == null ? undefined : json['displayleft'],
        'displayleftif': json['displayleftif'] == null ? undefined : json['displayleftif'],
        'feedback': json['feedback'] == null ? undefined : json['feedback'],
        'grade': json['grade'] == null ? undefined : json['grade'],
        'height': json['height'] == null ? undefined : json['height'],
        'id': json['id'],
        'intro': json['intro'] == null ? undefined : json['intro'],
        'introfiles': json['introfiles'] == null ? undefined : ((json['introfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON)),
        'introformat': json['introformat'] == null ? undefined : json['introformat'],
        'lang': json['lang'],
        'maxanswers': json['maxanswers'] == null ? undefined : json['maxanswers'],
        'maxattempts': json['maxattempts'] == null ? undefined : json['maxattempts'],
        'maxpages': json['maxpages'] == null ? undefined : json['maxpages'],
        'mediaclose': json['mediaclose'] == null ? undefined : json['mediaclose'],
        'mediafile': json['mediafile'] == null ? undefined : json['mediafile'],
        'mediafiles': json['mediafiles'] == null ? undefined : ((json['mediafiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON)),
        'mediaheight': json['mediaheight'] == null ? undefined : json['mediaheight'],
        'mediawidth': json['mediawidth'] == null ? undefined : json['mediawidth'],
        'minquestions': json['minquestions'] == null ? undefined : json['minquestions'],
        'modattempts': json['modattempts'] == null ? undefined : json['modattempts'],
        'name': json['name'],
        'nextpagedefault': json['nextpagedefault'] == null ? undefined : json['nextpagedefault'],
        'ongoing': json['ongoing'] == null ? undefined : json['ongoing'],
        'password': json['password'] == null ? undefined : json['password'],
        'practice': json['practice'] == null ? undefined : json['practice'],
        'progressbar': json['progressbar'] == null ? undefined : json['progressbar'],
        'retake': json['retake'] == null ? undefined : json['retake'],
        'review': json['review'] == null ? undefined : json['review'],
        'slideshow': json['slideshow'] == null ? undefined : json['slideshow'],
        'timelimit': json['timelimit'] == null ? undefined : json['timelimit'],
        'timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'usemaxgrade': json['usemaxgrade'] == null ? undefined : json['usemaxgrade'],
        'usepassword': json['usepassword'] == null ? undefined : json['usepassword'],
        'width': json['width'] == null ? undefined : json['width'],
    };
}

export function ModLessonGetLesson200ResponseLessonToJSON(value?: ModLessonGetLesson200ResponseLesson | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'activitylink': value['activitylink'],
        'allowofflineattempts': value['allowofflineattempts'],
        'available': value['available'],
        'bgcolor': value['bgcolor'],
        'completionendreached': value['completionendreached'],
        'completiontimespent': value['completiontimespent'],
        'conditions': value['conditions'],
        'course': value['course'],
        'coursemodule': value['coursemodule'],
        'custom': value['custom'],
        'deadline': value['deadline'],
        'dependency': value['dependency'],
        'displayleft': value['displayleft'],
        'displayleftif': value['displayleftif'],
        'feedback': value['feedback'],
        'grade': value['grade'],
        'height': value['height'],
        'id': value['id'],
        'intro': value['intro'],
        'introfiles': value['introfiles'] == null ? undefined : ((value['introfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON)),
        'introformat': value['introformat'],
        'lang': value['lang'],
        'maxanswers': value['maxanswers'],
        'maxattempts': value['maxattempts'],
        'maxpages': value['maxpages'],
        'mediaclose': value['mediaclose'],
        'mediafile': value['mediafile'],
        'mediafiles': value['mediafiles'] == null ? undefined : ((value['mediafiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON)),
        'mediaheight': value['mediaheight'],
        'mediawidth': value['mediawidth'],
        'minquestions': value['minquestions'],
        'modattempts': value['modattempts'],
        'name': value['name'],
        'nextpagedefault': value['nextpagedefault'],
        'ongoing': value['ongoing'],
        'password': value['password'],
        'practice': value['practice'],
        'progressbar': value['progressbar'],
        'retake': value['retake'],
        'review': value['review'],
        'slideshow': value['slideshow'],
        'timelimit': value['timelimit'],
        'timemodified': value['timemodified'],
        'usemaxgrade': value['usemaxgrade'],
        'usepassword': value['usepassword'],
        'width': value['width'],
    };
}

