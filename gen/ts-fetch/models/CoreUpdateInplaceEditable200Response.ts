/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreUpdateInplaceEditable200ResponseEditicon } from './CoreUpdateInplaceEditable200ResponseEditicon';
import {
    CoreUpdateInplaceEditable200ResponseEditiconFromJSON,
    CoreUpdateInplaceEditable200ResponseEditiconFromJSONTyped,
    CoreUpdateInplaceEditable200ResponseEditiconToJSON,
} from './CoreUpdateInplaceEditable200ResponseEditicon';

/**
 * 
 * @export
 * @interface CoreUpdateInplaceEditable200Response
 */
export interface CoreUpdateInplaceEditable200Response {
    /**
     * component responsible for the update
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    component?: string;
    /**
     * display value (may contain link or other html tags)
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    displayvalue: string;
    /**
     * hint for editing element
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    edithint?: string;
    /**
     * 
     * @type {CoreUpdateInplaceEditable200ResponseEditicon}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    editicon?: CoreUpdateInplaceEditable200ResponseEditicon;
    /**
     * label for editing element
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    editlabel?: string;
    /**
     * identifier of the updated item
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    itemid?: string;
    /**
     * itemtype
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    itemtype?: string;
    /**
     * Should everything be wrapped in the edit link or link displayed separately
     * @type {number}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    linkeverything?: number;
    /**
     * options of the element, format depends on type
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    options?: string;
    /**
     * type of the element (text, toggle, select)
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    type?: string;
    /**
     * value of the item as it is stored
     * @type {string}
     * @memberof CoreUpdateInplaceEditable200Response
     */
    value?: string;
}

/**
 * Check if a given object implements the CoreUpdateInplaceEditable200Response interface.
 */
export function instanceOfCoreUpdateInplaceEditable200Response(value: object): boolean {
    if (!('displayvalue' in value)) return false;
    return true;
}

export function CoreUpdateInplaceEditable200ResponseFromJSON(json: any): CoreUpdateInplaceEditable200Response {
    return CoreUpdateInplaceEditable200ResponseFromJSONTyped(json, false);
}

export function CoreUpdateInplaceEditable200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreUpdateInplaceEditable200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'component': json['component'] == null ? undefined : json['component'],
        'displayvalue': json['displayvalue'],
        'edithint': json['edithint'] == null ? undefined : json['edithint'],
        'editicon': json['editicon'] == null ? undefined : CoreUpdateInplaceEditable200ResponseEditiconFromJSON(json['editicon']),
        'editlabel': json['editlabel'] == null ? undefined : json['editlabel'],
        'itemid': json['itemid'] == null ? undefined : json['itemid'],
        'itemtype': json['itemtype'] == null ? undefined : json['itemtype'],
        'linkeverything': json['linkeverything'] == null ? undefined : json['linkeverything'],
        'options': json['options'] == null ? undefined : json['options'],
        'type': json['type'] == null ? undefined : json['type'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function CoreUpdateInplaceEditable200ResponseToJSON(value?: CoreUpdateInplaceEditable200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'component': value['component'],
        'displayvalue': value['displayvalue'],
        'edithint': value['edithint'],
        'editicon': CoreUpdateInplaceEditable200ResponseEditiconToJSON(value['editicon']),
        'editlabel': value['editlabel'],
        'itemid': value['itemid'],
        'itemtype': value['itemtype'],
        'linkeverything': value['linkeverything'],
        'options': value['options'],
        'type': value['type'],
        'value': value['value'],
    };
}

