/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCompetencyReadUserEvidence200ResponseCompetenciesInner } from './CoreCompetencyReadUserEvidence200ResponseCompetenciesInner';
import {
    CoreCompetencyReadUserEvidence200ResponseCompetenciesInnerFromJSON,
    CoreCompetencyReadUserEvidence200ResponseCompetenciesInnerFromJSONTyped,
    CoreCompetencyReadUserEvidence200ResponseCompetenciesInnerToJSON,
} from './CoreCompetencyReadUserEvidence200ResponseCompetenciesInner';

/**
 * 
 * @export
 * @interface ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
 */
export interface ToolLpDataForTemplateCompetenciesPage200ResponseStatistics {
    /**
     * competencycount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    competencycount: number;
    /**
     * completedplancount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    completedplancount: number;
    /**
     * completedplanpercentage
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    completedplanpercentage: number;
    /**
     * completedplanpercentageformatted
     * @type {string}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    completedplanpercentageformatted: string;
    /**
     * 
     * @type {Array<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    leastproficient: Array<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner>;
    /**
     * leastproficientcount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    leastproficientcount: number;
    /**
     * linkedcompetencycount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    linkedcompetencycount: number;
    /**
     * linkedcompetencypercentage
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    linkedcompetencypercentage: number;
    /**
     * linkedcompetencypercentageformatted
     * @type {string}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    linkedcompetencypercentageformatted: string;
    /**
     * plancount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    plancount: number;
    /**
     * proficientusercompetencyplancount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    proficientusercompetencyplancount: number;
    /**
     * proficientusercompetencyplanpercentage
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    proficientusercompetencyplanpercentage: number;
    /**
     * proficientusercompetencyplanpercentageformatted
     * @type {string}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    proficientusercompetencyplanpercentageformatted: string;
    /**
     * unlinkedcompetencycount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    unlinkedcompetencycount: number;
    /**
     * usercompetencyplancount
     * @type {number}
     * @memberof ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
     */
    usercompetencyplancount: number;
}

/**
 * Check if a given object implements the ToolLpDataForTemplateCompetenciesPage200ResponseStatistics interface.
 */
export function instanceOfToolLpDataForTemplateCompetenciesPage200ResponseStatistics(value: object): boolean {
    if (!('competencycount' in value)) return false;
    if (!('completedplancount' in value)) return false;
    if (!('completedplanpercentage' in value)) return false;
    if (!('completedplanpercentageformatted' in value)) return false;
    if (!('leastproficient' in value)) return false;
    if (!('leastproficientcount' in value)) return false;
    if (!('linkedcompetencycount' in value)) return false;
    if (!('linkedcompetencypercentage' in value)) return false;
    if (!('linkedcompetencypercentageformatted' in value)) return false;
    if (!('plancount' in value)) return false;
    if (!('proficientusercompetencyplancount' in value)) return false;
    if (!('proficientusercompetencyplanpercentage' in value)) return false;
    if (!('proficientusercompetencyplanpercentageformatted' in value)) return false;
    if (!('unlinkedcompetencycount' in value)) return false;
    if (!('usercompetencyplancount' in value)) return false;
    return true;
}

export function ToolLpDataForTemplateCompetenciesPage200ResponseStatisticsFromJSON(json: any): ToolLpDataForTemplateCompetenciesPage200ResponseStatistics {
    return ToolLpDataForTemplateCompetenciesPage200ResponseStatisticsFromJSONTyped(json, false);
}

export function ToolLpDataForTemplateCompetenciesPage200ResponseStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForTemplateCompetenciesPage200ResponseStatistics {
    if (json == null) {
        return json;
    }
    return {
        
        'competencycount': json['competencycount'],
        'completedplancount': json['completedplancount'],
        'completedplanpercentage': json['completedplanpercentage'],
        'completedplanpercentageformatted': json['completedplanpercentageformatted'],
        'leastproficient': ((json['leastproficient'] as Array<any>).map(CoreCompetencyReadUserEvidence200ResponseCompetenciesInnerFromJSON)),
        'leastproficientcount': json['leastproficientcount'],
        'linkedcompetencycount': json['linkedcompetencycount'],
        'linkedcompetencypercentage': json['linkedcompetencypercentage'],
        'linkedcompetencypercentageformatted': json['linkedcompetencypercentageformatted'],
        'plancount': json['plancount'],
        'proficientusercompetencyplancount': json['proficientusercompetencyplancount'],
        'proficientusercompetencyplanpercentage': json['proficientusercompetencyplanpercentage'],
        'proficientusercompetencyplanpercentageformatted': json['proficientusercompetencyplanpercentageformatted'],
        'unlinkedcompetencycount': json['unlinkedcompetencycount'],
        'usercompetencyplancount': json['usercompetencyplancount'],
    };
}

export function ToolLpDataForTemplateCompetenciesPage200ResponseStatisticsToJSON(value?: ToolLpDataForTemplateCompetenciesPage200ResponseStatistics | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'competencycount': value['competencycount'],
        'completedplancount': value['completedplancount'],
        'completedplanpercentage': value['completedplanpercentage'],
        'completedplanpercentageformatted': value['completedplanpercentageformatted'],
        'leastproficient': ((value['leastproficient'] as Array<any>).map(CoreCompetencyReadUserEvidence200ResponseCompetenciesInnerToJSON)),
        'leastproficientcount': value['leastproficientcount'],
        'linkedcompetencycount': value['linkedcompetencycount'],
        'linkedcompetencypercentage': value['linkedcompetencypercentage'],
        'linkedcompetencypercentageformatted': value['linkedcompetencypercentageformatted'],
        'plancount': value['plancount'],
        'proficientusercompetencyplancount': value['proficientusercompetencyplancount'],
        'proficientusercompetencyplanpercentage': value['proficientusercompetencyplanpercentage'],
        'proficientusercompetencyplanpercentageformatted': value['proficientusercompetencyplanpercentageformatted'],
        'unlinkedcompetencycount': value['unlinkedcompetencycount'],
        'usercompetencyplancount': value['usercompetencyplancount'],
    };
}

