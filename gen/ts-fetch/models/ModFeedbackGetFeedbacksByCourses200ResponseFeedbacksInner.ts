/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';
import {
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSONTyped,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON,
} from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';

/**
 * 
 * @export
 * @interface ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
 */
export interface ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner {
    /**
     * Whether the feedback is anonymous.
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    anonymous?: number;
    /**
     * Whether questions should be auto-numbered.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    autonumbering?: boolean;
    /**
     * If this field is set to 1, then the activity will be automatically marked as complete on submission.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    completionsubmit?: boolean;
    /**
     * Course id this feedback is part of.
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    course?: number;
    /**
     * coursemodule
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    coursemodule?: number;
    /**
     * Whether email notifications will be sent to teachers.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    emailNotification?: boolean;
    /**
     * The primary key of the record.
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    id?: number;
    /**
     * Feedback introduction text.
     * @type {string}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    intro?: string;
    /**
     * 
     * @type {Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    introfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    introformat?: number;
    /**
     * Forced activity language
     * @type {string}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    lang?: string;
    /**
     * Whether multiple submissions are allowed.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    multipleSubmit?: boolean;
    /**
     * Feedback name.
     * @type {string}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    name?: string;
    /**
     * Text to display after submission.
     * @type {string}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    pageAfterSubmit?: string;
    /**
     * page_after_submit format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    pageAfterSubmitformat?: number;
    /**
     * 
     * @type {Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    pageaftersubmitfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * Whether stats should be published.
     * @type {boolean}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    publishStats?: boolean;
    /**
     * Link to next page after submission.
     * @type {string}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    siteAfterSubmit?: string;
    /**
     * Allow answers until this time.
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    timeclose?: number;
    /**
     * The time this record was modified.
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    timemodified?: number;
    /**
     * Allow answers from this time.
     * @type {number}
     * @memberof ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner
     */
    timeopen?: number;
}

/**
 * Check if a given object implements the ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner interface.
 */
export function instanceOfModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner(value: object): boolean {
    return true;
}

export function ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInnerFromJSON(json: any): ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner {
    return ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInnerFromJSONTyped(json, false);
}

export function ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner {
    if (json == null) {
        return json;
    }
    return {
        
        'anonymous': json['anonymous'] == null ? undefined : json['anonymous'],
        'autonumbering': json['autonumbering'] == null ? undefined : json['autonumbering'],
        'completionsubmit': json['completionsubmit'] == null ? undefined : json['completionsubmit'],
        'course': json['course'] == null ? undefined : json['course'],
        'coursemodule': json['coursemodule'] == null ? undefined : json['coursemodule'],
        'emailNotification': json['email_notification'] == null ? undefined : json['email_notification'],
        'id': json['id'] == null ? undefined : json['id'],
        'intro': json['intro'] == null ? undefined : json['intro'],
        'introfiles': json['introfiles'] == null ? undefined : ((json['introfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON)),
        'introformat': json['introformat'] == null ? undefined : json['introformat'],
        'lang': json['lang'] == null ? undefined : json['lang'],
        'multipleSubmit': json['multiple_submit'] == null ? undefined : json['multiple_submit'],
        'name': json['name'] == null ? undefined : json['name'],
        'pageAfterSubmit': json['page_after_submit'] == null ? undefined : json['page_after_submit'],
        'pageAfterSubmitformat': json['page_after_submitformat'] == null ? undefined : json['page_after_submitformat'],
        'pageaftersubmitfiles': json['pageaftersubmitfiles'] == null ? undefined : ((json['pageaftersubmitfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON)),
        'publishStats': json['publish_stats'] == null ? undefined : json['publish_stats'],
        'siteAfterSubmit': json['site_after_submit'] == null ? undefined : json['site_after_submit'],
        'timeclose': json['timeclose'] == null ? undefined : json['timeclose'],
        'timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'timeopen': json['timeopen'] == null ? undefined : json['timeopen'],
    };
}

export function ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInnerToJSON(value?: ModFeedbackGetFeedbacksByCourses200ResponseFeedbacksInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'anonymous': value['anonymous'],
        'autonumbering': value['autonumbering'],
        'completionsubmit': value['completionsubmit'],
        'course': value['course'],
        'coursemodule': value['coursemodule'],
        'email_notification': value['emailNotification'],
        'id': value['id'],
        'intro': value['intro'],
        'introfiles': value['introfiles'] == null ? undefined : ((value['introfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON)),
        'introformat': value['introformat'],
        'lang': value['lang'],
        'multiple_submit': value['multipleSubmit'],
        'name': value['name'],
        'page_after_submit': value['pageAfterSubmit'],
        'page_after_submitformat': value['pageAfterSubmitformat'],
        'pageaftersubmitfiles': value['pageaftersubmitfiles'] == null ? undefined : ((value['pageaftersubmitfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON)),
        'publish_stats': value['publishStats'],
        'site_after_submit': value['siteAfterSubmit'],
        'timeclose': value['timeclose'],
        'timemodified': value['timemodified'],
        'timeopen': value['timeopen'],
    };
}

