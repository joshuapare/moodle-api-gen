/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';

/**
 * 
 * @export
 * @interface ModQuizGetQuizAccessInformation200Response
 */
export interface ModQuizGetQuizAccessInformation200Response {
    /**
     * 
     * @type {Array<object>}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    accessrules: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    activerulenames: Array<object>;
    /**
     * Whether the user can do the quiz or not.
     * @type {boolean}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    canattempt: boolean;
    /**
     * Whether the user can edit the quiz settings or not.
     * @type {boolean}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    canmanage: boolean;
    /**
     * Whether the user can preview the quiz or not.
     * @type {boolean}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    canpreview: boolean;
    /**
     * Whether the users can review their previous attempts
     *                                                                 or not.
     * @type {boolean}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    canreviewmyattempts: boolean;
    /**
     * Whether the user can view the quiz reports or not.
     * @type {boolean}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    canviewreports: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    preventaccessreasons: Array<object>;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModQuizGetQuizAccessInformation200Response
     */
    warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModQuizGetQuizAccessInformation200Response interface.
 */
export function instanceOfModQuizGetQuizAccessInformation200Response(value: object): boolean {
    if (!('accessrules' in value)) return false;
    if (!('activerulenames' in value)) return false;
    if (!('canattempt' in value)) return false;
    if (!('canmanage' in value)) return false;
    if (!('canpreview' in value)) return false;
    if (!('canreviewmyattempts' in value)) return false;
    if (!('canviewreports' in value)) return false;
    if (!('preventaccessreasons' in value)) return false;
    return true;
}

export function ModQuizGetQuizAccessInformation200ResponseFromJSON(json: any): ModQuizGetQuizAccessInformation200Response {
    return ModQuizGetQuizAccessInformation200ResponseFromJSONTyped(json, false);
}

export function ModQuizGetQuizAccessInformation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModQuizGetQuizAccessInformation200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'accessrules': json['accessrules'],
        'activerulenames': json['activerulenames'],
        'canattempt': json['canattempt'],
        'canmanage': json['canmanage'],
        'canpreview': json['canpreview'],
        'canreviewmyattempts': json['canreviewmyattempts'],
        'canviewreports': json['canviewreports'],
        'preventaccessreasons': json['preventaccessreasons'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModQuizGetQuizAccessInformation200ResponseToJSON(value?: ModQuizGetQuizAccessInformation200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accessrules': value['accessrules'],
        'activerulenames': value['activerulenames'],
        'canattempt': value['canattempt'],
        'canmanage': value['canmanage'],
        'canpreview': value['canpreview'],
        'canreviewmyattempts': value['canreviewmyattempts'],
        'canviewreports': value['canviewreports'],
        'preventaccessreasons': value['preventaccessreasons'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

