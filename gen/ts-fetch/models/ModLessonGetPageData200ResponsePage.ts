/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModLessonGetPageData200ResponsePage
 */
export interface ModLessonGetPageData200ResponsePage {
    /**
     * The contents of this page
     * @type {string}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    contents?: string;
    /**
     * contents format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    contentsformat?: number;
    /**
     * Used to record page specific display selections
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    display: number;
    /**
     * Toggles display in the left menu block
     * @type {boolean}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    displayinmenublock: boolean;
    /**
     * The id of this lesson page
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    id: number;
    /**
     * Used to record page specific layout selections
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    layout: number;
    /**
     * The id of the lesson this page belongs to
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    lessonid: number;
    /**
     * The id of the next page in the page sequence
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    nextpageid: number;
    /**
     * The id of the page before this one
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    prevpageid: number;
    /**
     * Used to record page type specific options
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    qoption: number;
    /**
     * Identifies the page type of this page
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    qtype: number;
    /**
     * Timestamp for when the page was created
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    timecreated: number;
    /**
     * Timestamp for when the page was last modified
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    timemodified: number;
    /**
     * The title of this page
     * @type {string}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    title?: string;
    /**
     * The type of the page [question | structure]
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    type: number;
    /**
     * The unique identifier for the page type
     * @type {number}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    typeid: number;
    /**
     * The string that describes this page type
     * @type {string}
     * @memberof ModLessonGetPageData200ResponsePage
     */
    typestring: string;
}

/**
 * Check if a given object implements the ModLessonGetPageData200ResponsePage interface.
 */
export function instanceOfModLessonGetPageData200ResponsePage(value: object): boolean {
    if (!('display' in value)) return false;
    if (!('displayinmenublock' in value)) return false;
    if (!('id' in value)) return false;
    if (!('layout' in value)) return false;
    if (!('lessonid' in value)) return false;
    if (!('nextpageid' in value)) return false;
    if (!('prevpageid' in value)) return false;
    if (!('qoption' in value)) return false;
    if (!('qtype' in value)) return false;
    if (!('timecreated' in value)) return false;
    if (!('timemodified' in value)) return false;
    if (!('type' in value)) return false;
    if (!('typeid' in value)) return false;
    if (!('typestring' in value)) return false;
    return true;
}

export function ModLessonGetPageData200ResponsePageFromJSON(json: any): ModLessonGetPageData200ResponsePage {
    return ModLessonGetPageData200ResponsePageFromJSONTyped(json, false);
}

export function ModLessonGetPageData200ResponsePageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonGetPageData200ResponsePage {
    if (json == null) {
        return json;
    }
    return {
        
        'contents': json['contents'] == null ? undefined : json['contents'],
        'contentsformat': json['contentsformat'] == null ? undefined : json['contentsformat'],
        'display': json['display'],
        'displayinmenublock': json['displayinmenublock'],
        'id': json['id'],
        'layout': json['layout'],
        'lessonid': json['lessonid'],
        'nextpageid': json['nextpageid'],
        'prevpageid': json['prevpageid'],
        'qoption': json['qoption'],
        'qtype': json['qtype'],
        'timecreated': json['timecreated'],
        'timemodified': json['timemodified'],
        'title': json['title'] == null ? undefined : json['title'],
        'type': json['type'],
        'typeid': json['typeid'],
        'typestring': json['typestring'],
    };
}

export function ModLessonGetPageData200ResponsePageToJSON(value?: ModLessonGetPageData200ResponsePage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contents': value['contents'],
        'contentsformat': value['contentsformat'],
        'display': value['display'],
        'displayinmenublock': value['displayinmenublock'],
        'id': value['id'],
        'layout': value['layout'],
        'lessonid': value['lessonid'],
        'nextpageid': value['nextpageid'],
        'prevpageid': value['prevpageid'],
        'qoption': value['qoption'],
        'qtype': value['qtype'],
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'title': value['title'],
        'type': value['type'],
        'typeid': value['typeid'],
        'typestring': value['typestring'],
    };
}

