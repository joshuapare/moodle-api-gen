/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModDataGetEntriesRequest
 */
export interface ModDataGetEntriesRequest {
    /**
     * data instance id
     * @type {number}
     * @memberof ModDataGetEntriesRequest
     */
    databaseid: number;
    /**
     * Group id, 0 means that the function will determine the user group
     * @type {number}
     * @memberof ModDataGetEntriesRequest
     */
    groupid?: number;
    /**
     * The direction of the sorting: 'ASC' or 'DESC'.
     *                                                 Empty for using the default database setting.
     * @type {string}
     * @memberof ModDataGetEntriesRequest
     */
    order?: string;
    /**
     * The page of records to return.
     * @type {number}
     * @memberof ModDataGetEntriesRequest
     */
    page?: number;
    /**
     * The number of records to return per page
     * @type {number}
     * @memberof ModDataGetEntriesRequest
     */
    perpage?: number;
    /**
     * Whether to return contents or not. This will return each entry
     *                                                         raw contents and the complete list view (using the template).
     * @type {boolean}
     * @memberof ModDataGetEntriesRequest
     */
    returncontents?: boolean;
    /**
     * Sort the records by this field id, reserved ids are:
     *                                                 0: timeadded
     *                                                 -1: firstname
     *                                                 -2: lastname
     *                                                 -3: approved
     *                                                 -4: timemodified.
     *                                                 Empty for using the default database setting.
     * @type {number}
     * @memberof ModDataGetEntriesRequest
     */
    sort?: number;
}

/**
 * Check if a given object implements the ModDataGetEntriesRequest interface.
 */
export function instanceOfModDataGetEntriesRequest(value: object): boolean {
    if (!('databaseid' in value)) return false;
    return true;
}

export function ModDataGetEntriesRequestFromJSON(json: any): ModDataGetEntriesRequest {
    return ModDataGetEntriesRequestFromJSONTyped(json, false);
}

export function ModDataGetEntriesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModDataGetEntriesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'databaseid': json['databaseid'],
        'groupid': json['groupid'] == null ? undefined : json['groupid'],
        'order': json['order'] == null ? undefined : json['order'],
        'page': json['page'] == null ? undefined : json['page'],
        'perpage': json['perpage'] == null ? undefined : json['perpage'],
        'returncontents': json['returncontents'] == null ? undefined : json['returncontents'],
        'sort': json['sort'] == null ? undefined : json['sort'],
    };
}

export function ModDataGetEntriesRequestToJSON(value?: ModDataGetEntriesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'databaseid': value['databaseid'],
        'groupid': value['groupid'],
        'order': value['order'],
        'page': value['page'],
        'perpage': value['perpage'],
        'returncontents': value['returncontents'],
        'sort': value['sort'],
    };
}

