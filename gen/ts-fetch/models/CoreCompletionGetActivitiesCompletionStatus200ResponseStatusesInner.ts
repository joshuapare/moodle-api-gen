/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner } from './CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner';
import {
    CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerFromJSON,
    CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerFromJSONTyped,
    CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerToJSON,
} from './CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner';

/**
 * Activity
 * @export
 * @interface CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
 */
export interface CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
    /**
     * course module ID
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    cmid?: number;
    /**
     * 
     * @type {Array<CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner>}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    details?: Array<CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner>;
    /**
     * Whether this activity module has completion enabled
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    hascompletion?: boolean;
    /**
     * instance ID
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    instance?: number;
    /**
     * Whether this activity module instance tracks completion automatically.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    isautomatic?: boolean;
    /**
     * Whether completion is being tracked for this user.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    istrackeduser?: boolean;
    /**
     * activity module name
     * @type {string}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    modname?: string;
    /**
     * The user id who has overriden the status, or null
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    overrideby?: number;
    /**
     * Completion state value:
     *                                     0 means incomplete,
     *                                     1 complete,
     *                                     2 complete pass,
     *                                     3 complete fail
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    state?: number;
    /**
     * timestamp for completed activity
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    timecompleted?: number;
    /**
     * type of tracking:
     *                                     0 means none,
     *                                     1 manual,
     *                                     2 automatic
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    tracking?: number;
    /**
     * Whether this activity is visible to the user.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    uservisible?: boolean;
    /**
     * Whether the completion status affects the availability of another activity.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    valueused?: boolean;
}

/**
 * Check if a given object implements the CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner interface.
 */
export function instanceOfCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner(value: object): boolean {
    return true;
}

export function CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerFromJSON(json: any): CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
    return CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerFromJSONTyped(json, false);
}

export function CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'cmid': json['cmid'] == null ? undefined : json['cmid'],
        'details': json['details'] == null ? undefined : ((json['details'] as Array<any>).map(CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerFromJSON)),
        'hascompletion': json['hascompletion'] == null ? undefined : json['hascompletion'],
        'instance': json['instance'] == null ? undefined : json['instance'],
        'isautomatic': json['isautomatic'] == null ? undefined : json['isautomatic'],
        'istrackeduser': json['istrackeduser'] == null ? undefined : json['istrackeduser'],
        'modname': json['modname'] == null ? undefined : json['modname'],
        'overrideby': json['overrideby'] == null ? undefined : json['overrideby'],
        'state': json['state'] == null ? undefined : json['state'],
        'timecompleted': json['timecompleted'] == null ? undefined : json['timecompleted'],
        'tracking': json['tracking'] == null ? undefined : json['tracking'],
        'uservisible': json['uservisible'] == null ? undefined : json['uservisible'],
        'valueused': json['valueused'] == null ? undefined : json['valueused'],
    };
}

export function CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerToJSON(value?: CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cmid': value['cmid'],
        'details': value['details'] == null ? undefined : ((value['details'] as Array<any>).map(CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerToJSON)),
        'hascompletion': value['hascompletion'],
        'instance': value['instance'],
        'isautomatic': value['isautomatic'],
        'istrackeduser': value['istrackeduser'],
        'modname': value['modname'],
        'overrideby': value['overrideby'],
        'state': value['state'],
        'timecompleted': value['timecompleted'],
        'tracking': value['tracking'],
        'uservisible': value['uservisible'],
        'valueused': value['valueused'],
    };
}

