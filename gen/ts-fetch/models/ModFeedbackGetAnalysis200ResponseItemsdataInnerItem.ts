/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner } from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import {
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSONTyped,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON,
} from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';

/**
 * 
 * @export
 * @interface ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
 */
export interface ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    /**
     * The item id this item depend on.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    dependitem: number;
    /**
     * The depend value.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    dependvalue: string;
    /**
     * The feedback instance id this records belongs to.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    feedback: number;
    /**
     * Whether it has a value or not.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    hasvalue: number;
    /**
     * The record id.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    id: number;
    /**
     * 
     * @type {Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    itemfiles: Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>;
    /**
     * The item position number
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    itemnumber: number;
    /**
     * The item label.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    label: string;
    /**
     * The item name.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    name: string;
    /**
     * Different additional settings for the item (question).
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    options: string;
    /**
     * Additional data that may be required by external functions
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    otherdata: string;
    /**
     * The position in the list of questions.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    position: number;
    /**
     * The text describing the item or the available possible answers.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    presentation: string;
    /**
     * Whether is a item (question) required or not.
     * @type {boolean}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    required: boolean;
    /**
     * If it belogns to a template, the template id.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    template: number;
    /**
     * The type of the item.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    typ: string;
}

/**
 * Check if a given object implements the ModFeedbackGetAnalysis200ResponseItemsdataInnerItem interface.
 */
export function instanceOfModFeedbackGetAnalysis200ResponseItemsdataInnerItem(value: object): boolean {
    if (!('dependitem' in value)) return false;
    if (!('dependvalue' in value)) return false;
    if (!('feedback' in value)) return false;
    if (!('hasvalue' in value)) return false;
    if (!('id' in value)) return false;
    if (!('itemfiles' in value)) return false;
    if (!('itemnumber' in value)) return false;
    if (!('label' in value)) return false;
    if (!('name' in value)) return false;
    if (!('options' in value)) return false;
    if (!('otherdata' in value)) return false;
    if (!('position' in value)) return false;
    if (!('presentation' in value)) return false;
    if (!('required' in value)) return false;
    if (!('template' in value)) return false;
    if (!('typ' in value)) return false;
    return true;
}

export function ModFeedbackGetAnalysis200ResponseItemsdataInnerItemFromJSON(json: any): ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    return ModFeedbackGetAnalysis200ResponseItemsdataInnerItemFromJSONTyped(json, false);
}

export function ModFeedbackGetAnalysis200ResponseItemsdataInnerItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    if (json == null) {
        return json;
    }
    return {
        
        'dependitem': json['dependitem'],
        'dependvalue': json['dependvalue'],
        'feedback': json['feedback'],
        'hasvalue': json['hasvalue'],
        'id': json['id'],
        'itemfiles': ((json['itemfiles'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON)),
        'itemnumber': json['itemnumber'],
        'label': json['label'],
        'name': json['name'],
        'options': json['options'],
        'otherdata': json['otherdata'],
        'position': json['position'],
        'presentation': json['presentation'],
        'required': json['required'],
        'template': json['template'],
        'typ': json['typ'],
    };
}

export function ModFeedbackGetAnalysis200ResponseItemsdataInnerItemToJSON(value?: ModFeedbackGetAnalysis200ResponseItemsdataInnerItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'dependitem': value['dependitem'],
        'dependvalue': value['dependvalue'],
        'feedback': value['feedback'],
        'hasvalue': value['hasvalue'],
        'id': value['id'],
        'itemfiles': ((value['itemfiles'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON)),
        'itemnumber': value['itemnumber'],
        'label': value['label'],
        'name': value['name'],
        'options': value['options'],
        'otherdata': value['otherdata'],
        'position': value['position'],
        'presentation': value['presentation'],
        'required': value['required'],
        'template': value['template'],
        'typ': value['typ'],
    };
}

