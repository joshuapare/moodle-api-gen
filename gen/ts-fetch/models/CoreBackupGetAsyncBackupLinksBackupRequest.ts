/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreBackupGetAsyncBackupLinksBackupRequest
 */
export interface CoreBackupGetAsyncBackupLinksBackupRequest {
    /**
     * Backup id
     * @type {string}
     * @memberof CoreBackupGetAsyncBackupLinksBackupRequest
     */
    backupid: string;
    /**
     * Context id
     * @type {number}
     * @memberof CoreBackupGetAsyncBackupLinksBackupRequest
     */
    contextid: number;
    /**
     * Backup filename
     * @type {string}
     * @memberof CoreBackupGetAsyncBackupLinksBackupRequest
     */
    filename: string;
}

/**
 * Check if a given object implements the CoreBackupGetAsyncBackupLinksBackupRequest interface.
 */
export function instanceOfCoreBackupGetAsyncBackupLinksBackupRequest(value: object): boolean {
    if (!('backupid' in value)) return false;
    if (!('contextid' in value)) return false;
    if (!('filename' in value)) return false;
    return true;
}

export function CoreBackupGetAsyncBackupLinksBackupRequestFromJSON(json: any): CoreBackupGetAsyncBackupLinksBackupRequest {
    return CoreBackupGetAsyncBackupLinksBackupRequestFromJSONTyped(json, false);
}

export function CoreBackupGetAsyncBackupLinksBackupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreBackupGetAsyncBackupLinksBackupRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'backupid': json['backupid'],
        'contextid': json['contextid'],
        'filename': json['filename'],
    };
}

export function CoreBackupGetAsyncBackupLinksBackupRequestToJSON(value?: CoreBackupGetAsyncBackupLinksBackupRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'backupid': value['backupid'],
        'contextid': value['contextid'],
        'filename': value['filename'],
    };
}

