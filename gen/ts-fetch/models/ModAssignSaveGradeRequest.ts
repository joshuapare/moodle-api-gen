/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModAssignSaveGradeRequestAdvancedgradingdata } from './ModAssignSaveGradeRequestAdvancedgradingdata';
import {
    ModAssignSaveGradeRequestAdvancedgradingdataFromJSON,
    ModAssignSaveGradeRequestAdvancedgradingdataFromJSONTyped,
    ModAssignSaveGradeRequestAdvancedgradingdataToJSON,
} from './ModAssignSaveGradeRequestAdvancedgradingdata';
import type { ModAssignSaveGradeRequestPlugindata } from './ModAssignSaveGradeRequestPlugindata';
import {
    ModAssignSaveGradeRequestPlugindataFromJSON,
    ModAssignSaveGradeRequestPlugindataFromJSONTyped,
    ModAssignSaveGradeRequestPlugindataToJSON,
} from './ModAssignSaveGradeRequestPlugindata';

/**
 * 
 * @export
 * @interface ModAssignSaveGradeRequest
 */
export interface ModAssignSaveGradeRequest {
    /**
     * Allow another attempt if the attempt reopen method is manual
     * @type {boolean}
     * @memberof ModAssignSaveGradeRequest
     */
    addattempt: boolean;
    /**
     * 
     * @type {ModAssignSaveGradeRequestAdvancedgradingdata}
     * @memberof ModAssignSaveGradeRequest
     */
    advancedgradingdata?: ModAssignSaveGradeRequestAdvancedgradingdata;
    /**
     * If true, this grade will be applied to all members of the group (for group assignments).
     * @type {boolean}
     * @memberof ModAssignSaveGradeRequest
     */
    applytoall: boolean;
    /**
     * The assignment id to operate on
     * @type {number}
     * @memberof ModAssignSaveGradeRequest
     */
    assignmentid: number;
    /**
     * The attempt number (-1 means latest attempt)
     * @type {number}
     * @memberof ModAssignSaveGradeRequest
     */
    attemptnumber: number;
    /**
     * The new grade for this user. Ignored if advanced grading used
     * @type {number}
     * @memberof ModAssignSaveGradeRequest
     */
    grade: number;
    /**
     * 
     * @type {ModAssignSaveGradeRequestPlugindata}
     * @memberof ModAssignSaveGradeRequest
     */
    plugindata?: ModAssignSaveGradeRequestPlugindata;
    /**
     * The student id to operate on
     * @type {number}
     * @memberof ModAssignSaveGradeRequest
     */
    userid: number;
    /**
     * The next marking workflow state
     * @type {string}
     * @memberof ModAssignSaveGradeRequest
     */
    workflowstate: string;
}

/**
 * Check if a given object implements the ModAssignSaveGradeRequest interface.
 */
export function instanceOfModAssignSaveGradeRequest(value: object): boolean {
    if (!('addattempt' in value)) return false;
    if (!('applytoall' in value)) return false;
    if (!('assignmentid' in value)) return false;
    if (!('attemptnumber' in value)) return false;
    if (!('grade' in value)) return false;
    if (!('userid' in value)) return false;
    if (!('workflowstate' in value)) return false;
    return true;
}

export function ModAssignSaveGradeRequestFromJSON(json: any): ModAssignSaveGradeRequest {
    return ModAssignSaveGradeRequestFromJSONTyped(json, false);
}

export function ModAssignSaveGradeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModAssignSaveGradeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'addattempt': json['addattempt'],
        'advancedgradingdata': json['advancedgradingdata'] == null ? undefined : ModAssignSaveGradeRequestAdvancedgradingdataFromJSON(json['advancedgradingdata']),
        'applytoall': json['applytoall'],
        'assignmentid': json['assignmentid'],
        'attemptnumber': json['attemptnumber'],
        'grade': json['grade'],
        'plugindata': json['plugindata'] == null ? undefined : ModAssignSaveGradeRequestPlugindataFromJSON(json['plugindata']),
        'userid': json['userid'],
        'workflowstate': json['workflowstate'],
    };
}

export function ModAssignSaveGradeRequestToJSON(value?: ModAssignSaveGradeRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'addattempt': value['addattempt'],
        'advancedgradingdata': ModAssignSaveGradeRequestAdvancedgradingdataToJSON(value['advancedgradingdata']),
        'applytoall': value['applytoall'],
        'assignmentid': value['assignmentid'],
        'attemptnumber': value['attemptnumber'],
        'grade': value['grade'],
        'plugindata': ModAssignSaveGradeRequestPlugindataToJSON(value['plugindata']),
        'userid': value['userid'],
        'workflowstate': value['workflowstate'],
    };
}

