/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModDataGetEntries200ResponseEntriesInnerContentsInner } from './ModDataGetEntries200ResponseEntriesInnerContentsInner';
import {
    ModDataGetEntries200ResponseEntriesInnerContentsInnerFromJSON,
    ModDataGetEntries200ResponseEntriesInnerContentsInnerFromJSONTyped,
    ModDataGetEntries200ResponseEntriesInnerContentsInnerToJSON,
} from './ModDataGetEntries200ResponseEntriesInnerContentsInner';
import type { ModDataGetEntries200ResponseEntriesInnerTagsInner } from './ModDataGetEntries200ResponseEntriesInnerTagsInner';
import {
    ModDataGetEntries200ResponseEntriesInnerTagsInnerFromJSON,
    ModDataGetEntries200ResponseEntriesInnerTagsInnerFromJSONTyped,
    ModDataGetEntries200ResponseEntriesInnerTagsInnerToJSON,
} from './ModDataGetEntries200ResponseEntriesInnerTagsInner';

/**
 * 
 * @export
 * @interface ModDataGetEntries200ResponseEntriesInner
 */
export interface ModDataGetEntries200ResponseEntriesInner {
    /**
     * Whether the entry has been approved (if the database is configured in that way).
     * @type {boolean}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    approved?: boolean;
    /**
     * Whether the current user can manage this entry
     * @type {boolean}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    canmanageentry?: boolean;
    /**
     * 
     * @type {Array<ModDataGetEntries200ResponseEntriesInnerContentsInner>}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    contents?: Array<ModDataGetEntries200ResponseEntriesInnerContentsInner>;
    /**
     * The database id this record belongs to.
     * @type {number}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    dataid?: number;
    /**
     * The user who created the entry fullname.
     * @type {string}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    fullname?: string;
    /**
     * The group id this record belongs to (0 for no groups).
     * @type {number}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    groupid?: number;
    /**
     * Record id.
     * @type {number}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    id?: number;
    /**
     * 
     * @type {Array<ModDataGetEntries200ResponseEntriesInnerTagsInner>}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    tags?: Array<ModDataGetEntries200ResponseEntriesInnerTagsInner>;
    /**
     * Time the record was created.
     * @type {number}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    timecreated?: number;
    /**
     * Last time the record was modified.
     * @type {number}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    timemodified?: number;
    /**
     * The id of the user who created the record.
     * @type {number}
     * @memberof ModDataGetEntries200ResponseEntriesInner
     */
    userid?: number;
}

/**
 * Check if a given object implements the ModDataGetEntries200ResponseEntriesInner interface.
 */
export function instanceOfModDataGetEntries200ResponseEntriesInner(value: object): boolean {
    return true;
}

export function ModDataGetEntries200ResponseEntriesInnerFromJSON(json: any): ModDataGetEntries200ResponseEntriesInner {
    return ModDataGetEntries200ResponseEntriesInnerFromJSONTyped(json, false);
}

export function ModDataGetEntries200ResponseEntriesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModDataGetEntries200ResponseEntriesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'approved': json['approved'] == null ? undefined : json['approved'],
        'canmanageentry': json['canmanageentry'] == null ? undefined : json['canmanageentry'],
        'contents': json['contents'] == null ? undefined : ((json['contents'] as Array<any>).map(ModDataGetEntries200ResponseEntriesInnerContentsInnerFromJSON)),
        'dataid': json['dataid'] == null ? undefined : json['dataid'],
        'fullname': json['fullname'] == null ? undefined : json['fullname'],
        'groupid': json['groupid'] == null ? undefined : json['groupid'],
        'id': json['id'] == null ? undefined : json['id'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(ModDataGetEntries200ResponseEntriesInnerTagsInnerFromJSON)),
        'timecreated': json['timecreated'] == null ? undefined : json['timecreated'],
        'timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'userid': json['userid'] == null ? undefined : json['userid'],
    };
}

export function ModDataGetEntries200ResponseEntriesInnerToJSON(value?: ModDataGetEntries200ResponseEntriesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'approved': value['approved'],
        'canmanageentry': value['canmanageentry'],
        'contents': value['contents'] == null ? undefined : ((value['contents'] as Array<any>).map(ModDataGetEntries200ResponseEntriesInnerContentsInnerToJSON)),
        'dataid': value['dataid'],
        'fullname': value['fullname'],
        'groupid': value['groupid'],
        'id': value['id'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(ModDataGetEntries200ResponseEntriesInnerTagsInnerToJSON)),
        'timecreated': value['timecreated'],
        'timemodified': value['timemodified'],
        'userid': value['userid'],
    };
}

