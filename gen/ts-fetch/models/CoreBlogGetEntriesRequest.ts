/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlogGetEntriesRequestFiltersInner } from './CoreBlogGetEntriesRequestFiltersInner';
import {
    CoreBlogGetEntriesRequestFiltersInnerFromJSON,
    CoreBlogGetEntriesRequestFiltersInnerFromJSONTyped,
    CoreBlogGetEntriesRequestFiltersInnerToJSON,
} from './CoreBlogGetEntriesRequestFiltersInner';

/**
 * 
 * @export
 * @interface CoreBlogGetEntriesRequest
 */
export interface CoreBlogGetEntriesRequest {
    /**
     * 
     * @type {Array<CoreBlogGetEntriesRequestFiltersInner>}
     * @memberof CoreBlogGetEntriesRequest
     */
    filters?: Array<CoreBlogGetEntriesRequestFiltersInner>;
    /**
     * The blog page to return.
     * @type {number}
     * @memberof CoreBlogGetEntriesRequest
     */
    page?: number;
    /**
     * The number of posts to return per page.
     * @type {number}
     * @memberof CoreBlogGetEntriesRequest
     */
    perpage?: number;
}

/**
 * Check if a given object implements the CoreBlogGetEntriesRequest interface.
 */
export function instanceOfCoreBlogGetEntriesRequest(value: object): boolean {
    return true;
}

export function CoreBlogGetEntriesRequestFromJSON(json: any): CoreBlogGetEntriesRequest {
    return CoreBlogGetEntriesRequestFromJSONTyped(json, false);
}

export function CoreBlogGetEntriesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreBlogGetEntriesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(CoreBlogGetEntriesRequestFiltersInnerFromJSON)),
        'page': json['page'] == null ? undefined : json['page'],
        'perpage': json['perpage'] == null ? undefined : json['perpage'],
    };
}

export function CoreBlogGetEntriesRequestToJSON(value?: CoreBlogGetEntriesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(CoreBlogGetEntriesRequestFiltersInnerToJSON)),
        'page': value['page'],
        'perpage': value['perpage'],
    };
}

