/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';
import type { ModLessonGetPageData200ResponseMessagesInner } from './ModLessonGetPageData200ResponseMessagesInner';
import {
    ModLessonGetPageData200ResponseMessagesInnerFromJSON,
    ModLessonGetPageData200ResponseMessagesInnerFromJSONTyped,
    ModLessonGetPageData200ResponseMessagesInnerToJSON,
} from './ModLessonGetPageData200ResponseMessagesInner';

/**
 * 
 * @export
 * @interface ModLessonProcessPage200Response
 */
export interface ModLessonProcessPage200Response {
    /**
     * Number of attempts remaining.
     * @type {number}
     * @memberof ModLessonProcessPage200Response
     */
    attemptsremaining: number;
    /**
     * Whether the answer is correct.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    correctanswer: boolean;
    /**
     * Whether we should display the menu or not in this page.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    displaymenu: boolean;
    /**
     * The response feedback.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    feedback: string;
    /**
     * Whether the page processing redirect directly to anoter page.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    inmediatejump: boolean;
    /**
     * Whether is a essay question.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    isessayquestion: boolean;
    /**
     * Whether we reachered the max number of attempts.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    maxattemptsreached: boolean;
    /**
     * 
     * @type {Array<ModLessonGetPageData200ResponseMessagesInner>}
     * @memberof ModLessonProcessPage200Response
     */
    messages: Array<ModLessonGetPageData200ResponseMessagesInner>;
    /**
     * New page id (if a jump was made).
     * @type {number}
     * @memberof ModLessonProcessPage200Response
     */
    newpageid: number;
    /**
     * Whether there aren't answers.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    noanswer: boolean;
    /**
     * Whether there is not a default response.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    nodefaultresponse: boolean;
    /**
     * The ongoing message.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    ongoingscore: string;
    /**
     * Progress percentage in the lesson.
     * @type {number}
     * @memberof ModLessonProcessPage200Response
     */
    progress: number;
    /**
     * The response.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    response: string;
    /**
     * Whether the user is reviewing.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    reviewmode: boolean;
    /**
     * The student answer.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    studentanswer: string;
    /**
     * The user response.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    userresponse: string;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModLessonProcessPage200Response
     */
    warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModLessonProcessPage200Response interface.
 */
export function instanceOfModLessonProcessPage200Response(value: object): boolean {
    if (!('attemptsremaining' in value)) return false;
    if (!('correctanswer' in value)) return false;
    if (!('displaymenu' in value)) return false;
    if (!('feedback' in value)) return false;
    if (!('inmediatejump' in value)) return false;
    if (!('isessayquestion' in value)) return false;
    if (!('maxattemptsreached' in value)) return false;
    if (!('messages' in value)) return false;
    if (!('newpageid' in value)) return false;
    if (!('noanswer' in value)) return false;
    if (!('nodefaultresponse' in value)) return false;
    if (!('ongoingscore' in value)) return false;
    if (!('progress' in value)) return false;
    if (!('response' in value)) return false;
    if (!('reviewmode' in value)) return false;
    if (!('studentanswer' in value)) return false;
    if (!('userresponse' in value)) return false;
    return true;
}

export function ModLessonProcessPage200ResponseFromJSON(json: any): ModLessonProcessPage200Response {
    return ModLessonProcessPage200ResponseFromJSONTyped(json, false);
}

export function ModLessonProcessPage200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonProcessPage200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'attemptsremaining': json['attemptsremaining'],
        'correctanswer': json['correctanswer'],
        'displaymenu': json['displaymenu'],
        'feedback': json['feedback'],
        'inmediatejump': json['inmediatejump'],
        'isessayquestion': json['isessayquestion'],
        'maxattemptsreached': json['maxattemptsreached'],
        'messages': ((json['messages'] as Array<any>).map(ModLessonGetPageData200ResponseMessagesInnerFromJSON)),
        'newpageid': json['newpageid'],
        'noanswer': json['noanswer'],
        'nodefaultresponse': json['nodefaultresponse'],
        'ongoingscore': json['ongoingscore'],
        'progress': json['progress'],
        'response': json['response'],
        'reviewmode': json['reviewmode'],
        'studentanswer': json['studentanswer'],
        'userresponse': json['userresponse'],
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModLessonProcessPage200ResponseToJSON(value?: ModLessonProcessPage200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attemptsremaining': value['attemptsremaining'],
        'correctanswer': value['correctanswer'],
        'displaymenu': value['displaymenu'],
        'feedback': value['feedback'],
        'inmediatejump': value['inmediatejump'],
        'isessayquestion': value['isessayquestion'],
        'maxattemptsreached': value['maxattemptsreached'],
        'messages': ((value['messages'] as Array<any>).map(ModLessonGetPageData200ResponseMessagesInnerToJSON)),
        'newpageid': value['newpageid'],
        'noanswer': value['noanswer'],
        'nodefaultresponse': value['nodefaultresponse'],
        'ongoingscore': value['ongoingscore'],
        'progress': value['progress'],
        'response': value['response'],
        'reviewmode': value['reviewmode'],
        'studentanswer': value['studentanswer'],
        'userresponse': value['userresponse'],
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

