/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  ToolAnalyticsPotentialContextsRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ToolAnalyticsPotentialContextsRequestFromJSON,
    ToolAnalyticsPotentialContextsRequestToJSON,
} from '../models/index';

export interface ToolAnalyticsPotentialContextsOperationRequest {
    toolAnalyticsPotentialContextsRequest: ToolAnalyticsPotentialContextsRequest;
}

/**
 * 
 */
export class ToolAnalyticsApi extends runtime.BaseAPI {

    /**
     * Retrieve the list of potential contexts for a model.
     * Retrieve the list of potential contexts for a model.
     */
    async toolAnalyticsPotentialContextsRaw(requestParameters: ToolAnalyticsPotentialContextsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['toolAnalyticsPotentialContextsRequest'] == null) {
            throw new runtime.RequiredError(
                'toolAnalyticsPotentialContextsRequest',
                'Required parameter "toolAnalyticsPotentialContextsRequest" was null or undefined when calling toolAnalyticsPotentialContexts().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/tool_analytics_potential_contexts`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ToolAnalyticsPotentialContextsRequestToJSON(requestParameters['toolAnalyticsPotentialContextsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Retrieve the list of potential contexts for a model.
     * Retrieve the list of potential contexts for a model.
     */
    async toolAnalyticsPotentialContexts(requestParameters: ToolAnalyticsPotentialContextsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.toolAnalyticsPotentialContextsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
