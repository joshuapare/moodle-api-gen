/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  ReportCompetencyDataForReport200Response,
  ReportCompetencyDataForReportRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ReportCompetencyDataForReport200ResponseFromJSON,
    ReportCompetencyDataForReport200ResponseToJSON,
    ReportCompetencyDataForReportRequestFromJSON,
    ReportCompetencyDataForReportRequestToJSON,
} from '../models/index';

export interface ReportCompetencyDataForReportOperationRequest {
    reportCompetencyDataForReportRequest: ReportCompetencyDataForReportRequest;
}

/**
 * 
 */
export class ReportCompetencyApi extends runtime.BaseAPI {

    /**
     * Load the data for the competency report in a course.
     * Load the data for the competency report in a course.
     */
    async reportCompetencyDataForReportRaw(requestParameters: ReportCompetencyDataForReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReportCompetencyDataForReport200Response>> {
        if (requestParameters['reportCompetencyDataForReportRequest'] == null) {
            throw new runtime.RequiredError(
                'reportCompetencyDataForReportRequest',
                'Required parameter "reportCompetencyDataForReportRequest" was null or undefined when calling reportCompetencyDataForReport().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/report_competency_data_for_report`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ReportCompetencyDataForReportRequestToJSON(requestParameters['reportCompetencyDataForReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReportCompetencyDataForReport200ResponseFromJSON(jsonValue));
    }

    /**
     * Load the data for the competency report in a course.
     * Load the data for the competency report in a course.
     */
    async reportCompetencyDataForReport(requestParameters: ReportCompetencyDataForReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReportCompetencyDataForReport200Response> {
        const response = await this.reportCompetencyDataForReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
