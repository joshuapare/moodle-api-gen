/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CoreCalendarDeleteSubscription200Response,
  ErrorResponse,
  GradereportOverviewViewGradeReportRequest,
  GradereportUserGetAccessInformation200Response,
  GradereportUserGetAccessInformationRequest,
  GradereportUserGetGradeItems200Response,
  GradereportUserGetGradeItemsRequest,
  GradereportUserGetGradesTable200Response,
} from '../models/index';
import {
    CoreCalendarDeleteSubscription200ResponseFromJSON,
    CoreCalendarDeleteSubscription200ResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GradereportOverviewViewGradeReportRequestFromJSON,
    GradereportOverviewViewGradeReportRequestToJSON,
    GradereportUserGetAccessInformation200ResponseFromJSON,
    GradereportUserGetAccessInformation200ResponseToJSON,
    GradereportUserGetAccessInformationRequestFromJSON,
    GradereportUserGetAccessInformationRequestToJSON,
    GradereportUserGetGradeItems200ResponseFromJSON,
    GradereportUserGetGradeItems200ResponseToJSON,
    GradereportUserGetGradeItemsRequestFromJSON,
    GradereportUserGetGradeItemsRequestToJSON,
    GradereportUserGetGradesTable200ResponseFromJSON,
    GradereportUserGetGradesTable200ResponseToJSON,
} from '../models/index';

export interface GradereportUserGetAccessInformationOperationRequest {
    gradereportUserGetAccessInformationRequest: GradereportUserGetAccessInformationRequest;
}

export interface GradereportUserGetGradeItemsOperationRequest {
    gradereportUserGetGradeItemsRequest: GradereportUserGetGradeItemsRequest;
}

export interface GradereportUserGetGradesTableRequest {
    gradereportUserGetGradeItemsRequest: GradereportUserGetGradeItemsRequest;
}

export interface GradereportUserViewGradeReportRequest {
    gradereportOverviewViewGradeReportRequest: GradereportOverviewViewGradeReportRequest;
}

/**
 * 
 */
export class GradereportUserApi extends runtime.BaseAPI {

    /**
     * Returns user access information for the user grade report.
     * Returns user access information for the user grade report.
     */
    async gradereportUserGetAccessInformationRaw(requestParameters: GradereportUserGetAccessInformationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GradereportUserGetAccessInformation200Response>> {
        if (requestParameters['gradereportUserGetAccessInformationRequest'] == null) {
            throw new runtime.RequiredError(
                'gradereportUserGetAccessInformationRequest',
                'Required parameter "gradereportUserGetAccessInformationRequest" was null or undefined when calling gradereportUserGetAccessInformation().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/gradereport_user_get_access_information`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GradereportUserGetAccessInformationRequestToJSON(requestParameters['gradereportUserGetAccessInformationRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GradereportUserGetAccessInformation200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns user access information for the user grade report.
     * Returns user access information for the user grade report.
     */
    async gradereportUserGetAccessInformation(requestParameters: GradereportUserGetAccessInformationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GradereportUserGetAccessInformation200Response> {
        const response = await this.gradereportUserGetAccessInformationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns the complete list of grade items for users in a course
     * Returns the complete list of grade items for users in a course
     */
    async gradereportUserGetGradeItemsRaw(requestParameters: GradereportUserGetGradeItemsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GradereportUserGetGradeItems200Response>> {
        if (requestParameters['gradereportUserGetGradeItemsRequest'] == null) {
            throw new runtime.RequiredError(
                'gradereportUserGetGradeItemsRequest',
                'Required parameter "gradereportUserGetGradeItemsRequest" was null or undefined when calling gradereportUserGetGradeItems().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/gradereport_user_get_grade_items`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GradereportUserGetGradeItemsRequestToJSON(requestParameters['gradereportUserGetGradeItemsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GradereportUserGetGradeItems200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the complete list of grade items for users in a course
     * Returns the complete list of grade items for users in a course
     */
    async gradereportUserGetGradeItems(requestParameters: GradereportUserGetGradeItemsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GradereportUserGetGradeItems200Response> {
        const response = await this.gradereportUserGetGradeItemsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the user/s report grades table for a course
     * Get the user/s report grades table for a course
     */
    async gradereportUserGetGradesTableRaw(requestParameters: GradereportUserGetGradesTableRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GradereportUserGetGradesTable200Response>> {
        if (requestParameters['gradereportUserGetGradeItemsRequest'] == null) {
            throw new runtime.RequiredError(
                'gradereportUserGetGradeItemsRequest',
                'Required parameter "gradereportUserGetGradeItemsRequest" was null or undefined when calling gradereportUserGetGradesTable().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/gradereport_user_get_grades_table`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GradereportUserGetGradeItemsRequestToJSON(requestParameters['gradereportUserGetGradeItemsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GradereportUserGetGradesTable200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the user/s report grades table for a course
     * Get the user/s report grades table for a course
     */
    async gradereportUserGetGradesTable(requestParameters: GradereportUserGetGradesTableRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GradereportUserGetGradesTable200Response> {
        const response = await this.gradereportUserGetGradesTableRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Trigger the report view event
     * Trigger the report view event
     */
    async gradereportUserViewGradeReportRaw(requestParameters: GradereportUserViewGradeReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CoreCalendarDeleteSubscription200Response>> {
        if (requestParameters['gradereportOverviewViewGradeReportRequest'] == null) {
            throw new runtime.RequiredError(
                'gradereportOverviewViewGradeReportRequest',
                'Required parameter "gradereportOverviewViewGradeReportRequest" was null or undefined when calling gradereportUserViewGradeReport().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/gradereport_user_view_grade_report`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GradereportOverviewViewGradeReportRequestToJSON(requestParameters['gradereportOverviewViewGradeReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CoreCalendarDeleteSubscription200ResponseFromJSON(jsonValue));
    }

    /**
     * Trigger the report view event
     * Trigger the report view event
     */
    async gradereportUserViewGradeReport(requestParameters: GradereportUserViewGradeReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CoreCalendarDeleteSubscription200Response> {
        const response = await this.gradereportUserViewGradeReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
