/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModWorkshopGetSubmissionsRequest
 */
export interface ModWorkshopGetSubmissionsRequest {
    /**
     * Group id, 0 means that the function will determine the user group.
     *                                                    It will return submissions done by users in the given group.
     * @type {number}
     * @memberof ModWorkshopGetSubmissionsRequest
     */
    Groupid?: number;
    /**
     * The page of records to return.
     * @type {number}
     * @memberof ModWorkshopGetSubmissionsRequest
     */
    Page?: number;
    /**
     * The number of records to return per page.
     * @type {number}
     * @memberof ModWorkshopGetSubmissionsRequest
     */
    Perpage?: number;
    /**
     * Get submissions done by this user. Use 0 or empty for the current user
     * @type {number}
     * @memberof ModWorkshopGetSubmissionsRequest
     */
    Userid?: number;
    /**
     * Workshop instance id.
     * @type {number}
     * @memberof ModWorkshopGetSubmissionsRequest
     */
    Workshopid: number;
}

/**
 * Check if a given object implements the ModWorkshopGetSubmissionsRequest interface.
 */
export function instanceOfModWorkshopGetSubmissionsRequest(value: object): boolean {
    if (!('Workshopid' in value)) return false;
    return true;
}

export function ModWorkshopGetSubmissionsRequestFromJSON(json: any): ModWorkshopGetSubmissionsRequest {
    return ModWorkshopGetSubmissionsRequestFromJSONTyped(json, false);
}

export function ModWorkshopGetSubmissionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModWorkshopGetSubmissionsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Groupid': json['groupid'] == null ? undefined : json['groupid'],
        'Page': json['page'] == null ? undefined : json['page'],
        'Perpage': json['perpage'] == null ? undefined : json['perpage'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
        'Workshopid': json['workshopid'],
    };
}

export function ModWorkshopGetSubmissionsRequestToJSON(value?: ModWorkshopGetSubmissionsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'groupid': value['Groupid'],
        'page': value['Page'],
        'perpage': value['Perpage'],
        'userid': value['Userid'],
        'workshopid': value['Workshopid'],
    };
}

