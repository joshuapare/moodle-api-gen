/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner } from './CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner';
import {
    CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerFromJSON,
    CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerFromJSONTyped,
    CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerToJSON,
} from './CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner';

/**
 * Activity
 * @export
 * @interface CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
 */
export interface CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
    /**
     * course module ID
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Cmid?: number;
    /**
     * 
     * @type {Array<CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner>}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Details?: Array<CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner>;
    /**
     * Whether this activity module has completion enabled
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Hascompletion?: boolean;
    /**
     * instance ID
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Instance?: number;
    /**
     * Whether this activity module instance tracks completion automatically.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Isautomatic?: boolean;
    /**
     * Whether completion is being tracked for this user.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Istrackeduser?: boolean;
    /**
     * activity module name
     * @type {string}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Modname?: string;
    /**
     * The user id who has overriden the status, or null
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Overrideby?: number;
    /**
     * Completion state value:
     *                                     0 means incomplete,
     *                                     1 complete,
     *                                     2 complete pass,
     *                                     3 complete fail
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    State?: number;
    /**
     * timestamp for completed activity
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Timecompleted?: number;
    /**
     * type of tracking:
     *                                     0 means none,
     *                                     1 manual,
     *                                     2 automatic
     * @type {number}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Tracking?: number;
    /**
     * Whether this activity is visible to the user.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Uservisible?: boolean;
    /**
     * Whether the completion status affects the availability of another activity.
     * @type {boolean}
     * @memberof CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
     */
    Valueused?: boolean;
}

/**
 * Check if a given object implements the CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner interface.
 */
export function instanceOfCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner(value: object): boolean {
    return true;
}

export function CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerFromJSON(json: any): CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
    return CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerFromJSONTyped(json, false);
}

export function CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Cmid': json['cmid'] == null ? undefined : json['cmid'],
        'Details': json['details'] == null ? undefined : ((json['details'] as Array<any>).map(CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerFromJSON)),
        'Hascompletion': json['hascompletion'] == null ? undefined : json['hascompletion'],
        'Instance': json['instance'] == null ? undefined : json['instance'],
        'Isautomatic': json['isautomatic'] == null ? undefined : json['isautomatic'],
        'Istrackeduser': json['istrackeduser'] == null ? undefined : json['istrackeduser'],
        'Modname': json['modname'] == null ? undefined : json['modname'],
        'Overrideby': json['overrideby'] == null ? undefined : json['overrideby'],
        'State': json['state'] == null ? undefined : json['state'],
        'Timecompleted': json['timecompleted'] == null ? undefined : json['timecompleted'],
        'Tracking': json['tracking'] == null ? undefined : json['tracking'],
        'Uservisible': json['uservisible'] == null ? undefined : json['uservisible'],
        'Valueused': json['valueused'] == null ? undefined : json['valueused'],
    };
}

export function CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerToJSON(value?: CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cmid': value['Cmid'],
        'details': value['Details'] == null ? undefined : ((value['Details'] as Array<any>).map(CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInnerToJSON)),
        'hascompletion': value['Hascompletion'],
        'instance': value['Instance'],
        'isautomatic': value['Isautomatic'],
        'istrackeduser': value['Istrackeduser'],
        'modname': value['Modname'],
        'overrideby': value['Overrideby'],
        'state': value['State'],
        'timecompleted': value['Timecompleted'],
        'tracking': value['Tracking'],
        'uservisible': value['Uservisible'],
        'valueused': value['Valueused'],
    };
}

