/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';
import {
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSONTyped,
    CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON,
} from './CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner';

/**
 * 
 * @export
 * @interface ModWorkshopGetSubmission200ResponseSubmission
 */
export interface ModWorkshopGetSubmission200ResponseSubmission {
    /**
     * Used by File API file_postupdate_standard_filemanager.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Attachment: number;
    /**
     * 
     * @type {Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Attachmentfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * The author of the submission.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Authorid: number;
    /**
     * Submission text.
     * @type {string}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Content: string;
    /**
     * 
     * @type {Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Contentfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Contentformat?: number;
    /**
     * The trust mode of the data.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Contenttrust: number;
    /**
     * Is this submission an example from teacher.
     * @type {boolean}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Example: boolean;
    /**
     * Teacher comment/feedback for the author of the submission, for example describing the reasons
     *                     for the grade overriding.
     * @type {string}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Feedbackauthor?: string;
    /**
     * feedbackauthor format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Feedbackauthorformat?: number;
    /**
     * Aggregated grade for the submission. The grade is a decimal number from interval 0..100.
     *                     If NULL then the grade for submission has not been aggregated yet.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Grade?: number;
    /**
     * Grade for the submission manually overridden by a teacher. Grade is always from interval 0..100.
     *                     If NULL then the grade is not overriden.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Gradeover?: number;
    /**
     * The id of the user who has overridden the grade for submission.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Gradeoverby?: number;
    /**
     * The primary key of the record.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Id: number;
    /**
     * Has this submission been submitted after the deadline or during the assessment phase?
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Late: number;
    /**
     * Shall the submission be available to other when the workshop is closed.
     * @type {boolean}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Published: boolean;
    /**
     * Timestamp when the work was submitted for the first time.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Timecreated: number;
    /**
     * The timestamp when grade or gradeover was recently modified.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Timegraded?: number;
    /**
     * Timestamp when the submission has been updated.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Timemodified: number;
    /**
     * The submission title.
     * @type {string}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Title: string;
    /**
     * The id of the workshop instance.
     * @type {number}
     * @memberof ModWorkshopGetSubmission200ResponseSubmission
     */
    Workshopid: number;
}

/**
 * Check if a given object implements the ModWorkshopGetSubmission200ResponseSubmission interface.
 */
export function instanceOfModWorkshopGetSubmission200ResponseSubmission(value: object): boolean {
    if (!('Attachment' in value)) return false;
    if (!('Authorid' in value)) return false;
    if (!('Content' in value)) return false;
    if (!('Contenttrust' in value)) return false;
    if (!('Example' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Late' in value)) return false;
    if (!('Published' in value)) return false;
    if (!('Timecreated' in value)) return false;
    if (!('Timemodified' in value)) return false;
    if (!('Title' in value)) return false;
    if (!('Workshopid' in value)) return false;
    return true;
}

export function ModWorkshopGetSubmission200ResponseSubmissionFromJSON(json: any): ModWorkshopGetSubmission200ResponseSubmission {
    return ModWorkshopGetSubmission200ResponseSubmissionFromJSONTyped(json, false);
}

export function ModWorkshopGetSubmission200ResponseSubmissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModWorkshopGetSubmission200ResponseSubmission {
    if (json == null) {
        return json;
    }
    return {
        
        'Attachment': json['attachment'],
        'Attachmentfiles': json['attachmentfiles'] == null ? undefined : ((json['attachmentfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON)),
        'Authorid': json['authorid'],
        'Content': json['content'],
        'Contentfiles': json['contentfiles'] == null ? undefined : ((json['contentfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerFromJSON)),
        'Contentformat': json['contentformat'] == null ? undefined : json['contentformat'],
        'Contenttrust': json['contenttrust'],
        'Example': json['example'],
        'Feedbackauthor': json['feedbackauthor'] == null ? undefined : json['feedbackauthor'],
        'Feedbackauthorformat': json['feedbackauthorformat'] == null ? undefined : json['feedbackauthorformat'],
        'Grade': json['grade'] == null ? undefined : json['grade'],
        'Gradeover': json['gradeover'] == null ? undefined : json['gradeover'],
        'Gradeoverby': json['gradeoverby'] == null ? undefined : json['gradeoverby'],
        'Id': json['id'],
        'Late': json['late'],
        'Published': json['published'],
        'Timecreated': json['timecreated'],
        'Timegraded': json['timegraded'] == null ? undefined : json['timegraded'],
        'Timemodified': json['timemodified'],
        'Title': json['title'],
        'Workshopid': json['workshopid'],
    };
}

export function ModWorkshopGetSubmission200ResponseSubmissionToJSON(value?: ModWorkshopGetSubmission200ResponseSubmission | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attachment': value['Attachment'],
        'attachmentfiles': value['Attachmentfiles'] == null ? undefined : ((value['Attachmentfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON)),
        'authorid': value['Authorid'],
        'content': value['Content'],
        'contentfiles': value['Contentfiles'] == null ? undefined : ((value['Contentfiles'] as Array<any>).map(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInnerToJSON)),
        'contentformat': value['Contentformat'],
        'contenttrust': value['Contenttrust'],
        'example': value['Example'],
        'feedbackauthor': value['Feedbackauthor'],
        'feedbackauthorformat': value['Feedbackauthorformat'],
        'grade': value['Grade'],
        'gradeover': value['Gradeover'],
        'gradeoverby': value['Gradeoverby'],
        'id': value['Id'],
        'late': value['Late'],
        'published': value['Published'],
        'timecreated': value['Timecreated'],
        'timegraded': value['Timegraded'],
        'timemodified': value['Timemodified'],
        'title': value['Title'],
        'workshopid': value['Workshopid'],
    };
}

