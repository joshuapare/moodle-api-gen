/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ToolUsertoursCompleteTourRequest
 */
export interface ToolUsertoursCompleteTourRequest {
    /**
     * Context ID
     * @type {number}
     * @memberof ToolUsertoursCompleteTourRequest
     */
    Context: number;
    /**
     * Page URL
     * @type {string}
     * @memberof ToolUsertoursCompleteTourRequest
     */
    Pageurl: string;
    /**
     * Step ID
     * @type {number}
     * @memberof ToolUsertoursCompleteTourRequest
     */
    Stepid: number;
    /**
     * Step Number
     * @type {number}
     * @memberof ToolUsertoursCompleteTourRequest
     */
    Stepindex: number;
    /**
     * Tour ID
     * @type {number}
     * @memberof ToolUsertoursCompleteTourRequest
     */
    Tourid: number;
}

/**
 * Check if a given object implements the ToolUsertoursCompleteTourRequest interface.
 */
export function instanceOfToolUsertoursCompleteTourRequest(value: object): boolean {
    if (!('Context' in value)) return false;
    if (!('Pageurl' in value)) return false;
    if (!('Stepid' in value)) return false;
    if (!('Stepindex' in value)) return false;
    if (!('Tourid' in value)) return false;
    return true;
}

export function ToolUsertoursCompleteTourRequestFromJSON(json: any): ToolUsertoursCompleteTourRequest {
    return ToolUsertoursCompleteTourRequestFromJSONTyped(json, false);
}

export function ToolUsertoursCompleteTourRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolUsertoursCompleteTourRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Context': json['context'],
        'Pageurl': json['pageurl'],
        'Stepid': json['stepid'],
        'Stepindex': json['stepindex'],
        'Tourid': json['tourid'],
    };
}

export function ToolUsertoursCompleteTourRequestToJSON(value?: ToolUsertoursCompleteTourRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'context': value['Context'],
        'pageurl': value['Pageurl'],
        'stepid': value['Stepid'],
        'stepindex': value['Stepindex'],
        'tourid': value['Tourid'],
    };
}

