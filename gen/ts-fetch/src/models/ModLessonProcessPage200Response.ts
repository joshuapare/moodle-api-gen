/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';
import type { ModLessonGetPageData200ResponseMessagesInner } from './ModLessonGetPageData200ResponseMessagesInner';
import {
    ModLessonGetPageData200ResponseMessagesInnerFromJSON,
    ModLessonGetPageData200ResponseMessagesInnerFromJSONTyped,
    ModLessonGetPageData200ResponseMessagesInnerToJSON,
} from './ModLessonGetPageData200ResponseMessagesInner';

/**
 * 
 * @export
 * @interface ModLessonProcessPage200Response
 */
export interface ModLessonProcessPage200Response {
    /**
     * Number of attempts remaining.
     * @type {number}
     * @memberof ModLessonProcessPage200Response
     */
    Attemptsremaining: number;
    /**
     * Whether the answer is correct.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Correctanswer: boolean;
    /**
     * Whether we should display the menu or not in this page.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Displaymenu: boolean;
    /**
     * The response feedback.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    Feedback: string;
    /**
     * Whether the page processing redirect directly to anoter page.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Inmediatejump: boolean;
    /**
     * Whether is a essay question.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Isessayquestion: boolean;
    /**
     * Whether we reachered the max number of attempts.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Maxattemptsreached: boolean;
    /**
     * 
     * @type {Array<ModLessonGetPageData200ResponseMessagesInner>}
     * @memberof ModLessonProcessPage200Response
     */
    Messages: Array<ModLessonGetPageData200ResponseMessagesInner>;
    /**
     * New page id (if a jump was made).
     * @type {number}
     * @memberof ModLessonProcessPage200Response
     */
    Newpageid: number;
    /**
     * Whether there aren't answers.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Noanswer: boolean;
    /**
     * Whether there is not a default response.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Nodefaultresponse: boolean;
    /**
     * The ongoing message.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    Ongoingscore: string;
    /**
     * Progress percentage in the lesson.
     * @type {number}
     * @memberof ModLessonProcessPage200Response
     */
    Progress: number;
    /**
     * The response.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    Response: string;
    /**
     * Whether the user is reviewing.
     * @type {boolean}
     * @memberof ModLessonProcessPage200Response
     */
    Reviewmode: boolean;
    /**
     * The student answer.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    Studentanswer: string;
    /**
     * The user response.
     * @type {string}
     * @memberof ModLessonProcessPage200Response
     */
    Userresponse: string;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModLessonProcessPage200Response
     */
    Warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModLessonProcessPage200Response interface.
 */
export function instanceOfModLessonProcessPage200Response(value: object): boolean {
    if (!('Attemptsremaining' in value)) return false;
    if (!('Correctanswer' in value)) return false;
    if (!('Displaymenu' in value)) return false;
    if (!('Feedback' in value)) return false;
    if (!('Inmediatejump' in value)) return false;
    if (!('Isessayquestion' in value)) return false;
    if (!('Maxattemptsreached' in value)) return false;
    if (!('Messages' in value)) return false;
    if (!('Newpageid' in value)) return false;
    if (!('Noanswer' in value)) return false;
    if (!('Nodefaultresponse' in value)) return false;
    if (!('Ongoingscore' in value)) return false;
    if (!('Progress' in value)) return false;
    if (!('Response' in value)) return false;
    if (!('Reviewmode' in value)) return false;
    if (!('Studentanswer' in value)) return false;
    if (!('Userresponse' in value)) return false;
    return true;
}

export function ModLessonProcessPage200ResponseFromJSON(json: any): ModLessonProcessPage200Response {
    return ModLessonProcessPage200ResponseFromJSONTyped(json, false);
}

export function ModLessonProcessPage200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonProcessPage200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Attemptsremaining': json['attemptsremaining'],
        'Correctanswer': json['correctanswer'],
        'Displaymenu': json['displaymenu'],
        'Feedback': json['feedback'],
        'Inmediatejump': json['inmediatejump'],
        'Isessayquestion': json['isessayquestion'],
        'Maxattemptsreached': json['maxattemptsreached'],
        'Messages': ((json['messages'] as Array<any>).map(ModLessonGetPageData200ResponseMessagesInnerFromJSON)),
        'Newpageid': json['newpageid'],
        'Noanswer': json['noanswer'],
        'Nodefaultresponse': json['nodefaultresponse'],
        'Ongoingscore': json['ongoingscore'],
        'Progress': json['progress'],
        'Response': json['response'],
        'Reviewmode': json['reviewmode'],
        'Studentanswer': json['studentanswer'],
        'Userresponse': json['userresponse'],
        'Warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModLessonProcessPage200ResponseToJSON(value?: ModLessonProcessPage200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attemptsremaining': value['Attemptsremaining'],
        'correctanswer': value['Correctanswer'],
        'displaymenu': value['Displaymenu'],
        'feedback': value['Feedback'],
        'inmediatejump': value['Inmediatejump'],
        'isessayquestion': value['Isessayquestion'],
        'maxattemptsreached': value['Maxattemptsreached'],
        'messages': ((value['Messages'] as Array<any>).map(ModLessonGetPageData200ResponseMessagesInnerToJSON)),
        'newpageid': value['Newpageid'],
        'noanswer': value['Noanswer'],
        'nodefaultresponse': value['Nodefaultresponse'],
        'ongoingscore': value['Ongoingscore'],
        'progress': value['Progress'],
        'response': value['Response'],
        'reviewmode': value['Reviewmode'],
        'studentanswer': value['Studentanswer'],
        'userresponse': value['Userresponse'],
        'warnings': value['Warnings'] == null ? undefined : ((value['Warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

