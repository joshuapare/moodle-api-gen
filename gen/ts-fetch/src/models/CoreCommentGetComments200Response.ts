/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';
import type { CoreCommentGetComments200ResponseCommentsInner } from './CoreCommentGetComments200ResponseCommentsInner';
import {
    CoreCommentGetComments200ResponseCommentsInnerFromJSON,
    CoreCommentGetComments200ResponseCommentsInnerFromJSONTyped,
    CoreCommentGetComments200ResponseCommentsInnerToJSON,
} from './CoreCommentGetComments200ResponseCommentsInner';

/**
 * 
 * @export
 * @interface CoreCommentGetComments200Response
 */
export interface CoreCommentGetComments200Response {
    /**
     * Whether the user can post in this comment area.
     * @type {boolean}
     * @memberof CoreCommentGetComments200Response
     */
    Canpost?: boolean;
    /**
     * 
     * @type {Array<CoreCommentGetComments200ResponseCommentsInner>}
     * @memberof CoreCommentGetComments200Response
     */
    Comments: Array<CoreCommentGetComments200ResponseCommentsInner>;
    /**
     * Total number of comments.
     * @type {number}
     * @memberof CoreCommentGetComments200Response
     */
    Count?: number;
    /**
     * Number of comments per page.
     * @type {number}
     * @memberof CoreCommentGetComments200Response
     */
    Perpage?: number;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof CoreCommentGetComments200Response
     */
    Warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the CoreCommentGetComments200Response interface.
 */
export function instanceOfCoreCommentGetComments200Response(value: object): boolean {
    if (!('Comments' in value)) return false;
    return true;
}

export function CoreCommentGetComments200ResponseFromJSON(json: any): CoreCommentGetComments200Response {
    return CoreCommentGetComments200ResponseFromJSONTyped(json, false);
}

export function CoreCommentGetComments200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCommentGetComments200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Canpost': json['canpost'] == null ? undefined : json['canpost'],
        'Comments': ((json['comments'] as Array<any>).map(CoreCommentGetComments200ResponseCommentsInnerFromJSON)),
        'Count': json['count'] == null ? undefined : json['count'],
        'Perpage': json['perpage'] == null ? undefined : json['perpage'],
        'Warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function CoreCommentGetComments200ResponseToJSON(value?: CoreCommentGetComments200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canpost': value['Canpost'],
        'comments': ((value['Comments'] as Array<any>).map(CoreCommentGetComments200ResponseCommentsInnerToJSON)),
        'count': value['Count'],
        'perpage': value['Perpage'],
        'warnings': value['Warnings'] == null ? undefined : ((value['Warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

