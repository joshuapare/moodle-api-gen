/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessagePopupGetPopupNotifications200ResponseNotificationsInner } from './MessagePopupGetPopupNotifications200ResponseNotificationsInner';
import {
    MessagePopupGetPopupNotifications200ResponseNotificationsInnerFromJSON,
    MessagePopupGetPopupNotifications200ResponseNotificationsInnerFromJSONTyped,
    MessagePopupGetPopupNotifications200ResponseNotificationsInnerToJSON,
} from './MessagePopupGetPopupNotifications200ResponseNotificationsInner';

/**
 * 
 * @export
 * @interface MessagePopupGetPopupNotifications200Response
 */
export interface MessagePopupGetPopupNotifications200Response {
    /**
     * 
     * @type {Array<MessagePopupGetPopupNotifications200ResponseNotificationsInner>}
     * @memberof MessagePopupGetPopupNotifications200Response
     */
    Notifications: Array<MessagePopupGetPopupNotifications200ResponseNotificationsInner>;
    /**
     * the number of unread message for the given user
     * @type {number}
     * @memberof MessagePopupGetPopupNotifications200Response
     */
    Unreadcount: number;
}

/**
 * Check if a given object implements the MessagePopupGetPopupNotifications200Response interface.
 */
export function instanceOfMessagePopupGetPopupNotifications200Response(value: object): boolean {
    if (!('Notifications' in value)) return false;
    if (!('Unreadcount' in value)) return false;
    return true;
}

export function MessagePopupGetPopupNotifications200ResponseFromJSON(json: any): MessagePopupGetPopupNotifications200Response {
    return MessagePopupGetPopupNotifications200ResponseFromJSONTyped(json, false);
}

export function MessagePopupGetPopupNotifications200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagePopupGetPopupNotifications200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Notifications': ((json['notifications'] as Array<any>).map(MessagePopupGetPopupNotifications200ResponseNotificationsInnerFromJSON)),
        'Unreadcount': json['unreadcount'],
    };
}

export function MessagePopupGetPopupNotifications200ResponseToJSON(value?: MessagePopupGetPopupNotifications200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'notifications': ((value['Notifications'] as Array<any>).map(MessagePopupGetPopupNotifications200ResponseNotificationsInnerToJSON)),
        'unreadcount': value['Unreadcount'],
    };
}

