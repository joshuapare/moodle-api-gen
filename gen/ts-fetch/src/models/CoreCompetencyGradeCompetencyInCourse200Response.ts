/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCompetencyGradeCompetency200ResponseActionuser } from './CoreCompetencyGradeCompetency200ResponseActionuser';
import {
    CoreCompetencyGradeCompetency200ResponseActionuserFromJSON,
    CoreCompetencyGradeCompetency200ResponseActionuserFromJSONTyped,
    CoreCompetencyGradeCompetency200ResponseActionuserToJSON,
} from './CoreCompetencyGradeCompetency200ResponseActionuser';

/**
 * 
 * @export
 * @interface CoreCompetencyGradeCompetencyInCourse200Response
 */
export interface CoreCompetencyGradeCompetencyInCourse200Response {
    /**
     * action
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Action: number;
    /**
     * 
     * @type {CoreCompetencyGradeCompetency200ResponseActionuser}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Actionuser?: CoreCompetencyGradeCompetency200ResponseActionuser;
    /**
     * actionuserid
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Actionuserid: number;
    /**
     * candelete
     * @type {boolean}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Candelete: boolean;
    /**
     * contextid
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Contextid: number;
    /**
     * desca
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Desca: string;
    /**
     * desccomponent
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Desccomponent: string;
    /**
     * descidentifier
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Descidentifier: string;
    /**
     * description
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Description: string;
    /**
     * grade
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Grade: number;
    /**
     * gradename
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Gradename: string;
    /**
     * id
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Id: number;
    /**
     * note
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Note: string;
    /**
     * timecreated
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Timemodified: number;
    /**
     * url
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Url: string;
    /**
     * usercompetencyid
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Usercompetencyid: number;
    /**
     * userdate
     * @type {string}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Userdate: string;
    /**
     * usermodified
     * @type {number}
     * @memberof CoreCompetencyGradeCompetencyInCourse200Response
     */
    Usermodified: number;
}

/**
 * Check if a given object implements the CoreCompetencyGradeCompetencyInCourse200Response interface.
 */
export function instanceOfCoreCompetencyGradeCompetencyInCourse200Response(value: object): boolean {
    if (!('Action' in value)) return false;
    if (!('Actionuserid' in value)) return false;
    if (!('Candelete' in value)) return false;
    if (!('Contextid' in value)) return false;
    if (!('Desca' in value)) return false;
    if (!('Desccomponent' in value)) return false;
    if (!('Descidentifier' in value)) return false;
    if (!('Description' in value)) return false;
    if (!('Grade' in value)) return false;
    if (!('Gradename' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Note' in value)) return false;
    if (!('Timecreated' in value)) return false;
    if (!('Timemodified' in value)) return false;
    if (!('Url' in value)) return false;
    if (!('Usercompetencyid' in value)) return false;
    if (!('Userdate' in value)) return false;
    if (!('Usermodified' in value)) return false;
    return true;
}

export function CoreCompetencyGradeCompetencyInCourse200ResponseFromJSON(json: any): CoreCompetencyGradeCompetencyInCourse200Response {
    return CoreCompetencyGradeCompetencyInCourse200ResponseFromJSONTyped(json, false);
}

export function CoreCompetencyGradeCompetencyInCourse200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCompetencyGradeCompetencyInCourse200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Action': json['action'],
        'Actionuser': json['actionuser'] == null ? undefined : CoreCompetencyGradeCompetency200ResponseActionuserFromJSON(json['actionuser']),
        'Actionuserid': json['actionuserid'],
        'Candelete': json['candelete'],
        'Contextid': json['contextid'],
        'Desca': json['desca'],
        'Desccomponent': json['desccomponent'],
        'Descidentifier': json['descidentifier'],
        'Description': json['description'],
        'Grade': json['grade'],
        'Gradename': json['gradename'],
        'Id': json['id'],
        'Note': json['note'],
        'Timecreated': json['timecreated'],
        'Timemodified': json['timemodified'],
        'Url': json['url'],
        'Usercompetencyid': json['usercompetencyid'],
        'Userdate': json['userdate'],
        'Usermodified': json['usermodified'],
    };
}

export function CoreCompetencyGradeCompetencyInCourse200ResponseToJSON(value?: CoreCompetencyGradeCompetencyInCourse200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'action': value['Action'],
        'actionuser': CoreCompetencyGradeCompetency200ResponseActionuserToJSON(value['Actionuser']),
        'actionuserid': value['Actionuserid'],
        'candelete': value['Candelete'],
        'contextid': value['Contextid'],
        'desca': value['Desca'],
        'desccomponent': value['Desccomponent'],
        'descidentifier': value['Descidentifier'],
        'description': value['Description'],
        'grade': value['Grade'],
        'gradename': value['Gradename'],
        'id': value['Id'],
        'note': value['Note'],
        'timecreated': value['Timecreated'],
        'timemodified': value['Timemodified'],
        'url': value['Url'],
        'usercompetencyid': value['Usercompetencyid'],
        'userdate': value['Userdate'],
        'usermodified': value['Usermodified'],
    };
}

