/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModLessonGetUserAttemptGrade200ResponseGrade
 */
export interface ModLessonGetUserAttemptGrade200ResponseGrade {
    /**
     * Number of question attempts
     * @type {number}
     * @memberof ModLessonGetUserAttemptGrade200ResponseGrade
     */
    Attempts: number;
    /**
     * Points earned by student
     * @type {number}
     * @memberof ModLessonGetUserAttemptGrade200ResponseGrade
     */
    Earned: number;
    /**
     * Calculated percentage grade
     * @type {number}
     * @memberof ModLessonGetUserAttemptGrade200ResponseGrade
     */
    Grade: number;
    /**
     * Point value for manually graded questions
     * @type {number}
     * @memberof ModLessonGetUserAttemptGrade200ResponseGrade
     */
    Manualpoints: number;
    /**
     * Number of manually graded questions
     * @type {number}
     * @memberof ModLessonGetUserAttemptGrade200ResponseGrade
     */
    Nmanual: number;
    /**
     * Number of questions answered
     * @type {number}
     * @memberof ModLessonGetUserAttemptGrade200ResponseGrade
     */
    Nquestions: number;
    /**
     * Max points possible
     * @type {number}
     * @memberof ModLessonGetUserAttemptGrade200ResponseGrade
     */
    Total: number;
}

/**
 * Check if a given object implements the ModLessonGetUserAttemptGrade200ResponseGrade interface.
 */
export function instanceOfModLessonGetUserAttemptGrade200ResponseGrade(value: object): boolean {
    if (!('Attempts' in value)) return false;
    if (!('Earned' in value)) return false;
    if (!('Grade' in value)) return false;
    if (!('Manualpoints' in value)) return false;
    if (!('Nmanual' in value)) return false;
    if (!('Nquestions' in value)) return false;
    if (!('Total' in value)) return false;
    return true;
}

export function ModLessonGetUserAttemptGrade200ResponseGradeFromJSON(json: any): ModLessonGetUserAttemptGrade200ResponseGrade {
    return ModLessonGetUserAttemptGrade200ResponseGradeFromJSONTyped(json, false);
}

export function ModLessonGetUserAttemptGrade200ResponseGradeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonGetUserAttemptGrade200ResponseGrade {
    if (json == null) {
        return json;
    }
    return {
        
        'Attempts': json['attempts'],
        'Earned': json['earned'],
        'Grade': json['grade'],
        'Manualpoints': json['manualpoints'],
        'Nmanual': json['nmanual'],
        'Nquestions': json['nquestions'],
        'Total': json['total'],
    };
}

export function ModLessonGetUserAttemptGrade200ResponseGradeToJSON(value?: ModLessonGetUserAttemptGrade200ResponseGrade | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attempts': value['Attempts'],
        'earned': value['Earned'],
        'grade': value['Grade'],
        'manualpoints': value['Manualpoints'],
        'nmanual': value['Nmanual'],
        'nquestions': value['Nquestions'],
        'total': value['Total'],
    };
}

