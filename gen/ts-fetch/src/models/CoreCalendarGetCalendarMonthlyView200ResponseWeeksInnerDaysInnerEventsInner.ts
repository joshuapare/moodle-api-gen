/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction } from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction';
import {
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerActionFromJSON,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerActionFromJSONTyped,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerActionToJSON,
} from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction';
import type { CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory } from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory';
import {
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategoryFromJSON,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategoryFromJSONTyped,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategoryToJSON,
} from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory';
import type { CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse } from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse';
import {
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseFromJSON,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseFromJSONTyped,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseToJSON,
} from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse';
import type { CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon } from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon';
import {
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIconFromJSON,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIconFromJSONTyped,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIconToJSON,
} from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon';
import type { CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription } from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription';
import {
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscriptionFromJSON,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscriptionFromJSONTyped,
    CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscriptionToJSON,
} from './CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription';

/**
 * 
 * @export
 * @interface CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
 */
export interface CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner {
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Action?: CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction;
    /**
     * activityname
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Activityname?: string;
    /**
     * activitystr
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Activitystr?: string;
    /**
     * candelete
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Candelete?: boolean;
    /**
     * canedit
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Canedit?: boolean;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Category?: CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory;
    /**
     * categoryid
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Categoryid?: number;
    /**
     * component
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Component?: string;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Course?: CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse;
    /**
     * deleteurl
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Deleteurl?: string;
    /**
     * description
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Description?: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Descriptionformat?: number;
    /**
     * draggable
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Draggable?: boolean;
    /**
     * editurl
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Editurl?: string;
    /**
     * eventcount
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Eventcount?: number;
    /**
     * eventtype
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Eventtype?: string;
    /**
     * formattedlocation
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Formattedlocation?: string;
    /**
     * formattedtime
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Formattedtime?: string;
    /**
     * groupid
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Groupid?: number;
    /**
     * groupname
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Groupname?: string;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Icon?: CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon;
    /**
     * id
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Id?: number;
    /**
     * instance
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Instance?: number;
    /**
     * isactionevent
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Isactionevent?: boolean;
    /**
     * iscategoryevent
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Iscategoryevent?: boolean;
    /**
     * iscourseevent
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Iscourseevent?: boolean;
    /**
     * islastday
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Islastday?: boolean;
    /**
     * location
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Location?: string;
    /**
     * maxdayerror
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Maxdayerror?: string;
    /**
     * maxdaytimestamp
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Maxdaytimestamp?: number;
    /**
     * mindayerror
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Mindayerror?: string;
    /**
     * mindaytimestamp
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Mindaytimestamp?: number;
    /**
     * modulename
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Modulename?: string;
    /**
     * name
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Name?: string;
    /**
     * normalisedeventtype
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Normalisedeventtype?: string;
    /**
     * normalisedeventtypetext
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Normalisedeventtypetext?: string;
    /**
     * overdue
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Overdue?: boolean;
    /**
     * popupname
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Popupname?: string;
    /**
     * purpose
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Purpose?: string;
    /**
     * repeatid
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Repeatid?: number;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Subscription?: CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription;
    /**
     * timeduration
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Timeduration?: number;
    /**
     * timemodified
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Timemodified?: number;
    /**
     * timesort
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Timesort?: number;
    /**
     * timestart
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Timestart?: number;
    /**
     * timeusermidnight
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Timeusermidnight?: number;
    /**
     * url
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Url?: string;
    /**
     * userid
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Userid?: number;
    /**
     * viewurl
     * @type {string}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Viewurl?: string;
    /**
     * visible
     * @type {number}
     * @memberof CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
     */
    Visible?: number;
}

/**
 * Check if a given object implements the CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner interface.
 */
export function instanceOfCoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner(value: object): boolean {
    return true;
}

export function CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerFromJSON(json: any): CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner {
    return CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerFromJSONTyped(json, false);
}

export function CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Action': json['action'] == null ? undefined : CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerActionFromJSON(json['action']),
        'Activityname': json['activityname'] == null ? undefined : json['activityname'],
        'Activitystr': json['activitystr'] == null ? undefined : json['activitystr'],
        'Candelete': json['candelete'] == null ? undefined : json['candelete'],
        'Canedit': json['canedit'] == null ? undefined : json['canedit'],
        'Category': json['category'] == null ? undefined : CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategoryFromJSON(json['category']),
        'Categoryid': json['categoryid'] == null ? undefined : json['categoryid'],
        'Component': json['component'] == null ? undefined : json['component'],
        'Course': json['course'] == null ? undefined : CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseFromJSON(json['course']),
        'Deleteurl': json['deleteurl'] == null ? undefined : json['deleteurl'],
        'Description': json['description'] == null ? undefined : json['description'],
        'Descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'Draggable': json['draggable'] == null ? undefined : json['draggable'],
        'Editurl': json['editurl'] == null ? undefined : json['editurl'],
        'Eventcount': json['eventcount'] == null ? undefined : json['eventcount'],
        'Eventtype': json['eventtype'] == null ? undefined : json['eventtype'],
        'Formattedlocation': json['formattedlocation'] == null ? undefined : json['formattedlocation'],
        'Formattedtime': json['formattedtime'] == null ? undefined : json['formattedtime'],
        'Groupid': json['groupid'] == null ? undefined : json['groupid'],
        'Groupname': json['groupname'] == null ? undefined : json['groupname'],
        'Icon': json['icon'] == null ? undefined : CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIconFromJSON(json['icon']),
        'Id': json['id'] == null ? undefined : json['id'],
        'Instance': json['instance'] == null ? undefined : json['instance'],
        'Isactionevent': json['isactionevent'] == null ? undefined : json['isactionevent'],
        'Iscategoryevent': json['iscategoryevent'] == null ? undefined : json['iscategoryevent'],
        'Iscourseevent': json['iscourseevent'] == null ? undefined : json['iscourseevent'],
        'Islastday': json['islastday'] == null ? undefined : json['islastday'],
        'Location': json['location'] == null ? undefined : json['location'],
        'Maxdayerror': json['maxdayerror'] == null ? undefined : json['maxdayerror'],
        'Maxdaytimestamp': json['maxdaytimestamp'] == null ? undefined : json['maxdaytimestamp'],
        'Mindayerror': json['mindayerror'] == null ? undefined : json['mindayerror'],
        'Mindaytimestamp': json['mindaytimestamp'] == null ? undefined : json['mindaytimestamp'],
        'Modulename': json['modulename'] == null ? undefined : json['modulename'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Normalisedeventtype': json['normalisedeventtype'] == null ? undefined : json['normalisedeventtype'],
        'Normalisedeventtypetext': json['normalisedeventtypetext'] == null ? undefined : json['normalisedeventtypetext'],
        'Overdue': json['overdue'] == null ? undefined : json['overdue'],
        'Popupname': json['popupname'] == null ? undefined : json['popupname'],
        'Purpose': json['purpose'] == null ? undefined : json['purpose'],
        'Repeatid': json['repeatid'] == null ? undefined : json['repeatid'],
        'Subscription': json['subscription'] == null ? undefined : CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscriptionFromJSON(json['subscription']),
        'Timeduration': json['timeduration'] == null ? undefined : json['timeduration'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Timesort': json['timesort'] == null ? undefined : json['timesort'],
        'Timestart': json['timestart'] == null ? undefined : json['timestart'],
        'Timeusermidnight': json['timeusermidnight'] == null ? undefined : json['timeusermidnight'],
        'Url': json['url'] == null ? undefined : json['url'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
        'Viewurl': json['viewurl'] == null ? undefined : json['viewurl'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerToJSON(value?: CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'action': CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerActionToJSON(value['Action']),
        'activityname': value['Activityname'],
        'activitystr': value['Activitystr'],
        'candelete': value['Candelete'],
        'canedit': value['Canedit'],
        'category': CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategoryToJSON(value['Category']),
        'categoryid': value['Categoryid'],
        'component': value['Component'],
        'course': CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseToJSON(value['Course']),
        'deleteurl': value['Deleteurl'],
        'description': value['Description'],
        'descriptionformat': value['Descriptionformat'],
        'draggable': value['Draggable'],
        'editurl': value['Editurl'],
        'eventcount': value['Eventcount'],
        'eventtype': value['Eventtype'],
        'formattedlocation': value['Formattedlocation'],
        'formattedtime': value['Formattedtime'],
        'groupid': value['Groupid'],
        'groupname': value['Groupname'],
        'icon': CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIconToJSON(value['Icon']),
        'id': value['Id'],
        'instance': value['Instance'],
        'isactionevent': value['Isactionevent'],
        'iscategoryevent': value['Iscategoryevent'],
        'iscourseevent': value['Iscourseevent'],
        'islastday': value['Islastday'],
        'location': value['Location'],
        'maxdayerror': value['Maxdayerror'],
        'maxdaytimestamp': value['Maxdaytimestamp'],
        'mindayerror': value['Mindayerror'],
        'mindaytimestamp': value['Mindaytimestamp'],
        'modulename': value['Modulename'],
        'name': value['Name'],
        'normalisedeventtype': value['Normalisedeventtype'],
        'normalisedeventtypetext': value['Normalisedeventtypetext'],
        'overdue': value['Overdue'],
        'popupname': value['Popupname'],
        'purpose': value['Purpose'],
        'repeatid': value['Repeatid'],
        'subscription': CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscriptionToJSON(value['Subscription']),
        'timeduration': value['Timeduration'],
        'timemodified': value['Timemodified'],
        'timesort': value['Timesort'],
        'timestart': value['Timestart'],
        'timeusermidnight': value['Timeusermidnight'],
        'url': value['Url'],
        'userid': value['Userid'],
        'viewurl': value['Viewurl'],
        'visible': value['Visible'],
    };
}

