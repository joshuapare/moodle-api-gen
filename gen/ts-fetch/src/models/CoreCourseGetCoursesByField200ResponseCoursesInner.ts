/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import {
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSONTyped,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON,
} from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import type { CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner } from './CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner';
import {
    CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInnerFromJSON,
    CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInnerFromJSONTyped,
    CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInnerToJSON,
} from './CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner';
import type { CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner } from './CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner';
import {
    CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInnerFromJSON,
    CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInnerFromJSONTyped,
    CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInnerToJSON,
} from './CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner';
import type { CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner } from './CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner';
import {
    CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInnerFromJSON,
    CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInnerFromJSONTyped,
    CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInnerToJSON,
} from './CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner';
import type { CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner } from './CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner';
import {
    CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInnerFromJSON,
    CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInnerFromJSONTyped,
    CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInnerToJSON,
} from './CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner';

/**
 * 
 * @export
 * @interface CoreCourseGetCoursesByField200ResponseCoursesInner
 */
export interface CoreCourseGetCoursesByField200ResponseCoursesInner {
    /**
     * Cache revision number
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Cacherev?: number;
    /**
     * Calendar type
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Calendartype?: string;
    /**
     * category id
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Categoryid?: number;
    /**
     * category name
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Categoryname?: string;
    /**
     * 1: yes 0: no
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Completionnotify?: number;
    /**
     * 
     * @type {Array<CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner>}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Contacts?: Array<CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner>;
    /**
     * 
     * @type {Array<CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner>}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Courseformatoptions?: Array<CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner>;
    /**
     * Course image
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Courseimage?: string;
    /**
     * 
     * @type {Array<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner>}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Customfields?: Array<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner>;
    /**
     * default grouping id
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Defaultgroupingid?: number;
    /**
     * course display name
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Displayname?: string;
    /**
     * Completion enabled? 1: yes 0: no
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Enablecompletion?: number;
    /**
     * Timestamp when the course end
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Enddate?: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Enrollmentmethods?: Array<object>;
    /**
     * 
     * @type {Array<CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner>}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Filters?: Array<CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner>;
    /**
     * Course format: weeks, topics, social, site,..
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Format?: string;
    /**
     * course full name
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Fullname?: string;
    /**
     * no group, separate, visible
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Groupmode?: number;
    /**
     * 1: yes, 0: no
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Groupmodeforce?: number;
    /**
     * course id
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Id?: number;
    /**
     * Id number
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Idnumber?: string;
    /**
     * Forced course language
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Lang?: string;
    /**
     * If legacy files are enabled
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Legacyfiles?: number;
    /**
     * Current course marker
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Marker?: number;
    /**
     * Largest size of file that can be uploaded into
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Maxbytes?: number;
    /**
     * Number of recent items appearing on the course page
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Newsitems?: number;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Overviewfiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * If is a requested course
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Requested?: number;
    /**
     * course short name
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Shortname?: string;
    /**
     * Whether the activity dates are shown or not
     * @type {boolean}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Showactivitydates?: boolean;
    /**
     * Whether the activity completion conditions are shown or not
     * @type {boolean}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Showcompletionconditions?: boolean;
    /**
     * 1 if grades are shown, otherwise 0
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Showgrades?: number;
    /**
     * Are activity report shown (yes = 1, no =0)
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Showreports?: number;
    /**
     * Sort order in the category
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Sortorder?: number;
    /**
     * Timestamp when the course start
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Startdate?: number;
    /**
     * summary
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Summary?: string;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Summaryfiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Summaryformat?: number;
    /**
     * Fame of the forced theme
     * @type {string}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Theme?: string;
    /**
     * Time when the course was created
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Timecreated?: number;
    /**
     * Last time  the course was updated
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Timemodified?: number;
    /**
     * 1: available to student, 0:not available
     * @type {number}
     * @memberof CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    Visible?: number;
}

/**
 * Check if a given object implements the CoreCourseGetCoursesByField200ResponseCoursesInner interface.
 */
export function instanceOfCoreCourseGetCoursesByField200ResponseCoursesInner(value: object): boolean {
    return true;
}

export function CoreCourseGetCoursesByField200ResponseCoursesInnerFromJSON(json: any): CoreCourseGetCoursesByField200ResponseCoursesInner {
    return CoreCourseGetCoursesByField200ResponseCoursesInnerFromJSONTyped(json, false);
}

export function CoreCourseGetCoursesByField200ResponseCoursesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCourseGetCoursesByField200ResponseCoursesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Cacherev': json['cacherev'] == null ? undefined : json['cacherev'],
        'Calendartype': json['calendartype'] == null ? undefined : json['calendartype'],
        'Categoryid': json['categoryid'] == null ? undefined : json['categoryid'],
        'Categoryname': json['categoryname'] == null ? undefined : json['categoryname'],
        'Completionnotify': json['completionnotify'] == null ? undefined : json['completionnotify'],
        'Contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInnerFromJSON)),
        'Courseformatoptions': json['courseformatoptions'] == null ? undefined : ((json['courseformatoptions'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInnerFromJSON)),
        'Courseimage': json['courseimage'] == null ? undefined : json['courseimage'],
        'Customfields': json['customfields'] == null ? undefined : ((json['customfields'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInnerFromJSON)),
        'Defaultgroupingid': json['defaultgroupingid'] == null ? undefined : json['defaultgroupingid'],
        'Displayname': json['displayname'] == null ? undefined : json['displayname'],
        'Enablecompletion': json['enablecompletion'] == null ? undefined : json['enablecompletion'],
        'Enddate': json['enddate'] == null ? undefined : json['enddate'],
        'Enrollmentmethods': json['enrollmentmethods'] == null ? undefined : json['enrollmentmethods'],
        'Filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInnerFromJSON)),
        'Format': json['format'] == null ? undefined : json['format'],
        'Fullname': json['fullname'] == null ? undefined : json['fullname'],
        'Groupmode': json['groupmode'] == null ? undefined : json['groupmode'],
        'Groupmodeforce': json['groupmodeforce'] == null ? undefined : json['groupmodeforce'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Idnumber': json['idnumber'] == null ? undefined : json['idnumber'],
        'Lang': json['lang'] == null ? undefined : json['lang'],
        'Legacyfiles': json['legacyfiles'] == null ? undefined : json['legacyfiles'],
        'Marker': json['marker'] == null ? undefined : json['marker'],
        'Maxbytes': json['maxbytes'] == null ? undefined : json['maxbytes'],
        'Newsitems': json['newsitems'] == null ? undefined : json['newsitems'],
        'Overviewfiles': json['overviewfiles'] == null ? undefined : ((json['overviewfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'Requested': json['requested'] == null ? undefined : json['requested'],
        'Shortname': json['shortname'] == null ? undefined : json['shortname'],
        'Showactivitydates': json['showactivitydates'] == null ? undefined : json['showactivitydates'],
        'Showcompletionconditions': json['showcompletionconditions'] == null ? undefined : json['showcompletionconditions'],
        'Showgrades': json['showgrades'] == null ? undefined : json['showgrades'],
        'Showreports': json['showreports'] == null ? undefined : json['showreports'],
        'Sortorder': json['sortorder'] == null ? undefined : json['sortorder'],
        'Startdate': json['startdate'] == null ? undefined : json['startdate'],
        'Summary': json['summary'] == null ? undefined : json['summary'],
        'Summaryfiles': json['summaryfiles'] == null ? undefined : ((json['summaryfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'Summaryformat': json['summaryformat'] == null ? undefined : json['summaryformat'],
        'Theme': json['theme'] == null ? undefined : json['theme'],
        'Timecreated': json['timecreated'] == null ? undefined : json['timecreated'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function CoreCourseGetCoursesByField200ResponseCoursesInnerToJSON(value?: CoreCourseGetCoursesByField200ResponseCoursesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cacherev': value['Cacherev'],
        'calendartype': value['Calendartype'],
        'categoryid': value['Categoryid'],
        'categoryname': value['Categoryname'],
        'completionnotify': value['Completionnotify'],
        'contacts': value['Contacts'] == null ? undefined : ((value['Contacts'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInnerToJSON)),
        'courseformatoptions': value['Courseformatoptions'] == null ? undefined : ((value['Courseformatoptions'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInnerToJSON)),
        'courseimage': value['Courseimage'],
        'customfields': value['Customfields'] == null ? undefined : ((value['Customfields'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInnerToJSON)),
        'defaultgroupingid': value['Defaultgroupingid'],
        'displayname': value['Displayname'],
        'enablecompletion': value['Enablecompletion'],
        'enddate': value['Enddate'],
        'enrollmentmethods': value['Enrollmentmethods'],
        'filters': value['Filters'] == null ? undefined : ((value['Filters'] as Array<any>).map(CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInnerToJSON)),
        'format': value['Format'],
        'fullname': value['Fullname'],
        'groupmode': value['Groupmode'],
        'groupmodeforce': value['Groupmodeforce'],
        'id': value['Id'],
        'idnumber': value['Idnumber'],
        'lang': value['Lang'],
        'legacyfiles': value['Legacyfiles'],
        'marker': value['Marker'],
        'maxbytes': value['Maxbytes'],
        'newsitems': value['Newsitems'],
        'overviewfiles': value['Overviewfiles'] == null ? undefined : ((value['Overviewfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'requested': value['Requested'],
        'shortname': value['Shortname'],
        'showactivitydates': value['Showactivitydates'],
        'showcompletionconditions': value['Showcompletionconditions'],
        'showgrades': value['Showgrades'],
        'showreports': value['Showreports'],
        'sortorder': value['Sortorder'],
        'startdate': value['Startdate'],
        'summary': value['Summary'],
        'summaryfiles': value['Summaryfiles'] == null ? undefined : ((value['Summaryfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'summaryformat': value['Summaryformat'],
        'theme': value['Theme'],
        'timecreated': value['Timecreated'],
        'timemodified': value['Timemodified'],
        'visible': value['Visible'],
    };
}

