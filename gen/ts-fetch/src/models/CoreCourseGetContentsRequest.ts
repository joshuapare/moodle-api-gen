/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCourseGetContentsRequestOptionsInner } from './CoreCourseGetContentsRequestOptionsInner';
import {
    CoreCourseGetContentsRequestOptionsInnerFromJSON,
    CoreCourseGetContentsRequestOptionsInnerFromJSONTyped,
    CoreCourseGetContentsRequestOptionsInnerToJSON,
} from './CoreCourseGetContentsRequestOptionsInner';

/**
 * 
 * @export
 * @interface CoreCourseGetContentsRequest
 */
export interface CoreCourseGetContentsRequest {
    /**
     * course id
     * @type {number}
     * @memberof CoreCourseGetContentsRequest
     */
    Courseid: number;
    /**
     * 
     * @type {Array<CoreCourseGetContentsRequestOptionsInner>}
     * @memberof CoreCourseGetContentsRequest
     */
    Options?: Array<CoreCourseGetContentsRequestOptionsInner>;
}

/**
 * Check if a given object implements the CoreCourseGetContentsRequest interface.
 */
export function instanceOfCoreCourseGetContentsRequest(value: object): boolean {
    if (!('Courseid' in value)) return false;
    return true;
}

export function CoreCourseGetContentsRequestFromJSON(json: any): CoreCourseGetContentsRequest {
    return CoreCourseGetContentsRequestFromJSONTyped(json, false);
}

export function CoreCourseGetContentsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCourseGetContentsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Courseid': json['courseid'],
        'Options': json['options'] == null ? undefined : ((json['options'] as Array<any>).map(CoreCourseGetContentsRequestOptionsInnerFromJSON)),
    };
}

export function CoreCourseGetContentsRequestToJSON(value?: CoreCourseGetContentsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'courseid': value['Courseid'],
        'options': value['Options'] == null ? undefined : ((value['Options'] as Array<any>).map(CoreCourseGetContentsRequestOptionsInnerToJSON)),
    };
}

