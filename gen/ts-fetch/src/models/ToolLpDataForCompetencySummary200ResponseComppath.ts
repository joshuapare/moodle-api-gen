/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFramework } from './ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFramework';
import {
    ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFrameworkFromJSON,
    ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFrameworkFromJSONTyped,
    ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFrameworkToJSON,
} from './ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFramework';
import type { ToolLpDataForCompetencySummary200ResponseComppathAncestorsInner } from './ToolLpDataForCompetencySummary200ResponseComppathAncestorsInner';
import {
    ToolLpDataForCompetencySummary200ResponseComppathAncestorsInnerFromJSON,
    ToolLpDataForCompetencySummary200ResponseComppathAncestorsInnerFromJSONTyped,
    ToolLpDataForCompetencySummary200ResponseComppathAncestorsInnerToJSON,
} from './ToolLpDataForCompetencySummary200ResponseComppathAncestorsInner';

/**
 * 
 * @export
 * @interface ToolLpDataForCompetencySummary200ResponseComppath
 */
export interface ToolLpDataForCompetencySummary200ResponseComppath {
    /**
     * 
     * @type {Array<ToolLpDataForCompetencySummary200ResponseComppathAncestorsInner>}
     * @memberof ToolLpDataForCompetencySummary200ResponseComppath
     */
    Ancestors: Array<ToolLpDataForCompetencySummary200ResponseComppathAncestorsInner>;
    /**
     * 
     * @type {ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFramework}
     * @memberof ToolLpDataForCompetencySummary200ResponseComppath
     */
    Framework: ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFramework;
    /**
     * pagecontextid
     * @type {number}
     * @memberof ToolLpDataForCompetencySummary200ResponseComppath
     */
    Pagecontextid: number;
    /**
     * pluginbaseurl
     * @type {string}
     * @memberof ToolLpDataForCompetencySummary200ResponseComppath
     */
    Pluginbaseurl: string;
    /**
     * showlinks
     * @type {boolean}
     * @memberof ToolLpDataForCompetencySummary200ResponseComppath
     */
    Showlinks: boolean;
}

/**
 * Check if a given object implements the ToolLpDataForCompetencySummary200ResponseComppath interface.
 */
export function instanceOfToolLpDataForCompetencySummary200ResponseComppath(value: object): boolean {
    if (!('Ancestors' in value)) return false;
    if (!('Framework' in value)) return false;
    if (!('Pagecontextid' in value)) return false;
    if (!('Pluginbaseurl' in value)) return false;
    if (!('Showlinks' in value)) return false;
    return true;
}

export function ToolLpDataForCompetencySummary200ResponseComppathFromJSON(json: any): ToolLpDataForCompetencySummary200ResponseComppath {
    return ToolLpDataForCompetencySummary200ResponseComppathFromJSONTyped(json, false);
}

export function ToolLpDataForCompetencySummary200ResponseComppathFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForCompetencySummary200ResponseComppath {
    if (json == null) {
        return json;
    }
    return {
        
        'Ancestors': ((json['ancestors'] as Array<any>).map(ToolLpDataForCompetencySummary200ResponseComppathAncestorsInnerFromJSON)),
        'Framework': ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFrameworkFromJSON(json['framework']),
        'Pagecontextid': json['pagecontextid'],
        'Pluginbaseurl': json['pluginbaseurl'],
        'Showlinks': json['showlinks'],
    };
}

export function ToolLpDataForCompetencySummary200ResponseComppathToJSON(value?: ToolLpDataForCompetencySummary200ResponseComppath | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'ancestors': ((value['Ancestors'] as Array<any>).map(ToolLpDataForCompetencySummary200ResponseComppathAncestorsInnerToJSON)),
        'framework': ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetencyComppathFrameworkToJSON(value['Framework']),
        'pagecontextid': value['Pagecontextid'],
        'pluginbaseurl': value['Pluginbaseurl'],
        'showlinks': value['Showlinks'],
    };
}

