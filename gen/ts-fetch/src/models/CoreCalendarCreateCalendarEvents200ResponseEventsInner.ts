/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * event
 * @export
 * @interface CoreCalendarCreateCalendarEvents200ResponseEventsInner
 */
export interface CoreCalendarCreateCalendarEvents200ResponseEventsInner {
    /**
     * course id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Courseid?: number;
    /**
     * Description
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Description?: string;
    /**
     * Event type
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Eventtype?: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Format?: number;
    /**
     * group id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Groupid?: number;
    /**
     * event id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Id?: number;
    /**
     * instance id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Instance?: number;
    /**
     * module name
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Modulename?: string;
    /**
     * event name
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Name?: string;
    /**
     * repeat id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Repeatid?: number;
    /**
     * sequence
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Sequence?: number;
    /**
     * Subscription id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Subscriptionid?: number;
    /**
     * time duration
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Timeduration?: number;
    /**
     * time modified
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Timemodified?: number;
    /**
     * timestart
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Timestart?: number;
    /**
     * user id
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Userid?: number;
    /**
     * unique id of ical events
     * @type {string}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Uuid?: string;
    /**
     * visible
     * @type {number}
     * @memberof CoreCalendarCreateCalendarEvents200ResponseEventsInner
     */
    Visible?: number;
}

/**
 * Check if a given object implements the CoreCalendarCreateCalendarEvents200ResponseEventsInner interface.
 */
export function instanceOfCoreCalendarCreateCalendarEvents200ResponseEventsInner(value: object): boolean {
    return true;
}

export function CoreCalendarCreateCalendarEvents200ResponseEventsInnerFromJSON(json: any): CoreCalendarCreateCalendarEvents200ResponseEventsInner {
    return CoreCalendarCreateCalendarEvents200ResponseEventsInnerFromJSONTyped(json, false);
}

export function CoreCalendarCreateCalendarEvents200ResponseEventsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarCreateCalendarEvents200ResponseEventsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Courseid': json['courseid'] == null ? undefined : json['courseid'],
        'Description': json['description'] == null ? undefined : json['description'],
        'Eventtype': json['eventtype'] == null ? undefined : json['eventtype'],
        'Format': json['format'] == null ? undefined : json['format'],
        'Groupid': json['groupid'] == null ? undefined : json['groupid'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Instance': json['instance'] == null ? undefined : json['instance'],
        'Modulename': json['modulename'] == null ? undefined : json['modulename'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Repeatid': json['repeatid'] == null ? undefined : json['repeatid'],
        'Sequence': json['sequence'] == null ? undefined : json['sequence'],
        'Subscriptionid': json['subscriptionid'] == null ? undefined : json['subscriptionid'],
        'Timeduration': json['timeduration'] == null ? undefined : json['timeduration'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Timestart': json['timestart'] == null ? undefined : json['timestart'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
        'Uuid': json['uuid'] == null ? undefined : json['uuid'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function CoreCalendarCreateCalendarEvents200ResponseEventsInnerToJSON(value?: CoreCalendarCreateCalendarEvents200ResponseEventsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'courseid': value['Courseid'],
        'description': value['Description'],
        'eventtype': value['Eventtype'],
        'format': value['Format'],
        'groupid': value['Groupid'],
        'id': value['Id'],
        'instance': value['Instance'],
        'modulename': value['Modulename'],
        'name': value['Name'],
        'repeatid': value['Repeatid'],
        'sequence': value['Sequence'],
        'subscriptionid': value['Subscriptionid'],
        'timeduration': value['Timeduration'],
        'timemodified': value['Timemodified'],
        'timestart': value['Timestart'],
        'userid': value['Userid'],
        'uuid': value['Uuid'],
        'visible': value['Visible'],
    };
}

