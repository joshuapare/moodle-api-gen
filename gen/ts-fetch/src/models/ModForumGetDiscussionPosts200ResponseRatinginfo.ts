/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner } from './ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner';
import {
    ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInnerFromJSON,
    ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInnerFromJSONTyped,
    ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInnerToJSON,
} from './ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner';
import type { ModForumGetDiscussionPosts200ResponseRatinginfoScalesInner } from './ModForumGetDiscussionPosts200ResponseRatinginfoScalesInner';
import {
    ModForumGetDiscussionPosts200ResponseRatinginfoScalesInnerFromJSON,
    ModForumGetDiscussionPosts200ResponseRatinginfoScalesInnerFromJSONTyped,
    ModForumGetDiscussionPosts200ResponseRatinginfoScalesInnerToJSON,
} from './ModForumGetDiscussionPosts200ResponseRatinginfoScalesInner';

/**
 * 
 * @export
 * @interface ModForumGetDiscussionPosts200ResponseRatinginfo
 */
export interface ModForumGetDiscussionPosts200ResponseRatinginfo {
    /**
     * Whether the user can view all the individual ratings.
     * @type {boolean}
     * @memberof ModForumGetDiscussionPosts200ResponseRatinginfo
     */
    Canviewall?: boolean;
    /**
     * Whether the user can view aggregate of ratings of others.
     * @type {boolean}
     * @memberof ModForumGetDiscussionPosts200ResponseRatinginfo
     */
    Canviewany?: boolean;
    /**
     * Context name.
     * @type {string}
     * @memberof ModForumGetDiscussionPosts200ResponseRatinginfo
     */
    Component: string;
    /**
     * Context id.
     * @type {number}
     * @memberof ModForumGetDiscussionPosts200ResponseRatinginfo
     */
    Contextid: number;
    /**
     * Rating area name.
     * @type {string}
     * @memberof ModForumGetDiscussionPosts200ResponseRatinginfo
     */
    Ratingarea: string;
    /**
     * 
     * @type {Array<ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner>}
     * @memberof ModForumGetDiscussionPosts200ResponseRatinginfo
     */
    Ratings?: Array<ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner>;
    /**
     * 
     * @type {Array<ModForumGetDiscussionPosts200ResponseRatinginfoScalesInner>}
     * @memberof ModForumGetDiscussionPosts200ResponseRatinginfo
     */
    Scales?: Array<ModForumGetDiscussionPosts200ResponseRatinginfoScalesInner>;
}

/**
 * Check if a given object implements the ModForumGetDiscussionPosts200ResponseRatinginfo interface.
 */
export function instanceOfModForumGetDiscussionPosts200ResponseRatinginfo(value: object): boolean {
    if (!('Component' in value)) return false;
    if (!('Contextid' in value)) return false;
    if (!('Ratingarea' in value)) return false;
    return true;
}

export function ModForumGetDiscussionPosts200ResponseRatinginfoFromJSON(json: any): ModForumGetDiscussionPosts200ResponseRatinginfo {
    return ModForumGetDiscussionPosts200ResponseRatinginfoFromJSONTyped(json, false);
}

export function ModForumGetDiscussionPosts200ResponseRatinginfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumGetDiscussionPosts200ResponseRatinginfo {
    if (json == null) {
        return json;
    }
    return {
        
        'Canviewall': json['canviewall'] == null ? undefined : json['canviewall'],
        'Canviewany': json['canviewany'] == null ? undefined : json['canviewany'],
        'Component': json['component'],
        'Contextid': json['contextid'],
        'Ratingarea': json['ratingarea'],
        'Ratings': json['ratings'] == null ? undefined : ((json['ratings'] as Array<any>).map(ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInnerFromJSON)),
        'Scales': json['scales'] == null ? undefined : ((json['scales'] as Array<any>).map(ModForumGetDiscussionPosts200ResponseRatinginfoScalesInnerFromJSON)),
    };
}

export function ModForumGetDiscussionPosts200ResponseRatinginfoToJSON(value?: ModForumGetDiscussionPosts200ResponseRatinginfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canviewall': value['Canviewall'],
        'canviewany': value['Canviewany'],
        'component': value['Component'],
        'contextid': value['Contextid'],
        'ratingarea': value['Ratingarea'],
        'ratings': value['Ratings'] == null ? undefined : ((value['Ratings'] as Array<any>).map(ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInnerToJSON)),
        'scales': value['Scales'] == null ? undefined : ((value['Scales'] as Array<any>).map(ModForumGetDiscussionPosts200ResponseRatinginfoScalesInnerToJSON)),
    };
}

