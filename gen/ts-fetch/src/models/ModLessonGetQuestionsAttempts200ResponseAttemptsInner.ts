/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The question page attempts
 * @export
 * @interface ModLessonGetQuestionsAttempts200ResponseAttemptsInner
 */
export interface ModLessonGetQuestionsAttempts200ResponseAttemptsInner {
    /**
     * The attempt answerid
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Answerid?: number;
    /**
     * If it was the correct answer
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Correct?: number;
    /**
     * The attempt id
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Id?: number;
    /**
     * The attempt lessonid
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Lessonid?: number;
    /**
     * The attempt pageid
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Pageid?: number;
    /**
     * The lesson attempt number
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Retry?: number;
    /**
     * The time the question was seen
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Timeseen?: number;
    /**
     * The complete user answer
     * @type {string}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Useranswer?: string;
    /**
     * The user who did the attempt
     * @type {number}
     * @memberof ModLessonGetQuestionsAttempts200ResponseAttemptsInner
     */
    Userid?: number;
}

/**
 * Check if a given object implements the ModLessonGetQuestionsAttempts200ResponseAttemptsInner interface.
 */
export function instanceOfModLessonGetQuestionsAttempts200ResponseAttemptsInner(value: object): boolean {
    return true;
}

export function ModLessonGetQuestionsAttempts200ResponseAttemptsInnerFromJSON(json: any): ModLessonGetQuestionsAttempts200ResponseAttemptsInner {
    return ModLessonGetQuestionsAttempts200ResponseAttemptsInnerFromJSONTyped(json, false);
}

export function ModLessonGetQuestionsAttempts200ResponseAttemptsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonGetQuestionsAttempts200ResponseAttemptsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Answerid': json['answerid'] == null ? undefined : json['answerid'],
        'Correct': json['correct'] == null ? undefined : json['correct'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Lessonid': json['lessonid'] == null ? undefined : json['lessonid'],
        'Pageid': json['pageid'] == null ? undefined : json['pageid'],
        'Retry': json['retry'] == null ? undefined : json['retry'],
        'Timeseen': json['timeseen'] == null ? undefined : json['timeseen'],
        'Useranswer': json['useranswer'] == null ? undefined : json['useranswer'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
    };
}

export function ModLessonGetQuestionsAttempts200ResponseAttemptsInnerToJSON(value?: ModLessonGetQuestionsAttempts200ResponseAttemptsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'answerid': value['Answerid'],
        'correct': value['Correct'],
        'id': value['Id'],
        'lessonid': value['Lessonid'],
        'pageid': value['Pageid'],
        'retry': value['Retry'],
        'timeseen': value['Timeseen'],
        'useranswer': value['Useranswer'],
        'userid': value['Userid'],
    };
}

