/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * message
 * @export
 * @interface CoreMessageGetMessages200ResponseMessagesInner
 */
export interface CoreMessageGetMessages200ResponseMessagesInner {
    /**
     * The component that generated the notification
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Component?: string;
    /**
     * Context URL
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Contexturl?: string;
    /**
     * Context URL link name
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Contexturlname?: string;
    /**
     * Custom data to be passed to the message processor.
     *                                 The data here is serialised using json_encode().
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Customdata?: string;
    /**
     * The type of notification
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Eventtype?: string;
    /**
     * The message
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Fullmessage?: string;
    /**
     * fullmessage format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Fullmessageformat?: number;
    /**
     * The message in html
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Fullmessagehtml?: string;
    /**
     * URL for icon, only for notifications.
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Iconurl?: string;
    /**
     * Message id
     * @type {number}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Id?: number;
    /**
     * Is a notification?
     * @type {number}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Notification?: number;
    /**
     * The shorten message
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Smallmessage?: string;
    /**
     * The message subject
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Subject?: string;
    /**
     * The message text formated
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Text?: string;
    /**
     * Time created
     * @type {number}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Timecreated?: number;
    /**
     * Time read
     * @type {number}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Timeread?: number;
    /**
     * User from full name
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Userfromfullname?: string;
    /**
     * User from id
     * @type {number}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Useridfrom?: number;
    /**
     * User to id
     * @type {number}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Useridto?: number;
    /**
     * User to full name
     * @type {string}
     * @memberof CoreMessageGetMessages200ResponseMessagesInner
     */
    Usertofullname?: string;
}

/**
 * Check if a given object implements the CoreMessageGetMessages200ResponseMessagesInner interface.
 */
export function instanceOfCoreMessageGetMessages200ResponseMessagesInner(value: object): boolean {
    return true;
}

export function CoreMessageGetMessages200ResponseMessagesInnerFromJSON(json: any): CoreMessageGetMessages200ResponseMessagesInner {
    return CoreMessageGetMessages200ResponseMessagesInnerFromJSONTyped(json, false);
}

export function CoreMessageGetMessages200ResponseMessagesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreMessageGetMessages200ResponseMessagesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Component': json['component'] == null ? undefined : json['component'],
        'Contexturl': json['contexturl'] == null ? undefined : json['contexturl'],
        'Contexturlname': json['contexturlname'] == null ? undefined : json['contexturlname'],
        'Customdata': json['customdata'] == null ? undefined : json['customdata'],
        'Eventtype': json['eventtype'] == null ? undefined : json['eventtype'],
        'Fullmessage': json['fullmessage'] == null ? undefined : json['fullmessage'],
        'Fullmessageformat': json['fullmessageformat'] == null ? undefined : json['fullmessageformat'],
        'Fullmessagehtml': json['fullmessagehtml'] == null ? undefined : json['fullmessagehtml'],
        'Iconurl': json['iconurl'] == null ? undefined : json['iconurl'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Notification': json['notification'] == null ? undefined : json['notification'],
        'Smallmessage': json['smallmessage'] == null ? undefined : json['smallmessage'],
        'Subject': json['subject'] == null ? undefined : json['subject'],
        'Text': json['text'] == null ? undefined : json['text'],
        'Timecreated': json['timecreated'] == null ? undefined : json['timecreated'],
        'Timeread': json['timeread'] == null ? undefined : json['timeread'],
        'Userfromfullname': json['userfromfullname'] == null ? undefined : json['userfromfullname'],
        'Useridfrom': json['useridfrom'] == null ? undefined : json['useridfrom'],
        'Useridto': json['useridto'] == null ? undefined : json['useridto'],
        'Usertofullname': json['usertofullname'] == null ? undefined : json['usertofullname'],
    };
}

export function CoreMessageGetMessages200ResponseMessagesInnerToJSON(value?: CoreMessageGetMessages200ResponseMessagesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'component': value['Component'],
        'contexturl': value['Contexturl'],
        'contexturlname': value['Contexturlname'],
        'customdata': value['Customdata'],
        'eventtype': value['Eventtype'],
        'fullmessage': value['Fullmessage'],
        'fullmessageformat': value['Fullmessageformat'],
        'fullmessagehtml': value['Fullmessagehtml'],
        'iconurl': value['Iconurl'],
        'id': value['Id'],
        'notification': value['Notification'],
        'smallmessage': value['Smallmessage'],
        'subject': value['Subject'],
        'text': value['Text'],
        'timecreated': value['Timecreated'],
        'timeread': value['Timeread'],
        'userfromfullname': value['Userfromfullname'],
        'useridfrom': value['Useridfrom'],
        'useridto': value['Useridto'],
        'usertofullname': value['Usertofullname'],
    };
}

