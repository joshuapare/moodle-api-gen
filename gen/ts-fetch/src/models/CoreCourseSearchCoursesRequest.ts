/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCourseSearchCoursesRequest
 */
export interface CoreCourseSearchCoursesRequest {
    /**
     * criteria name
     *                                                         (search, modulelist (only admins), blocklist (only admins), tagid)
     * @type {string}
     * @memberof CoreCourseSearchCoursesRequest
     */
    Criterianame: string;
    /**
     * criteria value
     * @type {string}
     * @memberof CoreCourseSearchCoursesRequest
     */
    Criteriavalue: string;
    /**
     * limit to enrolled courses
     * @type {boolean}
     * @memberof CoreCourseSearchCoursesRequest
     */
    Limittoenrolled?: boolean;
    /**
     * limit to courses where completion is enabled
     * @type {boolean}
     * @memberof CoreCourseSearchCoursesRequest
     */
    Onlywithcompletion?: boolean;
    /**
     * page number (0 based)
     * @type {number}
     * @memberof CoreCourseSearchCoursesRequest
     */
    Page?: number;
    /**
     * items per page
     * @type {number}
     * @memberof CoreCourseSearchCoursesRequest
     */
    Perpage?: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreCourseSearchCoursesRequest
     */
    Requiredcapabilities?: Array<object>;
}

/**
 * Check if a given object implements the CoreCourseSearchCoursesRequest interface.
 */
export function instanceOfCoreCourseSearchCoursesRequest(value: object): boolean {
    if (!('Criterianame' in value)) return false;
    if (!('Criteriavalue' in value)) return false;
    return true;
}

export function CoreCourseSearchCoursesRequestFromJSON(json: any): CoreCourseSearchCoursesRequest {
    return CoreCourseSearchCoursesRequestFromJSONTyped(json, false);
}

export function CoreCourseSearchCoursesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCourseSearchCoursesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Criterianame': json['criterianame'],
        'Criteriavalue': json['criteriavalue'],
        'Limittoenrolled': json['limittoenrolled'] == null ? undefined : json['limittoenrolled'],
        'Onlywithcompletion': json['onlywithcompletion'] == null ? undefined : json['onlywithcompletion'],
        'Page': json['page'] == null ? undefined : json['page'],
        'Perpage': json['perpage'] == null ? undefined : json['perpage'],
        'Requiredcapabilities': json['requiredcapabilities'] == null ? undefined : json['requiredcapabilities'],
    };
}

export function CoreCourseSearchCoursesRequestToJSON(value?: CoreCourseSearchCoursesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'criterianame': value['Criterianame'],
        'criteriavalue': value['Criteriavalue'],
        'limittoenrolled': value['Limittoenrolled'],
        'onlywithcompletion': value['Onlywithcompletion'],
        'page': value['Page'],
        'perpage': value['Perpage'],
        'requiredcapabilities': value['Requiredcapabilities'],
    };
}

