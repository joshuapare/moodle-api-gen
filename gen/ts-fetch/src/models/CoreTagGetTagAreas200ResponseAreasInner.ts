/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreTagGetTagAreas200ResponseAreasInner
 */
export interface CoreTagGetTagAreas200ResponseAreasInner {
    /**
     * Component callback for processing tags.
     * @type {string}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Callback?: string;
    /**
     * Component callback file.
     * @type {string}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Callbackfile?: string;
    /**
     * Component the area is related to.
     * @type {string}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Component?: string;
    /**
     * Whether this area is enabled.
     * @type {boolean}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Enabled?: boolean;
    /**
     * Area id.
     * @type {number}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Id?: number;
    /**
     * Type of item in the component.
     * @type {string}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Itemtype?: string;
    /**
     * Whether the area is locked.
     * @type {boolean}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Locked?: boolean;
    /**
     * Whether the tag area allows tag instances to be created in multiple contexts. 
     * @type {boolean}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Multiplecontexts?: boolean;
    /**
     * Return whether to display only standard, only non-standard or both tags.
     * @type {number}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Showstandard?: number;
    /**
     * The tag collection this are belongs to.
     * @type {number}
     * @memberof CoreTagGetTagAreas200ResponseAreasInner
     */
    Tagcollid?: number;
}

/**
 * Check if a given object implements the CoreTagGetTagAreas200ResponseAreasInner interface.
 */
export function instanceOfCoreTagGetTagAreas200ResponseAreasInner(value: object): boolean {
    return true;
}

export function CoreTagGetTagAreas200ResponseAreasInnerFromJSON(json: any): CoreTagGetTagAreas200ResponseAreasInner {
    return CoreTagGetTagAreas200ResponseAreasInnerFromJSONTyped(json, false);
}

export function CoreTagGetTagAreas200ResponseAreasInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreTagGetTagAreas200ResponseAreasInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Callback': json['callback'] == null ? undefined : json['callback'],
        'Callbackfile': json['callbackfile'] == null ? undefined : json['callbackfile'],
        'Component': json['component'] == null ? undefined : json['component'],
        'Enabled': json['enabled'] == null ? undefined : json['enabled'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Itemtype': json['itemtype'] == null ? undefined : json['itemtype'],
        'Locked': json['locked'] == null ? undefined : json['locked'],
        'Multiplecontexts': json['multiplecontexts'] == null ? undefined : json['multiplecontexts'],
        'Showstandard': json['showstandard'] == null ? undefined : json['showstandard'],
        'Tagcollid': json['tagcollid'] == null ? undefined : json['tagcollid'],
    };
}

export function CoreTagGetTagAreas200ResponseAreasInnerToJSON(value?: CoreTagGetTagAreas200ResponseAreasInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'callback': value['Callback'],
        'callbackfile': value['Callbackfile'],
        'component': value['Component'],
        'enabled': value['Enabled'],
        'id': value['Id'],
        'itemtype': value['Itemtype'],
        'locked': value['Locked'],
        'multiplecontexts': value['Multiplecontexts'],
        'showstandard': value['Showstandard'],
        'tagcollid': value['Tagcollid'],
    };
}

