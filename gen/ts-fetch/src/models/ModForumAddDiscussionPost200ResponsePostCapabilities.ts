/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModForumAddDiscussionPost200ResponsePostCapabilities
 */
export interface ModForumAddDiscussionPost200ResponsePostCapabilities {
    /**
     * Whether the user can post a private reply
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Canreplyprivately: boolean;
    /**
     * Whether the user can control the read status of the post
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Controlreadstatus: boolean;
    /**
     * Whether the user can delete the post
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Delete: boolean;
    /**
     * Whether the user can edit the post
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Edit: boolean;
    /**
     * Whether the user can export the post
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Export: boolean;
    /**
     * Whether the user can reply to the post
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Reply: boolean;
    /**
     * Whether the user can self enrol into the course
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Selfenrol: boolean;
    /**
     * Whether the user can split the post
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    Split: boolean;
    /**
     * Whether the user can view the post
     * @type {boolean}
     * @memberof ModForumAddDiscussionPost200ResponsePostCapabilities
     */
    View: boolean;
}

/**
 * Check if a given object implements the ModForumAddDiscussionPost200ResponsePostCapabilities interface.
 */
export function instanceOfModForumAddDiscussionPost200ResponsePostCapabilities(value: object): boolean {
    if (!('Canreplyprivately' in value)) return false;
    if (!('Controlreadstatus' in value)) return false;
    if (!('Delete' in value)) return false;
    if (!('Edit' in value)) return false;
    if (!('Export' in value)) return false;
    if (!('Reply' in value)) return false;
    if (!('Selfenrol' in value)) return false;
    if (!('Split' in value)) return false;
    if (!('View' in value)) return false;
    return true;
}

export function ModForumAddDiscussionPost200ResponsePostCapabilitiesFromJSON(json: any): ModForumAddDiscussionPost200ResponsePostCapabilities {
    return ModForumAddDiscussionPost200ResponsePostCapabilitiesFromJSONTyped(json, false);
}

export function ModForumAddDiscussionPost200ResponsePostCapabilitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumAddDiscussionPost200ResponsePostCapabilities {
    if (json == null) {
        return json;
    }
    return {
        
        'Canreplyprivately': json['canreplyprivately'],
        'Controlreadstatus': json['controlreadstatus'],
        'Delete': json['delete'],
        'Edit': json['edit'],
        'Export': json['export'],
        'Reply': json['reply'],
        'Selfenrol': json['selfenrol'],
        'Split': json['split'],
        'View': json['view'],
    };
}

export function ModForumAddDiscussionPost200ResponsePostCapabilitiesToJSON(value?: ModForumAddDiscussionPost200ResponsePostCapabilities | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canreplyprivately': value['Canreplyprivately'],
        'controlreadstatus': value['Controlreadstatus'],
        'delete': value['Delete'],
        'edit': value['Edit'],
        'export': value['Export'],
        'reply': value['Reply'],
        'selfenrol': value['Selfenrol'],
        'split': value['Split'],
        'view': value['View'],
    };
}

