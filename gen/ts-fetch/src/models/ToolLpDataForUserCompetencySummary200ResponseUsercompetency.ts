/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCompetencyGradeCompetency200ResponseActionuser } from './CoreCompetencyGradeCompetency200ResponseActionuser';
import {
    CoreCompetencyGradeCompetency200ResponseActionuserFromJSON,
    CoreCompetencyGradeCompetency200ResponseActionuserFromJSONTyped,
    CoreCompetencyGradeCompetency200ResponseActionuserToJSON,
} from './CoreCompetencyGradeCompetency200ResponseActionuser';

/**
 * 
 * @export
 * @interface ToolLpDataForUserCompetencySummary200ResponseUsercompetency
 */
export interface ToolLpDataForUserCompetencySummary200ResponseUsercompetency {
    /**
     * canrequestreview
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Canrequestreview: boolean;
    /**
     * canreview
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Canreview: boolean;
    /**
     * competencyid
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Competencyid: number;
    /**
     * grade
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Grade: number;
    /**
     * gradename
     * @type {string}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Gradename: string;
    /**
     * id
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Id: number;
    /**
     * iscancelreviewrequestallowed
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Iscancelreviewrequestallowed: boolean;
    /**
     * isrequestreviewallowed
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Isrequestreviewallowed: boolean;
    /**
     * isstartreviewallowed
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Isstartreviewallowed: boolean;
    /**
     * isstatusidle
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Isstatusidle: boolean;
    /**
     * isstatusinreview
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Isstatusinreview: boolean;
    /**
     * isstatuswaitingforreview
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Isstatuswaitingforreview: boolean;
    /**
     * isstopreviewallowed
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Isstopreviewallowed: boolean;
    /**
     * proficiency
     * @type {boolean}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Proficiency: boolean;
    /**
     * proficiencyname
     * @type {string}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Proficiencyname: string;
    /**
     * 
     * @type {CoreCompetencyGradeCompetency200ResponseActionuser}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Reviewer?: CoreCompetencyGradeCompetency200ResponseActionuser;
    /**
     * reviewerid
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Reviewerid: number;
    /**
     * status
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Status: number;
    /**
     * statusname
     * @type {string}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Statusname: string;
    /**
     * timecreated
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Timemodified: number;
    /**
     * url
     * @type {string}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Url: string;
    /**
     * userid
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Userid: number;
    /**
     * usermodified
     * @type {number}
     * @memberof ToolLpDataForUserCompetencySummary200ResponseUsercompetency
     */
    Usermodified: number;
}

/**
 * Check if a given object implements the ToolLpDataForUserCompetencySummary200ResponseUsercompetency interface.
 */
export function instanceOfToolLpDataForUserCompetencySummary200ResponseUsercompetency(value: object): boolean {
    if (!('Canrequestreview' in value)) return false;
    if (!('Canreview' in value)) return false;
    if (!('Competencyid' in value)) return false;
    if (!('Grade' in value)) return false;
    if (!('Gradename' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Iscancelreviewrequestallowed' in value)) return false;
    if (!('Isrequestreviewallowed' in value)) return false;
    if (!('Isstartreviewallowed' in value)) return false;
    if (!('Isstatusidle' in value)) return false;
    if (!('Isstatusinreview' in value)) return false;
    if (!('Isstatuswaitingforreview' in value)) return false;
    if (!('Isstopreviewallowed' in value)) return false;
    if (!('Proficiency' in value)) return false;
    if (!('Proficiencyname' in value)) return false;
    if (!('Reviewerid' in value)) return false;
    if (!('Status' in value)) return false;
    if (!('Statusname' in value)) return false;
    if (!('Timecreated' in value)) return false;
    if (!('Timemodified' in value)) return false;
    if (!('Url' in value)) return false;
    if (!('Userid' in value)) return false;
    if (!('Usermodified' in value)) return false;
    return true;
}

export function ToolLpDataForUserCompetencySummary200ResponseUsercompetencyFromJSON(json: any): ToolLpDataForUserCompetencySummary200ResponseUsercompetency {
    return ToolLpDataForUserCompetencySummary200ResponseUsercompetencyFromJSONTyped(json, false);
}

export function ToolLpDataForUserCompetencySummary200ResponseUsercompetencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForUserCompetencySummary200ResponseUsercompetency {
    if (json == null) {
        return json;
    }
    return {
        
        'Canrequestreview': json['canrequestreview'],
        'Canreview': json['canreview'],
        'Competencyid': json['competencyid'],
        'Grade': json['grade'],
        'Gradename': json['gradename'],
        'Id': json['id'],
        'Iscancelreviewrequestallowed': json['iscancelreviewrequestallowed'],
        'Isrequestreviewallowed': json['isrequestreviewallowed'],
        'Isstartreviewallowed': json['isstartreviewallowed'],
        'Isstatusidle': json['isstatusidle'],
        'Isstatusinreview': json['isstatusinreview'],
        'Isstatuswaitingforreview': json['isstatuswaitingforreview'],
        'Isstopreviewallowed': json['isstopreviewallowed'],
        'Proficiency': json['proficiency'],
        'Proficiencyname': json['proficiencyname'],
        'Reviewer': json['reviewer'] == null ? undefined : CoreCompetencyGradeCompetency200ResponseActionuserFromJSON(json['reviewer']),
        'Reviewerid': json['reviewerid'],
        'Status': json['status'],
        'Statusname': json['statusname'],
        'Timecreated': json['timecreated'],
        'Timemodified': json['timemodified'],
        'Url': json['url'],
        'Userid': json['userid'],
        'Usermodified': json['usermodified'],
    };
}

export function ToolLpDataForUserCompetencySummary200ResponseUsercompetencyToJSON(value?: ToolLpDataForUserCompetencySummary200ResponseUsercompetency | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canrequestreview': value['Canrequestreview'],
        'canreview': value['Canreview'],
        'competencyid': value['Competencyid'],
        'grade': value['Grade'],
        'gradename': value['Gradename'],
        'id': value['Id'],
        'iscancelreviewrequestallowed': value['Iscancelreviewrequestallowed'],
        'isrequestreviewallowed': value['Isrequestreviewallowed'],
        'isstartreviewallowed': value['Isstartreviewallowed'],
        'isstatusidle': value['Isstatusidle'],
        'isstatusinreview': value['Isstatusinreview'],
        'isstatuswaitingforreview': value['Isstatuswaitingforreview'],
        'isstopreviewallowed': value['Isstopreviewallowed'],
        'proficiency': value['Proficiency'],
        'proficiencyname': value['Proficiencyname'],
        'reviewer': CoreCompetencyGradeCompetency200ResponseActionuserToJSON(value['Reviewer']),
        'reviewerid': value['Reviewerid'],
        'status': value['Status'],
        'statusname': value['Statusname'],
        'timecreated': value['Timecreated'],
        'timemodified': value['Timemodified'],
        'url': value['Url'],
        'userid': value['Userid'],
        'usermodified': value['Usermodified'],
    };
}

