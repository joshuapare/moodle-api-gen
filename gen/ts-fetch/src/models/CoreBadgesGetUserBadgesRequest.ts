/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreBadgesGetUserBadgesRequest
 */
export interface CoreBadgesGetUserBadgesRequest {
    /**
     * Filter badges by course id, empty all the courses
     * @type {number}
     * @memberof CoreBadgesGetUserBadgesRequest
     */
    Courseid?: number;
    /**
     * Whether to return only public badges
     * @type {boolean}
     * @memberof CoreBadgesGetUserBadgesRequest
     */
    Onlypublic?: boolean;
    /**
     * The page of records to return.
     * @type {number}
     * @memberof CoreBadgesGetUserBadgesRequest
     */
    Page?: number;
    /**
     * The number of records to return per page
     * @type {number}
     * @memberof CoreBadgesGetUserBadgesRequest
     */
    Perpage?: number;
    /**
     * A simple string to search for
     * @type {string}
     * @memberof CoreBadgesGetUserBadgesRequest
     */
    Search?: string;
    /**
     * Badges only for this user id, empty for current user
     * @type {number}
     * @memberof CoreBadgesGetUserBadgesRequest
     */
    Userid?: number;
}

/**
 * Check if a given object implements the CoreBadgesGetUserBadgesRequest interface.
 */
export function instanceOfCoreBadgesGetUserBadgesRequest(value: object): boolean {
    return true;
}

export function CoreBadgesGetUserBadgesRequestFromJSON(json: any): CoreBadgesGetUserBadgesRequest {
    return CoreBadgesGetUserBadgesRequestFromJSONTyped(json, false);
}

export function CoreBadgesGetUserBadgesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreBadgesGetUserBadgesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Courseid': json['courseid'] == null ? undefined : json['courseid'],
        'Onlypublic': json['onlypublic'] == null ? undefined : json['onlypublic'],
        'Page': json['page'] == null ? undefined : json['page'],
        'Perpage': json['perpage'] == null ? undefined : json['perpage'],
        'Search': json['search'] == null ? undefined : json['search'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
    };
}

export function CoreBadgesGetUserBadgesRequestToJSON(value?: CoreBadgesGetUserBadgesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'courseid': value['Courseid'],
        'onlypublic': value['Onlypublic'],
        'page': value['Page'],
        'perpage': value['Perpage'],
        'search': value['Search'],
        'userid': value['Userid'],
    };
}

