/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
 */
export interface CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse {
    /**
     * coursecategory
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Coursecategory: string;
    /**
     * courseimage
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Courseimage: string;
    /**
     * enddate
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Enddate: number;
    /**
     * fullname
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Fullname: string;
    /**
     * fullnamedisplay
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Fullnamedisplay: string;
    /**
     * hasprogress
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Hasprogress: boolean;
    /**
     * hidden
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Hidden: boolean;
    /**
     * id
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Id: number;
    /**
     * idnumber
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Idnumber: string;
    /**
     * isfavourite
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Isfavourite: boolean;
    /**
     * pdfexportfont
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Pdfexportfont: string;
    /**
     * progress
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Progress?: number;
    /**
     * shortname
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Shortname: string;
    /**
     * showactivitydates
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Showactivitydates: boolean;
    /**
     * showcompletionconditions
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Showcompletionconditions: boolean;
    /**
     * showshortname
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Showshortname: boolean;
    /**
     * startdate
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Startdate: number;
    /**
     * summary
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Summary: string;
    /**
     * summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Summaryformat: number;
    /**
     * timeaccess
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Timeaccess?: number;
    /**
     * viewurl
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Viewurl: string;
    /**
     * visible
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
     */
    Visible: boolean;
}

/**
 * Check if a given object implements the CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse interface.
 */
export function instanceOfCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse(value: object): boolean {
    if (!('Coursecategory' in value)) return false;
    if (!('Courseimage' in value)) return false;
    if (!('Enddate' in value)) return false;
    if (!('Fullname' in value)) return false;
    if (!('Fullnamedisplay' in value)) return false;
    if (!('Hasprogress' in value)) return false;
    if (!('Hidden' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Idnumber' in value)) return false;
    if (!('Isfavourite' in value)) return false;
    if (!('Pdfexportfont' in value)) return false;
    if (!('Shortname' in value)) return false;
    if (!('Showactivitydates' in value)) return false;
    if (!('Showcompletionconditions' in value)) return false;
    if (!('Showshortname' in value)) return false;
    if (!('Startdate' in value)) return false;
    if (!('Summary' in value)) return false;
    if (!('Summaryformat' in value)) return false;
    if (!('Viewurl' in value)) return false;
    if (!('Visible' in value)) return false;
    return true;
}

export function CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseFromJSON(json: any): CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse {
    return CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseFromJSONTyped(json, false);
}

export function CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse {
    if (json == null) {
        return json;
    }
    return {
        
        'Coursecategory': json['coursecategory'],
        'Courseimage': json['courseimage'],
        'Enddate': json['enddate'],
        'Fullname': json['fullname'],
        'Fullnamedisplay': json['fullnamedisplay'],
        'Hasprogress': json['hasprogress'],
        'Hidden': json['hidden'],
        'Id': json['id'],
        'Idnumber': json['idnumber'],
        'Isfavourite': json['isfavourite'],
        'Pdfexportfont': json['pdfexportfont'],
        'Progress': json['progress'] == null ? undefined : json['progress'],
        'Shortname': json['shortname'],
        'Showactivitydates': json['showactivitydates'],
        'Showcompletionconditions': json['showcompletionconditions'],
        'Showshortname': json['showshortname'],
        'Startdate': json['startdate'],
        'Summary': json['summary'],
        'Summaryformat': json['summaryformat'],
        'Timeaccess': json['timeaccess'] == null ? undefined : json['timeaccess'],
        'Viewurl': json['viewurl'],
        'Visible': json['visible'],
    };
}

export function CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourseToJSON(value?: CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coursecategory': value['Coursecategory'],
        'courseimage': value['Courseimage'],
        'enddate': value['Enddate'],
        'fullname': value['Fullname'],
        'fullnamedisplay': value['Fullnamedisplay'],
        'hasprogress': value['Hasprogress'],
        'hidden': value['Hidden'],
        'id': value['Id'],
        'idnumber': value['Idnumber'],
        'isfavourite': value['Isfavourite'],
        'pdfexportfont': value['Pdfexportfont'],
        'progress': value['Progress'],
        'shortname': value['Shortname'],
        'showactivitydates': value['Showactivitydates'],
        'showcompletionconditions': value['Showcompletionconditions'],
        'showshortname': value['Showshortname'],
        'startdate': value['Startdate'],
        'summary': value['Summary'],
        'summaryformat': value['Summaryformat'],
        'timeaccess': value['Timeaccess'],
        'viewurl': value['Viewurl'],
        'visible': value['Visible'],
    };
}

