/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
 */
export interface CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner {
    /**
     * The id of the conversation
     * @type {number}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Conversationid?: number;
    /**
     * The user's name
     * @type {string}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Fullname?: string;
    /**
     * If the user has been blocked
     * @type {boolean}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Isblocked?: boolean;
    /**
     * If we are messaging the user
     * @type {boolean}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Ismessaging?: boolean;
    /**
     * The user's online status
     * @type {boolean}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Isonline?: boolean;
    /**
     * If the user has read the message
     * @type {boolean}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Isread?: boolean;
    /**
     * The user's last message
     * @type {string}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Lastmessage?: string;
    /**
     * Timestamp for last message
     * @type {number}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Lastmessagedate?: number;
    /**
     * The unique search message id
     * @type {number}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Messageid?: number;
    /**
     * User picture URL
     * @type {string}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Profileimageurl?: string;
    /**
     * Small user picture URL
     * @type {string}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Profileimageurlsmall?: string;
    /**
     * Was the last message sent from the current user?
     * @type {boolean}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Sentfromcurrentuser?: boolean;
    /**
     * Show the user's online status?
     * @type {boolean}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Showonlinestatus?: boolean;
    /**
     * The number of unread messages in this conversation
     * @type {number}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Unreadcount?: number;
    /**
     * The user's id
     * @type {number}
     * @memberof CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
     */
    Userid?: number;
}

/**
 * Check if a given object implements the CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner interface.
 */
export function instanceOfCoreMessageDataForMessageareaSearchMessages200ResponseContactsInner(value: object): boolean {
    return true;
}

export function CoreMessageDataForMessageareaSearchMessages200ResponseContactsInnerFromJSON(json: any): CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner {
    return CoreMessageDataForMessageareaSearchMessages200ResponseContactsInnerFromJSONTyped(json, false);
}

export function CoreMessageDataForMessageareaSearchMessages200ResponseContactsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Conversationid': json['conversationid'] == null ? undefined : json['conversationid'],
        'Fullname': json['fullname'] == null ? undefined : json['fullname'],
        'Isblocked': json['isblocked'] == null ? undefined : json['isblocked'],
        'Ismessaging': json['ismessaging'] == null ? undefined : json['ismessaging'],
        'Isonline': json['isonline'] == null ? undefined : json['isonline'],
        'Isread': json['isread'] == null ? undefined : json['isread'],
        'Lastmessage': json['lastmessage'] == null ? undefined : json['lastmessage'],
        'Lastmessagedate': json['lastmessagedate'] == null ? undefined : json['lastmessagedate'],
        'Messageid': json['messageid'] == null ? undefined : json['messageid'],
        'Profileimageurl': json['profileimageurl'] == null ? undefined : json['profileimageurl'],
        'Profileimageurlsmall': json['profileimageurlsmall'] == null ? undefined : json['profileimageurlsmall'],
        'Sentfromcurrentuser': json['sentfromcurrentuser'] == null ? undefined : json['sentfromcurrentuser'],
        'Showonlinestatus': json['showonlinestatus'] == null ? undefined : json['showonlinestatus'],
        'Unreadcount': json['unreadcount'] == null ? undefined : json['unreadcount'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
    };
}

export function CoreMessageDataForMessageareaSearchMessages200ResponseContactsInnerToJSON(value?: CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'conversationid': value['Conversationid'],
        'fullname': value['Fullname'],
        'isblocked': value['Isblocked'],
        'ismessaging': value['Ismessaging'],
        'isonline': value['Isonline'],
        'isread': value['Isread'],
        'lastmessage': value['Lastmessage'],
        'lastmessagedate': value['Lastmessagedate'],
        'messageid': value['Messageid'],
        'profileimageurl': value['Profileimageurl'],
        'profileimageurlsmall': value['Profileimageurlsmall'],
        'sentfromcurrentuser': value['Sentfromcurrentuser'],
        'showonlinestatus': value['Showonlinestatus'],
        'unreadcount': value['Unreadcount'],
        'userid': value['Userid'],
    };
}

