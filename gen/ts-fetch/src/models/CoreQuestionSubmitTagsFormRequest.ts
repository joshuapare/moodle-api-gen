/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreQuestionSubmitTagsFormRequest
 */
export interface CoreQuestionSubmitTagsFormRequest {
    /**
     * The editing context id
     * @type {number}
     * @memberof CoreQuestionSubmitTagsFormRequest
     */
    Contextid: number;
    /**
     * The data from the tag form
     * @type {string}
     * @memberof CoreQuestionSubmitTagsFormRequest
     */
    Formdata: string;
    /**
     * The question id
     * @type {number}
     * @memberof CoreQuestionSubmitTagsFormRequest
     */
    Questionid: number;
}

/**
 * Check if a given object implements the CoreQuestionSubmitTagsFormRequest interface.
 */
export function instanceOfCoreQuestionSubmitTagsFormRequest(value: object): boolean {
    if (!('Contextid' in value)) return false;
    if (!('Formdata' in value)) return false;
    if (!('Questionid' in value)) return false;
    return true;
}

export function CoreQuestionSubmitTagsFormRequestFromJSON(json: any): CoreQuestionSubmitTagsFormRequest {
    return CoreQuestionSubmitTagsFormRequestFromJSONTyped(json, false);
}

export function CoreQuestionSubmitTagsFormRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreQuestionSubmitTagsFormRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Contextid': json['contextid'],
        'Formdata': json['formdata'],
        'Questionid': json['questionid'],
    };
}

export function CoreQuestionSubmitTagsFormRequestToJSON(value?: CoreQuestionSubmitTagsFormRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contextid': value['Contextid'],
        'formdata': value['Formdata'],
        'questionid': value['Questionid'],
    };
}

