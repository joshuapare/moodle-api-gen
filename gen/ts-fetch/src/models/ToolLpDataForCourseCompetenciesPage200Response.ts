/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner } from './ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner';
import {
    ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerFromJSON,
    ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerFromJSONTyped,
    ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerToJSON,
} from './ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner';
import type { ToolLpDataForCourseCompetenciesPage200ResponseSettings } from './ToolLpDataForCourseCompetenciesPage200ResponseSettings';
import {
    ToolLpDataForCourseCompetenciesPage200ResponseSettingsFromJSON,
    ToolLpDataForCourseCompetenciesPage200ResponseSettingsFromJSONTyped,
    ToolLpDataForCourseCompetenciesPage200ResponseSettingsToJSON,
} from './ToolLpDataForCourseCompetenciesPage200ResponseSettings';
import type { ToolLpDataForCourseCompetenciesPage200ResponseStatistics } from './ToolLpDataForCourseCompetenciesPage200ResponseStatistics';
import {
    ToolLpDataForCourseCompetenciesPage200ResponseStatisticsFromJSON,
    ToolLpDataForCourseCompetenciesPage200ResponseStatisticsFromJSONTyped,
    ToolLpDataForCourseCompetenciesPage200ResponseStatisticsToJSON,
} from './ToolLpDataForCourseCompetenciesPage200ResponseStatistics';

/**
 * 
 * @export
 * @interface ToolLpDataForCourseCompetenciesPage200Response
 */
export interface ToolLpDataForCourseCompetenciesPage200Response {
    /**
     * User can configure course competency settings
     * @type {boolean}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Canconfigurecoursecompetencies: boolean;
    /**
     * User can grade competencies.
     * @type {boolean}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Cangradecompetencies: boolean;
    /**
     * User can manage competency frameworks
     * @type {boolean}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Canmanagecompetencyframeworks: boolean;
    /**
     * User can manage linked course competencies
     * @type {boolean}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Canmanagecoursecompetencies: boolean;
    /**
     * 
     * @type {Array<ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner>}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Competencies: Array<ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner>;
    /**
     * The current course id
     * @type {number}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Courseid: number;
    /**
     * Current user id, if the user is a gradable user.
     * @type {number}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Gradableuserid?: number;
    /**
     * Url to the manage competencies page.
     * @type {string}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Manageurl: string;
    /**
     * The current page context ID.
     * @type {number}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Pagecontextid: number;
    /**
     * Url to the course competencies page.
     * @type {string}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Pluginbaseurl: string;
    /**
     * 
     * @type {ToolLpDataForCourseCompetenciesPage200ResponseSettings}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Settings: ToolLpDataForCourseCompetenciesPage200ResponseSettings;
    /**
     * 
     * @type {ToolLpDataForCourseCompetenciesPage200ResponseStatistics}
     * @memberof ToolLpDataForCourseCompetenciesPage200Response
     */
    Statistics: ToolLpDataForCourseCompetenciesPage200ResponseStatistics;
}

/**
 * Check if a given object implements the ToolLpDataForCourseCompetenciesPage200Response interface.
 */
export function instanceOfToolLpDataForCourseCompetenciesPage200Response(value: object): boolean {
    if (!('Canconfigurecoursecompetencies' in value)) return false;
    if (!('Cangradecompetencies' in value)) return false;
    if (!('Canmanagecompetencyframeworks' in value)) return false;
    if (!('Canmanagecoursecompetencies' in value)) return false;
    if (!('Competencies' in value)) return false;
    if (!('Courseid' in value)) return false;
    if (!('Manageurl' in value)) return false;
    if (!('Pagecontextid' in value)) return false;
    if (!('Pluginbaseurl' in value)) return false;
    if (!('Settings' in value)) return false;
    if (!('Statistics' in value)) return false;
    return true;
}

export function ToolLpDataForCourseCompetenciesPage200ResponseFromJSON(json: any): ToolLpDataForCourseCompetenciesPage200Response {
    return ToolLpDataForCourseCompetenciesPage200ResponseFromJSONTyped(json, false);
}

export function ToolLpDataForCourseCompetenciesPage200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForCourseCompetenciesPage200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Canconfigurecoursecompetencies': json['canconfigurecoursecompetencies'],
        'Cangradecompetencies': json['cangradecompetencies'],
        'Canmanagecompetencyframeworks': json['canmanagecompetencyframeworks'],
        'Canmanagecoursecompetencies': json['canmanagecoursecompetencies'],
        'Competencies': ((json['competencies'] as Array<any>).map(ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerFromJSON)),
        'Courseid': json['courseid'],
        'Gradableuserid': json['gradableuserid'] == null ? undefined : json['gradableuserid'],
        'Manageurl': json['manageurl'],
        'Pagecontextid': json['pagecontextid'],
        'Pluginbaseurl': json['pluginbaseurl'],
        'Settings': ToolLpDataForCourseCompetenciesPage200ResponseSettingsFromJSON(json['settings']),
        'Statistics': ToolLpDataForCourseCompetenciesPage200ResponseStatisticsFromJSON(json['statistics']),
    };
}

export function ToolLpDataForCourseCompetenciesPage200ResponseToJSON(value?: ToolLpDataForCourseCompetenciesPage200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canconfigurecoursecompetencies': value['Canconfigurecoursecompetencies'],
        'cangradecompetencies': value['Cangradecompetencies'],
        'canmanagecompetencyframeworks': value['Canmanagecompetencyframeworks'],
        'canmanagecoursecompetencies': value['Canmanagecoursecompetencies'],
        'competencies': ((value['Competencies'] as Array<any>).map(ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerToJSON)),
        'courseid': value['Courseid'],
        'gradableuserid': value['Gradableuserid'],
        'manageurl': value['Manageurl'],
        'pagecontextid': value['Pagecontextid'],
        'pluginbaseurl': value['Pluginbaseurl'],
        'settings': ToolLpDataForCourseCompetenciesPage200ResponseSettingsToJSON(value['Settings']),
        'statistics': ToolLpDataForCourseCompetenciesPage200ResponseStatisticsToJSON(value['Statistics']),
    };
}

