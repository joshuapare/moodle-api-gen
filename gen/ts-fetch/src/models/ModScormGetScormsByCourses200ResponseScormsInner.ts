/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import {
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSONTyped,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON,
} from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';

/**
 * SCORM
 * @export
 * @interface ModScormGetScormsByCourses200ResponseScormsInner
 */
export interface ModScormGetScormsByCourses200ResponseScormsInner {
    /**
     * Auto continue?
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Auto?: boolean;
    /**
     * Save track data automatically?
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Autocommit?: boolean;
    /**
     * Minimum score required
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Completionscorerequired?: number;
    /**
     * Require all scos to return completion status
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Completionstatusallscos?: number;
    /**
     * Status passed/completed required?
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Completionstatusrequired?: number;
    /**
     * Course id
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Course?: number;
    /**
     * Course module id
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Coursemodule?: number;
    /**
     * How to display attempt status
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Displayattemptstatus?: number;
    /**
     * Display contents structure
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Displaycoursestructure?: boolean;
    /**
     * Status current attempt is forced to "completed"
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Forcecompleted?: boolean;
    /**
     * Controls re-entry behaviour
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Forcenewattempt?: number;
    /**
     * Grade method
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Grademethod?: number;
    /**
     * Group id
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Groupingid?: number;
    /**
     * Group mode
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Groupmode?: number;
    /**
     * Frame height
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Height?: number;
    /**
     * Disable preview mode?
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Hidebrowse?: boolean;
    /**
     * How to display the SCORM structure in player
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Hidetoc?: number;
    /**
     * Activity instance id
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Id?: number;
    /**
     * Activity introduction
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Intro?: string;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Introfiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Introformat?: number;
    /**
     * Forced activity language
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Lang?: string;
    /**
     * Prevents to launch new attempts once finished
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Lastattemptlock?: boolean;
    /**
     * First content to launch
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Launch?: number;
    /**
     * Maximum number of attemtps
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Maxattempt?: number;
    /**
     * Max grade
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Maxgrade?: number;
    /**
     * MD5 Hash of package file
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Md5hash?: string;
    /**
     * Activity name
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Name?: string;
    /**
     * Show navigation buttons
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Nav?: number;
    /**
     * Navigation position left
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Navpositionleft?: number;
    /**
     * Navigation position top
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Navpositiontop?: number;
    /**
     * Additional options
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Options?: string;
    /**
     * SCORM zip package size
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Packagesize?: number;
    /**
     * SCORM zip package URL
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Packageurl?: string;
    /**
     * Display in current or new window
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Popup?: number;
    /**
     * Protect package downloads?
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Protectpackagedownloads?: boolean;
    /**
     * Reference to the package
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Reference?: string;
    /**
     * Revison number
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Revision?: number;
    /**
     * SCORM type
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Scormtype?: string;
    /**
     * Course section id
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Section?: number;
    /**
     * Package content or ext path hash
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Sha1hash?: string;
    /**
     * How to skip the content structure page
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Skipview?: number;
    /**
     * Available to
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Timeclose?: number;
    /**
     * Time of last modification
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Timemodified?: number;
    /**
     * Available from
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Timeopen?: number;
    /**
     * Auto-update frequency for remote packages
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Updatefreq?: number;
    /**
     * SCORM version (SCORM_12, SCORM_13, SCORM_AICC)
     * @type {string}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Version?: string;
    /**
     * Visible
     * @type {boolean}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Visible?: boolean;
    /**
     * What grade
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Whatgrade?: number;
    /**
     * Frame width
     * @type {number}
     * @memberof ModScormGetScormsByCourses200ResponseScormsInner
     */
    Width?: number;
}

/**
 * Check if a given object implements the ModScormGetScormsByCourses200ResponseScormsInner interface.
 */
export function instanceOfModScormGetScormsByCourses200ResponseScormsInner(value: object): boolean {
    return true;
}

export function ModScormGetScormsByCourses200ResponseScormsInnerFromJSON(json: any): ModScormGetScormsByCourses200ResponseScormsInner {
    return ModScormGetScormsByCourses200ResponseScormsInnerFromJSONTyped(json, false);
}

export function ModScormGetScormsByCourses200ResponseScormsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModScormGetScormsByCourses200ResponseScormsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Auto': json['auto'] == null ? undefined : json['auto'],
        'Autocommit': json['autocommit'] == null ? undefined : json['autocommit'],
        'Completionscorerequired': json['completionscorerequired'] == null ? undefined : json['completionscorerequired'],
        'Completionstatusallscos': json['completionstatusallscos'] == null ? undefined : json['completionstatusallscos'],
        'Completionstatusrequired': json['completionstatusrequired'] == null ? undefined : json['completionstatusrequired'],
        'Course': json['course'] == null ? undefined : json['course'],
        'Coursemodule': json['coursemodule'] == null ? undefined : json['coursemodule'],
        'Displayattemptstatus': json['displayattemptstatus'] == null ? undefined : json['displayattemptstatus'],
        'Displaycoursestructure': json['displaycoursestructure'] == null ? undefined : json['displaycoursestructure'],
        'Forcecompleted': json['forcecompleted'] == null ? undefined : json['forcecompleted'],
        'Forcenewattempt': json['forcenewattempt'] == null ? undefined : json['forcenewattempt'],
        'Grademethod': json['grademethod'] == null ? undefined : json['grademethod'],
        'Groupingid': json['groupingid'] == null ? undefined : json['groupingid'],
        'Groupmode': json['groupmode'] == null ? undefined : json['groupmode'],
        'Height': json['height'] == null ? undefined : json['height'],
        'Hidebrowse': json['hidebrowse'] == null ? undefined : json['hidebrowse'],
        'Hidetoc': json['hidetoc'] == null ? undefined : json['hidetoc'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Intro': json['intro'] == null ? undefined : json['intro'],
        'Introfiles': json['introfiles'] == null ? undefined : ((json['introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'Introformat': json['introformat'] == null ? undefined : json['introformat'],
        'Lang': json['lang'] == null ? undefined : json['lang'],
        'Lastattemptlock': json['lastattemptlock'] == null ? undefined : json['lastattemptlock'],
        'Launch': json['launch'] == null ? undefined : json['launch'],
        'Maxattempt': json['maxattempt'] == null ? undefined : json['maxattempt'],
        'Maxgrade': json['maxgrade'] == null ? undefined : json['maxgrade'],
        'Md5hash': json['md5hash'] == null ? undefined : json['md5hash'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Nav': json['nav'] == null ? undefined : json['nav'],
        'Navpositionleft': json['navpositionleft'] == null ? undefined : json['navpositionleft'],
        'Navpositiontop': json['navpositiontop'] == null ? undefined : json['navpositiontop'],
        'Options': json['options'] == null ? undefined : json['options'],
        'Packagesize': json['packagesize'] == null ? undefined : json['packagesize'],
        'Packageurl': json['packageurl'] == null ? undefined : json['packageurl'],
        'Popup': json['popup'] == null ? undefined : json['popup'],
        'Protectpackagedownloads': json['protectpackagedownloads'] == null ? undefined : json['protectpackagedownloads'],
        'Reference': json['reference'] == null ? undefined : json['reference'],
        'Revision': json['revision'] == null ? undefined : json['revision'],
        'Scormtype': json['scormtype'] == null ? undefined : json['scormtype'],
        'Section': json['section'] == null ? undefined : json['section'],
        'Sha1hash': json['sha1hash'] == null ? undefined : json['sha1hash'],
        'Skipview': json['skipview'] == null ? undefined : json['skipview'],
        'Timeclose': json['timeclose'] == null ? undefined : json['timeclose'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Timeopen': json['timeopen'] == null ? undefined : json['timeopen'],
        'Updatefreq': json['updatefreq'] == null ? undefined : json['updatefreq'],
        'Version': json['version'] == null ? undefined : json['version'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
        'Whatgrade': json['whatgrade'] == null ? undefined : json['whatgrade'],
        'Width': json['width'] == null ? undefined : json['width'],
    };
}

export function ModScormGetScormsByCourses200ResponseScormsInnerToJSON(value?: ModScormGetScormsByCourses200ResponseScormsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'auto': value['Auto'],
        'autocommit': value['Autocommit'],
        'completionscorerequired': value['Completionscorerequired'],
        'completionstatusallscos': value['Completionstatusallscos'],
        'completionstatusrequired': value['Completionstatusrequired'],
        'course': value['Course'],
        'coursemodule': value['Coursemodule'],
        'displayattemptstatus': value['Displayattemptstatus'],
        'displaycoursestructure': value['Displaycoursestructure'],
        'forcecompleted': value['Forcecompleted'],
        'forcenewattempt': value['Forcenewattempt'],
        'grademethod': value['Grademethod'],
        'groupingid': value['Groupingid'],
        'groupmode': value['Groupmode'],
        'height': value['Height'],
        'hidebrowse': value['Hidebrowse'],
        'hidetoc': value['Hidetoc'],
        'id': value['Id'],
        'intro': value['Intro'],
        'introfiles': value['Introfiles'] == null ? undefined : ((value['Introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'introformat': value['Introformat'],
        'lang': value['Lang'],
        'lastattemptlock': value['Lastattemptlock'],
        'launch': value['Launch'],
        'maxattempt': value['Maxattempt'],
        'maxgrade': value['Maxgrade'],
        'md5hash': value['Md5hash'],
        'name': value['Name'],
        'nav': value['Nav'],
        'navpositionleft': value['Navpositionleft'],
        'navpositiontop': value['Navpositiontop'],
        'options': value['Options'],
        'packagesize': value['Packagesize'],
        'packageurl': value['Packageurl'],
        'popup': value['Popup'],
        'protectpackagedownloads': value['Protectpackagedownloads'],
        'reference': value['Reference'],
        'revision': value['Revision'],
        'scormtype': value['Scormtype'],
        'section': value['Section'],
        'sha1hash': value['Sha1hash'],
        'skipview': value['Skipview'],
        'timeclose': value['Timeclose'],
        'timemodified': value['Timemodified'],
        'timeopen': value['Timeopen'],
        'updatefreq': value['Updatefreq'],
        'version': value['Version'],
        'visible': value['Visible'],
        'whatgrade': value['Whatgrade'],
        'width': value['Width'],
    };
}

