/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModDataGetEntry200ResponseRatinginfoRatingsInner
 */
export interface ModDataGetEntry200ResponseRatinginfoRatingsInner {
    /**
     * Aggregated ratings grade.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Aggregate?: number;
    /**
     * The aggregation label.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Aggregatelabel?: string;
    /**
     * Aggregated ratings as string.
     * @type {string}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Aggregatestr?: string;
    /**
     * Whether the user can rate the item.
     * @type {boolean}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Canrate?: boolean;
    /**
     * Whether the user can view the aggregated grade.
     * @type {boolean}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Canviewaggregate?: boolean;
    /**
     * Ratings count (used when aggregating).
     * @type {number}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Count?: number;
    /**
     * Item id.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Itemid?: number;
    /**
     * The rating the user gave.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Rating?: number;
    /**
     * Scale id.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Scaleid?: number;
    /**
     * User who rated id.
     * @type {number}
     * @memberof ModDataGetEntry200ResponseRatinginfoRatingsInner
     */
    Userid?: number;
}

/**
 * Check if a given object implements the ModDataGetEntry200ResponseRatinginfoRatingsInner interface.
 */
export function instanceOfModDataGetEntry200ResponseRatinginfoRatingsInner(value: object): boolean {
    return true;
}

export function ModDataGetEntry200ResponseRatinginfoRatingsInnerFromJSON(json: any): ModDataGetEntry200ResponseRatinginfoRatingsInner {
    return ModDataGetEntry200ResponseRatinginfoRatingsInnerFromJSONTyped(json, false);
}

export function ModDataGetEntry200ResponseRatinginfoRatingsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModDataGetEntry200ResponseRatinginfoRatingsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Aggregate': json['aggregate'] == null ? undefined : json['aggregate'],
        'Aggregatelabel': json['aggregatelabel'] == null ? undefined : json['aggregatelabel'],
        'Aggregatestr': json['aggregatestr'] == null ? undefined : json['aggregatestr'],
        'Canrate': json['canrate'] == null ? undefined : json['canrate'],
        'Canviewaggregate': json['canviewaggregate'] == null ? undefined : json['canviewaggregate'],
        'Count': json['count'] == null ? undefined : json['count'],
        'Itemid': json['itemid'] == null ? undefined : json['itemid'],
        'Rating': json['rating'] == null ? undefined : json['rating'],
        'Scaleid': json['scaleid'] == null ? undefined : json['scaleid'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
    };
}

export function ModDataGetEntry200ResponseRatinginfoRatingsInnerToJSON(value?: ModDataGetEntry200ResponseRatinginfoRatingsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'aggregate': value['Aggregate'],
        'aggregatelabel': value['Aggregatelabel'],
        'aggregatestr': value['Aggregatestr'],
        'canrate': value['Canrate'],
        'canviewaggregate': value['Canviewaggregate'],
        'count': value['Count'],
        'itemid': value['Itemid'],
        'rating': value['Rating'],
        'scaleid': value['Scaleid'],
        'userid': value['Userid'],
    };
}

