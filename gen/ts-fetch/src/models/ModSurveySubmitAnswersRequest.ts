/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModSurveySubmitAnswersRequestAnswersInner } from './ModSurveySubmitAnswersRequestAnswersInner';
import {
    ModSurveySubmitAnswersRequestAnswersInnerFromJSON,
    ModSurveySubmitAnswersRequestAnswersInnerFromJSONTyped,
    ModSurveySubmitAnswersRequestAnswersInnerToJSON,
} from './ModSurveySubmitAnswersRequestAnswersInner';

/**
 * 
 * @export
 * @interface ModSurveySubmitAnswersRequest
 */
export interface ModSurveySubmitAnswersRequest {
    /**
     * 
     * @type {Array<ModSurveySubmitAnswersRequestAnswersInner>}
     * @memberof ModSurveySubmitAnswersRequest
     */
    Answers: Array<ModSurveySubmitAnswersRequestAnswersInner>;
    /**
     * Survey id
     * @type {number}
     * @memberof ModSurveySubmitAnswersRequest
     */
    Surveyid: number;
}

/**
 * Check if a given object implements the ModSurveySubmitAnswersRequest interface.
 */
export function instanceOfModSurveySubmitAnswersRequest(value: object): boolean {
    if (!('Answers' in value)) return false;
    if (!('Surveyid' in value)) return false;
    return true;
}

export function ModSurveySubmitAnswersRequestFromJSON(json: any): ModSurveySubmitAnswersRequest {
    return ModSurveySubmitAnswersRequestFromJSONTyped(json, false);
}

export function ModSurveySubmitAnswersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModSurveySubmitAnswersRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Answers': ((json['answers'] as Array<any>).map(ModSurveySubmitAnswersRequestAnswersInnerFromJSON)),
        'Surveyid': json['surveyid'],
    };
}

export function ModSurveySubmitAnswersRequestToJSON(value?: ModSurveySubmitAnswersRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'answers': ((value['Answers'] as Array<any>).map(ModSurveySubmitAnswersRequestAnswersInnerToJSON)),
        'surveyid': value['Surveyid'],
    };
}

