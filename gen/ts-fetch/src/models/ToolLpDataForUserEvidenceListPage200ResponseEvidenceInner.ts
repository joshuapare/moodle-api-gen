/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner } from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import {
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSONTyped,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON,
} from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import type { ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner } from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner';
import {
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSON,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSONTyped,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerToJSON,
} from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner';

/**
 * 
 * @export
 * @interface ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
 */
export interface ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner {
    /**
     * canmanage
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Canmanage?: boolean;
    /**
     * competencycount
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Competencycount?: number;
    /**
     * description
     * @type {string}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Description?: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Descriptionformat?: number;
    /**
     * filecount
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Filecount?: number;
    /**
     * 
     * @type {Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Files?: Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>;
    /**
     * hasurlorfiles
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Hasurlorfiles?: boolean;
    /**
     * id
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Id?: number;
    /**
     * name
     * @type {string}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Name?: string;
    /**
     * timecreated
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Timecreated?: number;
    /**
     * timemodified
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Timemodified?: number;
    /**
     * url
     * @type {string}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Url?: string;
    /**
     * urlshort
     * @type {string}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Urlshort?: string;
    /**
     * 
     * @type {Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner>}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Usercompetencies?: Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner>;
    /**
     * userhasplan
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Userhasplan?: boolean;
    /**
     * userid
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Userid?: number;
    /**
     * usermodified
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner
     */
    Usermodified?: number;
}

/**
 * Check if a given object implements the ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner interface.
 */
export function instanceOfToolLpDataForUserEvidenceListPage200ResponseEvidenceInner(value: object): boolean {
    return true;
}

export function ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerFromJSON(json: any): ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner {
    return ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerFromJSONTyped(json, false);
}

export function ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Canmanage': json['canmanage'] == null ? undefined : json['canmanage'],
        'Competencycount': json['competencycount'] == null ? undefined : json['competencycount'],
        'Description': json['description'] == null ? undefined : json['description'],
        'Descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'Filecount': json['filecount'] == null ? undefined : json['filecount'],
        'Files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON)),
        'Hasurlorfiles': json['hasurlorfiles'] == null ? undefined : json['hasurlorfiles'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Timecreated': json['timecreated'] == null ? undefined : json['timecreated'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Url': json['url'] == null ? undefined : json['url'],
        'Urlshort': json['urlshort'] == null ? undefined : json['urlshort'],
        'Usercompetencies': json['usercompetencies'] == null ? undefined : ((json['usercompetencies'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSON)),
        'Userhasplan': json['userhasplan'] == null ? undefined : json['userhasplan'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
        'Usermodified': json['usermodified'] == null ? undefined : json['usermodified'],
    };
}

export function ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerToJSON(value?: ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmanage': value['Canmanage'],
        'competencycount': value['Competencycount'],
        'description': value['Description'],
        'descriptionformat': value['Descriptionformat'],
        'filecount': value['Filecount'],
        'files': value['Files'] == null ? undefined : ((value['Files'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON)),
        'hasurlorfiles': value['Hasurlorfiles'],
        'id': value['Id'],
        'name': value['Name'],
        'timecreated': value['Timecreated'],
        'timemodified': value['Timemodified'],
        'url': value['Url'],
        'urlshort': value['Urlshort'],
        'usercompetencies': value['Usercompetencies'] == null ? undefined : ((value['Usercompetencies'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerToJSON)),
        'userhasplan': value['Userhasplan'],
        'userid': value['Userid'],
        'usermodified': value['Usermodified'],
    };
}

