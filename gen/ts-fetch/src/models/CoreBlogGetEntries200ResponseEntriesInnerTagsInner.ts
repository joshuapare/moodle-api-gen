/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreBlogGetEntries200ResponseEntriesInnerTagsInner
 */
export interface CoreBlogGetEntries200ResponseEntriesInnerTagsInner {
    /**
     * Whether the tag is flagged as inappropriate.
     * @type {number}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Flag?: number;
    /**
     * Tag id.
     * @type {number}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Id?: number;
    /**
     * Whether this tag is standard.
     * @type {boolean}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Isstandard?: boolean;
    /**
     * Id of the record tagged.
     * @type {number}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Itemid?: number;
    /**
     * Tag name.
     * @type {string}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Name?: string;
    /**
     * Tag ordering.
     * @type {number}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Ordering?: number;
    /**
     * The raw, unnormalised name for the tag as entered by users.
     * @type {string}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Rawname?: string;
    /**
     * Tag collection id.
     * @type {number}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Tagcollid?: number;
    /**
     * Context the tag instance belongs to.
     * @type {number}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Taginstancecontextid?: number;
    /**
     * Tag instance id.
     * @type {number}
     * @memberof CoreBlogGetEntries200ResponseEntriesInnerTagsInner
     */
    Taginstanceid?: number;
}

/**
 * Check if a given object implements the CoreBlogGetEntries200ResponseEntriesInnerTagsInner interface.
 */
export function instanceOfCoreBlogGetEntries200ResponseEntriesInnerTagsInner(value: object): boolean {
    return true;
}

export function CoreBlogGetEntries200ResponseEntriesInnerTagsInnerFromJSON(json: any): CoreBlogGetEntries200ResponseEntriesInnerTagsInner {
    return CoreBlogGetEntries200ResponseEntriesInnerTagsInnerFromJSONTyped(json, false);
}

export function CoreBlogGetEntries200ResponseEntriesInnerTagsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreBlogGetEntries200ResponseEntriesInnerTagsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Flag': json['flag'] == null ? undefined : json['flag'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Isstandard': json['isstandard'] == null ? undefined : json['isstandard'],
        'Itemid': json['itemid'] == null ? undefined : json['itemid'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Ordering': json['ordering'] == null ? undefined : json['ordering'],
        'Rawname': json['rawname'] == null ? undefined : json['rawname'],
        'Tagcollid': json['tagcollid'] == null ? undefined : json['tagcollid'],
        'Taginstancecontextid': json['taginstancecontextid'] == null ? undefined : json['taginstancecontextid'],
        'Taginstanceid': json['taginstanceid'] == null ? undefined : json['taginstanceid'],
    };
}

export function CoreBlogGetEntries200ResponseEntriesInnerTagsInnerToJSON(value?: CoreBlogGetEntries200ResponseEntriesInnerTagsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'flag': value['Flag'],
        'id': value['Id'],
        'isstandard': value['Isstandard'],
        'itemid': value['Itemid'],
        'name': value['Name'],
        'ordering': value['Ordering'],
        'rawname': value['Rawname'],
        'tagcollid': value['Tagcollid'],
        'taginstancecontextid': value['Taginstancecontextid'],
        'taginstanceid': value['Taginstanceid'],
    };
}

