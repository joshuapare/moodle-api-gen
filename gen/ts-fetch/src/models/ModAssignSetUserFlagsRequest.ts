/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModAssignSetUserFlagsRequestUserflagsInner } from './ModAssignSetUserFlagsRequestUserflagsInner';
import {
    ModAssignSetUserFlagsRequestUserflagsInnerFromJSON,
    ModAssignSetUserFlagsRequestUserflagsInnerFromJSONTyped,
    ModAssignSetUserFlagsRequestUserflagsInnerToJSON,
} from './ModAssignSetUserFlagsRequestUserflagsInner';

/**
 * 
 * @export
 * @interface ModAssignSetUserFlagsRequest
 */
export interface ModAssignSetUserFlagsRequest {
    /**
     * assignment id
     * @type {number}
     * @memberof ModAssignSetUserFlagsRequest
     */
    Assignmentid: number;
    /**
     * 
     * @type {Array<ModAssignSetUserFlagsRequestUserflagsInner>}
     * @memberof ModAssignSetUserFlagsRequest
     */
    Userflags: Array<ModAssignSetUserFlagsRequestUserflagsInner>;
}

/**
 * Check if a given object implements the ModAssignSetUserFlagsRequest interface.
 */
export function instanceOfModAssignSetUserFlagsRequest(value: object): boolean {
    if (!('Assignmentid' in value)) return false;
    if (!('Userflags' in value)) return false;
    return true;
}

export function ModAssignSetUserFlagsRequestFromJSON(json: any): ModAssignSetUserFlagsRequest {
    return ModAssignSetUserFlagsRequestFromJSONTyped(json, false);
}

export function ModAssignSetUserFlagsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModAssignSetUserFlagsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Assignmentid': json['assignmentid'],
        'Userflags': ((json['userflags'] as Array<any>).map(ModAssignSetUserFlagsRequestUserflagsInnerFromJSON)),
    };
}

export function ModAssignSetUserFlagsRequestToJSON(value?: ModAssignSetUserFlagsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'assignmentid': value['Assignmentid'],
        'userflags': ((value['Userflags'] as Array<any>).map(ModAssignSetUserFlagsRequestUserflagsInnerToJSON)),
    };
}

