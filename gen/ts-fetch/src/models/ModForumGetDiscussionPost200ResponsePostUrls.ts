/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModForumGetDiscussionPost200ResponsePostUrls
 */
export interface ModForumGetDiscussionPost200ResponsePostUrls {
    /**
     * The URL used to delete the post
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Delete?: string;
    /**
     * discuss
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Discuss?: string;
    /**
     * The URL used to edit the post
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Edit?: string;
    /**
     * The URL used to export the post
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Export?: string;
    /**
     * The URL used to mark the post as read
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Markasread?: string;
    /**
     * The URL used to mark the post as unread
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Markasunread?: string;
    /**
     * The URL used to reply to the post
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Reply?: string;
    /**
     * The URL used to split the discussion with the selected post being the first post in the new discussion
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Split?: string;
    /**
     * The URL used to view the post
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    View?: string;
    /**
     * The URL used to view the post in isolation
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Viewisolated?: string;
    /**
     * The URL used to view the parent of the post
     * @type {string}
     * @memberof ModForumGetDiscussionPost200ResponsePostUrls
     */
    Viewparent?: string;
}

/**
 * Check if a given object implements the ModForumGetDiscussionPost200ResponsePostUrls interface.
 */
export function instanceOfModForumGetDiscussionPost200ResponsePostUrls(value: object): boolean {
    return true;
}

export function ModForumGetDiscussionPost200ResponsePostUrlsFromJSON(json: any): ModForumGetDiscussionPost200ResponsePostUrls {
    return ModForumGetDiscussionPost200ResponsePostUrlsFromJSONTyped(json, false);
}

export function ModForumGetDiscussionPost200ResponsePostUrlsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumGetDiscussionPost200ResponsePostUrls {
    if (json == null) {
        return json;
    }
    return {
        
        'Delete': json['delete'] == null ? undefined : json['delete'],
        'Discuss': json['discuss'] == null ? undefined : json['discuss'],
        'Edit': json['edit'] == null ? undefined : json['edit'],
        'Export': json['export'] == null ? undefined : json['export'],
        'Markasread': json['markasread'] == null ? undefined : json['markasread'],
        'Markasunread': json['markasunread'] == null ? undefined : json['markasunread'],
        'Reply': json['reply'] == null ? undefined : json['reply'],
        'Split': json['split'] == null ? undefined : json['split'],
        'View': json['view'] == null ? undefined : json['view'],
        'Viewisolated': json['viewisolated'] == null ? undefined : json['viewisolated'],
        'Viewparent': json['viewparent'] == null ? undefined : json['viewparent'],
    };
}

export function ModForumGetDiscussionPost200ResponsePostUrlsToJSON(value?: ModForumGetDiscussionPost200ResponsePostUrls | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'delete': value['Delete'],
        'discuss': value['Discuss'],
        'edit': value['Edit'],
        'export': value['Export'],
        'markasread': value['Markasread'],
        'markasunread': value['Markasunread'],
        'reply': value['Reply'],
        'split': value['Split'],
        'view': value['View'],
        'viewisolated': value['Viewisolated'],
        'viewparent': value['Viewparent'],
    };
}

