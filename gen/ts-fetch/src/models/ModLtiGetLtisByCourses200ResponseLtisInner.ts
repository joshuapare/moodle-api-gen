/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import {
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSONTyped,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON,
} from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';

/**
 * Tool
 * @export
 * @interface ModLtiGetLtisByCourses200ResponseLtisInner
 */
export interface ModLtiGetLtisByCourses200ResponseLtisInner {
    /**
     * Course id
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Course?: number;
    /**
     * Course module id
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Coursemodule?: number;
    /**
     * Debug launch
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Debuglaunch?: number;
    /**
     * Enable grades
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Grade?: number;
    /**
     * Group id
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Groupingid?: number;
    /**
     * Group mode
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Groupmode?: number;
    /**
     * Alternative icon URL
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Icon?: string;
    /**
     * Activity instance id
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Id?: number;
    /**
     * instructor choice accept grades
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Instructorchoiceacceptgrades?: number;
    /**
     * Instructor choice allow roster
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Instructorchoiceallowroster?: number;
    /**
     * Instructor choice allow setting
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Instructorchoiceallowsetting?: number;
    /**
     * instructor choice send mail address
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Instructorchoicesendemailaddr?: number;
    /**
     * Instructor choice send name
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Instructorchoicesendname?: string;
    /**
     * instructor custom parameters
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Instructorcustomparameters?: string;
    /**
     * Activity introduction
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Intro?: string;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Introfiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Introformat?: number;
    /**
     * Forced activity language
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Lang?: string;
    /**
     * Launch container mode
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Launchcontainer?: number;
    /**
     * Activity name
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Name?: string;
    /**
     * Shared secret
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Password?: string;
    /**
     * Resource key
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Resourcekey?: string;
    /**
     * Course section id
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Section?: number;
    /**
     * Secure icon URL
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Secureicon?: string;
    /**
     * Secure tool url
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Securetoolurl?: string;
    /**
     * Service salt
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Servicesalt?: string;
    /**
     * Show description launch
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Showdescriptionlaunch?: number;
    /**
     * Show title launch
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Showtitlelaunch?: number;
    /**
     * Time of creation
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Timecreated?: number;
    /**
     * Time of last modification
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Timemodified?: number;
    /**
     * Tool url
     * @type {string}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Toolurl?: string;
    /**
     * Type id
     * @type {number}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Typeid?: number;
    /**
     * Visible
     * @type {boolean}
     * @memberof ModLtiGetLtisByCourses200ResponseLtisInner
     */
    Visible?: boolean;
}

/**
 * Check if a given object implements the ModLtiGetLtisByCourses200ResponseLtisInner interface.
 */
export function instanceOfModLtiGetLtisByCourses200ResponseLtisInner(value: object): boolean {
    return true;
}

export function ModLtiGetLtisByCourses200ResponseLtisInnerFromJSON(json: any): ModLtiGetLtisByCourses200ResponseLtisInner {
    return ModLtiGetLtisByCourses200ResponseLtisInnerFromJSONTyped(json, false);
}

export function ModLtiGetLtisByCourses200ResponseLtisInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLtiGetLtisByCourses200ResponseLtisInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Course': json['course'] == null ? undefined : json['course'],
        'Coursemodule': json['coursemodule'] == null ? undefined : json['coursemodule'],
        'Debuglaunch': json['debuglaunch'] == null ? undefined : json['debuglaunch'],
        'Grade': json['grade'] == null ? undefined : json['grade'],
        'Groupingid': json['groupingid'] == null ? undefined : json['groupingid'],
        'Groupmode': json['groupmode'] == null ? undefined : json['groupmode'],
        'Icon': json['icon'] == null ? undefined : json['icon'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Instructorchoiceacceptgrades': json['instructorchoiceacceptgrades'] == null ? undefined : json['instructorchoiceacceptgrades'],
        'Instructorchoiceallowroster': json['instructorchoiceallowroster'] == null ? undefined : json['instructorchoiceallowroster'],
        'Instructorchoiceallowsetting': json['instructorchoiceallowsetting'] == null ? undefined : json['instructorchoiceallowsetting'],
        'Instructorchoicesendemailaddr': json['instructorchoicesendemailaddr'] == null ? undefined : json['instructorchoicesendemailaddr'],
        'Instructorchoicesendname': json['instructorchoicesendname'] == null ? undefined : json['instructorchoicesendname'],
        'Instructorcustomparameters': json['instructorcustomparameters'] == null ? undefined : json['instructorcustomparameters'],
        'Intro': json['intro'] == null ? undefined : json['intro'],
        'Introfiles': json['introfiles'] == null ? undefined : ((json['introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'Introformat': json['introformat'] == null ? undefined : json['introformat'],
        'Lang': json['lang'] == null ? undefined : json['lang'],
        'Launchcontainer': json['launchcontainer'] == null ? undefined : json['launchcontainer'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Password': json['password'] == null ? undefined : json['password'],
        'Resourcekey': json['resourcekey'] == null ? undefined : json['resourcekey'],
        'Section': json['section'] == null ? undefined : json['section'],
        'Secureicon': json['secureicon'] == null ? undefined : json['secureicon'],
        'Securetoolurl': json['securetoolurl'] == null ? undefined : json['securetoolurl'],
        'Servicesalt': json['servicesalt'] == null ? undefined : json['servicesalt'],
        'Showdescriptionlaunch': json['showdescriptionlaunch'] == null ? undefined : json['showdescriptionlaunch'],
        'Showtitlelaunch': json['showtitlelaunch'] == null ? undefined : json['showtitlelaunch'],
        'Timecreated': json['timecreated'] == null ? undefined : json['timecreated'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Toolurl': json['toolurl'] == null ? undefined : json['toolurl'],
        'Typeid': json['typeid'] == null ? undefined : json['typeid'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function ModLtiGetLtisByCourses200ResponseLtisInnerToJSON(value?: ModLtiGetLtisByCourses200ResponseLtisInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'course': value['Course'],
        'coursemodule': value['Coursemodule'],
        'debuglaunch': value['Debuglaunch'],
        'grade': value['Grade'],
        'groupingid': value['Groupingid'],
        'groupmode': value['Groupmode'],
        'icon': value['Icon'],
        'id': value['Id'],
        'instructorchoiceacceptgrades': value['Instructorchoiceacceptgrades'],
        'instructorchoiceallowroster': value['Instructorchoiceallowroster'],
        'instructorchoiceallowsetting': value['Instructorchoiceallowsetting'],
        'instructorchoicesendemailaddr': value['Instructorchoicesendemailaddr'],
        'instructorchoicesendname': value['Instructorchoicesendname'],
        'instructorcustomparameters': value['Instructorcustomparameters'],
        'intro': value['Intro'],
        'introfiles': value['Introfiles'] == null ? undefined : ((value['Introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'introformat': value['Introformat'],
        'lang': value['Lang'],
        'launchcontainer': value['Launchcontainer'],
        'name': value['Name'],
        'password': value['Password'],
        'resourcekey': value['Resourcekey'],
        'section': value['Section'],
        'secureicon': value['Secureicon'],
        'securetoolurl': value['Securetoolurl'],
        'servicesalt': value['Servicesalt'],
        'showdescriptionlaunch': value['Showdescriptionlaunch'],
        'showtitlelaunch': value['Showtitlelaunch'],
        'timecreated': value['Timecreated'],
        'timemodified': value['Timemodified'],
        'toolurl': value['Toolurl'],
        'typeid': value['Typeid'],
        'visible': value['Visible'],
    };
}

