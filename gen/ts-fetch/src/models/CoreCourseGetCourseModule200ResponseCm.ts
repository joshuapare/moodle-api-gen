/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCourseGetCourseModule200ResponseCmAdvancedgradingInner } from './CoreCourseGetCourseModule200ResponseCmAdvancedgradingInner';
import {
    CoreCourseGetCourseModule200ResponseCmAdvancedgradingInnerFromJSON,
    CoreCourseGetCourseModule200ResponseCmAdvancedgradingInnerFromJSONTyped,
    CoreCourseGetCourseModule200ResponseCmAdvancedgradingInnerToJSON,
} from './CoreCourseGetCourseModule200ResponseCmAdvancedgradingInner';
import type { CoreCourseGetCourseModule200ResponseCmOutcomesInner } from './CoreCourseGetCourseModule200ResponseCmOutcomesInner';
import {
    CoreCourseGetCourseModule200ResponseCmOutcomesInnerFromJSON,
    CoreCourseGetCourseModule200ResponseCmOutcomesInnerFromJSONTyped,
    CoreCourseGetCourseModule200ResponseCmOutcomesInnerToJSON,
} from './CoreCourseGetCourseModule200ResponseCmOutcomesInner';

/**
 * 
 * @export
 * @interface CoreCourseGetCourseModule200ResponseCm
 */
export interface CoreCourseGetCourseModule200ResponseCm {
    /**
     * Time added
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Added?: number;
    /**
     * 
     * @type {Array<CoreCourseGetCourseModule200ResponseCmAdvancedgradingInner>}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Advancedgrading?: Array<CoreCourseGetCourseModule200ResponseCmAdvancedgradingInner>;
    /**
     * Availability settings
     * @type {string}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Availability?: string;
    /**
     * If completion is enabled
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Completion: number;
    /**
     * Completion time expected
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Completionexpected?: number;
    /**
     * Completion grade item
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Completiongradeitemnumber?: number;
    /**
     * Completion pass grade setting
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Completionpassgrade?: number;
    /**
     * Completion view setting
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Completionview?: number;
    /**
     * The course id
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Course: number;
    /**
     * The download content value
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Downloadcontent?: number;
    /**
     * Grade (max value or scale id)
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Grade?: number;
    /**
     * Grade category
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Gradecat?: number;
    /**
     * Grade to pass (float)
     * @type {string}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Gradepass?: string;
    /**
     * Grouping id
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Groupingid: number;
    /**
     * Group mode
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Groupmode: number;
    /**
     * The course module id
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Id: number;
    /**
     * Module id number
     * @type {string}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Idnumber?: string;
    /**
     * Indentation
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Indent?: number;
    /**
     * The activity instance id
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Instance: number;
    /**
     * The module component name (forum, assign, etc..)
     * @type {string}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Modname: string;
    /**
     * The module type id
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Module: number;
    /**
     * The activity name
     * @type {string}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Name: string;
    /**
     * 
     * @type {Array<CoreCourseGetCourseModule200ResponseCmOutcomesInner>}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Outcomes?: Array<CoreCourseGetCourseModule200ResponseCmOutcomesInner>;
    /**
     * Scale items (if used)
     * @type {string}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Scale?: string;
    /**
     * Score
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Score?: number;
    /**
     * The module section id
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Section: number;
    /**
     * The module section number
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Sectionnum: number;
    /**
     * If the description is showed
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Showdescription?: number;
    /**
     * If visible
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Visible?: number;
    /**
     * Visible old
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Visibleold?: number;
    /**
     * If visible on course page
     * @type {number}
     * @memberof CoreCourseGetCourseModule200ResponseCm
     */
    Visibleoncoursepage?: number;
}

/**
 * Check if a given object implements the CoreCourseGetCourseModule200ResponseCm interface.
 */
export function instanceOfCoreCourseGetCourseModule200ResponseCm(value: object): boolean {
    if (!('Completion' in value)) return false;
    if (!('Course' in value)) return false;
    if (!('Groupingid' in value)) return false;
    if (!('Groupmode' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Instance' in value)) return false;
    if (!('Modname' in value)) return false;
    if (!('Module' in value)) return false;
    if (!('Name' in value)) return false;
    if (!('Section' in value)) return false;
    if (!('Sectionnum' in value)) return false;
    return true;
}

export function CoreCourseGetCourseModule200ResponseCmFromJSON(json: any): CoreCourseGetCourseModule200ResponseCm {
    return CoreCourseGetCourseModule200ResponseCmFromJSONTyped(json, false);
}

export function CoreCourseGetCourseModule200ResponseCmFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCourseGetCourseModule200ResponseCm {
    if (json == null) {
        return json;
    }
    return {
        
        'Added': json['added'] == null ? undefined : json['added'],
        'Advancedgrading': json['advancedgrading'] == null ? undefined : ((json['advancedgrading'] as Array<any>).map(CoreCourseGetCourseModule200ResponseCmAdvancedgradingInnerFromJSON)),
        'Availability': json['availability'] == null ? undefined : json['availability'],
        'Completion': json['completion'],
        'Completionexpected': json['completionexpected'] == null ? undefined : json['completionexpected'],
        'Completiongradeitemnumber': json['completiongradeitemnumber'] == null ? undefined : json['completiongradeitemnumber'],
        'Completionpassgrade': json['completionpassgrade'] == null ? undefined : json['completionpassgrade'],
        'Completionview': json['completionview'] == null ? undefined : json['completionview'],
        'Course': json['course'],
        'Downloadcontent': json['downloadcontent'] == null ? undefined : json['downloadcontent'],
        'Grade': json['grade'] == null ? undefined : json['grade'],
        'Gradecat': json['gradecat'] == null ? undefined : json['gradecat'],
        'Gradepass': json['gradepass'] == null ? undefined : json['gradepass'],
        'Groupingid': json['groupingid'],
        'Groupmode': json['groupmode'],
        'Id': json['id'],
        'Idnumber': json['idnumber'] == null ? undefined : json['idnumber'],
        'Indent': json['indent'] == null ? undefined : json['indent'],
        'Instance': json['instance'],
        'Modname': json['modname'],
        'Module': json['module'],
        'Name': json['name'],
        'Outcomes': json['outcomes'] == null ? undefined : ((json['outcomes'] as Array<any>).map(CoreCourseGetCourseModule200ResponseCmOutcomesInnerFromJSON)),
        'Scale': json['scale'] == null ? undefined : json['scale'],
        'Score': json['score'] == null ? undefined : json['score'],
        'Section': json['section'],
        'Sectionnum': json['sectionnum'],
        'Showdescription': json['showdescription'] == null ? undefined : json['showdescription'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
        'Visibleold': json['visibleold'] == null ? undefined : json['visibleold'],
        'Visibleoncoursepage': json['visibleoncoursepage'] == null ? undefined : json['visibleoncoursepage'],
    };
}

export function CoreCourseGetCourseModule200ResponseCmToJSON(value?: CoreCourseGetCourseModule200ResponseCm | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'added': value['Added'],
        'advancedgrading': value['Advancedgrading'] == null ? undefined : ((value['Advancedgrading'] as Array<any>).map(CoreCourseGetCourseModule200ResponseCmAdvancedgradingInnerToJSON)),
        'availability': value['Availability'],
        'completion': value['Completion'],
        'completionexpected': value['Completionexpected'],
        'completiongradeitemnumber': value['Completiongradeitemnumber'],
        'completionpassgrade': value['Completionpassgrade'],
        'completionview': value['Completionview'],
        'course': value['Course'],
        'downloadcontent': value['Downloadcontent'],
        'grade': value['Grade'],
        'gradecat': value['Gradecat'],
        'gradepass': value['Gradepass'],
        'groupingid': value['Groupingid'],
        'groupmode': value['Groupmode'],
        'id': value['Id'],
        'idnumber': value['Idnumber'],
        'indent': value['Indent'],
        'instance': value['Instance'],
        'modname': value['Modname'],
        'module': value['Module'],
        'name': value['Name'],
        'outcomes': value['Outcomes'] == null ? undefined : ((value['Outcomes'] as Array<any>).map(CoreCourseGetCourseModule200ResponseCmOutcomesInnerToJSON)),
        'scale': value['Scale'],
        'score': value['Score'],
        'section': value['Section'],
        'sectionnum': value['Sectionnum'],
        'showdescription': value['Showdescription'],
        'visible': value['Visible'],
        'visibleold': value['Visibleold'],
        'visibleoncoursepage': value['Visibleoncoursepage'],
    };
}

