/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCourseAddContentItemToUserFavourites200Response
 */
export interface CoreCourseAddContentItemToUserFavourites200Response {
    /**
     * The archetype of the module exposing the content item
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Archetype: string;
    /**
     * The name of the component exposing the content item
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Componentname: string;
    /**
     * Has the user favourited the content item
     * @type {boolean}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Favourite: boolean;
    /**
     * Html description / help for the content item
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Help: string;
    /**
     * Html containing the icon for the content item
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Icon: string;
    /**
     * The id of the content item
     * @type {number}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Id: number;
    /**
     * If this item was pulled from the old callback and has no item id.
     * @type {boolean}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Legacyitem: boolean;
    /**
     * The link to the content item creation page
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Link: string;
    /**
     * Name of the content item
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Name: string;
    /**
     * The purpose of the component exposing the content item
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Purpose: string;
    /**
     * Has this item been recommended
     * @type {boolean}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Recommended: boolean;
    /**
     * The string title of the content item, human readable
     * @type {string}
     * @memberof CoreCourseAddContentItemToUserFavourites200Response
     */
    Title: string;
}

/**
 * Check if a given object implements the CoreCourseAddContentItemToUserFavourites200Response interface.
 */
export function instanceOfCoreCourseAddContentItemToUserFavourites200Response(value: object): boolean {
    if (!('Archetype' in value)) return false;
    if (!('Componentname' in value)) return false;
    if (!('Favourite' in value)) return false;
    if (!('Help' in value)) return false;
    if (!('Icon' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Legacyitem' in value)) return false;
    if (!('Link' in value)) return false;
    if (!('Name' in value)) return false;
    if (!('Purpose' in value)) return false;
    if (!('Recommended' in value)) return false;
    if (!('Title' in value)) return false;
    return true;
}

export function CoreCourseAddContentItemToUserFavourites200ResponseFromJSON(json: any): CoreCourseAddContentItemToUserFavourites200Response {
    return CoreCourseAddContentItemToUserFavourites200ResponseFromJSONTyped(json, false);
}

export function CoreCourseAddContentItemToUserFavourites200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCourseAddContentItemToUserFavourites200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Archetype': json['archetype'],
        'Componentname': json['componentname'],
        'Favourite': json['favourite'],
        'Help': json['help'],
        'Icon': json['icon'],
        'Id': json['id'],
        'Legacyitem': json['legacyitem'],
        'Link': json['link'],
        'Name': json['name'],
        'Purpose': json['purpose'],
        'Recommended': json['recommended'],
        'Title': json['title'],
    };
}

export function CoreCourseAddContentItemToUserFavourites200ResponseToJSON(value?: CoreCourseAddContentItemToUserFavourites200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'archetype': value['Archetype'],
        'componentname': value['Componentname'],
        'favourite': value['Favourite'],
        'help': value['Help'],
        'icon': value['Icon'],
        'id': value['Id'],
        'legacyitem': value['Legacyitem'],
        'link': value['Link'],
        'name': value['Name'],
        'purpose': value['Purpose'],
        'recommended': value['Recommended'],
        'title': value['Title'],
    };
}

