/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
 */
export interface ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner {
    /**
     * The Mobile addon (package) name.
     * @type {string}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Addon?: string;
    /**
     * The plugin component name.
     * @type {string}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Component?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Dependencies?: Array<object>;
    /**
     * The addon package hash or empty if it doesn't exist.
     * @type {string}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Filehash?: string;
    /**
     * The addon package size or empty if it doesn't exist.
     * @type {number}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Filesize?: number;
    /**
     * The addon package url for download
     *                                                             or empty if it doesn't exist.
     * @type {string}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Fileurl?: string;
    /**
     * Handlers definition (JSON)
     * @type {string}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Handlers?: string;
    /**
     * Language strings used by the handlers (JSON)
     * @type {string}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Lang?: string;
    /**
     * The plugin version number.
     * @type {string}
     * @memberof ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner
     */
    Version?: string;
}

/**
 * Check if a given object implements the ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner interface.
 */
export function instanceOfToolMobileGetPluginsSupportingMobile200ResponsePluginsInner(value: object): boolean {
    return true;
}

export function ToolMobileGetPluginsSupportingMobile200ResponsePluginsInnerFromJSON(json: any): ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner {
    return ToolMobileGetPluginsSupportingMobile200ResponsePluginsInnerFromJSONTyped(json, false);
}

export function ToolMobileGetPluginsSupportingMobile200ResponsePluginsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Addon': json['addon'] == null ? undefined : json['addon'],
        'Component': json['component'] == null ? undefined : json['component'],
        'Dependencies': json['dependencies'] == null ? undefined : json['dependencies'],
        'Filehash': json['filehash'] == null ? undefined : json['filehash'],
        'Filesize': json['filesize'] == null ? undefined : json['filesize'],
        'Fileurl': json['fileurl'] == null ? undefined : json['fileurl'],
        'Handlers': json['handlers'] == null ? undefined : json['handlers'],
        'Lang': json['lang'] == null ? undefined : json['lang'],
        'Version': json['version'] == null ? undefined : json['version'],
    };
}

export function ToolMobileGetPluginsSupportingMobile200ResponsePluginsInnerToJSON(value?: ToolMobileGetPluginsSupportingMobile200ResponsePluginsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'addon': value['Addon'],
        'component': value['Component'],
        'dependencies': value['Dependencies'],
        'filehash': value['Filehash'],
        'filesize': value['Filesize'],
        'fileurl': value['Fileurl'],
        'handlers': value['Handlers'],
        'lang': value['Lang'],
        'version': value['Version'],
    };
}

