/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';
import {
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSONTyped,
    CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON,
} from './CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner';

/**
 * Choices
 * @export
 * @interface ModChoiceGetChoicesByCourses200ResponseChoicesInner
 */
export interface ModChoiceGetChoicesByCourses200ResponseChoicesInner {
    /**
     * Allow multiple choices
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Allowmultiple?: boolean;
    /**
     * Allow update
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Allowupdate?: boolean;
    /**
     * Completion on user submission
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Completionsubmit?: boolean;
    /**
     * Course id
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Course?: number;
    /**
     * Course module id
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Coursemodule?: number;
    /**
     * Display mode (vertical, horizontal)
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Display?: number;
    /**
     * Group id
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Groupingid?: number;
    /**
     * Group mode
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Groupmode?: number;
    /**
     * Activity instance id
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Id?: number;
    /**
     * Include inactive users
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Includeinactive?: boolean;
    /**
     * Activity introduction
     * @type {string}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Intro?: string;
    /**
     * 
     * @type {Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Introfiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Introformat?: number;
    /**
     * Forced activity language
     * @type {string}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Lang?: string;
    /**
     * Limit unswers
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Limitanswers?: boolean;
    /**
     * Activity name
     * @type {string}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Name?: string;
    /**
     * If choice is published
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Publish?: boolean;
    /**
     * Course section id
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Section?: number;
    /**
     * Show available spaces
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Showavailable?: boolean;
    /**
     * Show preview before timeopen
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Showpreview?: boolean;
    /**
     * 0 never, 1 after answer, 2 after close, 3 always
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Showresults?: number;
    /**
     * Show users who not answered yet
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Showunanswered?: boolean;
    /**
     * Date of closing validity
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Timeclose?: number;
    /**
     * Time of last modification
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Timemodified?: number;
    /**
     * Date of opening validity
     * @type {number}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Timeopen?: number;
    /**
     * Visible
     * @type {boolean}
     * @memberof ModChoiceGetChoicesByCourses200ResponseChoicesInner
     */
    Visible?: boolean;
}

/**
 * Check if a given object implements the ModChoiceGetChoicesByCourses200ResponseChoicesInner interface.
 */
export function instanceOfModChoiceGetChoicesByCourses200ResponseChoicesInner(value: object): boolean {
    return true;
}

export function ModChoiceGetChoicesByCourses200ResponseChoicesInnerFromJSON(json: any): ModChoiceGetChoicesByCourses200ResponseChoicesInner {
    return ModChoiceGetChoicesByCourses200ResponseChoicesInnerFromJSONTyped(json, false);
}

export function ModChoiceGetChoicesByCourses200ResponseChoicesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModChoiceGetChoicesByCourses200ResponseChoicesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Allowmultiple': json['allowmultiple'] == null ? undefined : json['allowmultiple'],
        'Allowupdate': json['allowupdate'] == null ? undefined : json['allowupdate'],
        'Completionsubmit': json['completionsubmit'] == null ? undefined : json['completionsubmit'],
        'Course': json['course'] == null ? undefined : json['course'],
        'Coursemodule': json['coursemodule'] == null ? undefined : json['coursemodule'],
        'Display': json['display'] == null ? undefined : json['display'],
        'Groupingid': json['groupingid'] == null ? undefined : json['groupingid'],
        'Groupmode': json['groupmode'] == null ? undefined : json['groupmode'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Includeinactive': json['includeinactive'] == null ? undefined : json['includeinactive'],
        'Intro': json['intro'] == null ? undefined : json['intro'],
        'Introfiles': json['introfiles'] == null ? undefined : ((json['introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerFromJSON)),
        'Introformat': json['introformat'] == null ? undefined : json['introformat'],
        'Lang': json['lang'] == null ? undefined : json['lang'],
        'Limitanswers': json['limitanswers'] == null ? undefined : json['limitanswers'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Publish': json['publish'] == null ? undefined : json['publish'],
        'Section': json['section'] == null ? undefined : json['section'],
        'Showavailable': json['showavailable'] == null ? undefined : json['showavailable'],
        'Showpreview': json['showpreview'] == null ? undefined : json['showpreview'],
        'Showresults': json['showresults'] == null ? undefined : json['showresults'],
        'Showunanswered': json['showunanswered'] == null ? undefined : json['showunanswered'],
        'Timeclose': json['timeclose'] == null ? undefined : json['timeclose'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Timeopen': json['timeopen'] == null ? undefined : json['timeopen'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function ModChoiceGetChoicesByCourses200ResponseChoicesInnerToJSON(value?: ModChoiceGetChoicesByCourses200ResponseChoicesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'allowmultiple': value['Allowmultiple'],
        'allowupdate': value['Allowupdate'],
        'completionsubmit': value['Completionsubmit'],
        'course': value['Course'],
        'coursemodule': value['Coursemodule'],
        'display': value['Display'],
        'groupingid': value['Groupingid'],
        'groupmode': value['Groupmode'],
        'id': value['Id'],
        'includeinactive': value['Includeinactive'],
        'intro': value['Intro'],
        'introfiles': value['Introfiles'] == null ? undefined : ((value['Introfiles'] as Array<any>).map(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInnerToJSON)),
        'introformat': value['Introformat'],
        'lang': value['Lang'],
        'limitanswers': value['Limitanswers'],
        'name': value['Name'],
        'publish': value['Publish'],
        'section': value['Section'],
        'showavailable': value['Showavailable'],
        'showpreview': value['Showpreview'],
        'showresults': value['Showresults'],
        'showunanswered': value['Showunanswered'],
        'timeclose': value['Timeclose'],
        'timemodified': value['Timemodified'],
        'timeopen': value['Timeopen'],
        'visible': value['Visible'],
    };
}

