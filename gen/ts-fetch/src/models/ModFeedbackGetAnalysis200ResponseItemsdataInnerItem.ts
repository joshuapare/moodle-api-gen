/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner } from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import {
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSONTyped,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON,
} from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';

/**
 * 
 * @export
 * @interface ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
 */
export interface ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    /**
     * The item id this item depend on.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Dependitem: number;
    /**
     * The depend value.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Dependvalue: string;
    /**
     * The feedback instance id this records belongs to.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Feedback: number;
    /**
     * Whether it has a value or not.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Hasvalue: number;
    /**
     * The record id.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Id: number;
    /**
     * 
     * @type {Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Itemfiles: Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>;
    /**
     * The item position number
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Itemnumber: number;
    /**
     * The item label.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Label: string;
    /**
     * The item name.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Name: string;
    /**
     * Different additional settings for the item (question).
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Options: string;
    /**
     * Additional data that may be required by external functions
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Otherdata: string;
    /**
     * The position in the list of questions.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Position: number;
    /**
     * The text describing the item or the available possible answers.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Presentation: string;
    /**
     * Whether is a item (question) required or not.
     * @type {boolean}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Required: boolean;
    /**
     * If it belogns to a template, the template id.
     * @type {number}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Template: number;
    /**
     * The type of the item.
     * @type {string}
     * @memberof ModFeedbackGetAnalysis200ResponseItemsdataInnerItem
     */
    Typ: string;
}

/**
 * Check if a given object implements the ModFeedbackGetAnalysis200ResponseItemsdataInnerItem interface.
 */
export function instanceOfModFeedbackGetAnalysis200ResponseItemsdataInnerItem(value: object): boolean {
    if (!('Dependitem' in value)) return false;
    if (!('Dependvalue' in value)) return false;
    if (!('Feedback' in value)) return false;
    if (!('Hasvalue' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Itemfiles' in value)) return false;
    if (!('Itemnumber' in value)) return false;
    if (!('Label' in value)) return false;
    if (!('Name' in value)) return false;
    if (!('Options' in value)) return false;
    if (!('Otherdata' in value)) return false;
    if (!('Position' in value)) return false;
    if (!('Presentation' in value)) return false;
    if (!('Required' in value)) return false;
    if (!('Template' in value)) return false;
    if (!('Typ' in value)) return false;
    return true;
}

export function ModFeedbackGetAnalysis200ResponseItemsdataInnerItemFromJSON(json: any): ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    return ModFeedbackGetAnalysis200ResponseItemsdataInnerItemFromJSONTyped(json, false);
}

export function ModFeedbackGetAnalysis200ResponseItemsdataInnerItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModFeedbackGetAnalysis200ResponseItemsdataInnerItem {
    if (json == null) {
        return json;
    }
    return {
        
        'Dependitem': json['dependitem'],
        'Dependvalue': json['dependvalue'],
        'Feedback': json['feedback'],
        'Hasvalue': json['hasvalue'],
        'Id': json['id'],
        'Itemfiles': ((json['itemfiles'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON)),
        'Itemnumber': json['itemnumber'],
        'Label': json['label'],
        'Name': json['name'],
        'Options': json['options'],
        'Otherdata': json['otherdata'],
        'Position': json['position'],
        'Presentation': json['presentation'],
        'Required': json['required'],
        'Template': json['template'],
        'Typ': json['typ'],
    };
}

export function ModFeedbackGetAnalysis200ResponseItemsdataInnerItemToJSON(value?: ModFeedbackGetAnalysis200ResponseItemsdataInnerItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'dependitem': value['Dependitem'],
        'dependvalue': value['Dependvalue'],
        'feedback': value['Feedback'],
        'hasvalue': value['Hasvalue'],
        'id': value['Id'],
        'itemfiles': ((value['Itemfiles'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON)),
        'itemnumber': value['Itemnumber'],
        'label': value['Label'],
        'name': value['Name'],
        'options': value['Options'],
        'otherdata': value['Otherdata'],
        'position': value['Position'],
        'presentation': value['Presentation'],
        'required': value['Required'],
        'template': value['Template'],
        'typ': value['Typ'],
    };
}

