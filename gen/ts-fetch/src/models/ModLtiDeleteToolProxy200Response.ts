/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModLtiDeleteToolProxy200Response
 */
export interface ModLtiDeleteToolProxy200Response {
    /**
     * Tool proxy capabilities offered
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Capabilityoffered: string;
    /**
     * Tool proxy globally unique identifier
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Guid: string;
    /**
     * Tool proxy id
     * @type {number}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Id: number;
    /**
     * Tool proxy name
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Name: string;
    /**
     * Tool proxy registration URL
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Regurl: string;
    /**
     * Tool proxy shared secret
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Secret: string;
    /**
     * Tool proxy services offered
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Serviceoffered: string;
    /**
     * Tool proxy state
     * @type {number}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    State: number;
    /**
     * Tool proxy time created
     * @type {number}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Timecreated: number;
    /**
     * Tool proxy modified
     * @type {number}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Timemodified: number;
    /**
     * Tool proxy
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Toolproxy: string;
    /**
     * Tool proxy consumer code
     * @type {string}
     * @memberof ModLtiDeleteToolProxy200Response
     */
    Vendorcode: string;
}

/**
 * Check if a given object implements the ModLtiDeleteToolProxy200Response interface.
 */
export function instanceOfModLtiDeleteToolProxy200Response(value: object): boolean {
    if (!('Capabilityoffered' in value)) return false;
    if (!('Guid' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Name' in value)) return false;
    if (!('Regurl' in value)) return false;
    if (!('Secret' in value)) return false;
    if (!('Serviceoffered' in value)) return false;
    if (!('State' in value)) return false;
    if (!('Timecreated' in value)) return false;
    if (!('Timemodified' in value)) return false;
    if (!('Toolproxy' in value)) return false;
    if (!('Vendorcode' in value)) return false;
    return true;
}

export function ModLtiDeleteToolProxy200ResponseFromJSON(json: any): ModLtiDeleteToolProxy200Response {
    return ModLtiDeleteToolProxy200ResponseFromJSONTyped(json, false);
}

export function ModLtiDeleteToolProxy200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLtiDeleteToolProxy200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Capabilityoffered': json['capabilityoffered'],
        'Guid': json['guid'],
        'Id': json['id'],
        'Name': json['name'],
        'Regurl': json['regurl'],
        'Secret': json['secret'],
        'Serviceoffered': json['serviceoffered'],
        'State': json['state'],
        'Timecreated': json['timecreated'],
        'Timemodified': json['timemodified'],
        'Toolproxy': json['toolproxy'],
        'Vendorcode': json['vendorcode'],
    };
}

export function ModLtiDeleteToolProxy200ResponseToJSON(value?: ModLtiDeleteToolProxy200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'capabilityoffered': value['Capabilityoffered'],
        'guid': value['Guid'],
        'id': value['Id'],
        'name': value['Name'],
        'regurl': value['Regurl'],
        'secret': value['Secret'],
        'serviceoffered': value['Serviceoffered'],
        'state': value['State'],
        'timecreated': value['Timecreated'],
        'timemodified': value['Timemodified'],
        'toolproxy': value['Toolproxy'],
        'vendorcode': value['Vendorcode'],
    };
}

