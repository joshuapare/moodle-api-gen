/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModIomadcertificateIssueIomadcertificate200ResponseIssue
 */
export interface ModIomadcertificateIssueIomadcertificate200ResponseIssue {
    /**
     * Certificate code
     * @type {string}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Code: string;
    /**
     * Time created
     * @type {string}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Filename: string;
    /**
     * Time created
     * @type {string}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Fileurl: string;
    /**
     * Certificate grade
     * @type {string}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Grade?: string;
    /**
     * Issue id
     * @type {number}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Id: number;
    /**
     * Certificate id
     * @type {number}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Iomadcertificateid: number;
    /**
     * mime type
     * @type {string}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Mimetype: string;
    /**
     * Time created
     * @type {number}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Timecreated: number;
    /**
     * User id
     * @type {number}
     * @memberof ModIomadcertificateIssueIomadcertificate200ResponseIssue
     */
    Userid: number;
}

/**
 * Check if a given object implements the ModIomadcertificateIssueIomadcertificate200ResponseIssue interface.
 */
export function instanceOfModIomadcertificateIssueIomadcertificate200ResponseIssue(value: object): boolean {
    if (!('Code' in value)) return false;
    if (!('Filename' in value)) return false;
    if (!('Fileurl' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Iomadcertificateid' in value)) return false;
    if (!('Mimetype' in value)) return false;
    if (!('Timecreated' in value)) return false;
    if (!('Userid' in value)) return false;
    return true;
}

export function ModIomadcertificateIssueIomadcertificate200ResponseIssueFromJSON(json: any): ModIomadcertificateIssueIomadcertificate200ResponseIssue {
    return ModIomadcertificateIssueIomadcertificate200ResponseIssueFromJSONTyped(json, false);
}

export function ModIomadcertificateIssueIomadcertificate200ResponseIssueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModIomadcertificateIssueIomadcertificate200ResponseIssue {
    if (json == null) {
        return json;
    }
    return {
        
        'Code': json['code'],
        'Filename': json['filename'],
        'Fileurl': json['fileurl'],
        'Grade': json['grade'] == null ? undefined : json['grade'],
        'Id': json['id'],
        'Iomadcertificateid': json['iomadcertificateid'],
        'Mimetype': json['mimetype'],
        'Timecreated': json['timecreated'],
        'Userid': json['userid'],
    };
}

export function ModIomadcertificateIssueIomadcertificate200ResponseIssueToJSON(value?: ModIomadcertificateIssueIomadcertificate200ResponseIssue | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['Code'],
        'filename': value['Filename'],
        'fileurl': value['Fileurl'],
        'grade': value['Grade'],
        'id': value['Id'],
        'iomadcertificateid': value['Iomadcertificateid'],
        'mimetype': value['Mimetype'],
        'timecreated': value['Timecreated'],
        'userid': value['Userid'],
    };
}

