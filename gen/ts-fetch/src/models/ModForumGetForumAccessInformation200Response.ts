/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';

/**
 * 
 * @export
 * @interface ModForumGetForumAccessInformation200Response
 */
export interface ModForumGetForumAccessInformation200Response {
    /**
     * Whether the user has the capability mod/forum:addinstance allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canaddinstance?: boolean;
    /**
     * Whether the user has the capability mod/forum:addnews allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canaddnews?: boolean;
    /**
     * Whether the user has the capability mod/forum:addquestion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canaddquestion?: boolean;
    /**
     * Whether the user has the capability mod/forum:allowforcesubscribe allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canallowforcesubscribe?: boolean;
    /**
     * Whether the user has the capability mod/forum:canmailnow allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cancanmailnow?: boolean;
    /**
     * Whether the user has the capability mod/forum:canoverridecutoff allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cancanoverridecutoff?: boolean;
    /**
     * Whether the user has the capability mod/forum:canoverridediscussionlock allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cancanoverridediscussionlock?: boolean;
    /**
     * Whether the user has the capability mod/forum:canposttomygroups allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cancanposttomygroups?: boolean;
    /**
     * Whether the user has the capability mod/forum:cantogglefavourite allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cancantogglefavourite?: boolean;
    /**
     * Whether the user has the capability mod/forum:createattachment allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cancreateattachment?: boolean;
    /**
     * Whether the user has the capability mod/forum:deleteanypost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Candeleteanypost?: boolean;
    /**
     * Whether the user has the capability mod/forum:deleteownpost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Candeleteownpost?: boolean;
    /**
     * Whether the user has the capability mod/forum:editanypost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Caneditanypost?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportdiscussion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canexportdiscussion?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportforum allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canexportforum?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportownpost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canexportownpost?: boolean;
    /**
     * Whether the user has the capability mod/forum:exportpost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canexportpost?: boolean;
    /**
     * Whether the user has the capability mod/forum:grade allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cangrade?: boolean;
    /**
     * Whether the user has the capability mod/forum:managesubscriptions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canmanagesubscriptions?: boolean;
    /**
     * Whether the user has the capability mod/forum:movediscussions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canmovediscussions?: boolean;
    /**
     * Whether the user has the capability mod/forum:pindiscussions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canpindiscussions?: boolean;
    /**
     * Whether the user has the capability mod/forum:postprivatereply allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canpostprivatereply?: boolean;
    /**
     * Whether the user has the capability mod/forum:postwithoutthrottling allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canpostwithoutthrottling?: boolean;
    /**
     * Whether the user has the capability mod/forum:rate allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canrate?: boolean;
    /**
     * Whether the user has the capability mod/forum:readprivatereplies allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canreadprivatereplies?: boolean;
    /**
     * Whether the user has the capability mod/forum:replynews allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canreplynews?: boolean;
    /**
     * Whether the user has the capability mod/forum:replypost allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canreplypost?: boolean;
    /**
     * Whether the user has the capability mod/forum:splitdiscussions allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Cansplitdiscussions?: boolean;
    /**
     * Whether the user has the capability mod/forum:startdiscussion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canstartdiscussion?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewallratings allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canviewallratings?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewanyrating allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canviewanyrating?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewdiscussion allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canviewdiscussion?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewhiddentimedposts allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canviewhiddentimedposts?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewqandawithoutposting allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canviewqandawithoutposting?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewrating allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canviewrating?: boolean;
    /**
     * Whether the user has the capability mod/forum:viewsubscribers allowed.
     * @type {boolean}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Canviewsubscribers?: boolean;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModForumGetForumAccessInformation200Response
     */
    Warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModForumGetForumAccessInformation200Response interface.
 */
export function instanceOfModForumGetForumAccessInformation200Response(value: object): boolean {
    return true;
}

export function ModForumGetForumAccessInformation200ResponseFromJSON(json: any): ModForumGetForumAccessInformation200Response {
    return ModForumGetForumAccessInformation200ResponseFromJSONTyped(json, false);
}

export function ModForumGetForumAccessInformation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumGetForumAccessInformation200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Canaddinstance': json['canaddinstance'] == null ? undefined : json['canaddinstance'],
        'Canaddnews': json['canaddnews'] == null ? undefined : json['canaddnews'],
        'Canaddquestion': json['canaddquestion'] == null ? undefined : json['canaddquestion'],
        'Canallowforcesubscribe': json['canallowforcesubscribe'] == null ? undefined : json['canallowforcesubscribe'],
        'Cancanmailnow': json['cancanmailnow'] == null ? undefined : json['cancanmailnow'],
        'Cancanoverridecutoff': json['cancanoverridecutoff'] == null ? undefined : json['cancanoverridecutoff'],
        'Cancanoverridediscussionlock': json['cancanoverridediscussionlock'] == null ? undefined : json['cancanoverridediscussionlock'],
        'Cancanposttomygroups': json['cancanposttomygroups'] == null ? undefined : json['cancanposttomygroups'],
        'Cancantogglefavourite': json['cancantogglefavourite'] == null ? undefined : json['cancantogglefavourite'],
        'Cancreateattachment': json['cancreateattachment'] == null ? undefined : json['cancreateattachment'],
        'Candeleteanypost': json['candeleteanypost'] == null ? undefined : json['candeleteanypost'],
        'Candeleteownpost': json['candeleteownpost'] == null ? undefined : json['candeleteownpost'],
        'Caneditanypost': json['caneditanypost'] == null ? undefined : json['caneditanypost'],
        'Canexportdiscussion': json['canexportdiscussion'] == null ? undefined : json['canexportdiscussion'],
        'Canexportforum': json['canexportforum'] == null ? undefined : json['canexportforum'],
        'Canexportownpost': json['canexportownpost'] == null ? undefined : json['canexportownpost'],
        'Canexportpost': json['canexportpost'] == null ? undefined : json['canexportpost'],
        'Cangrade': json['cangrade'] == null ? undefined : json['cangrade'],
        'Canmanagesubscriptions': json['canmanagesubscriptions'] == null ? undefined : json['canmanagesubscriptions'],
        'Canmovediscussions': json['canmovediscussions'] == null ? undefined : json['canmovediscussions'],
        'Canpindiscussions': json['canpindiscussions'] == null ? undefined : json['canpindiscussions'],
        'Canpostprivatereply': json['canpostprivatereply'] == null ? undefined : json['canpostprivatereply'],
        'Canpostwithoutthrottling': json['canpostwithoutthrottling'] == null ? undefined : json['canpostwithoutthrottling'],
        'Canrate': json['canrate'] == null ? undefined : json['canrate'],
        'Canreadprivatereplies': json['canreadprivatereplies'] == null ? undefined : json['canreadprivatereplies'],
        'Canreplynews': json['canreplynews'] == null ? undefined : json['canreplynews'],
        'Canreplypost': json['canreplypost'] == null ? undefined : json['canreplypost'],
        'Cansplitdiscussions': json['cansplitdiscussions'] == null ? undefined : json['cansplitdiscussions'],
        'Canstartdiscussion': json['canstartdiscussion'] == null ? undefined : json['canstartdiscussion'],
        'Canviewallratings': json['canviewallratings'] == null ? undefined : json['canviewallratings'],
        'Canviewanyrating': json['canviewanyrating'] == null ? undefined : json['canviewanyrating'],
        'Canviewdiscussion': json['canviewdiscussion'] == null ? undefined : json['canviewdiscussion'],
        'Canviewhiddentimedposts': json['canviewhiddentimedposts'] == null ? undefined : json['canviewhiddentimedposts'],
        'Canviewqandawithoutposting': json['canviewqandawithoutposting'] == null ? undefined : json['canviewqandawithoutposting'],
        'Canviewrating': json['canviewrating'] == null ? undefined : json['canviewrating'],
        'Canviewsubscribers': json['canviewsubscribers'] == null ? undefined : json['canviewsubscribers'],
        'Warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModForumGetForumAccessInformation200ResponseToJSON(value?: ModForumGetForumAccessInformation200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canaddinstance': value['Canaddinstance'],
        'canaddnews': value['Canaddnews'],
        'canaddquestion': value['Canaddquestion'],
        'canallowforcesubscribe': value['Canallowforcesubscribe'],
        'cancanmailnow': value['Cancanmailnow'],
        'cancanoverridecutoff': value['Cancanoverridecutoff'],
        'cancanoverridediscussionlock': value['Cancanoverridediscussionlock'],
        'cancanposttomygroups': value['Cancanposttomygroups'],
        'cancantogglefavourite': value['Cancantogglefavourite'],
        'cancreateattachment': value['Cancreateattachment'],
        'candeleteanypost': value['Candeleteanypost'],
        'candeleteownpost': value['Candeleteownpost'],
        'caneditanypost': value['Caneditanypost'],
        'canexportdiscussion': value['Canexportdiscussion'],
        'canexportforum': value['Canexportforum'],
        'canexportownpost': value['Canexportownpost'],
        'canexportpost': value['Canexportpost'],
        'cangrade': value['Cangrade'],
        'canmanagesubscriptions': value['Canmanagesubscriptions'],
        'canmovediscussions': value['Canmovediscussions'],
        'canpindiscussions': value['Canpindiscussions'],
        'canpostprivatereply': value['Canpostprivatereply'],
        'canpostwithoutthrottling': value['Canpostwithoutthrottling'],
        'canrate': value['Canrate'],
        'canreadprivatereplies': value['Canreadprivatereplies'],
        'canreplynews': value['Canreplynews'],
        'canreplypost': value['Canreplypost'],
        'cansplitdiscussions': value['Cansplitdiscussions'],
        'canstartdiscussion': value['Canstartdiscussion'],
        'canviewallratings': value['Canviewallratings'],
        'canviewanyrating': value['Canviewanyrating'],
        'canviewdiscussion': value['Canviewdiscussion'],
        'canviewhiddentimedposts': value['Canviewhiddentimedposts'],
        'canviewqandawithoutposting': value['Canviewqandawithoutposting'],
        'canviewrating': value['Canviewrating'],
        'canviewsubscribers': value['Canviewsubscribers'],
        'warnings': value['Warnings'] == null ? undefined : ((value['Warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

