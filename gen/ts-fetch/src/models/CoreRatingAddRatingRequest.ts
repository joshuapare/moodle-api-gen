/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreRatingAddRatingRequest
 */
export interface CoreRatingAddRatingRequest {
    /**
     * agreggation method
     * @type {number}
     * @memberof CoreRatingAddRatingRequest
     */
    Aggregation?: number;
    /**
     * component
     * @type {string}
     * @memberof CoreRatingAddRatingRequest
     */
    Component: string;
    /**
     * context level: course, module, user, etc...
     * @type {string}
     * @memberof CoreRatingAddRatingRequest
     */
    Contextlevel: string;
    /**
     * the instance id of item associated with the context level
     * @type {number}
     * @memberof CoreRatingAddRatingRequest
     */
    Instanceid: number;
    /**
     * associated id
     * @type {number}
     * @memberof CoreRatingAddRatingRequest
     */
    Itemid: number;
    /**
     * rated user id
     * @type {number}
     * @memberof CoreRatingAddRatingRequest
     */
    Rateduserid: number;
    /**
     * user rating
     * @type {number}
     * @memberof CoreRatingAddRatingRequest
     */
    Rating: number;
    /**
     * rating area
     * @type {string}
     * @memberof CoreRatingAddRatingRequest
     */
    Ratingarea: string;
    /**
     * scale id
     * @type {number}
     * @memberof CoreRatingAddRatingRequest
     */
    Scaleid: number;
}

/**
 * Check if a given object implements the CoreRatingAddRatingRequest interface.
 */
export function instanceOfCoreRatingAddRatingRequest(value: object): boolean {
    if (!('Component' in value)) return false;
    if (!('Contextlevel' in value)) return false;
    if (!('Instanceid' in value)) return false;
    if (!('Itemid' in value)) return false;
    if (!('Rateduserid' in value)) return false;
    if (!('Rating' in value)) return false;
    if (!('Ratingarea' in value)) return false;
    if (!('Scaleid' in value)) return false;
    return true;
}

export function CoreRatingAddRatingRequestFromJSON(json: any): CoreRatingAddRatingRequest {
    return CoreRatingAddRatingRequestFromJSONTyped(json, false);
}

export function CoreRatingAddRatingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreRatingAddRatingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Aggregation': json['aggregation'] == null ? undefined : json['aggregation'],
        'Component': json['component'],
        'Contextlevel': json['contextlevel'],
        'Instanceid': json['instanceid'],
        'Itemid': json['itemid'],
        'Rateduserid': json['rateduserid'],
        'Rating': json['rating'],
        'Ratingarea': json['ratingarea'],
        'Scaleid': json['scaleid'],
    };
}

export function CoreRatingAddRatingRequestToJSON(value?: CoreRatingAddRatingRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'aggregation': value['Aggregation'],
        'component': value['Component'],
        'contextlevel': value['Contextlevel'],
        'instanceid': value['Instanceid'],
        'itemid': value['Itemid'],
        'rateduserid': value['Rateduserid'],
        'rating': value['Rating'],
        'ratingarea': value['Ratingarea'],
        'scaleid': value['Scaleid'],
    };
}

