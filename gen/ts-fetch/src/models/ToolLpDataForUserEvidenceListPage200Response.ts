/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner } from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner';
import {
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerFromJSON,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerFromJSONTyped,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerToJSON,
} from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner';

/**
 * 
 * @export
 * @interface ToolLpDataForUserEvidenceListPage200Response
 */
export interface ToolLpDataForUserEvidenceListPage200Response {
    /**
     * Can the current user manage the user's evidence
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidenceListPage200Response
     */
    Canmanage: boolean;
    /**
     * 
     * @type {Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner>}
     * @memberof ToolLpDataForUserEvidenceListPage200Response
     */
    Evidence: Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInner>;
    /**
     * 
     * @type {Array<object>}
     * @memberof ToolLpDataForUserEvidenceListPage200Response
     */
    Navigation: Array<object>;
    /**
     * Url to the tool_lp plugin folder on this Moodle site
     * @type {string}
     * @memberof ToolLpDataForUserEvidenceListPage200Response
     */
    Pluginbaseurl: string;
    /**
     * The user ID
     * @type {number}
     * @memberof ToolLpDataForUserEvidenceListPage200Response
     */
    Userid: number;
}

/**
 * Check if a given object implements the ToolLpDataForUserEvidenceListPage200Response interface.
 */
export function instanceOfToolLpDataForUserEvidenceListPage200Response(value: object): boolean {
    if (!('Canmanage' in value)) return false;
    if (!('Evidence' in value)) return false;
    if (!('Navigation' in value)) return false;
    if (!('Pluginbaseurl' in value)) return false;
    if (!('Userid' in value)) return false;
    return true;
}

export function ToolLpDataForUserEvidenceListPage200ResponseFromJSON(json: any): ToolLpDataForUserEvidenceListPage200Response {
    return ToolLpDataForUserEvidenceListPage200ResponseFromJSONTyped(json, false);
}

export function ToolLpDataForUserEvidenceListPage200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForUserEvidenceListPage200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Canmanage': json['canmanage'],
        'Evidence': ((json['evidence'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerFromJSON)),
        'Navigation': json['navigation'],
        'Pluginbaseurl': json['pluginbaseurl'],
        'Userid': json['userid'],
    };
}

export function ToolLpDataForUserEvidenceListPage200ResponseToJSON(value?: ToolLpDataForUserEvidenceListPage200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmanage': value['Canmanage'],
        'evidence': ((value['Evidence'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerToJSON)),
        'navigation': value['Navigation'],
        'pluginbaseurl': value['Pluginbaseurl'],
        'userid': value['Userid'],
    };
}

