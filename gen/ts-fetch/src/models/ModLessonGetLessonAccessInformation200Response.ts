/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthEmailSignupUser200ResponseWarningsInner } from './AuthEmailSignupUser200ResponseWarningsInner';
import {
    AuthEmailSignupUser200ResponseWarningsInnerFromJSON,
    AuthEmailSignupUser200ResponseWarningsInnerFromJSONTyped,
    AuthEmailSignupUser200ResponseWarningsInnerToJSON,
} from './AuthEmailSignupUser200ResponseWarningsInner';
import type { ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner } from './ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner';
import {
    ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerFromJSON,
    ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerFromJSONTyped,
    ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerToJSON,
} from './ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner';

/**
 * 
 * @export
 * @interface ModLessonGetLessonAccessInformation200Response
 */
export interface ModLessonGetLessonAccessInformation200Response {
    /**
     * The number of attempts done by the user.
     * @type {number}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Attemptscount: number;
    /**
     * Whether the user can grade the lesson or not.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Cangrade: boolean;
    /**
     * Whether the user can manage the lesson or not.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Canmanage: boolean;
    /**
     * Whether the user can view the lesson reports or not.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Canviewreports: boolean;
    /**
     * The lesson first page id.
     * @type {number}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Firstpageid: number;
    /**
     * The last page seen id.
     * @type {number}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Lastpageseen: number;
    /**
     * Whether the user left during a timed session.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Leftduringtimedsession: boolean;
    /**
     * 
     * @type {Array<ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner>}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Preventaccessreasons: Array<ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInner>;
    /**
     * Whether the lesson is in review mode for the current user.
     * @type {boolean}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Reviewmode: boolean;
    /**
     * 
     * @type {Array<AuthEmailSignupUser200ResponseWarningsInner>}
     * @memberof ModLessonGetLessonAccessInformation200Response
     */
    Warnings?: Array<AuthEmailSignupUser200ResponseWarningsInner>;
}

/**
 * Check if a given object implements the ModLessonGetLessonAccessInformation200Response interface.
 */
export function instanceOfModLessonGetLessonAccessInformation200Response(value: object): boolean {
    if (!('Attemptscount' in value)) return false;
    if (!('Cangrade' in value)) return false;
    if (!('Canmanage' in value)) return false;
    if (!('Canviewreports' in value)) return false;
    if (!('Firstpageid' in value)) return false;
    if (!('Lastpageseen' in value)) return false;
    if (!('Leftduringtimedsession' in value)) return false;
    if (!('Preventaccessreasons' in value)) return false;
    if (!('Reviewmode' in value)) return false;
    return true;
}

export function ModLessonGetLessonAccessInformation200ResponseFromJSON(json: any): ModLessonGetLessonAccessInformation200Response {
    return ModLessonGetLessonAccessInformation200ResponseFromJSONTyped(json, false);
}

export function ModLessonGetLessonAccessInformation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModLessonGetLessonAccessInformation200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Attemptscount': json['attemptscount'],
        'Cangrade': json['cangrade'],
        'Canmanage': json['canmanage'],
        'Canviewreports': json['canviewreports'],
        'Firstpageid': json['firstpageid'],
        'Lastpageseen': json['lastpageseen'],
        'Leftduringtimedsession': json['leftduringtimedsession'],
        'Preventaccessreasons': ((json['preventaccessreasons'] as Array<any>).map(ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerFromJSON)),
        'Reviewmode': json['reviewmode'],
        'Warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerFromJSON)),
    };
}

export function ModLessonGetLessonAccessInformation200ResponseToJSON(value?: ModLessonGetLessonAccessInformation200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attemptscount': value['Attemptscount'],
        'cangrade': value['Cangrade'],
        'canmanage': value['Canmanage'],
        'canviewreports': value['Canviewreports'],
        'firstpageid': value['Firstpageid'],
        'lastpageseen': value['Lastpageseen'],
        'leftduringtimedsession': value['Leftduringtimedsession'],
        'preventaccessreasons': ((value['Preventaccessreasons'] as Array<any>).map(ModLessonGetLessonAccessInformation200ResponsePreventaccessreasonsInnerToJSON)),
        'reviewmode': value['Reviewmode'],
        'warnings': value['Warnings'] == null ? undefined : ((value['Warnings'] as Array<any>).map(AuthEmailSignupUser200ResponseWarningsInnerToJSON)),
    };
}

