/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreSearchGetTopResultsRequestFilters
 */
export interface CoreSearchGetTopResultsRequestFilters {
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Areaids?: Array<object>;
    /**
     * category to filter areas
     * @type {string}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Cat?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Contextids?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Courseids?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Groupids?: Array<object>;
    /**
     * only results from my courses
     * @type {boolean}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Mycoursesonly?: boolean;
    /**
     * how to order
     * @type {string}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Order?: string;
    /**
     * docs modified before this date
     * @type {number}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Timeend?: number;
    /**
     * docs modified after this date
     * @type {number}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Timestart?: number;
    /**
     * result title
     * @type {string}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Title?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof CoreSearchGetTopResultsRequestFilters
     */
    Userids?: Array<object>;
}

/**
 * Check if a given object implements the CoreSearchGetTopResultsRequestFilters interface.
 */
export function instanceOfCoreSearchGetTopResultsRequestFilters(value: object): boolean {
    return true;
}

export function CoreSearchGetTopResultsRequestFiltersFromJSON(json: any): CoreSearchGetTopResultsRequestFilters {
    return CoreSearchGetTopResultsRequestFiltersFromJSONTyped(json, false);
}

export function CoreSearchGetTopResultsRequestFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreSearchGetTopResultsRequestFilters {
    if (json == null) {
        return json;
    }
    return {
        
        'Areaids': json['areaids'] == null ? undefined : json['areaids'],
        'Cat': json['cat'] == null ? undefined : json['cat'],
        'Contextids': json['contextids'] == null ? undefined : json['contextids'],
        'Courseids': json['courseids'] == null ? undefined : json['courseids'],
        'Groupids': json['groupids'] == null ? undefined : json['groupids'],
        'Mycoursesonly': json['mycoursesonly'] == null ? undefined : json['mycoursesonly'],
        'Order': json['order'] == null ? undefined : json['order'],
        'Timeend': json['timeend'] == null ? undefined : json['timeend'],
        'Timestart': json['timestart'] == null ? undefined : json['timestart'],
        'Title': json['title'] == null ? undefined : json['title'],
        'Userids': json['userids'] == null ? undefined : json['userids'],
    };
}

export function CoreSearchGetTopResultsRequestFiltersToJSON(value?: CoreSearchGetTopResultsRequestFilters | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'areaids': value['Areaids'],
        'cat': value['Cat'],
        'contextids': value['Contextids'],
        'courseids': value['Courseids'],
        'groupids': value['Groupids'],
        'mycoursesonly': value['Mycoursesonly'],
        'order': value['Order'],
        'timeend': value['Timeend'],
        'timestart': value['Timestart'],
        'title': value['Title'],
        'userids': value['Userids'],
    };
}

