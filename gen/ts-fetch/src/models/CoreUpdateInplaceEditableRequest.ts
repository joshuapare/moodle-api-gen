/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreUpdateInplaceEditableRequest
 */
export interface CoreUpdateInplaceEditableRequest {
    /**
     * component responsible for the update
     * @type {string}
     * @memberof CoreUpdateInplaceEditableRequest
     */
    Component: string;
    /**
     * identifier of the updated item
     * @type {string}
     * @memberof CoreUpdateInplaceEditableRequest
     */
    Itemid: string;
    /**
     * type of the updated item inside the component
     * @type {string}
     * @memberof CoreUpdateInplaceEditableRequest
     */
    Itemtype: string;
    /**
     * new value
     * @type {string}
     * @memberof CoreUpdateInplaceEditableRequest
     */
    Value: string;
}

/**
 * Check if a given object implements the CoreUpdateInplaceEditableRequest interface.
 */
export function instanceOfCoreUpdateInplaceEditableRequest(value: object): boolean {
    if (!('Component' in value)) return false;
    if (!('Itemid' in value)) return false;
    if (!('Itemtype' in value)) return false;
    if (!('Value' in value)) return false;
    return true;
}

export function CoreUpdateInplaceEditableRequestFromJSON(json: any): CoreUpdateInplaceEditableRequest {
    return CoreUpdateInplaceEditableRequestFromJSONTyped(json, false);
}

export function CoreUpdateInplaceEditableRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreUpdateInplaceEditableRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Component': json['component'],
        'Itemid': json['itemid'],
        'Itemtype': json['itemtype'],
        'Value': json['value'],
    };
}

export function CoreUpdateInplaceEditableRequestToJSON(value?: CoreUpdateInplaceEditableRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'component': value['Component'],
        'itemid': value['Itemid'],
        'itemtype': value['Itemtype'],
        'value': value['Value'],
    };
}

