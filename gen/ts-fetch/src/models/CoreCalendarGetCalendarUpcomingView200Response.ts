/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCalendarGetCalendarDayView200ResponseNextperiod } from './CoreCalendarGetCalendarDayView200ResponseNextperiod';
import {
    CoreCalendarGetCalendarDayView200ResponseNextperiodFromJSON,
    CoreCalendarGetCalendarDayView200ResponseNextperiodFromJSONTyped,
    CoreCalendarGetCalendarDayView200ResponseNextperiodToJSON,
} from './CoreCalendarGetCalendarDayView200ResponseNextperiod';
import type { CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner } from './CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner';
import {
    CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerFromJSON,
    CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerFromJSONTyped,
    CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerToJSON,
} from './CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner';

/**
 * 
 * @export
 * @interface CoreCalendarGetCalendarUpcomingView200Response
 */
export interface CoreCalendarGetCalendarUpcomingView200Response {
    /**
     * categoryid
     * @type {number}
     * @memberof CoreCalendarGetCalendarUpcomingView200Response
     */
    Categoryid?: number;
    /**
     * courseid
     * @type {number}
     * @memberof CoreCalendarGetCalendarUpcomingView200Response
     */
    Courseid: number;
    /**
     * 
     * @type {CoreCalendarGetCalendarDayView200ResponseNextperiod}
     * @memberof CoreCalendarGetCalendarUpcomingView200Response
     */
    Date: CoreCalendarGetCalendarDayView200ResponseNextperiod;
    /**
     * defaulteventcontext
     * @type {number}
     * @memberof CoreCalendarGetCalendarUpcomingView200Response
     */
    Defaulteventcontext: number;
    /**
     * 
     * @type {Array<CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner>}
     * @memberof CoreCalendarGetCalendarUpcomingView200Response
     */
    Events: Array<CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner>;
    /**
     * filter_selector
     * @type {string}
     * @memberof CoreCalendarGetCalendarUpcomingView200Response
     */
    FilterSelector: string;
    /**
     * isloggedin
     * @type {boolean}
     * @memberof CoreCalendarGetCalendarUpcomingView200Response
     */
    Isloggedin: boolean;
}

/**
 * Check if a given object implements the CoreCalendarGetCalendarUpcomingView200Response interface.
 */
export function instanceOfCoreCalendarGetCalendarUpcomingView200Response(value: object): boolean {
    if (!('Courseid' in value)) return false;
    if (!('Date' in value)) return false;
    if (!('Defaulteventcontext' in value)) return false;
    if (!('Events' in value)) return false;
    if (!('FilterSelector' in value)) return false;
    if (!('Isloggedin' in value)) return false;
    return true;
}

export function CoreCalendarGetCalendarUpcomingView200ResponseFromJSON(json: any): CoreCalendarGetCalendarUpcomingView200Response {
    return CoreCalendarGetCalendarUpcomingView200ResponseFromJSONTyped(json, false);
}

export function CoreCalendarGetCalendarUpcomingView200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarGetCalendarUpcomingView200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Categoryid': json['categoryid'] == null ? undefined : json['categoryid'],
        'Courseid': json['courseid'],
        'Date': CoreCalendarGetCalendarDayView200ResponseNextperiodFromJSON(json['date']),
        'Defaulteventcontext': json['defaulteventcontext'],
        'Events': ((json['events'] as Array<any>).map(CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerFromJSON)),
        'FilterSelector': json['filter_selector'],
        'Isloggedin': json['isloggedin'],
    };
}

export function CoreCalendarGetCalendarUpcomingView200ResponseToJSON(value?: CoreCalendarGetCalendarUpcomingView200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'categoryid': value['Categoryid'],
        'courseid': value['Courseid'],
        'date': CoreCalendarGetCalendarDayView200ResponseNextperiodToJSON(value['Date']),
        'defaulteventcontext': value['Defaulteventcontext'],
        'events': ((value['Events'] as Array<any>).map(CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInnerToJSON)),
        'filter_selector': value['FilterSelector'],
        'isloggedin': value['Isloggedin'],
    };
}

