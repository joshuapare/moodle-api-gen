/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModScormGetScormUserData200ResponseDataInnerDefaultdataInner } from './ModScormGetScormUserData200ResponseDataInnerDefaultdataInner';
import {
    ModScormGetScormUserData200ResponseDataInnerDefaultdataInnerFromJSON,
    ModScormGetScormUserData200ResponseDataInnerDefaultdataInnerFromJSONTyped,
    ModScormGetScormUserData200ResponseDataInnerDefaultdataInnerToJSON,
} from './ModScormGetScormUserData200ResponseDataInnerDefaultdataInner';

/**
 * 
 * @export
 * @interface ModScormInsertScormTracksRequest
 */
export interface ModScormInsertScormTracksRequest {
    /**
     * attempt number
     * @type {number}
     * @memberof ModScormInsertScormTracksRequest
     */
    Attempt: number;
    /**
     * SCO id
     * @type {number}
     * @memberof ModScormInsertScormTracksRequest
     */
    Scoid: number;
    /**
     * 
     * @type {Array<ModScormGetScormUserData200ResponseDataInnerDefaultdataInner>}
     * @memberof ModScormInsertScormTracksRequest
     */
    Tracks: Array<ModScormGetScormUserData200ResponseDataInnerDefaultdataInner>;
}

/**
 * Check if a given object implements the ModScormInsertScormTracksRequest interface.
 */
export function instanceOfModScormInsertScormTracksRequest(value: object): boolean {
    if (!('Attempt' in value)) return false;
    if (!('Scoid' in value)) return false;
    if (!('Tracks' in value)) return false;
    return true;
}

export function ModScormInsertScormTracksRequestFromJSON(json: any): ModScormInsertScormTracksRequest {
    return ModScormInsertScormTracksRequestFromJSONTyped(json, false);
}

export function ModScormInsertScormTracksRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModScormInsertScormTracksRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Attempt': json['attempt'],
        'Scoid': json['scoid'],
        'Tracks': ((json['tracks'] as Array<any>).map(ModScormGetScormUserData200ResponseDataInnerDefaultdataInnerFromJSON)),
    };
}

export function ModScormInsertScormTracksRequestToJSON(value?: ModScormInsertScormTracksRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attempt': value['Attempt'],
        'scoid': value['Scoid'],
        'tracks': ((value['Tracks'] as Array<any>).map(ModScormGetScormUserData200ResponseDataInnerDefaultdataInnerToJSON)),
    };
}

