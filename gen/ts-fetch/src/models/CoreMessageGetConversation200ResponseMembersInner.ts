/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreMessageGetConversation200ResponseMembersInnerContactrequestsInner } from './CoreMessageGetConversation200ResponseMembersInnerContactrequestsInner';
import {
    CoreMessageGetConversation200ResponseMembersInnerContactrequestsInnerFromJSON,
    CoreMessageGetConversation200ResponseMembersInnerContactrequestsInnerFromJSONTyped,
    CoreMessageGetConversation200ResponseMembersInnerContactrequestsInnerToJSON,
} from './CoreMessageGetConversation200ResponseMembersInnerContactrequestsInner';
import type { CoreMessageGetConversation200ResponseMembersInnerConversationsInner } from './CoreMessageGetConversation200ResponseMembersInnerConversationsInner';
import {
    CoreMessageGetConversation200ResponseMembersInnerConversationsInnerFromJSON,
    CoreMessageGetConversation200ResponseMembersInnerConversationsInnerFromJSONTyped,
    CoreMessageGetConversation200ResponseMembersInnerConversationsInnerToJSON,
} from './CoreMessageGetConversation200ResponseMembersInnerConversationsInner';

/**
 * 
 * @export
 * @interface CoreMessageGetConversation200ResponseMembersInner
 */
export interface CoreMessageGetConversation200ResponseMembersInner {
    /**
     * If the user can be messaged
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Canmessage?: boolean;
    /**
     * If the user can still message even if they get blocked
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Canmessageevenifblocked?: boolean;
    /**
     * 
     * @type {Array<CoreMessageGetConversation200ResponseMembersInnerContactrequestsInner>}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Contactrequests?: Array<CoreMessageGetConversation200ResponseMembersInnerContactrequestsInner>;
    /**
     * 
     * @type {Array<CoreMessageGetConversation200ResponseMembersInnerConversationsInner>}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Conversations?: Array<CoreMessageGetConversation200ResponseMembersInnerConversationsInner>;
    /**
     * The user's name
     * @type {string}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Fullname?: string;
    /**
     * The user id
     * @type {number}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Id?: number;
    /**
     * If the user has been blocked
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Isblocked?: boolean;
    /**
     * Is the user a contact?
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Iscontact?: boolean;
    /**
     * Is the user deleted?
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Isdeleted?: boolean;
    /**
     * The user's online status
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Isonline?: boolean;
    /**
     * User picture URL
     * @type {string}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Profileimageurl?: string;
    /**
     * Small user picture URL
     * @type {string}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Profileimageurlsmall?: string;
    /**
     * The link to the user's profile page
     * @type {string}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Profileurl?: string;
    /**
     * If the user requires to be contacts
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Requirescontact?: boolean;
    /**
     * Show the user's online status?
     * @type {boolean}
     * @memberof CoreMessageGetConversation200ResponseMembersInner
     */
    Showonlinestatus?: boolean;
}

/**
 * Check if a given object implements the CoreMessageGetConversation200ResponseMembersInner interface.
 */
export function instanceOfCoreMessageGetConversation200ResponseMembersInner(value: object): boolean {
    return true;
}

export function CoreMessageGetConversation200ResponseMembersInnerFromJSON(json: any): CoreMessageGetConversation200ResponseMembersInner {
    return CoreMessageGetConversation200ResponseMembersInnerFromJSONTyped(json, false);
}

export function CoreMessageGetConversation200ResponseMembersInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreMessageGetConversation200ResponseMembersInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Canmessage': json['canmessage'] == null ? undefined : json['canmessage'],
        'Canmessageevenifblocked': json['canmessageevenifblocked'] == null ? undefined : json['canmessageevenifblocked'],
        'Contactrequests': json['contactrequests'] == null ? undefined : ((json['contactrequests'] as Array<any>).map(CoreMessageGetConversation200ResponseMembersInnerContactrequestsInnerFromJSON)),
        'Conversations': json['conversations'] == null ? undefined : ((json['conversations'] as Array<any>).map(CoreMessageGetConversation200ResponseMembersInnerConversationsInnerFromJSON)),
        'Fullname': json['fullname'] == null ? undefined : json['fullname'],
        'Id': json['id'] == null ? undefined : json['id'],
        'Isblocked': json['isblocked'] == null ? undefined : json['isblocked'],
        'Iscontact': json['iscontact'] == null ? undefined : json['iscontact'],
        'Isdeleted': json['isdeleted'] == null ? undefined : json['isdeleted'],
        'Isonline': json['isonline'] == null ? undefined : json['isonline'],
        'Profileimageurl': json['profileimageurl'] == null ? undefined : json['profileimageurl'],
        'Profileimageurlsmall': json['profileimageurlsmall'] == null ? undefined : json['profileimageurlsmall'],
        'Profileurl': json['profileurl'] == null ? undefined : json['profileurl'],
        'Requirescontact': json['requirescontact'] == null ? undefined : json['requirescontact'],
        'Showonlinestatus': json['showonlinestatus'] == null ? undefined : json['showonlinestatus'],
    };
}

export function CoreMessageGetConversation200ResponseMembersInnerToJSON(value?: CoreMessageGetConversation200ResponseMembersInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmessage': value['Canmessage'],
        'canmessageevenifblocked': value['Canmessageevenifblocked'],
        'contactrequests': value['Contactrequests'] == null ? undefined : ((value['Contactrequests'] as Array<any>).map(CoreMessageGetConversation200ResponseMembersInnerContactrequestsInnerToJSON)),
        'conversations': value['Conversations'] == null ? undefined : ((value['Conversations'] as Array<any>).map(CoreMessageGetConversation200ResponseMembersInnerConversationsInnerToJSON)),
        'fullname': value['Fullname'],
        'id': value['Id'],
        'isblocked': value['Isblocked'],
        'iscontact': value['Iscontact'],
        'isdeleted': value['Isdeleted'],
        'isonline': value['Isonline'],
        'profileimageurl': value['Profileimageurl'],
        'profileimageurlsmall': value['Profileimageurlsmall'],
        'profileurl': value['Profileurl'],
        'requirescontact': value['Requirescontact'],
        'showonlinestatus': value['Showonlinestatus'],
    };
}

