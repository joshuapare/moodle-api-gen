/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreSearchViewResultsRequestFilters } from './CoreSearchViewResultsRequestFilters';
import {
    CoreSearchViewResultsRequestFiltersFromJSON,
    CoreSearchViewResultsRequestFiltersFromJSONTyped,
    CoreSearchViewResultsRequestFiltersToJSON,
} from './CoreSearchViewResultsRequestFilters';

/**
 * 
 * @export
 * @interface CoreSearchViewResultsRequest
 */
export interface CoreSearchViewResultsRequest {
    /**
     * 
     * @type {CoreSearchViewResultsRequestFilters}
     * @memberof CoreSearchViewResultsRequest
     */
    Filters?: CoreSearchViewResultsRequestFilters;
    /**
     * results page number starting from 0, defaults to the first page
     * @type {number}
     * @memberof CoreSearchViewResultsRequest
     */
    Page?: number;
    /**
     * the search query
     * @type {string}
     * @memberof CoreSearchViewResultsRequest
     */
    Query: string;
}

/**
 * Check if a given object implements the CoreSearchViewResultsRequest interface.
 */
export function instanceOfCoreSearchViewResultsRequest(value: object): boolean {
    if (!('Query' in value)) return false;
    return true;
}

export function CoreSearchViewResultsRequestFromJSON(json: any): CoreSearchViewResultsRequest {
    return CoreSearchViewResultsRequestFromJSONTyped(json, false);
}

export function CoreSearchViewResultsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreSearchViewResultsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Filters': json['filters'] == null ? undefined : CoreSearchViewResultsRequestFiltersFromJSON(json['filters']),
        'Page': json['page'] == null ? undefined : json['page'],
        'Query': json['query'],
    };
}

export function CoreSearchViewResultsRequestToJSON(value?: CoreSearchViewResultsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'filters': CoreSearchViewResultsRequestFiltersToJSON(value['Filters']),
        'page': value['Page'],
        'query': value['Query'],
    };
}

