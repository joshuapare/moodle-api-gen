/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModForumPrepareDraftAreaForPostRequestFilestokeepInner } from './ModForumPrepareDraftAreaForPostRequestFilestokeepInner';
import {
    ModForumPrepareDraftAreaForPostRequestFilestokeepInnerFromJSON,
    ModForumPrepareDraftAreaForPostRequestFilestokeepInnerFromJSONTyped,
    ModForumPrepareDraftAreaForPostRequestFilestokeepInnerToJSON,
} from './ModForumPrepareDraftAreaForPostRequestFilestokeepInner';

/**
 * 
 * @export
 * @interface ModForumPrepareDraftAreaForPostRequest
 */
export interface ModForumPrepareDraftAreaForPostRequest {
    /**
     * Area to prepare: attachment or post.
     * @type {string}
     * @memberof ModForumPrepareDraftAreaForPostRequest
     */
    Area: string;
    /**
     * The draft item id to use. 0 to generate one.
     * @type {number}
     * @memberof ModForumPrepareDraftAreaForPostRequest
     */
    Draftitemid?: number;
    /**
     * 
     * @type {Array<ModForumPrepareDraftAreaForPostRequestFilestokeepInner>}
     * @memberof ModForumPrepareDraftAreaForPostRequest
     */
    Filestokeep?: Array<ModForumPrepareDraftAreaForPostRequestFilestokeepInner>;
    /**
     * Post to prepare the draft area for.
     * @type {number}
     * @memberof ModForumPrepareDraftAreaForPostRequest
     */
    Postid: number;
}

/**
 * Check if a given object implements the ModForumPrepareDraftAreaForPostRequest interface.
 */
export function instanceOfModForumPrepareDraftAreaForPostRequest(value: object): boolean {
    if (!('Area' in value)) return false;
    if (!('Postid' in value)) return false;
    return true;
}

export function ModForumPrepareDraftAreaForPostRequestFromJSON(json: any): ModForumPrepareDraftAreaForPostRequest {
    return ModForumPrepareDraftAreaForPostRequestFromJSONTyped(json, false);
}

export function ModForumPrepareDraftAreaForPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModForumPrepareDraftAreaForPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Area': json['area'],
        'Draftitemid': json['draftitemid'] == null ? undefined : json['draftitemid'],
        'Filestokeep': json['filestokeep'] == null ? undefined : ((json['filestokeep'] as Array<any>).map(ModForumPrepareDraftAreaForPostRequestFilestokeepInnerFromJSON)),
        'Postid': json['postid'],
    };
}

export function ModForumPrepareDraftAreaForPostRequestToJSON(value?: ModForumPrepareDraftAreaForPostRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'area': value['Area'],
        'draftitemid': value['Draftitemid'],
        'filestokeep': value['Filestokeep'] == null ? undefined : ((value['Filestokeep'] as Array<any>).map(ModForumPrepareDraftAreaForPostRequestFilestokeepInnerToJSON)),
        'postid': value['Postid'],
    };
}

