/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner } from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import {
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSONTyped,
    ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON,
} from './ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner';
import type { ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner } from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner';
import {
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSON,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSONTyped,
    ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerToJSON,
} from './ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner';

/**
 * 
 * @export
 * @interface ToolLpDataForUserEvidencePage200ResponseUserevidence
 */
export interface ToolLpDataForUserEvidencePage200ResponseUserevidence {
    /**
     * canmanage
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Canmanage: boolean;
    /**
     * competencycount
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Competencycount: number;
    /**
     * description
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Description: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Descriptionformat?: number;
    /**
     * filecount
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Filecount: number;
    /**
     * 
     * @type {Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Files: Array<ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner>;
    /**
     * hasurlorfiles
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Hasurlorfiles: boolean;
    /**
     * id
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Id: number;
    /**
     * name
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Name: string;
    /**
     * timecreated
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Timecreated: number;
    /**
     * timemodified
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Timemodified: number;
    /**
     * url
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Url: string;
    /**
     * urlshort
     * @type {string}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Urlshort: string;
    /**
     * 
     * @type {Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner>}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Usercompetencies?: Array<ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner>;
    /**
     * userhasplan
     * @type {boolean}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Userhasplan: boolean;
    /**
     * userid
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Userid: number;
    /**
     * usermodified
     * @type {number}
     * @memberof ToolLpDataForUserEvidencePage200ResponseUserevidence
     */
    Usermodified: number;
}

/**
 * Check if a given object implements the ToolLpDataForUserEvidencePage200ResponseUserevidence interface.
 */
export function instanceOfToolLpDataForUserEvidencePage200ResponseUserevidence(value: object): boolean {
    if (!('Canmanage' in value)) return false;
    if (!('Competencycount' in value)) return false;
    if (!('Description' in value)) return false;
    if (!('Filecount' in value)) return false;
    if (!('Files' in value)) return false;
    if (!('Hasurlorfiles' in value)) return false;
    if (!('Id' in value)) return false;
    if (!('Name' in value)) return false;
    if (!('Timecreated' in value)) return false;
    if (!('Timemodified' in value)) return false;
    if (!('Url' in value)) return false;
    if (!('Urlshort' in value)) return false;
    if (!('Userhasplan' in value)) return false;
    if (!('Userid' in value)) return false;
    if (!('Usermodified' in value)) return false;
    return true;
}

export function ToolLpDataForUserEvidencePage200ResponseUserevidenceFromJSON(json: any): ToolLpDataForUserEvidencePage200ResponseUserevidence {
    return ToolLpDataForUserEvidencePage200ResponseUserevidenceFromJSONTyped(json, false);
}

export function ToolLpDataForUserEvidencePage200ResponseUserevidenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolLpDataForUserEvidencePage200ResponseUserevidence {
    if (json == null) {
        return json;
    }
    return {
        
        'Canmanage': json['canmanage'],
        'Competencycount': json['competencycount'],
        'Description': json['description'],
        'Descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'Filecount': json['filecount'],
        'Files': ((json['files'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerFromJSON)),
        'Hasurlorfiles': json['hasurlorfiles'],
        'Id': json['id'],
        'Name': json['name'],
        'Timecreated': json['timecreated'],
        'Timemodified': json['timemodified'],
        'Url': json['url'],
        'Urlshort': json['urlshort'],
        'Usercompetencies': json['usercompetencies'] == null ? undefined : ((json['usercompetencies'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerFromJSON)),
        'Userhasplan': json['userhasplan'],
        'Userid': json['userid'],
        'Usermodified': json['usermodified'],
    };
}

export function ToolLpDataForUserEvidencePage200ResponseUserevidenceToJSON(value?: ToolLpDataForUserEvidencePage200ResponseUserevidence | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'canmanage': value['Canmanage'],
        'competencycount': value['Competencycount'],
        'description': value['Description'],
        'descriptionformat': value['Descriptionformat'],
        'filecount': value['Filecount'],
        'files': ((value['Files'] as Array<any>).map(ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInnerToJSON)),
        'hasurlorfiles': value['Hasurlorfiles'],
        'id': value['Id'],
        'name': value['Name'],
        'timecreated': value['Timecreated'],
        'timemodified': value['Timemodified'],
        'url': value['Url'],
        'urlshort': value['Urlshort'],
        'usercompetencies': value['Usercompetencies'] == null ? undefined : ((value['Usercompetencies'] as Array<any>).map(ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerToJSON)),
        'userhasplan': value['Userhasplan'],
        'userid': value['Userid'],
        'usermodified': value['Usermodified'],
    };
}

