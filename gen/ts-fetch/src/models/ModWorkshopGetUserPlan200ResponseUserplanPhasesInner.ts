/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInner } from './ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInner';
import {
    ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInnerFromJSON,
    ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInnerFromJSONTyped,
    ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInnerToJSON,
} from './ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInner';
import type { ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInner } from './ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInner';
import {
    ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInnerFromJSON,
    ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInnerFromJSONTyped,
    ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInnerToJSON,
} from './ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInner';

/**
 * 
 * @export
 * @interface ModWorkshopGetUserPlan200ResponseUserplanPhasesInner
 */
export interface ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
    /**
     * 
     * @type {Array<ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInner>}
     * @memberof ModWorkshopGetUserPlan200ResponseUserplanPhasesInner
     */
    Actions?: Array<ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInner>;
    /**
     * Whether is the active task.
     * @type {boolean}
     * @memberof ModWorkshopGetUserPlan200ResponseUserplanPhasesInner
     */
    Active?: boolean;
    /**
     * Phase code.
     * @type {number}
     * @memberof ModWorkshopGetUserPlan200ResponseUserplanPhasesInner
     */
    Code?: number;
    /**
     * 
     * @type {Array<ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInner>}
     * @memberof ModWorkshopGetUserPlan200ResponseUserplanPhasesInner
     */
    Tasks?: Array<ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInner>;
    /**
     * Phase title.
     * @type {string}
     * @memberof ModWorkshopGetUserPlan200ResponseUserplanPhasesInner
     */
    Title?: string;
}

/**
 * Check if a given object implements the ModWorkshopGetUserPlan200ResponseUserplanPhasesInner interface.
 */
export function instanceOfModWorkshopGetUserPlan200ResponseUserplanPhasesInner(value: object): boolean {
    return true;
}

export function ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerFromJSON(json: any): ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
    return ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerFromJSONTyped(json, false);
}

export function ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Actions': json['actions'] == null ? undefined : ((json['actions'] as Array<any>).map(ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInnerFromJSON)),
        'Active': json['active'] == null ? undefined : json['active'],
        'Code': json['code'] == null ? undefined : json['code'],
        'Tasks': json['tasks'] == null ? undefined : ((json['tasks'] as Array<any>).map(ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInnerFromJSON)),
        'Title': json['title'] == null ? undefined : json['title'],
    };
}

export function ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerToJSON(value?: ModWorkshopGetUserPlan200ResponseUserplanPhasesInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'actions': value['Actions'] == null ? undefined : ((value['Actions'] as Array<any>).map(ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerActionsInnerToJSON)),
        'active': value['Active'],
        'code': value['Code'],
        'tasks': value['Tasks'] == null ? undefined : ((value['Tasks'] as Array<any>).map(ModWorkshopGetUserPlan200ResponseUserplanPhasesInnerTasksInnerToJSON)),
        'title': value['Title'],
    };
}

