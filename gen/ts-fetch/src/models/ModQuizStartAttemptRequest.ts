/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModQuizGetAttemptDataRequestPreflightdataInner } from './ModQuizGetAttemptDataRequestPreflightdataInner';
import {
    ModQuizGetAttemptDataRequestPreflightdataInnerFromJSON,
    ModQuizGetAttemptDataRequestPreflightdataInnerFromJSONTyped,
    ModQuizGetAttemptDataRequestPreflightdataInnerToJSON,
} from './ModQuizGetAttemptDataRequestPreflightdataInner';

/**
 * 
 * @export
 * @interface ModQuizStartAttemptRequest
 */
export interface ModQuizStartAttemptRequest {
    /**
     * Whether to force a new attempt or not.
     * @type {boolean}
     * @memberof ModQuizStartAttemptRequest
     */
    Forcenew?: boolean;
    /**
     * 
     * @type {Array<ModQuizGetAttemptDataRequestPreflightdataInner>}
     * @memberof ModQuizStartAttemptRequest
     */
    Preflightdata?: Array<ModQuizGetAttemptDataRequestPreflightdataInner>;
    /**
     * quiz instance id
     * @type {number}
     * @memberof ModQuizStartAttemptRequest
     */
    Quizid: number;
}

/**
 * Check if a given object implements the ModQuizStartAttemptRequest interface.
 */
export function instanceOfModQuizStartAttemptRequest(value: object): boolean {
    if (!('Quizid' in value)) return false;
    return true;
}

export function ModQuizStartAttemptRequestFromJSON(json: any): ModQuizStartAttemptRequest {
    return ModQuizStartAttemptRequestFromJSONTyped(json, false);
}

export function ModQuizStartAttemptRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModQuizStartAttemptRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Forcenew': json['forcenew'] == null ? undefined : json['forcenew'],
        'Preflightdata': json['preflightdata'] == null ? undefined : ((json['preflightdata'] as Array<any>).map(ModQuizGetAttemptDataRequestPreflightdataInnerFromJSON)),
        'Quizid': json['quizid'],
    };
}

export function ModQuizStartAttemptRequestToJSON(value?: ModQuizStartAttemptRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'forcenew': value['Forcenew'],
        'preflightdata': value['Preflightdata'] == null ? undefined : ((value['Preflightdata'] as Array<any>).map(ModQuizGetAttemptDataRequestPreflightdataInnerToJSON)),
        'quizid': value['Quizid'],
    };
}

