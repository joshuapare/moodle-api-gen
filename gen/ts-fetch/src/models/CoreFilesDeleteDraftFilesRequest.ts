/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreFilesDeleteDraftFilesRequestFilesInner } from './CoreFilesDeleteDraftFilesRequestFilesInner';
import {
    CoreFilesDeleteDraftFilesRequestFilesInnerFromJSON,
    CoreFilesDeleteDraftFilesRequestFilesInnerFromJSONTyped,
    CoreFilesDeleteDraftFilesRequestFilesInnerToJSON,
} from './CoreFilesDeleteDraftFilesRequestFilesInner';

/**
 * 
 * @export
 * @interface CoreFilesDeleteDraftFilesRequest
 */
export interface CoreFilesDeleteDraftFilesRequest {
    /**
     * Item id of the draft file area
     * @type {number}
     * @memberof CoreFilesDeleteDraftFilesRequest
     */
    Draftitemid: number;
    /**
     * 
     * @type {Array<CoreFilesDeleteDraftFilesRequestFilesInner>}
     * @memberof CoreFilesDeleteDraftFilesRequest
     */
    Files: Array<CoreFilesDeleteDraftFilesRequestFilesInner>;
}

/**
 * Check if a given object implements the CoreFilesDeleteDraftFilesRequest interface.
 */
export function instanceOfCoreFilesDeleteDraftFilesRequest(value: object): boolean {
    if (!('Draftitemid' in value)) return false;
    if (!('Files' in value)) return false;
    return true;
}

export function CoreFilesDeleteDraftFilesRequestFromJSON(json: any): CoreFilesDeleteDraftFilesRequest {
    return CoreFilesDeleteDraftFilesRequestFromJSONTyped(json, false);
}

export function CoreFilesDeleteDraftFilesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreFilesDeleteDraftFilesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Draftitemid': json['draftitemid'],
        'Files': ((json['files'] as Array<any>).map(CoreFilesDeleteDraftFilesRequestFilesInnerFromJSON)),
    };
}

export function CoreFilesDeleteDraftFilesRequestToJSON(value?: CoreFilesDeleteDraftFilesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'draftitemid': value['Draftitemid'],
        'files': ((value['Files'] as Array<any>).map(CoreFilesDeleteDraftFilesRequestFilesInnerToJSON)),
    };
}

