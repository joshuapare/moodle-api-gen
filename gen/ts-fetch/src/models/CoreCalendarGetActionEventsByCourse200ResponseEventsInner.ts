/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction } from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction';
import {
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerActionFromJSON,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerActionFromJSONTyped,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerActionToJSON,
} from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction';
import type { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory } from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory';
import {
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategoryFromJSON,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategoryFromJSONTyped,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategoryToJSON,
} from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory';
import type { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse } from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse';
import {
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseFromJSON,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseFromJSONTyped,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseToJSON,
} from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse';
import type { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon } from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon';
import {
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIconFromJSON,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIconFromJSONTyped,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIconToJSON,
} from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon';
import type { CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription } from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription';
import {
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscriptionFromJSON,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscriptionFromJSONTyped,
    CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscriptionToJSON,
} from './CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription';

/**
 * 
 * @export
 * @interface CoreCalendarGetActionEventsByCourse200ResponseEventsInner
 */
export interface CoreCalendarGetActionEventsByCourse200ResponseEventsInner {
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Action?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerAction;
    /**
     * activityname
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Activityname?: string;
    /**
     * activitystr
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Activitystr?: string;
    /**
     * candelete
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Candelete?: boolean;
    /**
     * canedit
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Canedit?: boolean;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Category?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategory;
    /**
     * categoryid
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Categoryid?: number;
    /**
     * component
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Component?: string;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Course?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourse;
    /**
     * deleteurl
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Deleteurl?: string;
    /**
     * description
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Description?: string;
    /**
     * description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Descriptionformat?: number;
    /**
     * editurl
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Editurl?: string;
    /**
     * eventcount
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Eventcount?: number;
    /**
     * eventtype
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Eventtype?: string;
    /**
     * formattedlocation
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Formattedlocation?: string;
    /**
     * formattedtime
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Formattedtime?: string;
    /**
     * groupid
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Groupid?: number;
    /**
     * groupname
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Groupname?: string;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Icon?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIcon;
    /**
     * id
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Id?: number;
    /**
     * instance
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Instance?: number;
    /**
     * isactionevent
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Isactionevent?: boolean;
    /**
     * iscategoryevent
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Iscategoryevent?: boolean;
    /**
     * iscourseevent
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Iscourseevent?: boolean;
    /**
     * location
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Location?: string;
    /**
     * modulename
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Modulename?: string;
    /**
     * name
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Name?: string;
    /**
     * normalisedeventtype
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Normalisedeventtype?: string;
    /**
     * normalisedeventtypetext
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Normalisedeventtypetext?: string;
    /**
     * overdue
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Overdue?: boolean;
    /**
     * purpose
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Purpose?: string;
    /**
     * repeatid
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Repeatid?: number;
    /**
     * 
     * @type {CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Subscription?: CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription;
    /**
     * timeduration
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Timeduration?: number;
    /**
     * timemodified
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Timemodified?: number;
    /**
     * timesort
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Timesort?: number;
    /**
     * timestart
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Timestart?: number;
    /**
     * timeusermidnight
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Timeusermidnight?: number;
    /**
     * url
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Url?: string;
    /**
     * userid
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Userid?: number;
    /**
     * viewurl
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Viewurl?: string;
    /**
     * visible
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByCourse200ResponseEventsInner
     */
    Visible?: number;
}

/**
 * Check if a given object implements the CoreCalendarGetActionEventsByCourse200ResponseEventsInner interface.
 */
export function instanceOfCoreCalendarGetActionEventsByCourse200ResponseEventsInner(value: object): boolean {
    return true;
}

export function CoreCalendarGetActionEventsByCourse200ResponseEventsInnerFromJSON(json: any): CoreCalendarGetActionEventsByCourse200ResponseEventsInner {
    return CoreCalendarGetActionEventsByCourse200ResponseEventsInnerFromJSONTyped(json, false);
}

export function CoreCalendarGetActionEventsByCourse200ResponseEventsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarGetActionEventsByCourse200ResponseEventsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'Action': json['action'] == null ? undefined : CoreCalendarGetActionEventsByCourse200ResponseEventsInnerActionFromJSON(json['action']),
        'Activityname': json['activityname'] == null ? undefined : json['activityname'],
        'Activitystr': json['activitystr'] == null ? undefined : json['activitystr'],
        'Candelete': json['candelete'] == null ? undefined : json['candelete'],
        'Canedit': json['canedit'] == null ? undefined : json['canedit'],
        'Category': json['category'] == null ? undefined : CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategoryFromJSON(json['category']),
        'Categoryid': json['categoryid'] == null ? undefined : json['categoryid'],
        'Component': json['component'] == null ? undefined : json['component'],
        'Course': json['course'] == null ? undefined : CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseFromJSON(json['course']),
        'Deleteurl': json['deleteurl'] == null ? undefined : json['deleteurl'],
        'Description': json['description'] == null ? undefined : json['description'],
        'Descriptionformat': json['descriptionformat'] == null ? undefined : json['descriptionformat'],
        'Editurl': json['editurl'] == null ? undefined : json['editurl'],
        'Eventcount': json['eventcount'] == null ? undefined : json['eventcount'],
        'Eventtype': json['eventtype'] == null ? undefined : json['eventtype'],
        'Formattedlocation': json['formattedlocation'] == null ? undefined : json['formattedlocation'],
        'Formattedtime': json['formattedtime'] == null ? undefined : json['formattedtime'],
        'Groupid': json['groupid'] == null ? undefined : json['groupid'],
        'Groupname': json['groupname'] == null ? undefined : json['groupname'],
        'Icon': json['icon'] == null ? undefined : CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIconFromJSON(json['icon']),
        'Id': json['id'] == null ? undefined : json['id'],
        'Instance': json['instance'] == null ? undefined : json['instance'],
        'Isactionevent': json['isactionevent'] == null ? undefined : json['isactionevent'],
        'Iscategoryevent': json['iscategoryevent'] == null ? undefined : json['iscategoryevent'],
        'Iscourseevent': json['iscourseevent'] == null ? undefined : json['iscourseevent'],
        'Location': json['location'] == null ? undefined : json['location'],
        'Modulename': json['modulename'] == null ? undefined : json['modulename'],
        'Name': json['name'] == null ? undefined : json['name'],
        'Normalisedeventtype': json['normalisedeventtype'] == null ? undefined : json['normalisedeventtype'],
        'Normalisedeventtypetext': json['normalisedeventtypetext'] == null ? undefined : json['normalisedeventtypetext'],
        'Overdue': json['overdue'] == null ? undefined : json['overdue'],
        'Purpose': json['purpose'] == null ? undefined : json['purpose'],
        'Repeatid': json['repeatid'] == null ? undefined : json['repeatid'],
        'Subscription': json['subscription'] == null ? undefined : CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscriptionFromJSON(json['subscription']),
        'Timeduration': json['timeduration'] == null ? undefined : json['timeduration'],
        'Timemodified': json['timemodified'] == null ? undefined : json['timemodified'],
        'Timesort': json['timesort'] == null ? undefined : json['timesort'],
        'Timestart': json['timestart'] == null ? undefined : json['timestart'],
        'Timeusermidnight': json['timeusermidnight'] == null ? undefined : json['timeusermidnight'],
        'Url': json['url'] == null ? undefined : json['url'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
        'Viewurl': json['viewurl'] == null ? undefined : json['viewurl'],
        'Visible': json['visible'] == null ? undefined : json['visible'],
    };
}

export function CoreCalendarGetActionEventsByCourse200ResponseEventsInnerToJSON(value?: CoreCalendarGetActionEventsByCourse200ResponseEventsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'action': CoreCalendarGetActionEventsByCourse200ResponseEventsInnerActionToJSON(value['Action']),
        'activityname': value['Activityname'],
        'activitystr': value['Activitystr'],
        'candelete': value['Candelete'],
        'canedit': value['Canedit'],
        'category': CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCategoryToJSON(value['Category']),
        'categoryid': value['Categoryid'],
        'component': value['Component'],
        'course': CoreCalendarGetActionEventsByCourse200ResponseEventsInnerCourseToJSON(value['Course']),
        'deleteurl': value['Deleteurl'],
        'description': value['Description'],
        'descriptionformat': value['Descriptionformat'],
        'editurl': value['Editurl'],
        'eventcount': value['Eventcount'],
        'eventtype': value['Eventtype'],
        'formattedlocation': value['Formattedlocation'],
        'formattedtime': value['Formattedtime'],
        'groupid': value['Groupid'],
        'groupname': value['Groupname'],
        'icon': CoreCalendarGetActionEventsByCourse200ResponseEventsInnerIconToJSON(value['Icon']),
        'id': value['Id'],
        'instance': value['Instance'],
        'isactionevent': value['Isactionevent'],
        'iscategoryevent': value['Iscategoryevent'],
        'iscourseevent': value['Iscourseevent'],
        'location': value['Location'],
        'modulename': value['Modulename'],
        'name': value['Name'],
        'normalisedeventtype': value['Normalisedeventtype'],
        'normalisedeventtypetext': value['Normalisedeventtypetext'],
        'overdue': value['Overdue'],
        'purpose': value['Purpose'],
        'repeatid': value['Repeatid'],
        'subscription': CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscriptionToJSON(value['Subscription']),
        'timeduration': value['Timeduration'],
        'timemodified': value['Timemodified'],
        'timesort': value['Timesort'],
        'timestart': value['Timestart'],
        'timeusermidnight': value['Timeusermidnight'],
        'url': value['Url'],
        'userid': value['Userid'],
        'viewurl': value['Viewurl'],
        'visible': value['Visible'],
    };
}

