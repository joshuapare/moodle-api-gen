/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModGlossaryGetEntriesToApproveRequest
 */
export interface ModGlossaryGetEntriesToApproveRequest {
    /**
     * Start returning records from here
     * @type {number}
     * @memberof ModGlossaryGetEntriesToApproveRequest
     */
    From?: number;
    /**
     * Glossary entry ID
     * @type {number}
     * @memberof ModGlossaryGetEntriesToApproveRequest
     */
    Id: number;
    /**
     * A letter, or either keywords: 'ALL' or 'SPECIAL'.
     * @type {string}
     * @memberof ModGlossaryGetEntriesToApproveRequest
     */
    Letter: string;
    /**
     * Number of records to return
     * @type {number}
     * @memberof ModGlossaryGetEntriesToApproveRequest
     */
    Limit?: number;
    /**
     * 
     * @type {object}
     * @memberof ModGlossaryGetEntriesToApproveRequest
     */
    Options?: object;
    /**
     * Order by: 'CONCEPT', 'CREATION' or 'UPDATE'
     * @type {string}
     * @memberof ModGlossaryGetEntriesToApproveRequest
     */
    Order?: string;
    /**
     * The direction of the order: 'ASC' or 'DESC'
     * @type {string}
     * @memberof ModGlossaryGetEntriesToApproveRequest
     */
    Sort?: string;
}

/**
 * Check if a given object implements the ModGlossaryGetEntriesToApproveRequest interface.
 */
export function instanceOfModGlossaryGetEntriesToApproveRequest(value: object): boolean {
    if (!('Id' in value)) return false;
    if (!('Letter' in value)) return false;
    return true;
}

export function ModGlossaryGetEntriesToApproveRequestFromJSON(json: any): ModGlossaryGetEntriesToApproveRequest {
    return ModGlossaryGetEntriesToApproveRequestFromJSONTyped(json, false);
}

export function ModGlossaryGetEntriesToApproveRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModGlossaryGetEntriesToApproveRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'From': json['from'] == null ? undefined : json['from'],
        'Id': json['id'],
        'Letter': json['letter'],
        'Limit': json['limit'] == null ? undefined : json['limit'],
        'Options': json['options'] == null ? undefined : json['options'],
        'Order': json['order'] == null ? undefined : json['order'],
        'Sort': json['sort'] == null ? undefined : json['sort'],
    };
}

export function ModGlossaryGetEntriesToApproveRequestToJSON(value?: ModGlossaryGetEntriesToApproveRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'from': value['From'],
        'id': value['Id'],
        'letter': value['Letter'],
        'limit': value['Limit'],
        'options': value['Options'],
        'order': value['Order'],
        'sort': value['Sort'],
    };
}

