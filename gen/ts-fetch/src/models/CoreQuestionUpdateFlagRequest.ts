/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreQuestionUpdateFlagRequest
 */
export interface CoreQuestionUpdateFlagRequest {
    /**
     * computed checksum with the last three arguments and
     *                              the users username
     * @type {string}
     * @memberof CoreQuestionUpdateFlagRequest
     */
    Checksum: string;
    /**
     * the new state of the flag. true = flagged
     * @type {boolean}
     * @memberof CoreQuestionUpdateFlagRequest
     */
    Newstate: boolean;
    /**
     * the question_attempt id
     * @type {number}
     * @memberof CoreQuestionUpdateFlagRequest
     */
    Qaid: number;
    /**
     * the question usage id.
     * @type {number}
     * @memberof CoreQuestionUpdateFlagRequest
     */
    Qubaid: number;
    /**
     * the question id
     * @type {number}
     * @memberof CoreQuestionUpdateFlagRequest
     */
    Questionid: number;
    /**
     * the slot number within the usage
     * @type {number}
     * @memberof CoreQuestionUpdateFlagRequest
     */
    Slot: number;
}

/**
 * Check if a given object implements the CoreQuestionUpdateFlagRequest interface.
 */
export function instanceOfCoreQuestionUpdateFlagRequest(value: object): boolean {
    if (!('Checksum' in value)) return false;
    if (!('Newstate' in value)) return false;
    if (!('Qaid' in value)) return false;
    if (!('Qubaid' in value)) return false;
    if (!('Questionid' in value)) return false;
    if (!('Slot' in value)) return false;
    return true;
}

export function CoreQuestionUpdateFlagRequestFromJSON(json: any): CoreQuestionUpdateFlagRequest {
    return CoreQuestionUpdateFlagRequestFromJSONTyped(json, false);
}

export function CoreQuestionUpdateFlagRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreQuestionUpdateFlagRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Checksum': json['checksum'],
        'Newstate': json['newstate'],
        'Qaid': json['qaid'],
        'Qubaid': json['qubaid'],
        'Questionid': json['questionid'],
        'Slot': json['slot'],
    };
}

export function CoreQuestionUpdateFlagRequestToJSON(value?: CoreQuestionUpdateFlagRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'checksum': value['Checksum'],
        'newstate': value['Newstate'],
        'qaid': value['Qaid'],
        'qubaid': value['Qubaid'],
        'questionid': value['Questionid'],
        'slot': value['Slot'],
    };
}

