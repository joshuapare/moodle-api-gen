/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolUsertoursFetchAndStartTour200ResponseTourconfig } from './ToolUsertoursFetchAndStartTour200ResponseTourconfig';
import {
    ToolUsertoursFetchAndStartTour200ResponseTourconfigFromJSON,
    ToolUsertoursFetchAndStartTour200ResponseTourconfigFromJSONTyped,
    ToolUsertoursFetchAndStartTour200ResponseTourconfigToJSON,
} from './ToolUsertoursFetchAndStartTour200ResponseTourconfig';

/**
 * 
 * @export
 * @interface ToolUsertoursFetchAndStartTour200Response
 */
export interface ToolUsertoursFetchAndStartTour200Response {
    /**
     * 
     * @type {ToolUsertoursFetchAndStartTour200ResponseTourconfig}
     * @memberof ToolUsertoursFetchAndStartTour200Response
     */
    Tourconfig?: ToolUsertoursFetchAndStartTour200ResponseTourconfig;
}

/**
 * Check if a given object implements the ToolUsertoursFetchAndStartTour200Response interface.
 */
export function instanceOfToolUsertoursFetchAndStartTour200Response(value: object): boolean {
    return true;
}

export function ToolUsertoursFetchAndStartTour200ResponseFromJSON(json: any): ToolUsertoursFetchAndStartTour200Response {
    return ToolUsertoursFetchAndStartTour200ResponseFromJSONTyped(json, false);
}

export function ToolUsertoursFetchAndStartTour200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolUsertoursFetchAndStartTour200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Tourconfig': json['tourconfig'] == null ? undefined : ToolUsertoursFetchAndStartTour200ResponseTourconfigFromJSON(json['tourconfig']),
    };
}

export function ToolUsertoursFetchAndStartTour200ResponseToJSON(value?: ToolUsertoursFetchAndStartTour200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'tourconfig': ToolUsertoursFetchAndStartTour200ResponseTourconfigToJSON(value['Tourconfig']),
    };
}

