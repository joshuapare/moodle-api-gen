/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreBlockFetchAddableBlocksRequest
 */
export interface CoreBlockFetchAddableBlocksRequest {
    /**
     * The context ID of the page.
     * @type {number}
     * @memberof CoreBlockFetchAddableBlocksRequest
     */
    Pagecontextid: number;
    /**
     * Page hash
     * @type {string}
     * @memberof CoreBlockFetchAddableBlocksRequest
     */
    Pagehash?: string;
    /**
     * The layout of the page.
     * @type {string}
     * @memberof CoreBlockFetchAddableBlocksRequest
     */
    Pagelayout: string;
    /**
     * The type of the page.
     * @type {string}
     * @memberof CoreBlockFetchAddableBlocksRequest
     */
    Pagetype: string;
    /**
     * The subpage identifier
     * @type {string}
     * @memberof CoreBlockFetchAddableBlocksRequest
     */
    Subpage?: string;
}

/**
 * Check if a given object implements the CoreBlockFetchAddableBlocksRequest interface.
 */
export function instanceOfCoreBlockFetchAddableBlocksRequest(value: object): boolean {
    if (!('Pagecontextid' in value)) return false;
    if (!('Pagelayout' in value)) return false;
    if (!('Pagetype' in value)) return false;
    return true;
}

export function CoreBlockFetchAddableBlocksRequestFromJSON(json: any): CoreBlockFetchAddableBlocksRequest {
    return CoreBlockFetchAddableBlocksRequestFromJSONTyped(json, false);
}

export function CoreBlockFetchAddableBlocksRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreBlockFetchAddableBlocksRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Pagecontextid': json['pagecontextid'],
        'Pagehash': json['pagehash'] == null ? undefined : json['pagehash'],
        'Pagelayout': json['pagelayout'],
        'Pagetype': json['pagetype'],
        'Subpage': json['subpage'] == null ? undefined : json['subpage'],
    };
}

export function CoreBlockFetchAddableBlocksRequestToJSON(value?: CoreBlockFetchAddableBlocksRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pagecontextid': value['Pagecontextid'],
        'pagehash': value['Pagehash'],
        'pagelayout': value['Pagelayout'],
        'pagetype': value['Pagetype'],
        'subpage': value['Subpage'],
    };
}

