/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoreCalendarGetActionEventsByTimesortRequest
 */
export interface CoreCalendarGetActionEventsByTimesortRequest {
    /**
     * The last seen event id
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByTimesortRequest
     */
    Aftereventid?: number;
    /**
     * Limit number
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByTimesortRequest
     */
    Limitnum?: number;
    /**
     * Limit the events to courses the user is not suspended in
     * @type {boolean}
     * @memberof CoreCalendarGetActionEventsByTimesortRequest
     */
    Limittononsuspendedevents?: boolean;
    /**
     * The value a user wishes to search against
     * @type {string}
     * @memberof CoreCalendarGetActionEventsByTimesortRequest
     */
    Searchvalue?: string;
    /**
     * Time sort from
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByTimesortRequest
     */
    Timesortfrom?: number;
    /**
     * Time sort to
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByTimesortRequest
     */
    Timesortto?: number;
    /**
     * The user id
     * @type {number}
     * @memberof CoreCalendarGetActionEventsByTimesortRequest
     */
    Userid?: number;
}

/**
 * Check if a given object implements the CoreCalendarGetActionEventsByTimesortRequest interface.
 */
export function instanceOfCoreCalendarGetActionEventsByTimesortRequest(value: object): boolean {
    return true;
}

export function CoreCalendarGetActionEventsByTimesortRequestFromJSON(json: any): CoreCalendarGetActionEventsByTimesortRequest {
    return CoreCalendarGetActionEventsByTimesortRequestFromJSONTyped(json, false);
}

export function CoreCalendarGetActionEventsByTimesortRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoreCalendarGetActionEventsByTimesortRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'Aftereventid': json['aftereventid'] == null ? undefined : json['aftereventid'],
        'Limitnum': json['limitnum'] == null ? undefined : json['limitnum'],
        'Limittononsuspendedevents': json['limittononsuspendedevents'] == null ? undefined : json['limittononsuspendedevents'],
        'Searchvalue': json['searchvalue'] == null ? undefined : json['searchvalue'],
        'Timesortfrom': json['timesortfrom'] == null ? undefined : json['timesortfrom'],
        'Timesortto': json['timesortto'] == null ? undefined : json['timesortto'],
        'Userid': json['userid'] == null ? undefined : json['userid'],
    };
}

export function CoreCalendarGetActionEventsByTimesortRequestToJSON(value?: CoreCalendarGetActionEventsByTimesortRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'aftereventid': value['Aftereventid'],
        'limitnum': value['Limitnum'],
        'limittononsuspendedevents': value['Limittononsuspendedevents'],
        'searchvalue': value['Searchvalue'],
        'timesortfrom': value['Timesortfrom'],
        'timesortto': value['Timesortto'],
        'userid': value['Userid'],
    };
}

