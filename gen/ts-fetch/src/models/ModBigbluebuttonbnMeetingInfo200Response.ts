/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner } from './ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner';
import {
    ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerFromJSON,
    ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerFromJSONTyped,
    ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerToJSON,
} from './ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner';
import type { ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner } from './ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner';
import {
    ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerFromJSON,
    ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerFromJSONTyped,
    ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerToJSON,
} from './ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner';

/**
 * 
 * @export
 * @interface ModBigbluebuttonbnMeetingInfo200Response
 */
export interface ModBigbluebuttonbnMeetingInfo200Response {
    /**
     * bigbluebuttonbn instance id
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Bigbluebuttonbnid: string;
    /**
     * Can join
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Canjoin: boolean;
    /**
     * Closing time
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Closingtime?: number;
    /**
     * CM id
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Cmid: number;
    /**
     * 
     * @type {Array<ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner>}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Features?: Array<ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner>;
    /**
     * bigbluebuttonbn group id
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Groupid?: number;
    /**
     * Guest access enabled
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Guestaccessenabled?: boolean;
    /**
     * Guest URL
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Guestjoinurl?: string;
    /**
     * Guest join password
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Guestpassword?: string;
    /**
     * Is moderator
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Ismoderator: boolean;
    /**
     * Join URL
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Joinurl: string;
    /**
     * Meeting id
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Meetingid: string;
    /**
     * Moderator count
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Moderatorcount?: number;
    /**
     * Several moderators ?
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Moderatorplural?: boolean;
    /**
     * Opening time
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Openingtime?: number;
    /**
     * Participant count
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Participantcount?: number;
    /**
     * Several participants ?
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Participantplural?: boolean;
    /**
     * 
     * @type {Array<ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner>}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Presentations: Array<ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner>;
    /**
     * Started at
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Startedat?: number;
    /**
     * Status closed
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Statusclosed?: boolean;
    /**
     * Status message
     * @type {string}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Statusmessage?: string;
    /**
     * Status open
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Statusopen?: boolean;
    /**
     * Status running
     * @type {boolean}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Statusrunning?: boolean;
    /**
     * User limit
     * @type {number}
     * @memberof ModBigbluebuttonbnMeetingInfo200Response
     */
    Userlimit: number;
}

/**
 * Check if a given object implements the ModBigbluebuttonbnMeetingInfo200Response interface.
 */
export function instanceOfModBigbluebuttonbnMeetingInfo200Response(value: object): boolean {
    if (!('Bigbluebuttonbnid' in value)) return false;
    if (!('Canjoin' in value)) return false;
    if (!('Cmid' in value)) return false;
    if (!('Ismoderator' in value)) return false;
    if (!('Joinurl' in value)) return false;
    if (!('Meetingid' in value)) return false;
    if (!('Presentations' in value)) return false;
    if (!('Userlimit' in value)) return false;
    return true;
}

export function ModBigbluebuttonbnMeetingInfo200ResponseFromJSON(json: any): ModBigbluebuttonbnMeetingInfo200Response {
    return ModBigbluebuttonbnMeetingInfo200ResponseFromJSONTyped(json, false);
}

export function ModBigbluebuttonbnMeetingInfo200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModBigbluebuttonbnMeetingInfo200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'Bigbluebuttonbnid': json['bigbluebuttonbnid'],
        'Canjoin': json['canjoin'],
        'Closingtime': json['closingtime'] == null ? undefined : json['closingtime'],
        'Cmid': json['cmid'],
        'Features': json['features'] == null ? undefined : ((json['features'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerFromJSON)),
        'Groupid': json['groupid'] == null ? undefined : json['groupid'],
        'Guestaccessenabled': json['guestaccessenabled'] == null ? undefined : json['guestaccessenabled'],
        'Guestjoinurl': json['guestjoinurl'] == null ? undefined : json['guestjoinurl'],
        'Guestpassword': json['guestpassword'] == null ? undefined : json['guestpassword'],
        'Ismoderator': json['ismoderator'],
        'Joinurl': json['joinurl'],
        'Meetingid': json['meetingid'],
        'Moderatorcount': json['moderatorcount'] == null ? undefined : json['moderatorcount'],
        'Moderatorplural': json['moderatorplural'] == null ? undefined : json['moderatorplural'],
        'Openingtime': json['openingtime'] == null ? undefined : json['openingtime'],
        'Participantcount': json['participantcount'] == null ? undefined : json['participantcount'],
        'Participantplural': json['participantplural'] == null ? undefined : json['participantplural'],
        'Presentations': ((json['presentations'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerFromJSON)),
        'Startedat': json['startedat'] == null ? undefined : json['startedat'],
        'Statusclosed': json['statusclosed'] == null ? undefined : json['statusclosed'],
        'Statusmessage': json['statusmessage'] == null ? undefined : json['statusmessage'],
        'Statusopen': json['statusopen'] == null ? undefined : json['statusopen'],
        'Statusrunning': json['statusrunning'] == null ? undefined : json['statusrunning'],
        'Userlimit': json['userlimit'],
    };
}

export function ModBigbluebuttonbnMeetingInfo200ResponseToJSON(value?: ModBigbluebuttonbnMeetingInfo200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'bigbluebuttonbnid': value['Bigbluebuttonbnid'],
        'canjoin': value['Canjoin'],
        'closingtime': value['Closingtime'],
        'cmid': value['Cmid'],
        'features': value['Features'] == null ? undefined : ((value['Features'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInnerToJSON)),
        'groupid': value['Groupid'],
        'guestaccessenabled': value['Guestaccessenabled'],
        'guestjoinurl': value['Guestjoinurl'],
        'guestpassword': value['Guestpassword'],
        'ismoderator': value['Ismoderator'],
        'joinurl': value['Joinurl'],
        'meetingid': value['Meetingid'],
        'moderatorcount': value['Moderatorcount'],
        'moderatorplural': value['Moderatorplural'],
        'openingtime': value['Openingtime'],
        'participantcount': value['Participantcount'],
        'participantplural': value['Participantplural'],
        'presentations': ((value['Presentations'] as Array<any>).map(ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerToJSON)),
        'startedat': value['Startedat'],
        'statusclosed': value['Statusclosed'],
        'statusmessage': value['Statusmessage'],
        'statusopen': value['Statusopen'],
        'statusrunning': value['Statusrunning'],
        'userlimit': value['Userlimit'],
    };
}

