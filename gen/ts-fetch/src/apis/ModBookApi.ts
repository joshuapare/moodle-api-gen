/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CoreCalendarDeleteSubscription200Response,
  ErrorResponse,
  ModBookGetBooksByCourses200Response,
  ModBookGetBooksByCoursesRequest,
  ModBookViewBookRequest,
} from '../models/index';
import {
    CoreCalendarDeleteSubscription200ResponseFromJSON,
    CoreCalendarDeleteSubscription200ResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ModBookGetBooksByCourses200ResponseFromJSON,
    ModBookGetBooksByCourses200ResponseToJSON,
    ModBookGetBooksByCoursesRequestFromJSON,
    ModBookGetBooksByCoursesRequestToJSON,
    ModBookViewBookRequestFromJSON,
    ModBookViewBookRequestToJSON,
} from '../models/index';

export interface ModBookGetBooksByCoursesOperationRequest {
    modBookGetBooksByCoursesRequest: ModBookGetBooksByCoursesRequest;
}

export interface ModBookViewBookOperationRequest {
    modBookViewBookRequest: ModBookViewBookRequest;
}

/**
 * 
 */
export class ModBookApi extends runtime.BaseAPI {

    /**
     * Returns a list of book instances in a provided set of courses,                             if no courses are provided then all the book instances the user has access to will be returned.
     * Returns a list of book instances in a provided set of courses,                             if no courses are provided then all the book instances the user has access to will be returned.
     */
    async modBookGetBooksByCoursesRaw(requestParameters: ModBookGetBooksByCoursesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModBookGetBooksByCourses200Response>> {
        if (requestParameters['modBookGetBooksByCoursesRequest'] == null) {
            throw new runtime.RequiredError(
                'modBookGetBooksByCoursesRequest',
                'Required parameter "modBookGetBooksByCoursesRequest" was null or undefined when calling modBookGetBooksByCourses().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/mod_book_get_books_by_courses`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ModBookGetBooksByCoursesRequestToJSON(requestParameters['modBookGetBooksByCoursesRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ModBookGetBooksByCourses200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns a list of book instances in a provided set of courses,                             if no courses are provided then all the book instances the user has access to will be returned.
     * Returns a list of book instances in a provided set of courses,                             if no courses are provided then all the book instances the user has access to will be returned.
     */
    async modBookGetBooksByCourses(requestParameters: ModBookGetBooksByCoursesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModBookGetBooksByCourses200Response> {
        const response = await this.modBookGetBooksByCoursesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Simulate the view.php web interface book: trigger events, completion, etc...
     * Simulate the view.php web interface book: trigger events, completion, etc...
     */
    async modBookViewBookRaw(requestParameters: ModBookViewBookOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CoreCalendarDeleteSubscription200Response>> {
        if (requestParameters['modBookViewBookRequest'] == null) {
            throw new runtime.RequiredError(
                'modBookViewBookRequest',
                'Required parameter "modBookViewBookRequest" was null or undefined when calling modBookViewBook().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/mod_book_view_book`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ModBookViewBookRequestToJSON(requestParameters['modBookViewBookRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CoreCalendarDeleteSubscription200ResponseFromJSON(jsonValue));
    }

    /**
     * Simulate the view.php web interface book: trigger events, completion, etc...
     * Simulate the view.php web interface book: trigger events, completion, etc...
     */
    async modBookViewBook(requestParameters: ModBookViewBookOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CoreCalendarDeleteSubscription200Response> {
        const response = await this.modBookViewBookRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
