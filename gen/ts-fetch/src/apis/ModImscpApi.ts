/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CoreCalendarDeleteSubscription200Response,
  ErrorResponse,
  ModChatGetChatsByCoursesRequest,
  ModImscpGetImscpsByCourses200Response,
  ModImscpViewImscpRequest,
} from '../models/index';
import {
    CoreCalendarDeleteSubscription200ResponseFromJSON,
    CoreCalendarDeleteSubscription200ResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ModChatGetChatsByCoursesRequestFromJSON,
    ModChatGetChatsByCoursesRequestToJSON,
    ModImscpGetImscpsByCourses200ResponseFromJSON,
    ModImscpGetImscpsByCourses200ResponseToJSON,
    ModImscpViewImscpRequestFromJSON,
    ModImscpViewImscpRequestToJSON,
} from '../models/index';

export interface ModImscpGetImscpsByCoursesRequest {
    modChatGetChatsByCoursesRequest: ModChatGetChatsByCoursesRequest;
}

export interface ModImscpViewImscpOperationRequest {
    modImscpViewImscpRequest: ModImscpViewImscpRequest;
}

/**
 * 
 */
export class ModImscpApi extends runtime.BaseAPI {

    /**
     * Returns a list of IMSCP instances in a provided set of courses,                             if no courses are provided then all the IMSCP instances the user has access to will be returned.
     * Returns a list of IMSCP instances in a provided set of courses,                             if no courses are provided then all the IMSCP instances the user has access to will be returned.
     */
    async modImscpGetImscpsByCoursesRaw(requestParameters: ModImscpGetImscpsByCoursesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModImscpGetImscpsByCourses200Response>> {
        if (requestParameters['modChatGetChatsByCoursesRequest'] == null) {
            throw new runtime.RequiredError(
                'modChatGetChatsByCoursesRequest',
                'Required parameter "modChatGetChatsByCoursesRequest" was null or undefined when calling modImscpGetImscpsByCourses().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/mod_imscp_get_imscps_by_courses`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ModChatGetChatsByCoursesRequestToJSON(requestParameters['modChatGetChatsByCoursesRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ModImscpGetImscpsByCourses200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns a list of IMSCP instances in a provided set of courses,                             if no courses are provided then all the IMSCP instances the user has access to will be returned.
     * Returns a list of IMSCP instances in a provided set of courses,                             if no courses are provided then all the IMSCP instances the user has access to will be returned.
     */
    async modImscpGetImscpsByCourses(requestParameters: ModImscpGetImscpsByCoursesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModImscpGetImscpsByCourses200Response> {
        const response = await this.modImscpGetImscpsByCoursesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Simulate the view.php web interface imscp: trigger events, completion, etc...
     * Simulate the view.php web interface imscp: trigger events, completion, etc...
     */
    async modImscpViewImscpRaw(requestParameters: ModImscpViewImscpOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CoreCalendarDeleteSubscription200Response>> {
        if (requestParameters['modImscpViewImscpRequest'] == null) {
            throw new runtime.RequiredError(
                'modImscpViewImscpRequest',
                'Required parameter "modImscpViewImscpRequest" was null or undefined when calling modImscpViewImscp().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/mod_imscp_view_imscp`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ModImscpViewImscpRequestToJSON(requestParameters['modImscpViewImscpRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CoreCalendarDeleteSubscription200ResponseFromJSON(jsonValue));
    }

    /**
     * Simulate the view.php web interface imscp: trigger events, completion, etc...
     * Simulate the view.php web interface imscp: trigger events, completion, etc...
     */
    async modImscpViewImscp(requestParameters: ModImscpViewImscpOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CoreCalendarDeleteSubscription200Response> {
        const response = await this.modImscpViewImscpRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
