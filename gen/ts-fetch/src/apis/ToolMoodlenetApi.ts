/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  ToolMoodlenetSearchCourses200Response,
  ToolMoodlenetSearchCoursesRequest,
  ToolMoodlenetVerifyWebfinger200Response,
  ToolMoodlenetVerifyWebfingerRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ToolMoodlenetSearchCourses200ResponseFromJSON,
    ToolMoodlenetSearchCourses200ResponseToJSON,
    ToolMoodlenetSearchCoursesRequestFromJSON,
    ToolMoodlenetSearchCoursesRequestToJSON,
    ToolMoodlenetVerifyWebfinger200ResponseFromJSON,
    ToolMoodlenetVerifyWebfinger200ResponseToJSON,
    ToolMoodlenetVerifyWebfingerRequestFromJSON,
    ToolMoodlenetVerifyWebfingerRequestToJSON,
} from '../models/index';

export interface ToolMoodlenetSearchCoursesOperationRequest {
    toolMoodlenetSearchCoursesRequest: ToolMoodlenetSearchCoursesRequest;
}

export interface ToolMoodlenetVerifyWebfingerOperationRequest {
    toolMoodlenetVerifyWebfingerRequest: ToolMoodlenetVerifyWebfingerRequest;
}

/**
 * 
 */
export class ToolMoodlenetApi extends runtime.BaseAPI {

    /**
     * For some given input search for a course that matches
     * For some given input search for a course that matches
     */
    async toolMoodlenetSearchCoursesRaw(requestParameters: ToolMoodlenetSearchCoursesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ToolMoodlenetSearchCourses200Response>> {
        if (requestParameters['toolMoodlenetSearchCoursesRequest'] == null) {
            throw new runtime.RequiredError(
                'toolMoodlenetSearchCoursesRequest',
                'Required parameter "toolMoodlenetSearchCoursesRequest" was null or undefined when calling toolMoodlenetSearchCourses().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/tool_moodlenet_search_courses`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ToolMoodlenetSearchCoursesRequestToJSON(requestParameters['toolMoodlenetSearchCoursesRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ToolMoodlenetSearchCourses200ResponseFromJSON(jsonValue));
    }

    /**
     * For some given input search for a course that matches
     * For some given input search for a course that matches
     */
    async toolMoodlenetSearchCourses(requestParameters: ToolMoodlenetSearchCoursesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ToolMoodlenetSearchCourses200Response> {
        const response = await this.toolMoodlenetSearchCoursesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Verify if the passed information resolves into a WebFinger profile URL
     * Verify if the passed information resolves into a WebFinger profile URL
     */
    async toolMoodlenetVerifyWebfingerRaw(requestParameters: ToolMoodlenetVerifyWebfingerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ToolMoodlenetVerifyWebfinger200Response>> {
        if (requestParameters['toolMoodlenetVerifyWebfingerRequest'] == null) {
            throw new runtime.RequiredError(
                'toolMoodlenetVerifyWebfingerRequest',
                'Required parameter "toolMoodlenetVerifyWebfingerRequest" was null or undefined when calling toolMoodlenetVerifyWebfinger().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/tool_moodlenet_verify_webfinger`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ToolMoodlenetVerifyWebfingerRequestToJSON(requestParameters['toolMoodlenetVerifyWebfingerRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ToolMoodlenetVerifyWebfinger200ResponseFromJSON(jsonValue));
    }

    /**
     * Verify if the passed information resolves into a WebFinger profile URL
     * Verify if the passed information resolves into a WebFinger profile URL
     */
    async toolMoodlenetVerifyWebfinger(requestParameters: ToolMoodlenetVerifyWebfingerOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ToolMoodlenetVerifyWebfinger200Response> {
        const response = await this.toolMoodlenetVerifyWebfingerRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
