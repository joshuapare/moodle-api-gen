/* tslint:disable */
/* eslint-disable */
/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  QbankColumnsortorderSetColumnSizeRequest,
  QbankColumnsortorderSetColumnbankOrderRequest,
  QbankColumnsortorderSetHiddenColumnsRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    QbankColumnsortorderSetColumnSizeRequestFromJSON,
    QbankColumnsortorderSetColumnSizeRequestToJSON,
    QbankColumnsortorderSetColumnbankOrderRequestFromJSON,
    QbankColumnsortorderSetColumnbankOrderRequestToJSON,
    QbankColumnsortorderSetHiddenColumnsRequestFromJSON,
    QbankColumnsortorderSetHiddenColumnsRequestToJSON,
} from '../models/index';

export interface QbankColumnsortorderSetColumnSizeOperationRequest {
    qbankColumnsortorderSetColumnSizeRequest: QbankColumnsortorderSetColumnSizeRequest;
}

export interface QbankColumnsortorderSetColumnbankOrderOperationRequest {
    qbankColumnsortorderSetColumnbankOrderRequest: QbankColumnsortorderSetColumnbankOrderRequest;
}

export interface QbankColumnsortorderSetHiddenColumnsOperationRequest {
    qbankColumnsortorderSetHiddenColumnsRequest: QbankColumnsortorderSetHiddenColumnsRequest;
}

/**
 * 
 */
export class QbankColumnsortorderApi extends runtime.BaseAPI {

    /**
     * Column size
     * Column size
     */
    async qbankColumnsortorderSetColumnSizeRaw(requestParameters: QbankColumnsortorderSetColumnSizeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['qbankColumnsortorderSetColumnSizeRequest'] == null) {
            throw new runtime.RequiredError(
                'qbankColumnsortorderSetColumnSizeRequest',
                'Required parameter "qbankColumnsortorderSetColumnSizeRequest" was null or undefined when calling qbankColumnsortorderSetColumnSize().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/qbank_columnsortorder_set_column_size`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: QbankColumnsortorderSetColumnSizeRequestToJSON(requestParameters['qbankColumnsortorderSetColumnSizeRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Column size
     * Column size
     */
    async qbankColumnsortorderSetColumnSize(requestParameters: QbankColumnsortorderSetColumnSizeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.qbankColumnsortorderSetColumnSizeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Sets question columns order in database
     * Sets question columns order in database
     */
    async qbankColumnsortorderSetColumnbankOrderRaw(requestParameters: QbankColumnsortorderSetColumnbankOrderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['qbankColumnsortorderSetColumnbankOrderRequest'] == null) {
            throw new runtime.RequiredError(
                'qbankColumnsortorderSetColumnbankOrderRequest',
                'Required parameter "qbankColumnsortorderSetColumnbankOrderRequest" was null or undefined when calling qbankColumnsortorderSetColumnbankOrder().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/qbank_columnsortorder_set_columnbank_order`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: QbankColumnsortorderSetColumnbankOrderRequestToJSON(requestParameters['qbankColumnsortorderSetColumnbankOrderRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Sets question columns order in database
     * Sets question columns order in database
     */
    async qbankColumnsortorderSetColumnbankOrder(requestParameters: QbankColumnsortorderSetColumnbankOrderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.qbankColumnsortorderSetColumnbankOrderRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Hidden Columns
     * Hidden Columns
     */
    async qbankColumnsortorderSetHiddenColumnsRaw(requestParameters: QbankColumnsortorderSetHiddenColumnsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['qbankColumnsortorderSetHiddenColumnsRequest'] == null) {
            throw new runtime.RequiredError(
                'qbankColumnsortorderSetHiddenColumnsRequest',
                'Required parameter "qbankColumnsortorderSetHiddenColumnsRequest" was null or undefined when calling qbankColumnsortorderSetHiddenColumns().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/qbank_columnsortorder_set_hidden_columns`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: QbankColumnsortorderSetHiddenColumnsRequestToJSON(requestParameters['qbankColumnsortorderSetHiddenColumnsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Hidden Columns
     * Hidden Columns
     */
    async qbankColumnsortorderSetHiddenColumns(requestParameters: QbankColumnsortorderSetHiddenColumnsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.qbankColumnsortorderSetHiddenColumnsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
