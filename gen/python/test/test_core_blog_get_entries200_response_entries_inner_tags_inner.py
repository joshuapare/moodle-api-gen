# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.core_blog_get_entries200_response_entries_inner_tags_inner import CoreBlogGetEntries200ResponseEntriesInnerTagsInner

class TestCoreBlogGetEntries200ResponseEntriesInnerTagsInner(unittest.TestCase):
    """CoreBlogGetEntries200ResponseEntriesInnerTagsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreBlogGetEntries200ResponseEntriesInnerTagsInner:
        """Test CoreBlogGetEntries200ResponseEntriesInnerTagsInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreBlogGetEntries200ResponseEntriesInnerTagsInner`
        """
        model = CoreBlogGetEntries200ResponseEntriesInnerTagsInner()
        if include_optional:
            return CoreBlogGetEntries200ResponseEntriesInnerTagsInner(
                flag = 56,
                id = 56,
                isstandard = True,
                itemid = 56,
                name = 'null',
                ordering = 56,
                rawname = 'null',
                tagcollid = 56,
                taginstancecontextid = 56,
                taginstanceid = 56
            )
        else:
            return CoreBlogGetEntries200ResponseEntriesInnerTagsInner(
        )
        """

    def testCoreBlogGetEntries200ResponseEntriesInnerTagsInner(self):
        """Test CoreBlogGetEntries200ResponseEntriesInnerTagsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
