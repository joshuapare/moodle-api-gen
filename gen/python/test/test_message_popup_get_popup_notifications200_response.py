# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.message_popup_get_popup_notifications200_response import MessagePopupGetPopupNotifications200Response

class TestMessagePopupGetPopupNotifications200Response(unittest.TestCase):
    """MessagePopupGetPopupNotifications200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MessagePopupGetPopupNotifications200Response:
        """Test MessagePopupGetPopupNotifications200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MessagePopupGetPopupNotifications200Response`
        """
        model = MessagePopupGetPopupNotifications200Response()
        if include_optional:
            return MessagePopupGetPopupNotifications200Response(
                notifications = [
                    openapi_client.models.message_popup_get_popup_notifications_200_response_notifications_inner.message_popup_get_popup_notifications_200_response_notifications_inner(
                        component = '', 
                        contexturl = '', 
                        contexturlname = '', 
                        customdata = '', 
                        deleted = True, 
                        eventtype = '', 
                        fullmessage = '', 
                        fullmessageformat = 56, 
                        fullmessagehtml = '', 
                        iconurl = 'null', 
                        id = 56, 
                        read = True, 
                        shortenedsubject = 'null', 
                        smallmessage = '', 
                        subject = 'null', 
                        text = '', 
                        timecreated = 56, 
                        timecreatedpretty = 'null', 
                        timeread = 56, 
                        useridfrom = 56, 
                        useridto = 56, )
                    ],
                unreadcount = 56
            )
        else:
            return MessagePopupGetPopupNotifications200Response(
                notifications = [
                    openapi_client.models.message_popup_get_popup_notifications_200_response_notifications_inner.message_popup_get_popup_notifications_200_response_notifications_inner(
                        component = '', 
                        contexturl = '', 
                        contexturlname = '', 
                        customdata = '', 
                        deleted = True, 
                        eventtype = '', 
                        fullmessage = '', 
                        fullmessageformat = 56, 
                        fullmessagehtml = '', 
                        iconurl = 'null', 
                        id = 56, 
                        read = True, 
                        shortenedsubject = 'null', 
                        smallmessage = '', 
                        subject = 'null', 
                        text = '', 
                        timecreated = 56, 
                        timecreatedpretty = 'null', 
                        timeread = 56, 
                        useridfrom = 56, 
                        useridto = 56, )
                    ],
                unreadcount = 56,
        )
        """

    def testMessagePopupGetPopupNotifications200Response(self):
        """Test MessagePopupGetPopupNotifications200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
