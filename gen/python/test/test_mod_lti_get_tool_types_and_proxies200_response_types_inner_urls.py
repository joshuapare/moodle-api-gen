# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mod_lti_get_tool_types_and_proxies200_response_types_inner_urls import ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls

class TestModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls(unittest.TestCase):
    """ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls:
        """Test ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls`
        """
        model = ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls()
        if include_optional:
            return ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls(
                accesstoken = '',
                authrequest = '',
                course = '',
                edit = '',
                icon = '',
                publickeyset = ''
            )
        else:
            return ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls(
                accesstoken = '',
                authrequest = '',
                edit = '',
                icon = '',
                publickeyset = '',
        )
        """

    def testModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls(self):
        """Test ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
