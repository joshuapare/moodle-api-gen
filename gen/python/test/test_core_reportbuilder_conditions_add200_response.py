# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.core_reportbuilder_conditions_add200_response import CoreReportbuilderConditionsAdd200Response

class TestCoreReportbuilderConditionsAdd200Response(unittest.TestCase):
    """CoreReportbuilderConditionsAdd200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreReportbuilderConditionsAdd200Response:
        """Test CoreReportbuilderConditionsAdd200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreReportbuilderConditionsAdd200Response`
        """
        model = CoreReportbuilderConditionsAdd200Response()
        if include_optional:
            return CoreReportbuilderConditionsAdd200Response(
                activeconditionsform = 'null',
                availableconditions = [
                    openapi_client.models.core_reportbuilder_conditions_add_200_response_availableconditions_inner.core_reportbuilder_conditions_add_200_response_availableconditions_inner(
                        optiongroup = openapi_client.models.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup(
                            text = 'null', 
                            values = [
                                openapi_client.models.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup_values_inner.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup_values_inner(
                                    value = 'null', 
                                    visiblename = 'null', )
                                ], ), )
                    ],
                hasactiveconditions = True,
                hasavailableconditions = True,
                helpicon = '',
                javascript = 'null'
            )
        else:
            return CoreReportbuilderConditionsAdd200Response(
                activeconditionsform = 'null',
                availableconditions = [
                    openapi_client.models.core_reportbuilder_conditions_add_200_response_availableconditions_inner.core_reportbuilder_conditions_add_200_response_availableconditions_inner(
                        optiongroup = openapi_client.models.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup(
                            text = 'null', 
                            values = [
                                openapi_client.models.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup_values_inner.core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup_values_inner(
                                    value = 'null', 
                                    visiblename = 'null', )
                                ], ), )
                    ],
                hasactiveconditions = True,
                hasavailableconditions = True,
                helpicon = '',
        )
        """

    def testCoreReportbuilderConditionsAdd200Response(self):
        """Test CoreReportbuilderConditionsAdd200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
