# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mod_assign_get_participant200_response import ModAssignGetParticipant200Response

class TestModAssignGetParticipant200Response(unittest.TestCase):
    """ModAssignGetParticipant200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModAssignGetParticipant200Response:
        """Test ModAssignGetParticipant200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModAssignGetParticipant200Response`
        """
        model = ModAssignGetParticipant200Response()
        if include_optional:
            return ModAssignGetParticipant200Response(
                allowsubmissionsfromdate = 56,
                blindmarking = True,
                cutoffdate = 56,
                duedate = 56,
                duedatestr = 'null',
                fullname = '',
                grantedextension = True,
                groupid = 56,
                groupname = 'null',
                id = 56,
                requiregrading = True,
                submissionstatus = 'null',
                submitted = True,
                user = openapi_client.models.mod_assign_get_participant_200_response_user.mod_assign_get_participant_200_response_user(
                    address = '', 
                    auth = '', 
                    calendartype = '', 
                    city = '', 
                    confirmed = True, 
                    country = '', 
                    customfields = [
                        openapi_client.models.core_grades_get_gradable_users_200_response_users_inner_customfields_inner.core_grades_get_gradable_users_200_response_users_inner_customfields_inner(
                            displayvalue = '', 
                            name = '', 
                            shortname = '', 
                            type = '', 
                            value = '', )
                        ], 
                    department = '', 
                    description = '', 
                    descriptionformat = 56, 
                    email = '', 
                    firstaccess = 56, 
                    firstname = '', 
                    fullname = '', 
                    id = 56, 
                    idnumber = '', 
                    institution = '', 
                    interests = '', 
                    lang = '', 
                    lastaccess = 56, 
                    lastname = '', 
                    mailformat = 56, 
                    phone1 = '', 
                    phone2 = '', 
                    preferences = [
                        openapi_client.models.core_grades_get_gradable_users_200_response_users_inner_preferences_inner.core_grades_get_gradable_users_200_response_users_inner_preferences_inner(
                            name = '', 
                            value = '', )
                        ], 
                    profileimageurl = '', 
                    profileimageurlsmall = '', 
                    suspended = True, 
                    theme = '', 
                    timezone = '', 
                    username = '', )
            )
        else:
            return ModAssignGetParticipant200Response(
                allowsubmissionsfromdate = 56,
                blindmarking = True,
                cutoffdate = 56,
                duedate = 56,
                duedatestr = 'null',
                fullname = '',
                grantedextension = True,
                id = 56,
                requiregrading = True,
                submitted = True,
        )
        """

    def testModAssignGetParticipant200Response(self):
        """Test ModAssignGetParticipant200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
