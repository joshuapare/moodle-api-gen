# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.core_reportbuilder_retrieve_report200_response import CoreReportbuilderRetrieveReport200Response

class TestCoreReportbuilderRetrieveReport200Response(unittest.TestCase):
    """CoreReportbuilderRetrieveReport200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreReportbuilderRetrieveReport200Response:
        """Test CoreReportbuilderRetrieveReport200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreReportbuilderRetrieveReport200Response`
        """
        model = CoreReportbuilderRetrieveReport200Response()
        if include_optional:
            return CoreReportbuilderRetrieveReport200Response(
                data = openapi_client.models.core_reportbuilder_retrieve_report_200_response_data.core_reportbuilder_retrieve_report_200_response_data(
                    headers = [
                        None
                        ], 
                    rows = [
                        openapi_client.models.core_reportbuilder_retrieve_report_200_response_data_rows_inner.core_reportbuilder_retrieve_report_200_response_data_rows_inner(
                            columns = [
                                None
                                ], )
                        ], 
                    totalrowcount = 56, ),
                details = openapi_client.models.core_reportbuilder_retrieve_report_200_response_details.core_reportbuilder_retrieve_report_200_response_details(
                    area = '', 
                    component = '', 
                    conditiondata = '', 
                    contextid = 56, 
                    id = 56, 
                    itemid = 56, 
                    modifiedby = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                        department = '', 
                        email = '', 
                        fullname = '', 
                        id = 56, 
                        identity = '', 
                        idnumber = '', 
                        institution = '', 
                        phone1 = '', 
                        phone2 = '', 
                        profileimageurl = '', 
                        profileimageurlsmall = '', 
                        profileurl = '', ), 
                    name = '', 
                    settingsdata = '', 
                    source = '', 
                    sourcename = '', 
                    timecreated = 56, 
                    timemodified = 56, 
                    type = 56, 
                    uniquerows = True, 
                    usercreated = 56, 
                    usermodified = 56, ),
                warnings = [
                    openapi_client.models.auth_email_signup_user_200_response_warnings_inner.auth_email_signup_user_200_response_warnings_inner(
                        item = '', 
                        itemid = 56, 
                        message = '', 
                        warningcode = '', )
                    ]
            )
        else:
            return CoreReportbuilderRetrieveReport200Response(
                data = openapi_client.models.core_reportbuilder_retrieve_report_200_response_data.core_reportbuilder_retrieve_report_200_response_data(
                    headers = [
                        None
                        ], 
                    rows = [
                        openapi_client.models.core_reportbuilder_retrieve_report_200_response_data_rows_inner.core_reportbuilder_retrieve_report_200_response_data_rows_inner(
                            columns = [
                                None
                                ], )
                        ], 
                    totalrowcount = 56, ),
                details = openapi_client.models.core_reportbuilder_retrieve_report_200_response_details.core_reportbuilder_retrieve_report_200_response_details(
                    area = '', 
                    component = '', 
                    conditiondata = '', 
                    contextid = 56, 
                    id = 56, 
                    itemid = 56, 
                    modifiedby = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                        department = '', 
                        email = '', 
                        fullname = '', 
                        id = 56, 
                        identity = '', 
                        idnumber = '', 
                        institution = '', 
                        phone1 = '', 
                        phone2 = '', 
                        profileimageurl = '', 
                        profileimageurlsmall = '', 
                        profileurl = '', ), 
                    name = '', 
                    settingsdata = '', 
                    source = '', 
                    sourcename = '', 
                    timecreated = 56, 
                    timemodified = 56, 
                    type = 56, 
                    uniquerows = True, 
                    usercreated = 56, 
                    usermodified = 56, ),
        )
        """

    def testCoreReportbuilderRetrieveReport200Response(self):
        """Test CoreReportbuilderRetrieveReport200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
