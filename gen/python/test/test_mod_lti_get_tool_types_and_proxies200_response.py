# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mod_lti_get_tool_types_and_proxies200_response import ModLtiGetToolTypesAndProxies200Response

class TestModLtiGetToolTypesAndProxies200Response(unittest.TestCase):
    """ModLtiGetToolTypesAndProxies200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModLtiGetToolTypesAndProxies200Response:
        """Test ModLtiGetToolTypesAndProxies200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModLtiGetToolTypesAndProxies200Response`
        """
        model = ModLtiGetToolTypesAndProxies200Response()
        if include_optional:
            return ModLtiGetToolTypesAndProxies200Response(
                limit = 56,
                offset = 56,
                proxies = [
                    openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_proxies_inner.mod_lti_get_tool_types_and_proxies_200_response_proxies_inner(
                        capabilityoffered = '', 
                        guid = '', 
                        id = 56, 
                        name = '', 
                        regurl = '', 
                        secret = '', 
                        serviceoffered = '', 
                        state = 56, 
                        timecreated = 56, 
                        timemodified = 56, 
                        toolproxy = '', 
                        vendorcode = '', )
                    ],
                types = [
                    openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_types_inner.mod_lti_get_tool_types_and_proxies_200_response_types_inner(
                        capabilitygroups = [
                            None
                            ], 
                        clientid = '', 
                        courseid = 56, 
                        deploymentid = 56, 
                        description = '', 
                        hascapabilitygroups = True, 
                        id = 56, 
                        instancecount = 56, 
                        instanceids = [
                            None
                            ], 
                        name = '', 
                        platformid = '', 
                        state = openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_types_inner_state.mod_lti_get_tool_types_and_proxies_200_response_types_inner_state(
                            configured = True, 
                            pending = True, 
                            rejected = True, 
                            text = '', 
                            unknown = True, ), 
                        urls = openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_types_inner_urls.mod_lti_get_tool_types_and_proxies_200_response_types_inner_urls(
                            accesstoken = '', 
                            authrequest = '', 
                            course = '', 
                            edit = '', 
                            icon = '', 
                            publickeyset = '', ), )
                    ]
            )
        else:
            return ModLtiGetToolTypesAndProxies200Response(
                proxies = [
                    openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_proxies_inner.mod_lti_get_tool_types_and_proxies_200_response_proxies_inner(
                        capabilityoffered = '', 
                        guid = '', 
                        id = 56, 
                        name = '', 
                        regurl = '', 
                        secret = '', 
                        serviceoffered = '', 
                        state = 56, 
                        timecreated = 56, 
                        timemodified = 56, 
                        toolproxy = '', 
                        vendorcode = '', )
                    ],
                types = [
                    openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_types_inner.mod_lti_get_tool_types_and_proxies_200_response_types_inner(
                        capabilitygroups = [
                            None
                            ], 
                        clientid = '', 
                        courseid = 56, 
                        deploymentid = 56, 
                        description = '', 
                        hascapabilitygroups = True, 
                        id = 56, 
                        instancecount = 56, 
                        instanceids = [
                            None
                            ], 
                        name = '', 
                        platformid = '', 
                        state = openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_types_inner_state.mod_lti_get_tool_types_and_proxies_200_response_types_inner_state(
                            configured = True, 
                            pending = True, 
                            rejected = True, 
                            text = '', 
                            unknown = True, ), 
                        urls = openapi_client.models.mod_lti_get_tool_types_and_proxies_200_response_types_inner_urls.mod_lti_get_tool_types_and_proxies_200_response_types_inner_urls(
                            accesstoken = '', 
                            authrequest = '', 
                            course = '', 
                            edit = '', 
                            icon = '', 
                            publickeyset = '', ), )
                    ],
        )
        """

    def testModLtiGetToolTypesAndProxies200Response(self):
        """Test ModLtiGetToolTypesAndProxies200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
