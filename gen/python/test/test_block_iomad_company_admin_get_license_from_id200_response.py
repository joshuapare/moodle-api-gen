# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.block_iomad_company_admin_get_license_from_id200_response import BlockIomadCompanyAdminGetLicenseFromId200Response

class TestBlockIomadCompanyAdminGetLicenseFromId200Response(unittest.TestCase):
    """BlockIomadCompanyAdminGetLicenseFromId200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BlockIomadCompanyAdminGetLicenseFromId200Response:
        """Test BlockIomadCompanyAdminGetLicenseFromId200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BlockIomadCompanyAdminGetLicenseFromId200Response`
        """
        model = BlockIomadCompanyAdminGetLicenseFromId200Response()
        if include_optional:
            return BlockIomadCompanyAdminGetLicenseFromId200Response(
                courses = [
                    openapi_client.models.block_iomad_company_admin_get_license_from_id_200_response_courses_inner.block_iomad_company_admin_get_license_from_id_200_response_courses_inner(
                        fullname = '', 
                        id = 56, )
                    ],
                license = openapi_client.models.block_iomad_company_admin_get_license_from_id_200_response_license.block_iomad_company_admin_get_license_from_id_200_response_license(
                    allallocated = True, 
                    allocation = 56, 
                    companyid = 56, 
                    expirydate = 56, 
                    id = 56, 
                    instant = True, 
                    name = '', 
                    parentid = 56, 
                    program = True, 
                    reference = 'null', 
                    startdate = 56, 
                    type = 56, 
                    used = 56, 
                    validlength = 56, )
            )
        else:
            return BlockIomadCompanyAdminGetLicenseFromId200Response(
                courses = [
                    openapi_client.models.block_iomad_company_admin_get_license_from_id_200_response_courses_inner.block_iomad_company_admin_get_license_from_id_200_response_courses_inner(
                        fullname = '', 
                        id = 56, )
                    ],
                license = openapi_client.models.block_iomad_company_admin_get_license_from_id_200_response_license.block_iomad_company_admin_get_license_from_id_200_response_license(
                    allallocated = True, 
                    allocation = 56, 
                    companyid = 56, 
                    expirydate = 56, 
                    id = 56, 
                    instant = True, 
                    name = '', 
                    parentid = 56, 
                    program = True, 
                    reference = 'null', 
                    startdate = 56, 
                    type = 56, 
                    used = 56, 
                    validlength = 56, ),
        )
        """

    def testBlockIomadCompanyAdminGetLicenseFromId200Response(self):
        """Test BlockIomadCompanyAdminGetLicenseFromId200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
