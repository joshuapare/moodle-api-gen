# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.core_badges_get_user_badges200_response import CoreBadgesGetUserBadges200Response

class TestCoreBadgesGetUserBadges200Response(unittest.TestCase):
    """CoreBadgesGetUserBadges200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreBadgesGetUserBadges200Response:
        """Test CoreBadgesGetUserBadges200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreBadgesGetUserBadges200Response`
        """
        model = CoreBadgesGetUserBadges200Response()
        if include_optional:
            return CoreBadgesGetUserBadges200Response(
                badges = [
                    openapi_client.models.core_badges_get_user_badges_200_response_badges_inner.core_badges_get_user_badges_200_response_badges_inner(
                        alignment = [
                            openapi_client.models.core_badges_get_user_badges_200_response_badges_inner_alignment_inner.core_badges_get_user_badges_200_response_badges_inner_alignment_inner(
                                badgeid = 56, 
                                id = 56, 
                                target_code = '', 
                                target_description = '', 
                                target_framework = '', 
                                target_name = '', 
                                target_url = '', )
                            ], 
                        attachment = 56, 
                        badgeurl = '', 
                        courseid = 56, 
                        dateexpire = 56, 
                        dateissued = 56, 
                        description = '', 
                        email = '', 
                        endorsement = openapi_client.models.core_badges_get_user_badges_200_response_badges_inner_endorsement.core_badges_get_user_badges_200_response_badges_inner_endorsement(
                            badgeid = 56, 
                            claimcomment = '', 
                            claimid = '', 
                            dateissued = 56, 
                            id = 56, 
                            issueremail = '', 
                            issuername = '', 
                            issuerurl = '', ), 
                        expiredate = 56, 
                        expireperiod = 56, 
                        id = 56, 
                        imageauthoremail = '', 
                        imageauthorname = '', 
                        imageauthorurl = '', 
                        imagecaption = '', 
                        issuedid = 56, 
                        issuercontact = '', 
                        issuername = '', 
                        issuerurl = '', 
                        language = '', 
                        message = '', 
                        messagesubject = '', 
                        name = '', 
                        nextcron = 56, 
                        notification = 56, 
                        relatedbadges = [
                            openapi_client.models.core_badges_get_user_badges_200_response_badges_inner_relatedbadges_inner.core_badges_get_user_badges_200_response_badges_inner_relatedbadges_inner(
                                id = 56, 
                                language = '', 
                                name = '', 
                                type = 56, 
                                version = '', )
                            ], 
                        status = 56, 
                        timecreated = 56, 
                        timemodified = 56, 
                        type = 56, 
                        uniquehash = '', 
                        usercreated = 56, 
                        usermodified = 56, 
                        version = '', 
                        visible = 56, )
                    ],
                warnings = [
                    openapi_client.models.auth_email_signup_user_200_response_warnings_inner.auth_email_signup_user_200_response_warnings_inner(
                        item = '', 
                        itemid = 56, 
                        message = '', 
                        warningcode = '', )
                    ]
            )
        else:
            return CoreBadgesGetUserBadges200Response(
                badges = [
                    openapi_client.models.core_badges_get_user_badges_200_response_badges_inner.core_badges_get_user_badges_200_response_badges_inner(
                        alignment = [
                            openapi_client.models.core_badges_get_user_badges_200_response_badges_inner_alignment_inner.core_badges_get_user_badges_200_response_badges_inner_alignment_inner(
                                badgeid = 56, 
                                id = 56, 
                                target_code = '', 
                                target_description = '', 
                                target_framework = '', 
                                target_name = '', 
                                target_url = '', )
                            ], 
                        attachment = 56, 
                        badgeurl = '', 
                        courseid = 56, 
                        dateexpire = 56, 
                        dateissued = 56, 
                        description = '', 
                        email = '', 
                        endorsement = openapi_client.models.core_badges_get_user_badges_200_response_badges_inner_endorsement.core_badges_get_user_badges_200_response_badges_inner_endorsement(
                            badgeid = 56, 
                            claimcomment = '', 
                            claimid = '', 
                            dateissued = 56, 
                            id = 56, 
                            issueremail = '', 
                            issuername = '', 
                            issuerurl = '', ), 
                        expiredate = 56, 
                        expireperiod = 56, 
                        id = 56, 
                        imageauthoremail = '', 
                        imageauthorname = '', 
                        imageauthorurl = '', 
                        imagecaption = '', 
                        issuedid = 56, 
                        issuercontact = '', 
                        issuername = '', 
                        issuerurl = '', 
                        language = '', 
                        message = '', 
                        messagesubject = '', 
                        name = '', 
                        nextcron = 56, 
                        notification = 56, 
                        relatedbadges = [
                            openapi_client.models.core_badges_get_user_badges_200_response_badges_inner_relatedbadges_inner.core_badges_get_user_badges_200_response_badges_inner_relatedbadges_inner(
                                id = 56, 
                                language = '', 
                                name = '', 
                                type = 56, 
                                version = '', )
                            ], 
                        status = 56, 
                        timecreated = 56, 
                        timemodified = 56, 
                        type = 56, 
                        uniquehash = '', 
                        usercreated = 56, 
                        usermodified = 56, 
                        version = '', 
                        visible = 56, )
                    ],
        )
        """

    def testCoreBadgesGetUserBadges200Response(self):
        """Test CoreBadgesGetUserBadges200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
