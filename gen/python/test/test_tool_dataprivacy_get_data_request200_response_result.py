# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tool_dataprivacy_get_data_request200_response_result import ToolDataprivacyGetDataRequest200ResponseResult

class TestToolDataprivacyGetDataRequest200ResponseResult(unittest.TestCase):
    """ToolDataprivacyGetDataRequest200ResponseResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ToolDataprivacyGetDataRequest200ResponseResult:
        """Test ToolDataprivacyGetDataRequest200ResponseResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ToolDataprivacyGetDataRequest200ResponseResult`
        """
        model = ToolDataprivacyGetDataRequest200ResponseResult()
        if include_optional:
            return ToolDataprivacyGetDataRequest200ResponseResult(
                allowfiltering = True,
                approvedeny = True,
                canmarkcomplete = True,
                canreview = True,
                comments = '',
                commentsformat = 56,
                creationmethod = 56,
                dpo = 56,
                dpocomment = '',
                dpocommentformat = 56,
                dpouser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                    department = '', 
                    email = '', 
                    fullname = '', 
                    id = 56, 
                    identity = '', 
                    idnumber = '', 
                    institution = '', 
                    phone1 = '', 
                    phone2 = '', 
                    profileimageurl = '', 
                    profileimageurlsmall = '', 
                    profileurl = '', ),
                foruser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                    department = '', 
                    email = '', 
                    fullname = '', 
                    id = 56, 
                    identity = '', 
                    idnumber = '', 
                    institution = '', 
                    phone1 = '', 
                    phone2 = '', 
                    profileimageurl = '', 
                    profileimageurlsmall = '', 
                    profileurl = '', ),
                id = 56,
                messagehtml = 'null',
                requestedby = 56,
                requestedbyuser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                    department = '', 
                    email = '', 
                    fullname = '', 
                    id = 56, 
                    identity = '', 
                    idnumber = '', 
                    institution = '', 
                    phone1 = '', 
                    phone2 = '', 
                    profileimageurl = '', 
                    profileimageurlsmall = '', 
                    profileurl = '', ),
                status = 56,
                statuslabel = 'null',
                statuslabelclass = 'null',
                systemapproved = True,
                timecreated = 56,
                timemodified = 56,
                type = 56,
                typename = 'null',
                typenameshort = 'null',
                userid = 56,
                usermodified = 56
            )
        else:
            return ToolDataprivacyGetDataRequest200ResponseResult(
                comments = '',
                commentsformat = 56,
                creationmethod = 56,
                dpo = 56,
                dpocomment = '',
                dpocommentformat = 56,
                foruser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                    department = '', 
                    email = '', 
                    fullname = '', 
                    id = 56, 
                    identity = '', 
                    idnumber = '', 
                    institution = '', 
                    phone1 = '', 
                    phone2 = '', 
                    profileimageurl = '', 
                    profileimageurlsmall = '', 
                    profileurl = '', ),
                id = 56,
                requestedby = 56,
                status = 56,
                statuslabel = 'null',
                statuslabelclass = 'null',
                systemapproved = True,
                timecreated = 56,
                timemodified = 56,
                type = 56,
                typename = 'null',
                typenameshort = 'null',
                userid = 56,
                usermodified = 56,
        )
        """

    def testToolDataprivacyGetDataRequest200ResponseResult(self):
        """Test ToolDataprivacyGetDataRequest200ResponseResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
