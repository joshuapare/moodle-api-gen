# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tool_dataprivacy_get_data_request200_response import ToolDataprivacyGetDataRequest200Response

class TestToolDataprivacyGetDataRequest200Response(unittest.TestCase):
    """ToolDataprivacyGetDataRequest200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ToolDataprivacyGetDataRequest200Response:
        """Test ToolDataprivacyGetDataRequest200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ToolDataprivacyGetDataRequest200Response`
        """
        model = ToolDataprivacyGetDataRequest200Response()
        if include_optional:
            return ToolDataprivacyGetDataRequest200Response(
                result = openapi_client.models.tool_dataprivacy_get_data_request_200_response_result.tool_dataprivacy_get_data_request_200_response_result(
                    allowfiltering = True, 
                    approvedeny = True, 
                    canmarkcomplete = True, 
                    canreview = True, 
                    comments = '', 
                    commentsformat = 56, 
                    creationmethod = 56, 
                    dpo = 56, 
                    dpocomment = '', 
                    dpocommentformat = 56, 
                    dpouser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                        department = '', 
                        email = '', 
                        fullname = '', 
                        id = 56, 
                        identity = '', 
                        idnumber = '', 
                        institution = '', 
                        phone1 = '', 
                        phone2 = '', 
                        profileimageurl = '', 
                        profileimageurlsmall = '', 
                        profileurl = '', ), 
                    foruser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                        department = '', 
                        email = '', 
                        fullname = '', 
                        id = 56, 
                        identity = '', 
                        idnumber = '', 
                        institution = '', 
                        phone1 = '', 
                        phone2 = '', 
                        profileimageurl = '', 
                        profileimageurlsmall = '', 
                        profileurl = '', ), 
                    id = 56, 
                    messagehtml = 'null', 
                    requestedby = 56, 
                    requestedbyuser = , 
                    status = 56, 
                    statuslabel = 'null', 
                    statuslabelclass = 'null', 
                    systemapproved = True, 
                    timecreated = 56, 
                    timemodified = 56, 
                    type = 56, 
                    typename = 'null', 
                    typenameshort = 'null', 
                    userid = 56, 
                    usermodified = 56, ),
                warnings = [
                    openapi_client.models.auth_email_signup_user_200_response_warnings_inner.auth_email_signup_user_200_response_warnings_inner(
                        item = '', 
                        itemid = 56, 
                        message = '', 
                        warningcode = '', )
                    ]
            )
        else:
            return ToolDataprivacyGetDataRequest200Response(
                result = openapi_client.models.tool_dataprivacy_get_data_request_200_response_result.tool_dataprivacy_get_data_request_200_response_result(
                    allowfiltering = True, 
                    approvedeny = True, 
                    canmarkcomplete = True, 
                    canreview = True, 
                    comments = '', 
                    commentsformat = 56, 
                    creationmethod = 56, 
                    dpo = 56, 
                    dpocomment = '', 
                    dpocommentformat = 56, 
                    dpouser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                        department = '', 
                        email = '', 
                        fullname = '', 
                        id = 56, 
                        identity = '', 
                        idnumber = '', 
                        institution = '', 
                        phone1 = '', 
                        phone2 = '', 
                        profileimageurl = '', 
                        profileimageurlsmall = '', 
                        profileurl = '', ), 
                    foruser = openapi_client.models.core_competency_grade_competency_200_response_actionuser.core_competency_grade_competency_200_response_actionuser(
                        department = '', 
                        email = '', 
                        fullname = '', 
                        id = 56, 
                        identity = '', 
                        idnumber = '', 
                        institution = '', 
                        phone1 = '', 
                        phone2 = '', 
                        profileimageurl = '', 
                        profileimageurlsmall = '', 
                        profileurl = '', ), 
                    id = 56, 
                    messagehtml = 'null', 
                    requestedby = 56, 
                    requestedbyuser = , 
                    status = 56, 
                    statuslabel = 'null', 
                    statuslabelclass = 'null', 
                    systemapproved = True, 
                    timecreated = 56, 
                    timemodified = 56, 
                    type = 56, 
                    typename = 'null', 
                    typenameshort = 'null', 
                    userid = 56, 
                    usermodified = 56, ),
        )
        """

    def testToolDataprivacyGetDataRequest200Response(self):
        """Test ToolDataprivacyGetDataRequest200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
