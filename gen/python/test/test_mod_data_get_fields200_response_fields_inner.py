# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mod_data_get_fields200_response_fields_inner import ModDataGetFields200ResponseFieldsInner

class TestModDataGetFields200ResponseFieldsInner(unittest.TestCase):
    """ModDataGetFields200ResponseFieldsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModDataGetFields200ResponseFieldsInner:
        """Test ModDataGetFields200ResponseFieldsInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModDataGetFields200ResponseFieldsInner`
        """
        model = ModDataGetFields200ResponseFieldsInner()
        if include_optional:
            return ModDataGetFields200ResponseFieldsInner(
                dataid = 56,
                description = 'null',
                id = 56,
                name = 'null',
                param1 = 'null',
                param2 = '',
                param3 = '',
                param4 = '',
                param5 = '',
                param6 = '',
                param7 = '',
                param8 = '',
                param9 = '',
                param10 = '',
                required = True,
                type = 'null'
            )
        else:
            return ModDataGetFields200ResponseFieldsInner(
        )
        """

    def testModDataGetFields200ResponseFieldsInner(self):
        """Test ModDataGetFields200ResponseFieldsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
