# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.mod_assign_api import ModAssignApi


class TestModAssignApi(unittest.TestCase):
    """ModAssignApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ModAssignApi()

    def tearDown(self) -> None:
        pass

    def test_mod_assign_copy_previous_attempt(self) -> None:
        """Test case for mod_assign_copy_previous_attempt

        Copy a students previous attempt to a new attempt.
        """
        pass

    def test_mod_assign_get_assignments(self) -> None:
        """Test case for mod_assign_get_assignments

        Returns the courses and assignments for the users capability
        """
        pass

    def test_mod_assign_get_grades(self) -> None:
        """Test case for mod_assign_get_grades

        Returns grades from the assignment
        """
        pass

    def test_mod_assign_get_participant(self) -> None:
        """Test case for mod_assign_get_participant

        Get a participant for an assignment, with some summary info about their submissions.
        """
        pass

    def test_mod_assign_get_submission_status(self) -> None:
        """Test case for mod_assign_get_submission_status

        Returns information about an assignment submission status for a given user.
        """
        pass

    def test_mod_assign_get_submissions(self) -> None:
        """Test case for mod_assign_get_submissions

        Returns the submissions for assignments
        """
        pass

    def test_mod_assign_get_user_flags(self) -> None:
        """Test case for mod_assign_get_user_flags

        Returns the user flags for assignments
        """
        pass

    def test_mod_assign_get_user_mappings(self) -> None:
        """Test case for mod_assign_get_user_mappings

        Returns the blind marking mappings for assignments
        """
        pass

    def test_mod_assign_list_participants(self) -> None:
        """Test case for mod_assign_list_participants

        List the participants for a single assignment, with some summary info about their submissions.
        """
        pass

    def test_mod_assign_lock_submissions(self) -> None:
        """Test case for mod_assign_lock_submissions

        Prevent students from making changes to a list of submissions
        """
        pass

    def test_mod_assign_reveal_identities(self) -> None:
        """Test case for mod_assign_reveal_identities

        Reveal the identities for a blind marking assignment
        """
        pass

    def test_mod_assign_revert_submissions_to_draft(self) -> None:
        """Test case for mod_assign_revert_submissions_to_draft

        Reverts the list of submissions to draft status
        """
        pass

    def test_mod_assign_save_grade(self) -> None:
        """Test case for mod_assign_save_grade

        Save a grade update for a single student.
        """
        pass

    def test_mod_assign_save_grades(self) -> None:
        """Test case for mod_assign_save_grades

        Save multiple grade updates for an assignment.
        """
        pass

    def test_mod_assign_save_submission(self) -> None:
        """Test case for mod_assign_save_submission

        Update the current students submission
        """
        pass

    def test_mod_assign_save_user_extensions(self) -> None:
        """Test case for mod_assign_save_user_extensions

        Save a list of assignment extensions
        """
        pass

    def test_mod_assign_set_user_flags(self) -> None:
        """Test case for mod_assign_set_user_flags

        Creates or updates user flags
        """
        pass

    def test_mod_assign_start_submission(self) -> None:
        """Test case for mod_assign_start_submission

        Start a submission for user if assignment has a time limit.
        """
        pass

    def test_mod_assign_submit_for_grading(self) -> None:
        """Test case for mod_assign_submit_for_grading

        Submit the current students assignment for grading
        """
        pass

    def test_mod_assign_submit_grading_form(self) -> None:
        """Test case for mod_assign_submit_grading_form

        Submit the grading form data via ajax
        """
        pass

    def test_mod_assign_unlock_submissions(self) -> None:
        """Test case for mod_assign_unlock_submissions

        Allow students to make changes to a list of submissions
        """
        pass

    def test_mod_assign_view_assign(self) -> None:
        """Test case for mod_assign_view_assign

        Update the module completion status.
        """
        pass

    def test_mod_assign_view_grading_table(self) -> None:
        """Test case for mod_assign_view_grading_table

        Trigger the grading_table_viewed event.
        """
        pass

    def test_mod_assign_view_submission_status(self) -> None:
        """Test case for mod_assign_view_submission_status

        Trigger the submission status viewed event.
        """
        pass


if __name__ == '__main__':
    unittest.main()
