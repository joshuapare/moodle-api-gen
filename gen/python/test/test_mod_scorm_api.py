# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.mod_scorm_api import ModScormApi


class TestModScormApi(unittest.TestCase):
    """ModScormApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ModScormApi()

    def tearDown(self) -> None:
        pass

    def test_mod_scorm_get_scorm_access_information(self) -> None:
        """Test case for mod_scorm_get_scorm_access_information

        Return capabilities information for a given scorm.
        """
        pass

    def test_mod_scorm_get_scorm_attempt_count(self) -> None:
        """Test case for mod_scorm_get_scorm_attempt_count

        Return the number of attempts done by a user in the given SCORM.
        """
        pass

    def test_mod_scorm_get_scorm_sco_tracks(self) -> None:
        """Test case for mod_scorm_get_scorm_sco_tracks

        Retrieves SCO tracking data for the given user id and attempt number
        """
        pass

    def test_mod_scorm_get_scorm_scoes(self) -> None:
        """Test case for mod_scorm_get_scorm_scoes

        Returns a list containing all the scoes data related to the given scorm id
        """
        pass

    def test_mod_scorm_get_scorm_user_data(self) -> None:
        """Test case for mod_scorm_get_scorm_user_data

        Retrieves user tracking and SCO data and default SCORM values
        """
        pass

    def test_mod_scorm_get_scorms_by_courses(self) -> None:
        """Test case for mod_scorm_get_scorms_by_courses

        Returns a list of scorm instances in a provided set of courses, if                             no courses are provided then all the scorm instances the user has access to will be returned.
        """
        pass

    def test_mod_scorm_insert_scorm_tracks(self) -> None:
        """Test case for mod_scorm_insert_scorm_tracks

        Saves a scorm tracking record.                           It will overwrite any existing tracking data for this attempt.                           Validation should be performed before running the function to ensure the user will not lose any existing                           attempt data.
        """
        pass

    def test_mod_scorm_launch_sco(self) -> None:
        """Test case for mod_scorm_launch_sco

        Trigger the SCO launched event.
        """
        pass

    def test_mod_scorm_view_scorm(self) -> None:
        """Test case for mod_scorm_view_scorm

        Trigger the course module viewed event.
        """
        pass


if __name__ == '__main__':
    unittest.main()
