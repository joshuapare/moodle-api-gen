# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.mod_lti_api import ModLtiApi


class TestModLtiApi(unittest.TestCase):
    """ModLtiApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ModLtiApi()

    def tearDown(self) -> None:
        pass

    def test_mod_lti_create_tool_proxy(self) -> None:
        """Test case for mod_lti_create_tool_proxy

        Create a tool proxy
        """
        pass

    def test_mod_lti_create_tool_type(self) -> None:
        """Test case for mod_lti_create_tool_type

        Create a tool type
        """
        pass

    def test_mod_lti_delete_course_tool_type(self) -> None:
        """Test case for mod_lti_delete_course_tool_type

        Delete a course tool type
        """
        pass

    def test_mod_lti_delete_tool_proxy(self) -> None:
        """Test case for mod_lti_delete_tool_proxy

        Delete a tool proxy
        """
        pass

    def test_mod_lti_delete_tool_type(self) -> None:
        """Test case for mod_lti_delete_tool_type

        Delete a tool type
        """
        pass

    def test_mod_lti_get_ltis_by_courses(self) -> None:
        """Test case for mod_lti_get_ltis_by_courses

        Returns a list of external tool instances in a provided set of courses, if                             no courses are provided then all the external tool instances the user has access to will be returned.
        """
        pass

    def test_mod_lti_get_tool_launch_data(self) -> None:
        """Test case for mod_lti_get_tool_launch_data

        Return the launch data for a given external tool.
        """
        pass

    def test_mod_lti_get_tool_proxies(self) -> None:
        """Test case for mod_lti_get_tool_proxies

        Get a list of the tool proxies
        """
        pass

    def test_mod_lti_get_tool_proxy_registration_request(self) -> None:
        """Test case for mod_lti_get_tool_proxy_registration_request

        Get a registration request for a tool proxy
        """
        pass

    def test_mod_lti_get_tool_types(self) -> None:
        """Test case for mod_lti_get_tool_types

        Get a list of the tool types
        """
        pass

    def test_mod_lti_get_tool_types_and_proxies(self) -> None:
        """Test case for mod_lti_get_tool_types_and_proxies

        Get a list of the tool types and tool proxies
        """
        pass

    def test_mod_lti_get_tool_types_and_proxies_count(self) -> None:
        """Test case for mod_lti_get_tool_types_and_proxies_count

        Get total number of the tool types and tool proxies
        """
        pass

    def test_mod_lti_is_cartridge(self) -> None:
        """Test case for mod_lti_is_cartridge

        Determine if the given url is for a cartridge
        """
        pass

    def test_mod_lti_toggle_showinactivitychooser(self) -> None:
        """Test case for mod_lti_toggle_showinactivitychooser

        Toggle showinactivitychooser for a tool type in a course
        """
        pass

    def test_mod_lti_update_tool_type(self) -> None:
        """Test case for mod_lti_update_tool_type

        Update a tool type
        """
        pass

    def test_mod_lti_view_lti(self) -> None:
        """Test case for mod_lti_view_lti

        Trigger the course module viewed event and update the module completion status.
        """
        pass


if __name__ == '__main__':
    unittest.main()
