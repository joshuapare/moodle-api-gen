# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.core_reportbuilder_filters_add200_response import CoreReportbuilderFiltersAdd200Response

class TestCoreReportbuilderFiltersAdd200Response(unittest.TestCase):
    """CoreReportbuilderFiltersAdd200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreReportbuilderFiltersAdd200Response:
        """Test CoreReportbuilderFiltersAdd200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreReportbuilderFiltersAdd200Response`
        """
        model = CoreReportbuilderFiltersAdd200Response()
        if include_optional:
            return CoreReportbuilderFiltersAdd200Response(
                activefilters = [
                    openapi_client.models.core_reportbuilder_filters_add_200_response_activefilters_inner.core_reportbuilder_filters_add_200_response_activefilters_inner(
                        entityname = 'null', 
                        heading = '', 
                        headingeditable = 'null', 
                        id = 56, 
                        movetitle = '', 
                        sortorder = 56, )
                    ],
                availablefilters = [
                    openapi_client.models.core_reportbuilder_conditions_delete_200_response_availableconditions_inner.core_reportbuilder_conditions_delete_200_response_availableconditions_inner(
                        optiongroup = openapi_client.models.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup(
                            text = '', 
                            values = [
                                openapi_client.models.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup_values_inner.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup_values_inner(
                                    value = '', 
                                    visiblename = '', )
                                ], ), )
                    ],
                hasactivefilters = True,
                hasavailablefilters = True,
                helpicon = ''
            )
        else:
            return CoreReportbuilderFiltersAdd200Response(
                activefilters = [
                    openapi_client.models.core_reportbuilder_filters_add_200_response_activefilters_inner.core_reportbuilder_filters_add_200_response_activefilters_inner(
                        entityname = 'null', 
                        heading = '', 
                        headingeditable = 'null', 
                        id = 56, 
                        movetitle = '', 
                        sortorder = 56, )
                    ],
                availablefilters = [
                    openapi_client.models.core_reportbuilder_conditions_delete_200_response_availableconditions_inner.core_reportbuilder_conditions_delete_200_response_availableconditions_inner(
                        optiongroup = openapi_client.models.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup(
                            text = '', 
                            values = [
                                openapi_client.models.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup_values_inner.core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup_values_inner(
                                    value = '', 
                                    visiblename = '', )
                                ], ), )
                    ],
                hasactivefilters = True,
                hasavailablefilters = True,
                helpicon = '',
        )
        """

    def testCoreReportbuilderFiltersAdd200Response(self):
        """Test CoreReportbuilderFiltersAdd200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
