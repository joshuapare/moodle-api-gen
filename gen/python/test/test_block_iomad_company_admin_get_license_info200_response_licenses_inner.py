# coding: utf-8

"""
    Moodle Webservice API

    Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

    The version of the OpenAPI document: 4.3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.block_iomad_company_admin_get_license_info200_response_licenses_inner import BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner

class TestBlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner(unittest.TestCase):
    """BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner:
        """Test BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner`
        """
        model = BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner()
        if include_optional:
            return BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner(
                allocation = 56,
                companyid = 56,
                expirydate = 56,
                id = 56,
                name = '',
                parentid = 56,
                used = 56,
                validlength = 56
            )
        else:
            return BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner(
        )
        """

    def testBlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner(self):
        """Test BlockIomadCompanyAdminGetLicenseInfo200ResponseLicensesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
