{
  "openapi" : "3.1.0",
  "info" : {
    "contact" : {
      "name" : "Joshua Pare",
      "url" : "https://www.joshuapare.com"
    },
    "description" : "Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.",
    "title" : "Moodle Webservice API",
    "version" : "4.3.4"
  },
  "servers" : [ {
    "description" : "Moodle Server URL",
    "url" : "{scheme}://{host}/webservice/restful/server.php",
    "variables" : {
      "host" : {
        "default" : "localhost",
        "description" : "The hostname of the Moodle server"
      },
      "scheme" : {
        "default" : "https",
        "enum" : [ "http", "https" ]
      }
    }
  } ],
  "security" : [ {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/auth_email_get_signup_settings" : {
      "post" : {
        "description" : "Get the signup required settings and profile fields.",
        "operationId" : "auth_email_get_signup_settings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth_email_get_signup_settings_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the signup required settings and profile fields.",
        "tags" : [ "auth_email" ]
      }
    },
    "/auth_email_signup_user" : {
      "post" : {
        "description" : "Adds a new user (pendingto be confirmed) in the site.",
        "operationId" : "auth_email_signup_user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth_email_signup_user_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth_email_signup_user_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds a new user (pendingto be confirmed) in the site.",
        "tags" : [ "auth_email" ]
      }
    },
    "/block_accessreview_get_module_data" : {
      "post" : {
        "description" : "Gets error data for course modules.",
        "operationId" : "block_accessreview_get_module_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_accessreview_get_module_data_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets error data for course modules.",
        "tags" : [ "block_accessreview" ]
      }
    },
    "/block_accessreview_get_section_data" : {
      "post" : {
        "description" : "Gets error data for course sections.",
        "operationId" : "block_accessreview_get_section_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_accessreview_get_section_data_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets error data for course sections.",
        "tags" : [ "block_accessreview" ]
      }
    },
    "/block_iomad_company_admin_allocate_licenses" : {
      "post" : {
        "description" : "Allocate course licenses to a user",
        "operationId" : "block_iomad_company_admin_allocate_licenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_allocate_licenses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Allocate course licenses to a user",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_assign_courses" : {
      "post" : {
        "description" : "Assign a course to a company",
        "operationId" : "block_iomad_company_admin_assign_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_assign_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Assign a course to a company",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_assign_users" : {
      "post" : {
        "description" : "Assign users to a company",
        "operationId" : "block_iomad_company_admin_assign_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_assign_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_assign_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Assign users to a company",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_capability_delete_template" : {
      "post" : {
        "description" : "Delete Iomad capabilities template",
        "operationId" : "block_iomad_company_admin_capability_delete_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_capability_delete_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True capability update succeeds"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete Iomad capabilities template",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_check_token" : {
      "post" : {
        "description" : "Check SSO token",
        "operationId" : "block_iomad_company_admin_check_token",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_check_token_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_check_token_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check SSO token",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_create_companies" : {
      "post" : {
        "description" : "Create new Iomad companies",
        "operationId" : "block_iomad_company_admin_create_companies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_create_companies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create new Iomad companies",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_create_licenses" : {
      "post" : {
        "description" : "Create company licenses",
        "operationId" : "block_iomad_company_admin_create_licenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_create_licenses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create company licenses",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_delete_licenses" : {
      "post" : {
        "description" : "Delete company licenses",
        "operationId" : "block_iomad_company_admin_delete_licenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_delete_licenses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete company licenses",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_edit_companies" : {
      "post" : {
        "description" : "Edit Iomad companies",
        "operationId" : "block_iomad_company_admin_edit_companies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_edit_companies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Edit Iomad companies",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_edit_licenses" : {
      "post" : {
        "description" : "Edit company license settings",
        "operationId" : "block_iomad_company_admin_edit_licenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_edit_licenses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Edit company license settings",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_enrol_users" : {
      "post" : {
        "description" : "Assign users onto courses",
        "operationId" : "block_iomad_company_admin_enrol_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_enrol_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True user enrolments succeeds"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Assign users onto courses",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_get_companies" : {
      "post" : {
        "description" : "Get all Iomad companies",
        "operationId" : "block_iomad_company_admin_get_companies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get all Iomad companies",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_get_company_courses" : {
      "post" : {
        "description" : "Get Iomad company course allocations",
        "operationId" : "block_iomad_company_admin_get_company_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_get_company_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_get_company_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get Iomad company course allocations",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_get_course_info" : {
      "post" : {
        "description" : "Get Iomad course settings",
        "operationId" : "block_iomad_company_admin_get_course_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_get_course_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get Iomad course settings",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_get_department_users" : {
      "post" : {
        "description" : "Get users within a department",
        "operationId" : "block_iomad_company_admin_get_department_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_get_department_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_get_department_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get users within a department",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_get_departments" : {
      "post" : {
        "description" : "Get all company departments",
        "operationId" : "block_iomad_company_admin_get_departments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_get_departments_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_get_departments_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get all company departments",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_get_license_from_id" : {
      "post" : {
        "description" : "Get licence data give the ID",
        "operationId" : "block_iomad_company_admin_get_license_from_id",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_from_id_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_from_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get licence data give the ID",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_get_license_info" : {
      "post" : {
        "description" : "Get company license information",
        "operationId" : "block_iomad_company_admin_get_license_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get company license information",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_move_users" : {
      "post" : {
        "description" : "Move users between departments",
        "operationId" : "block_iomad_company_admin_move_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_move_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Move users between departments",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_restrict_capability" : {
      "post" : {
        "description" : "set/reset Iomad capability",
        "operationId" : "block_iomad_company_admin_restrict_capability",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_restrict_capability_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True capability update succeeds"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "set/reset Iomad capability",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_sync_users" : {
      "post" : {
        "description" : "Call update users to sync to external system",
        "operationId" : "block_iomad_company_admin_sync_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_sync_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/block_iomad_company_admin_sync_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Call update users to sync to external system",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_unallocate_licenses" : {
      "post" : {
        "description" : "Remove course licenses from users",
        "operationId" : "block_iomad_company_admin_unallocate_licenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_unallocate_licenses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove course licenses from users",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_unassign_courses" : {
      "post" : {
        "description" : "Unassign a course from a company",
        "operationId" : "block_iomad_company_admin_unassign_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_unassign_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unassign a course from a company",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_unassign_users" : {
      "post" : {
        "description" : "Unassign users from a company",
        "operationId" : "block_iomad_company_admin_unassign_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_unassign_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unassign users from a company",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_iomad_company_admin_update_courses" : {
      "post" : {
        "description" : "Update Iomad course settings",
        "operationId" : "block_iomad_company_admin_update_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_iomad_company_admin_update_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success or failure"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update Iomad course settings",
        "tags" : [ "block_iomad_company_admin" ]
      }
    },
    "/block_recentlyaccesseditems_get_recent_items" : {
      "post" : {
        "description" : "List of items a user has accessed most recently.",
        "operationId" : "block_recentlyaccesseditems_get_recent_items",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_recentlyaccesseditems_get_recent_items_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The most recently accessed activities/resources by the logged user"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List of items a user has accessed most recently.",
        "tags" : [ "block_recentlyaccesseditems" ]
      }
    },
    "/block_starredcourses_get_starred_courses" : {
      "post" : {
        "description" : "Get users starred courses.",
        "operationId" : "block_starredcourses_get_starred_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/block_starredcourses_get_starred_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get users starred courses.",
        "tags" : [ "block_starredcourses" ]
      }
    },
    "/core_admin_set_block_protection" : {
      "post" : {
        "description" : "Set the protection state for a block plugin",
        "operationId" : "core_admin_set_block_protection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_admin_set_block_protection_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the protection state for a block plugin",
        "tags" : [ "moodle" ]
      }
    },
    "/core_admin_set_plugin_order" : {
      "post" : {
        "description" : "Set the order of a plugin",
        "operationId" : "core_admin_set_plugin_order",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_admin_set_plugin_order_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the order of a plugin",
        "tags" : [ "moodle" ]
      }
    },
    "/core_admin_set_plugin_state" : {
      "post" : {
        "description" : "Set the state of a plugin",
        "operationId" : "core_admin_set_plugin_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_admin_set_plugin_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the state of a plugin",
        "tags" : [ "moodle" ]
      }
    },
    "/core_auth_confirm_user" : {
      "post" : {
        "description" : "Confirm a user account.",
        "operationId" : "core_auth_confirm_user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_auth_confirm_user_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_auth_confirm_user_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Confirm a user account.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_auth_is_age_digital_consent_verification_enabled" : {
      "post" : {
        "description" : "Checks if age digital consent verification is enabled.",
        "operationId" : "core_auth_is_age_digital_consent_verification_enabled",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_auth_is_age_digital_consent_verification_enabled_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Checks if age digital consent verification is enabled.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_auth_is_minor" : {
      "post" : {
        "description" : "Requests a check if a user is a digital minor.",
        "operationId" : "core_auth_is_minor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_auth_is_minor_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_auth_is_minor_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Requests a check if a user is a digital minor.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_auth_request_password_reset" : {
      "post" : {
        "description" : "Requests a password reset.",
        "operationId" : "core_auth_request_password_reset",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_auth_request_password_reset_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_auth_request_password_reset_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Requests a password reset.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_auth_resend_confirmation_email" : {
      "post" : {
        "description" : "Resend confirmation email.",
        "operationId" : "core_auth_resend_confirmation_email",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_auth_resend_confirmation_email_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_auth_resend_confirmation_email_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Resend confirmation email.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_backup_get_async_backup_links_backup" : {
      "post" : {
        "description" : "Gets the data to use when updating the status table row in the UI for when an async backup completes.",
        "operationId" : "core_backup_get_async_backup_links_backup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_backup_get_async_backup_links_backup_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_backup_get_async_backup_links_backup_200_response"
                }
              }
            },
            "description" : "Table row data."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets the data to use when updating the status table row in the UI for when an async backup completes.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_backup_get_async_backup_links_restore" : {
      "post" : {
        "description" : "Gets the data to use when updating the status table row in the UI for when an async restore completes.",
        "operationId" : "core_backup_get_async_backup_links_restore",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_backup_get_async_backup_links_restore_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_backup_get_async_backup_links_restore_200_response"
                }
              }
            },
            "description" : "Table row data."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets the data to use when updating the status table row in the UI for when an async restore completes.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_backup_get_async_backup_progress" : {
      "post" : {
        "description" : "Get the progress of an Asyncronhous backup.",
        "operationId" : "core_backup_get_async_backup_progress",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_backup_get_async_backup_progress_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Backup data"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the progress of an Asyncronhous backup.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_backup_get_copy_progress" : {
      "post" : {
        "description" : "Gets the progress of course copy operations.",
        "operationId" : "core_backup_get_copy_progress",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_backup_get_copy_progress_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Copy data"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets the progress of course copy operations.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_backup_submit_copy_form" : {
      "post" : {
        "description" : "Handles ajax submission of course copy form.",
        "operationId" : "core_backup_submit_copy_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_backup_submit_copy_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "JSON response."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Handles ajax submission of course copy form.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_badges_get_user_badge_by_hash" : {
      "post" : {
        "description" : "Returns the badge awarded to a user by hash.",
        "operationId" : "core_badges_get_user_badge_by_hash",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_badges_get_user_badge_by_hash_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_badges_get_user_badge_by_hash_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the badge awarded to a user by hash.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_badges_get_user_badges" : {
      "post" : {
        "description" : "Returns the list of badges awarded to a user.",
        "operationId" : "core_badges_get_user_badges",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_badges_get_user_badges_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_badges_get_user_badges_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the list of badges awarded to a user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_block_fetch_addable_blocks" : {
      "post" : {
        "description" : "Returns all addable blocks in a given page.",
        "operationId" : "core_block_fetch_addable_blocks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_block_fetch_addable_blocks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of addable blocks in a given page."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns all addable blocks in a given page.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_block_get_course_blocks" : {
      "post" : {
        "description" : "Returns blocks information for a course.",
        "operationId" : "core_block_get_course_blocks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_block_get_course_blocks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_block_get_course_blocks_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns blocks information for a course.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_block_get_dashboard_blocks" : {
      "post" : {
        "description" : "Returns blocks information for the given user dashboard.",
        "operationId" : "core_block_get_dashboard_blocks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns blocks information for the given user dashboard.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_blog_get_entries" : {
      "post" : {
        "description" : "Returns blog entries.",
        "operationId" : "core_blog_get_entries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_blog_get_entries_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_blog_get_entries_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns blog entries.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_blog_view_entries" : {
      "post" : {
        "description" : "Trigger the blog_entries_viewed event.",
        "operationId" : "core_blog_view_entries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_blog_view_entries_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_blog_view_entries_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the blog_entries_viewed event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_create_calendar_events" : {
      "post" : {
        "description" : "Create calendar events",
        "operationId" : "core_calendar_create_calendar_events",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_create_calendar_events_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_create_calendar_events_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create calendar events",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_delete_calendar_events" : {
      "post" : {
        "description" : "Delete calendar events",
        "operationId" : "core_calendar_delete_calendar_events",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_delete_calendar_events_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete calendar events",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_delete_subscription" : {
      "post" : {
        "description" : "Delete the calendar subscription",
        "operationId" : "core_calendar_delete_subscription",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_delete_subscription_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete the calendar subscription",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_action_events_by_course" : {
      "post" : {
        "description" : "Get calendar action events by course",
        "operationId" : "core_calendar_get_action_events_by_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get calendar action events by course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_action_events_by_courses" : {
      "post" : {
        "description" : "Get calendar action events by courses",
        "operationId" : "core_calendar_get_action_events_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get calendar action events by courses",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_action_events_by_timesort" : {
      "post" : {
        "description" : "Get calendar action events by tiemsort",
        "operationId" : "core_calendar_get_action_events_by_timesort",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_action_events_by_timesort_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_action_events_by_timesort_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get calendar action events by tiemsort",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_allowed_event_types" : {
      "post" : {
        "description" : "Get the type of events a user can create in the given course.",
        "operationId" : "core_calendar_get_allowed_event_types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_allowed_event_types_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_allowed_event_types_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the type of events a user can create in the given course.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_calendar_access_information" : {
      "post" : {
        "description" : "Convenience function to retrieve some permissions/access information for the given course calendar.",
        "operationId" : "core_calendar_get_calendar_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_calendar_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_calendar_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Convenience function to retrieve some permissions/access information for the given course calendar.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_calendar_day_view" : {
      "post" : {
        "description" : "Fetch the day view data for a calendar",
        "operationId" : "core_calendar_get_calendar_day_view",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the day view data for a calendar",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_calendar_event_by_id" : {
      "post" : {
        "description" : "Get calendar event by id",
        "operationId" : "core_calendar_get_calendar_event_by_id",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_calendar_event_by_id_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_calendar_event_by_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get calendar event by id",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_calendar_events" : {
      "post" : {
        "description" : "Get calendar events",
        "operationId" : "core_calendar_get_calendar_events",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_calendar_events_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_calendar_events_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get calendar events",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_calendar_export_token" : {
      "post" : {
        "description" : "Return the auth token required for exporting a calendar.",
        "operationId" : "core_calendar_get_calendar_export_token",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_calendar_export_token_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the auth token required for exporting a calendar.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_calendar_monthly_view" : {
      "post" : {
        "description" : "Fetch the monthly view data for a calendar",
        "operationId" : "core_calendar_get_calendar_monthly_view",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_calendar_monthly_view_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_calendar_monthly_view_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the monthly view data for a calendar",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_calendar_upcoming_view" : {
      "post" : {
        "description" : "Fetch the upcoming view data for a calendar",
        "operationId" : "core_calendar_get_calendar_upcoming_view",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_calendar_upcoming_view_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_calendar_upcoming_view_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the upcoming view data for a calendar",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_get_timestamps" : {
      "post" : {
        "description" : "Fetch unix timestamps for given date times.",
        "operationId" : "core_calendar_get_timestamps",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_get_timestamps_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_get_timestamps_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch unix timestamps for given date times.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_submit_create_update_form" : {
      "post" : {
        "description" : "Submit form data for event form",
        "operationId" : "core_calendar_submit_create_update_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_submit_create_update_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_submit_create_update_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Submit form data for event form",
        "tags" : [ "moodle" ]
      }
    },
    "/core_calendar_update_event_start_day" : {
      "post" : {
        "description" : "Update the start day (but not time) for an event.",
        "operationId" : "core_calendar_update_event_start_day",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_calendar_update_event_start_day_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_update_event_start_day_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the start day (but not time) for an event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_change_editmode" : {
      "post" : {
        "description" : "Change the editing mode",
        "operationId" : "core_change_editmode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_change_editmode_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_change_editmode_200_response"
                }
              }
            },
            "description" : "editmode"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Change the editing mode",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_add_cohort_members" : {
      "post" : {
        "description" : "Adds cohort members.",
        "operationId" : "core_cohort_add_cohort_members",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_add_cohort_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds cohort members.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_create_cohorts" : {
      "post" : {
        "description" : "Creates new cohorts.",
        "operationId" : "core_cohort_create_cohorts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_create_cohorts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates new cohorts.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_delete_cohort_members" : {
      "post" : {
        "description" : "Deletes cohort members.",
        "operationId" : "core_cohort_delete_cohort_members",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_delete_cohort_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes cohort members.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_delete_cohorts" : {
      "post" : {
        "description" : "Deletes all specified cohorts.",
        "operationId" : "core_cohort_delete_cohorts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_delete_cohorts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes all specified cohorts.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_get_cohort_members" : {
      "post" : {
        "description" : "Returns cohort members.",
        "operationId" : "core_cohort_get_cohort_members",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_get_cohort_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns cohort members.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_get_cohorts" : {
      "post" : {
        "description" : "Returns cohort details.",
        "operationId" : "core_cohort_get_cohorts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_get_cohorts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns cohort details.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_search_cohorts" : {
      "post" : {
        "description" : "Search for cohorts.",
        "operationId" : "core_cohort_search_cohorts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_search_cohorts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_search_cohorts_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search for cohorts.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_cohort_update_cohorts" : {
      "post" : {
        "description" : "Updates existing cohorts.",
        "operationId" : "core_cohort_update_cohorts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_cohort_update_cohorts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates existing cohorts.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_comment_add_comments" : {
      "post" : {
        "description" : "Adds a comment or comments.",
        "operationId" : "core_comment_add_comments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_comment_add_comments_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds a comment or comments.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_comment_delete_comments" : {
      "post" : {
        "description" : "Deletes a comment or comments.",
        "operationId" : "core_comment_delete_comments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_comment_delete_comments_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes a comment or comments.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_comment_get_comments" : {
      "post" : {
        "description" : "Returns comments.",
        "operationId" : "core_comment_get_comments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_comment_get_comments_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_comment_get_comments_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns comments.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_add_competency_to_course" : {
      "post" : {
        "description" : "Add the competency to a course",
        "operationId" : "core_competency_add_competency_to_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_add_competency_to_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add the competency to a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_add_competency_to_plan" : {
      "post" : {
        "description" : "Add the competency to a learning plan",
        "operationId" : "core_competency_add_competency_to_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_add_competency_to_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add the competency to a learning plan",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_add_competency_to_template" : {
      "post" : {
        "description" : "Add the competency to a template",
        "operationId" : "core_competency_add_competency_to_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_add_competency_to_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add the competency to a template",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_add_related_competency" : {
      "post" : {
        "description" : "Adds a related competency",
        "operationId" : "core_competency_add_related_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_add_related_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds a related competency",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_approve_plan" : {
      "post" : {
        "description" : "Approve a plan.",
        "operationId" : "core_competency_approve_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_approve_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Approve a plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_competency_framework_viewed" : {
      "post" : {
        "description" : "Log event competency framework viewed",
        "operationId" : "core_competency_competency_framework_viewed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_framework_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the event competency framework was logged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log event competency framework viewed",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_competency_viewed" : {
      "post" : {
        "description" : "Log event competency viewed",
        "operationId" : "core_competency_competency_viewed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the event competency viewed was logged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log event competency viewed",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_complete_plan" : {
      "post" : {
        "description" : "Complete learning plan.",
        "operationId" : "core_competency_complete_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_complete_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if completing learning plan was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Complete learning plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_competencies" : {
      "post" : {
        "description" : "Count a list of a competencies.",
        "operationId" : "core_competency_count_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of competencies found."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Count a list of a competencies.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_competencies_in_course" : {
      "post" : {
        "description" : "List the competencies in a course",
        "operationId" : "core_competency_count_competencies_in_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competencies_in_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of competencies in this course."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List the competencies in a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_competencies_in_template" : {
      "post" : {
        "description" : "Count a list of a competencies for a given template.",
        "operationId" : "core_competency_count_competencies_in_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competencies_in_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of competencies in this learning plan template."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Count a list of a competencies for a given template.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_competency_frameworks" : {
      "post" : {
        "description" : "Count a list of a competency frameworks.",
        "operationId" : "core_competency_count_competency_frameworks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competency_frameworks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of competency frameworks found."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Count a list of a competency frameworks.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_course_module_competencies" : {
      "post" : {
        "description" : "Count the competencies in a course module",
        "operationId" : "core_competency_count_course_module_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_course_module_competencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of competencies found."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Count the competencies in a course module",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_courses_using_competency" : {
      "post" : {
        "description" : "List the courses using a competency",
        "operationId" : "core_competency_count_courses_using_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of courses using this competency"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List the courses using a competency",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_templates" : {
      "post" : {
        "description" : "Count a list of a learning plan templates.",
        "operationId" : "core_competency_count_templates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competency_frameworks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of learning plan templates found."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Count a list of a learning plan templates.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_count_templates_using_competency" : {
      "post" : {
        "description" : "Count a list of a learning plan templates for a given competency.",
        "operationId" : "core_competency_count_templates_using_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of learning plan templates using this competency"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Count a list of a learning plan templates for a given competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_create_competency" : {
      "post" : {
        "description" : "Creates new competencies.",
        "operationId" : "core_competency_create_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_create_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates new competencies.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_create_competency_framework" : {
      "post" : {
        "description" : "Creates new competency frameworks.",
        "operationId" : "core_competency_create_competency_framework",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_create_competency_framework_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_competency_framework_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates new competency frameworks.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_create_plan" : {
      "post" : {
        "description" : "Creates a learning plan.",
        "operationId" : "core_competency_create_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_create_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_plan_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates a learning plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_create_template" : {
      "post" : {
        "description" : "Creates new learning plan templates.",
        "operationId" : "core_competency_create_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_create_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_template_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates new learning plan templates.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_create_user_evidence_competency" : {
      "post" : {
        "description" : "Create an evidence of prior learning relationship with a competency.",
        "operationId" : "core_competency_create_user_evidence_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_create_user_evidence_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_user_evidence_competency_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create an evidence of prior learning relationship with a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_delete_competency" : {
      "post" : {
        "description" : "Delete a competency.",
        "operationId" : "core_competency_delete_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the delete was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_delete_competency_framework" : {
      "post" : {
        "description" : "Delete a competency framework.",
        "operationId" : "core_competency_delete_competency_framework",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_competency_framework_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the delete was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a competency framework.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_delete_evidence" : {
      "post" : {
        "description" : "Delete an evidence",
        "operationId" : "core_competency_delete_evidence",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_evidence_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete an evidence",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_delete_plan" : {
      "post" : {
        "description" : "Delete a learning plan.",
        "operationId" : "core_competency_delete_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the delete was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a learning plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_delete_template" : {
      "post" : {
        "description" : "Delete a learning plan template.",
        "operationId" : "core_competency_delete_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the delete was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a learning plan template.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_delete_user_evidence" : {
      "post" : {
        "description" : "Delete an evidence of prior learning.",
        "operationId" : "core_competency_delete_user_evidence",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_user_evidence_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the delete was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete an evidence of prior learning.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_delete_user_evidence_competency" : {
      "post" : {
        "description" : "Delete an evidence of prior learning relationship with a competency.",
        "operationId" : "core_competency_delete_user_evidence_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_user_evidence_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the delete was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete an evidence of prior learning relationship with a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_duplicate_competency_framework" : {
      "post" : {
        "description" : "Duplicate a competency framework.",
        "operationId" : "core_competency_duplicate_competency_framework",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Duplicate a competency framework.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_duplicate_template" : {
      "post" : {
        "description" : "Duplicate learning plan template.",
        "operationId" : "core_competency_duplicate_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competencies_in_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_template_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Duplicate learning plan template.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_get_scale_values" : {
      "post" : {
        "description" : "Fetch the values for a specific scale",
        "operationId" : "core_competency_get_scale_values",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_get_scale_values_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the values for a specific scale",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_grade_competency" : {
      "post" : {
        "description" : "Grade a competency.",
        "operationId" : "core_competency_grade_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_grade_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_grade_competency_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Grade a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_grade_competency_in_course" : {
      "post" : {
        "description" : "Grade a competency from the course page.",
        "operationId" : "core_competency_grade_competency_in_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_grade_competency_in_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_grade_competency_in_course_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Grade a competency from the course page.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_grade_competency_in_plan" : {
      "post" : {
        "description" : "Grade a competency from the user plan page.",
        "operationId" : "core_competency_grade_competency_in_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_grade_competency_in_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_grade_competency_in_course_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Grade a competency from the user plan page.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_competencies" : {
      "post" : {
        "description" : "Load a list of a competencies.",
        "operationId" : "core_competency_list_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_list_competencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a list of a competencies.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_competencies_in_template" : {
      "post" : {
        "description" : "Load a list of a competencies for a given template.",
        "operationId" : "core_competency_list_competencies_in_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competencies_in_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a list of a competencies for a given template.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_competency_frameworks" : {
      "post" : {
        "description" : "Load a list of a competency frameworks.",
        "operationId" : "core_competency_list_competency_frameworks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_list_competency_frameworks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a list of a competency frameworks.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_course_competencies" : {
      "post" : {
        "description" : "List the competencies in a course",
        "operationId" : "core_competency_list_course_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competencies_in_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List the competencies in a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_course_module_competencies" : {
      "post" : {
        "description" : "List the competencies in a course module",
        "operationId" : "core_competency_list_course_module_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_list_course_module_competencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List the competencies in a course module",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_plan_competencies" : {
      "post" : {
        "description" : "List the competencies in a plan",
        "operationId" : "core_competency_list_plan_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_list_plan_competencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List the competencies in a plan",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_templates" : {
      "post" : {
        "description" : "Load a list of a learning plan templates.",
        "operationId" : "core_competency_list_templates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_list_templates_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a list of a learning plan templates.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_templates_using_competency" : {
      "post" : {
        "description" : "Load a list of a learning plan templates for a given competency.",
        "operationId" : "core_competency_list_templates_using_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a list of a learning plan templates for a given competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_list_user_plans" : {
      "post" : {
        "description" : "List a user's learning plans.",
        "operationId" : "core_competency_list_user_plans",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_list_user_plans_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List a user's learning plans.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_move_down_competency" : {
      "post" : {
        "description" : "Re-order a competency.",
        "operationId" : "core_competency_move_down_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Re-order a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_move_up_competency" : {
      "post" : {
        "description" : "Re-order a competency.",
        "operationId" : "core_competency_move_up_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Re-order a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_plan_cancel_review_request" : {
      "post" : {
        "description" : "Cancel the review of a plan.",
        "operationId" : "core_competency_plan_cancel_review_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_plan_cancel_review_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Cancel the review of a plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_plan_request_review" : {
      "post" : {
        "description" : "Request for a plan to be reviewed.",
        "operationId" : "core_competency_plan_request_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_plan_cancel_review_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Request for a plan to be reviewed.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_plan_start_review" : {
      "post" : {
        "description" : "Start the review of a plan.",
        "operationId" : "core_competency_plan_start_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_plan_cancel_review_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Start the review of a plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_plan_stop_review" : {
      "post" : {
        "description" : "Stop the review of a plan.",
        "operationId" : "core_competency_plan_stop_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_plan_cancel_review_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Stop the review of a plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_read_competency" : {
      "post" : {
        "description" : "Load a summary of a competency.",
        "operationId" : "core_competency_read_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_read_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a summary of a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_read_competency_framework" : {
      "post" : {
        "description" : "Load a summary of a competency framework.",
        "operationId" : "core_competency_read_competency_framework",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a summary of a competency framework.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_read_plan" : {
      "post" : {
        "description" : "Load a learning plan.",
        "operationId" : "core_competency_read_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_read_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_read_plan_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a learning plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_read_template" : {
      "post" : {
        "description" : "Load a summary of a learning plan template.",
        "operationId" : "core_competency_read_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_read_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_create_template_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a summary of a learning plan template.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_read_user_evidence" : {
      "post" : {
        "description" : "Read an evidence of prior learning.",
        "operationId" : "core_competency_read_user_evidence",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_user_evidence_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Read an evidence of prior learning.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_remove_competency_from_course" : {
      "post" : {
        "description" : "Remove a competency from a course",
        "operationId" : "core_competency_remove_competency_from_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_remove_competency_from_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove a competency from a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_remove_competency_from_plan" : {
      "post" : {
        "description" : "Remove the competency from a learning plan",
        "operationId" : "core_competency_remove_competency_from_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_remove_competency_from_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove the competency from a learning plan",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_remove_competency_from_template" : {
      "post" : {
        "description" : "Remove a competency from a template",
        "operationId" : "core_competency_remove_competency_from_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_remove_competency_from_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove a competency from a template",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_remove_related_competency" : {
      "post" : {
        "description" : "Remove a related competency",
        "operationId" : "core_competency_remove_related_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_remove_related_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove a related competency",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_reopen_plan" : {
      "post" : {
        "description" : "Reopen learning plan.",
        "operationId" : "core_competency_reopen_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_complete_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if reopening learning plan was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Reopen learning plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_reorder_course_competency" : {
      "post" : {
        "description" : "Move a course competency to a new relative sort order.",
        "operationId" : "core_competency_reorder_course_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_reorder_course_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Move a course competency to a new relative sort order.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_reorder_plan_competency" : {
      "post" : {
        "description" : "Move a plan competency to a new relative sort order.",
        "operationId" : "core_competency_reorder_plan_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_reorder_plan_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Move a plan competency to a new relative sort order.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_reorder_template_competency" : {
      "post" : {
        "description" : "Move a template competency to a new relative sort order.",
        "operationId" : "core_competency_reorder_template_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_reorder_template_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Move a template competency to a new relative sort order.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_request_review_of_user_evidence_linked_competencies" : {
      "post" : {
        "description" : "Send user evidence competencies in review",
        "operationId" : "core_competency_request_review_of_user_evidence_linked_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_delete_user_evidence_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if all competencies were send to review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Send user evidence competencies in review",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_search_competencies" : {
      "post" : {
        "description" : "Search a list of a competencies.",
        "operationId" : "core_competency_search_competencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_search_competencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search a list of a competencies.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_set_course_competency_ruleoutcome" : {
      "post" : {
        "description" : "Modify the ruleoutcome value for course competency",
        "operationId" : "core_competency_set_course_competency_ruleoutcome",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_set_course_competency_ruleoutcome_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Modify the ruleoutcome value for course competency",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_set_parent_competency" : {
      "post" : {
        "description" : "Set a new parent for a competency.",
        "operationId" : "core_competency_set_parent_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_set_parent_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set a new parent for a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_template_has_related_data" : {
      "post" : {
        "description" : "Check if a template has related data",
        "operationId" : "core_competency_template_has_related_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_count_competencies_in_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the template has related data"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check if a template has related data",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_template_viewed" : {
      "post" : {
        "description" : "Log event template viewed",
        "operationId" : "core_competency_template_viewed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_read_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the log of the view was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log event template viewed",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_unapprove_plan" : {
      "post" : {
        "description" : "Unapprove a plan.",
        "operationId" : "core_competency_unapprove_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_plan_cancel_review_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unapprove a plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_unlink_plan_from_template" : {
      "post" : {
        "description" : "Unlink a plan form it template.",
        "operationId" : "core_competency_unlink_plan_from_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_unlink_plan_from_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the unlink was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unlink a plan form it template.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_update_competency" : {
      "post" : {
        "description" : "Update a competency.",
        "operationId" : "core_competency_update_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_update_competency_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update a competency.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_update_competency_framework" : {
      "post" : {
        "description" : "Update a competency framework.",
        "operationId" : "core_competency_update_competency_framework",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_update_competency_framework_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update a competency framework.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_update_course_competency_settings" : {
      "post" : {
        "description" : "Update the course competency settings",
        "operationId" : "core_competency_update_course_competency_settings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_update_course_competency_settings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the course competency settings",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_update_plan" : {
      "post" : {
        "description" : "Updates a learning plan.",
        "operationId" : "core_competency_update_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_update_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_competency_read_plan_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates a learning plan.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_update_template" : {
      "post" : {
        "description" : "Update a learning plan template.",
        "operationId" : "core_competency_update_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_update_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the update was successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update a learning plan template.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_cancel_review_request" : {
      "post" : {
        "description" : "Cancel a review request.",
        "operationId" : "core_competency_user_competency_cancel_review_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_cancel_review_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Cancel a review request.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_plan_viewed" : {
      "post" : {
        "description" : "Log the user competency plan viewed event.",
        "operationId" : "core_competency_user_competency_plan_viewed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_plan_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the event user competency plan viewed was logged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log the user competency plan viewed event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_request_review" : {
      "post" : {
        "description" : "Request a review.",
        "operationId" : "core_competency_user_competency_request_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_request_review_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Request a review.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_start_review" : {
      "post" : {
        "description" : "Start a review.",
        "operationId" : "core_competency_user_competency_start_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_request_review_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Start a review.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_stop_review" : {
      "post" : {
        "description" : "Stop a review.",
        "operationId" : "core_competency_user_competency_stop_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_request_review_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Stop a review.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_viewed" : {
      "post" : {
        "description" : "Log the user competency viewed event.",
        "operationId" : "core_competency_user_competency_viewed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the event user competency viewed was logged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log the user competency viewed event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_viewed_in_course" : {
      "post" : {
        "description" : "Log the user competency viewed in course event",
        "operationId" : "core_competency_user_competency_viewed_in_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_viewed_in_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the event user competency viewed in course was logged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log the user competency viewed in course event",
        "tags" : [ "moodle" ]
      }
    },
    "/core_competency_user_competency_viewed_in_plan" : {
      "post" : {
        "description" : "Log the user competency viewed in plan event.",
        "operationId" : "core_competency_user_competency_viewed_in_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_user_competency_plan_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the event user competency viewed in plan was logged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log the user competency viewed in plan event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_completion_get_activities_completion_status" : {
      "post" : {
        "description" : "Return the activities completion status for a user in a course.",
        "operationId" : "core_completion_get_activities_completion_status",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_get_activities_completion_status_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_completion_get_activities_completion_status_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the activities completion status for a user in a course.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_completion_get_course_completion_status" : {
      "post" : {
        "description" : "Returns course completion status.",
        "operationId" : "core_completion_get_course_completion_status",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_get_activities_completion_status_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_completion_get_course_completion_status_200_response"
                }
              }
            },
            "description" : "Course completion status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns course completion status.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_completion_mark_course_self_completed" : {
      "post" : {
        "description" : "Update the course completion status for the current user (if course self-completion is enabled).",
        "operationId" : "core_completion_mark_course_self_completed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_mark_course_self_completed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_completion_mark_course_self_completed_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the course completion status for the current user (if course self-completion is enabled).",
        "tags" : [ "moodle" ]
      }
    },
    "/core_completion_override_activity_completion_status" : {
      "post" : {
        "description" : "Update completion status for a user in an activity by overriding it.",
        "operationId" : "core_completion_override_activity_completion_status",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_override_activity_completion_status_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_completion_override_activity_completion_status_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update completion status for a user in an activity by overriding it.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_completion_update_activity_completion_status_manually" : {
      "post" : {
        "description" : "Update completion status for the current user in an activity, only for activities with manual tracking.",
        "operationId" : "core_completion_update_activity_completion_status_manually",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_update_activity_completion_status_manually_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_completion_update_activity_completion_status_manually_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update completion status for the current user in an activity, only for activities with manual tracking.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_contentbank_copy_content" : {
      "post" : {
        "description" : "Copy a content in the content bank.",
        "operationId" : "core_contentbank_copy_content",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_contentbank_copy_content_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_copy_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Copy a content in the content bank.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_contentbank_delete_content" : {
      "post" : {
        "description" : "Delete a content from the content bank.",
        "operationId" : "core_contentbank_delete_content",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_contentbank_delete_content_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_delete_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a content from the content bank.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_contentbank_rename_content" : {
      "post" : {
        "description" : "Rename a content in the content bank.",
        "operationId" : "core_contentbank_rename_content",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_contentbank_rename_content_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Rename a content in the content bank.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_contentbank_set_content_visibility" : {
      "post" : {
        "description" : "Set the visibility of a content in the content bank.",
        "operationId" : "core_contentbank_set_content_visibility",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_contentbank_set_content_visibility_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the visibility of a content in the content bank.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_add_content_item_to_user_favourites" : {
      "post" : {
        "description" : "Adds a content item (activity, resource or their subtypes) to the favourites for the user.",
        "operationId" : "core_course_add_content_item_to_user_favourites",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_add_content_item_to_user_favourites_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_add_content_item_to_user_favourites_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds a content item (activity, resource or their subtypes) to the favourites for the user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_check_updates" : {
      "post" : {
        "description" : "Check if there is updates affecting the user for the given course and contexts.",
        "operationId" : "core_course_check_updates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_check_updates_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_check_updates_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check if there is updates affecting the user for the given course and contexts.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_create_categories" : {
      "post" : {
        "description" : "Create course categories",
        "operationId" : "core_course_create_categories",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_create_categories_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create course categories",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_create_courses" : {
      "post" : {
        "description" : "Create new courses",
        "operationId" : "core_course_create_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_create_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create new courses",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_delete_categories" : {
      "post" : {
        "description" : "Delete course categories",
        "operationId" : "core_course_delete_categories",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_delete_categories_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete course categories",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_delete_courses" : {
      "post" : {
        "description" : "Deletes all specified courses",
        "operationId" : "core_course_delete_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_delete_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes all specified courses",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_delete_modules" : {
      "post" : {
        "description" : "Deletes all specified module instances",
        "operationId" : "core_course_delete_modules",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_delete_modules_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes all specified module instances",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_duplicate_course" : {
      "post" : {
        "description" : "Duplicate an existing course (creating a new one).",
        "operationId" : "core_course_duplicate_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_duplicate_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_duplicate_course_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Duplicate an existing course (creating a new one).",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_edit_module" : {
      "post" : {
        "description" : "Performs an action on course module (change visibility, duplicate, delete, etc.)",
        "operationId" : "core_course_edit_module",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_edit_module_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "html to replace the current module with"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Performs an action on course module (change visibility, duplicate, delete, etc.)",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_edit_section" : {
      "post" : {
        "description" : "Performs an action on course section (change visibility, set marker, delete)",
        "operationId" : "core_course_edit_section",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_edit_section_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Additional data for javascript (JSON-encoded string)"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Performs an action on course section (change visibility, set marker, delete)",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_activity_chooser_footer" : {
      "post" : {
        "description" : "Fetch the data for the activity chooser footer.",
        "operationId" : "core_course_get_activity_chooser_footer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_activity_chooser_footer_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_activity_chooser_footer_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the data for the activity chooser footer.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_categories" : {
      "post" : {
        "description" : "Return category details",
        "operationId" : "core_course_get_categories",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_categories_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return category details",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_contents" : {
      "post" : {
        "description" : "Get course contents",
        "operationId" : "core_course_get_contents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_contents_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get course contents",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_course_content_items" : {
      "post" : {
        "description" : "Fetch all the content items (activities, resources and their subtypes) for the activity picker",
        "operationId" : "core_course_get_course_content_items",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_course_content_items_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_course_content_items_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch all the content items (activities, resources and their subtypes) for the activity picker",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_course_module" : {
      "post" : {
        "description" : "Return information about a course module",
        "operationId" : "core_course_get_course_module",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_list_course_module_competencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_course_module_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return information about a course module",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_course_module_by_instance" : {
      "post" : {
        "description" : "Return information about a given module name and instance id",
        "operationId" : "core_course_get_course_module_by_instance",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_course_module_by_instance_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_course_module_by_instance_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return information about a given module name and instance id",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_courses" : {
      "post" : {
        "description" : "Return course details",
        "operationId" : "core_course_get_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return course details",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_courses_by_field" : {
      "post" : {
        "description" : "Get courses matching a specific field (id/s, shortname, idnumber, category)",
        "operationId" : "core_course_get_courses_by_field",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_courses_by_field_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get courses matching a specific field (id/s, shortname, idnumber, category)",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_enrolled_courses_by_timeline_classification" : {
      "post" : {
        "description" : "List of enrolled courses for the given timeline classification (past, inprogress, or future).",
        "operationId" : "core_course_get_enrolled_courses_by_timeline_classification",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_enrolled_courses_by_timeline_classification_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_enrolled_courses_by_timeline_classification_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List of enrolled courses for the given timeline classification (past, inprogress, or future).",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_enrolled_courses_with_action_events_by_timeline_classification" : {
      "post" : {
        "description" : "List of enrolled courses with action events in a given timeframe, for the given timeline classification.",
        "operationId" : "core_course_get_enrolled_courses_with_action_events_by_timeline_classification",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_enrolled_courses_with_action_events_by_timeline_classification_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_enrolled_courses_with_action_events_by_timeline_classification_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List of enrolled courses with action events in a given timeframe, for the given timeline classification.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_enrolled_users_by_cmid" : {
      "post" : {
        "description" : "List users by course module id, filter by group and active enrolment status.",
        "operationId" : "core_course_get_enrolled_users_by_cmid",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_enrolled_users_by_cmid_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_enrolled_users_by_cmid_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List users by course module id, filter by group and active enrolment status.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_module" : {
      "post" : {
        "description" : "Returns html with one activity module on course page",
        "operationId" : "core_course_get_module",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_module_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "html to replace the current module with"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns html with one activity module on course page",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_recent_courses" : {
      "post" : {
        "description" : "List of courses a user has accessed most recently.",
        "operationId" : "core_course_get_recent_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_recent_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Courses"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List of courses a user has accessed most recently.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_updates_since" : {
      "post" : {
        "description" : "Check if there are updates affecting the user for the given course since the given time stamp.",
        "operationId" : "core_course_get_updates_since",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_updates_since_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_updates_since_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check if there are updates affecting the user for the given course since the given time stamp.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_user_administration_options" : {
      "post" : {
        "description" : "Return a list of administration options in a set of courses that are avaialable or not for the current\n                            user.",
        "operationId" : "core_course_get_user_administration_options",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_user_administration_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_user_administration_options_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return a list of administration options in a set of courses that are avaialable or not for the current\n                            user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_get_user_navigation_options" : {
      "post" : {
        "description" : "Return a list of navigation options in a set of courses that are avaialable or not for the current user.",
        "operationId" : "core_course_get_user_navigation_options",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_get_user_navigation_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_get_user_navigation_options_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return a list of navigation options in a set of courses that are avaialable or not for the current user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_import_course" : {
      "post" : {
        "description" : "Import course data from a course into another course. Does not include any user data.",
        "operationId" : "core_course_import_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_import_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Import course data from a course into another course. Does not include any user data.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_remove_content_item_from_user_favourites" : {
      "post" : {
        "description" : "Removes a content item (activity, resource or their subtypes) from the favourites for the user.",
        "operationId" : "core_course_remove_content_item_from_user_favourites",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_remove_content_item_from_user_favourites_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_add_content_item_to_user_favourites_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Removes a content item (activity, resource or their subtypes) from the favourites for the user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_search_courses" : {
      "post" : {
        "description" : "Search courses by (name, module, block, tag)",
        "operationId" : "core_course_search_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_search_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_search_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search courses by (name, module, block, tag)",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_set_favourite_courses" : {
      "post" : {
        "description" : "Add a list of courses to the list of favourite courses.",
        "operationId" : "core_course_set_favourite_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_set_favourite_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add a list of courses to the list of favourite courses.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_toggle_activity_recommendation" : {
      "post" : {
        "description" : "Adds or removes an activity as a recommendation in the activity chooser.",
        "operationId" : "core_course_toggle_activity_recommendation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_toggle_activity_recommendation_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_course_toggle_activity_recommendation_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds or removes an activity as a recommendation in the activity chooser.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_update_categories" : {
      "post" : {
        "description" : "Update categories",
        "operationId" : "core_course_update_categories",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_update_categories_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update categories",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_update_courses" : {
      "post" : {
        "description" : "Update courses",
        "operationId" : "core_course_update_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_update_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update courses",
        "tags" : [ "moodle" ]
      }
    },
    "/core_course_view_course" : {
      "post" : {
        "description" : "Log that the course was viewed",
        "operationId" : "core_course_view_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_course_view_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log that the course was viewed",
        "tags" : [ "moodle" ]
      }
    },
    "/core_courseformat_file_handlers" : {
      "post" : {
        "description" : "Get the current course file hanlders.",
        "operationId" : "core_courseformat_file_handlers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_courseformat_file_handlers_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the current course file hanlders.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_courseformat_get_state" : {
      "post" : {
        "description" : "Get the current course state.",
        "operationId" : "core_courseformat_get_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_courseformat_file_handlers_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Encoded course state JSON"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the current course state.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_courseformat_update_course" : {
      "post" : {
        "description" : "Update course contents.",
        "operationId" : "core_courseformat_update_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_courseformat_update_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Encoded course update JSON"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update course contents.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_create_userfeedback_action_record" : {
      "post" : {
        "description" : "Record the action that the user takes in the user feedback notification for future use.",
        "operationId" : "core_create_userfeedback_action_record",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_create_userfeedback_action_record_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Record the action that the user takes in the user feedback notification for future use.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_customfield_create_category" : {
      "post" : {
        "description" : "Creates a new category",
        "operationId" : "core_customfield_create_category",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_customfield_create_category_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Id of the category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates a new category",
        "tags" : [ "moodle" ]
      }
    },
    "/core_customfield_delete_category" : {
      "post" : {
        "description" : "Deletes a category",
        "operationId" : "core_customfield_delete_category",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_customfield_delete_category_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes a category",
        "tags" : [ "moodle" ]
      }
    },
    "/core_customfield_delete_field" : {
      "post" : {
        "description" : "Deletes an entry",
        "operationId" : "core_customfield_delete_field",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_customfield_delete_field_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes an entry",
        "tags" : [ "moodle" ]
      }
    },
    "/core_customfield_move_category" : {
      "post" : {
        "description" : "Drag and drop categories",
        "operationId" : "core_customfield_move_category",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_customfield_move_category_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Drag and drop categories",
        "tags" : [ "moodle" ]
      }
    },
    "/core_customfield_move_field" : {
      "post" : {
        "description" : "Drag and drop",
        "operationId" : "core_customfield_move_field",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_customfield_move_field_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Drag and drop",
        "tags" : [ "moodle" ]
      }
    },
    "/core_customfield_reload_template" : {
      "post" : {
        "description" : "Reloads template",
        "operationId" : "core_customfield_reload_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_customfield_reload_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_customfield_reload_template_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Reloads template",
        "tags" : [ "moodle" ]
      }
    },
    "/core_dynamic_tabs_get_content" : {
      "post" : {
        "description" : "Returns the content for a dynamic tab",
        "operationId" : "core_dynamic_tabs_get_content",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_dynamic_tabs_get_content_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_dynamic_tabs_get_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the content for a dynamic tab",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_get_course_enrolment_methods" : {
      "post" : {
        "description" : "Get the list of course enrolment methods",
        "operationId" : "core_enrol_get_course_enrolment_methods",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_get_course_enrolment_methods_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the list of course enrolment methods",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_get_enrolled_users" : {
      "post" : {
        "description" : "Get enrolled users by course id.",
        "operationId" : "core_enrol_get_enrolled_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_get_enrolled_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get enrolled users by course id.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_get_enrolled_users_with_capability" : {
      "post" : {
        "description" : "For each course and capability specified, return a list of the users that are enrolled in the course\n                                  and have that capability",
        "operationId" : "core_enrol_get_enrolled_users_with_capability",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_get_enrolled_users_with_capability_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "For each course and capability specified, return a list of the users that are enrolled in the course\n                                  and have that capability",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_get_potential_users" : {
      "post" : {
        "description" : "Get the list of potential users to enrol",
        "operationId" : "core_enrol_get_potential_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_get_potential_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the list of potential users to enrol",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_get_users_courses" : {
      "post" : {
        "description" : "Get the list of courses where a user is enrolled in",
        "operationId" : "core_enrol_get_users_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_get_users_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the list of courses where a user is enrolled in",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_search_users" : {
      "post" : {
        "description" : "Search within the list of course participants",
        "operationId" : "core_enrol_search_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_search_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search within the list of course participants",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_submit_user_enrolment_form" : {
      "post" : {
        "description" : "Submit form data for enrolment form",
        "operationId" : "core_enrol_submit_user_enrolment_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_submit_user_enrolment_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_enrol_submit_user_enrolment_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Submit form data for enrolment form",
        "tags" : [ "moodle" ]
      }
    },
    "/core_enrol_unenrol_user_enrolment" : {
      "post" : {
        "description" : "External function that unenrols a given user enrolment",
        "operationId" : "core_enrol_unenrol_user_enrolment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_enrol_unenrol_user_enrolment_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_enrol_unenrol_user_enrolment_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "External function that unenrols a given user enrolment",
        "tags" : [ "moodle" ]
      }
    },
    "/core_fetch_notifications" : {
      "post" : {
        "description" : "Return a list of notifications for the current session",
        "operationId" : "core_fetch_notifications",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_fetch_notifications_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return a list of notifications for the current session",
        "tags" : [ "moodle" ]
      }
    },
    "/core_files_delete_draft_files" : {
      "post" : {
        "description" : "Delete the indicated files (or directories) from a user draft file area.",
        "operationId" : "core_files_delete_draft_files",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_files_delete_draft_files_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_files_delete_draft_files_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete the indicated files (or directories) from a user draft file area.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_files_get_files" : {
      "post" : {
        "description" : "browse moodle files",
        "operationId" : "core_files_get_files",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_files_get_files_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_files_get_files_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "browse moodle files",
        "tags" : [ "moodle" ]
      }
    },
    "/core_files_get_unused_draft_itemid" : {
      "post" : {
        "description" : "Generate a new draft itemid for the current user.",
        "operationId" : "core_files_get_unused_draft_itemid",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_files_get_unused_draft_itemid_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Generate a new draft itemid for the current user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_files_upload" : {
      "post" : {
        "description" : "upload a file to moodle",
        "operationId" : "core_files_upload",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_files_upload_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_files_upload_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "upload a file to moodle",
        "tags" : [ "moodle" ]
      }
    },
    "/core_filters_get_available_in_context" : {
      "post" : {
        "description" : "Returns the filters available in the given contexts.",
        "operationId" : "core_filters_get_available_in_context",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_filters_get_available_in_context_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_filters_get_available_in_context_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the filters available in the given contexts.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_form_dynamic_form" : {
      "post" : {
        "description" : "Process submission of a dynamic (modal) form",
        "operationId" : "core_form_dynamic_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_form_dynamic_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_form_dynamic_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Process submission of a dynamic (modal) form",
        "tags" : [ "moodle" ]
      }
    },
    "/core_form_get_filetypes_browser_data" : {
      "post" : {
        "description" : "Provides data for the filetypes element browser.",
        "operationId" : "core_form_get_filetypes_browser_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_form_get_filetypes_browser_data_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_form_get_filetypes_browser_data_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Provides data for the filetypes element browser.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_get_component_strings" : {
      "post" : {
        "description" : "Return all raw strings (with {$a->xxx}), for a specific component - similar to core get_component_strings(), call",
        "operationId" : "core_get_component_strings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_get_component_strings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return all raw strings (with {$a->xxx}), for a specific component - similar to core get_component_strings(), call",
        "tags" : [ "moodle" ]
      }
    },
    "/core_get_fragment" : {
      "post" : {
        "description" : "Return a fragment for inclusion, such as a JavaScript page.",
        "operationId" : "core_get_fragment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_get_fragment_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_get_fragment_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return a fragment for inclusion, such as a JavaScript page.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_get_string" : {
      "post" : {
        "description" : "Return a translated string - similar to core get_string(), call",
        "operationId" : "core_get_string",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_get_string_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "translated string"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return a translated string - similar to core get_string(), call",
        "tags" : [ "moodle" ]
      }
    },
    "/core_get_strings" : {
      "post" : {
        "description" : "Return some translated strings - like several core get_string(), calls",
        "operationId" : "core_get_strings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_get_strings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return some translated strings - like several core get_string(), calls",
        "tags" : [ "moodle" ]
      }
    },
    "/core_get_user_dates" : {
      "post" : {
        "description" : "Return formatted timestamps",
        "operationId" : "core_get_user_dates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_get_user_dates_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_get_user_dates_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return formatted timestamps",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_create_gradecategories" : {
      "post" : {
        "description" : "Create grade categories inside a course gradebook.",
        "operationId" : "core_grades_create_gradecategories",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_create_gradecategories_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_create_gradecategories_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create grade categories inside a course gradebook.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_enrolled_users_for_search_widget" : {
      "post" : {
        "description" : "** DEPRECATED ** Please do not call this function any more. Use core_grades_get_enrolled_users_for_selector instead. Returns the enrolled users within and map some fields to the returned array of user objects.",
        "operationId" : "core_grades_get_enrolled_users_for_search_widget",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_search_widget_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_search_widget_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "** DEPRECATED ** Please do not call this function any more. Use core_grades_get_enrolled_users_for_selector instead. Returns the enrolled users within and map some fields to the returned array of user objects.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_enrolled_users_for_selector" : {
      "post" : {
        "description" : "Returns the enrolled users within and map some fields to the returned array of user objects.",
        "operationId" : "core_grades_get_enrolled_users_for_selector",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_selector_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_selector_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the enrolled users within and map some fields to the returned array of user objects.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_feedback" : {
      "post" : {
        "description" : "Get the feedback data for a grade item",
        "operationId" : "core_grades_get_feedback",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_feedback_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_feedback_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the feedback data for a grade item",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_gradable_users" : {
      "post" : {
        "description" : "Returns the gradable users in a course",
        "operationId" : "core_grades_get_gradable_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_gradable_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the gradable users in a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_grade_tree" : {
      "post" : {
        "description" : "Get the grade tree structure for a course",
        "operationId" : "core_grades_get_grade_tree",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_mark_course_self_completed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "JSON encoded data representing the course grade tree structure."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the grade tree structure for a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_gradeitems" : {
      "post" : {
        "description" : "Get the gradeitems for a course",
        "operationId" : "core_grades_get_gradeitems",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_mark_course_self_completed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_gradeitems_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the gradeitems for a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_groups_for_search_widget" : {
      "post" : {
        "description" : "** DEPRECATED ** Please do not call this function any more. Use core_group_get_groups_for_selector instead. Get the group/(s) for a course",
        "operationId" : "core_grades_get_groups_for_search_widget",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_groups_for_search_widget_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_groups_for_search_widget_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "** DEPRECATED ** Please do not call this function any more. Use core_group_get_groups_for_selector instead. Get the group/(s) for a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_get_groups_for_selector" : {
      "post" : {
        "description" : "** DEPRECATED ** Please do not call this function any more. Use core_group_get_groups_for_selector instead. Get the group/(s) for a course",
        "operationId" : "core_grades_get_groups_for_selector",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_groups_for_search_widget_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_groups_for_selector_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "** DEPRECATED ** Please do not call this function any more. Use core_group_get_groups_for_selector instead. Get the group/(s) for a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_grader_gradingpanel_point_fetch" : {
      "post" : {
        "description" : "Fetch the data required to display the grader grading panel for simple grading, creating the grade item if required",
        "operationId" : "core_grades_grader_gradingpanel_point_fetch",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_point_fetch_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_point_fetch_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the data required to display the grader grading panel for simple grading, creating the grade item if required",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_grader_gradingpanel_point_store" : {
      "post" : {
        "description" : "Store the data required to display the grader grading panel for simple grading",
        "operationId" : "core_grades_grader_gradingpanel_point_store",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_point_store_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_point_store_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Store the data required to display the grader grading panel for simple grading",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_grader_gradingpanel_scale_fetch" : {
      "post" : {
        "description" : "Fetch the data required to display the grader grading panel for scale-based grading, creating the grade item if required",
        "operationId" : "core_grades_grader_gradingpanel_scale_fetch",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_fetch_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_fetch_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the data required to display the grader grading panel for scale-based grading, creating the grade item if required",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_grader_gradingpanel_scale_store" : {
      "post" : {
        "description" : "Store the data required to display the grader grading panel for scale-based grading",
        "operationId" : "core_grades_grader_gradingpanel_scale_store",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_store_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_store_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Store the data required to display the grader grading panel for scale-based grading",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grades_update_grades" : {
      "post" : {
        "description" : "Update a grade item and associated student grades.",
        "operationId" : "core_grades_update_grades",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_update_grades_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "A value like 0 => OK, 1 => FAILED\n            as defined in lib/grade/constants.php"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update a grade item and associated student grades.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grading_get_definitions" : {
      "post" : {
        "description" : "Get grading definitions",
        "operationId" : "core_grading_get_definitions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grading_get_definitions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grading_get_definitions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get grading definitions",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grading_get_gradingform_instances" : {
      "post" : {
        "description" : "Get grading form instances",
        "operationId" : "core_grading_get_gradingform_instances",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grading_get_gradingform_instances_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grading_get_gradingform_instances_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get grading form instances",
        "tags" : [ "moodle" ]
      }
    },
    "/core_grading_save_definitions" : {
      "post" : {
        "description" : "Save grading definitions",
        "operationId" : "core_grading_save_definitions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grading_save_definitions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Save grading definitions",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_add_group_members" : {
      "post" : {
        "description" : "Adds group members.",
        "operationId" : "core_group_add_group_members",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_add_group_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds group members.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_assign_grouping" : {
      "post" : {
        "description" : "Assing groups from groupings",
        "operationId" : "core_group_assign_grouping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_assign_grouping_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Assing groups from groupings",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_create_groupings" : {
      "post" : {
        "description" : "Creates new groupings",
        "operationId" : "core_group_create_groupings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_create_groupings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of grouping object. A grouping has an id, a courseid, a name and a description."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates new groupings",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_create_groups" : {
      "post" : {
        "description" : "Creates new groups.",
        "operationId" : "core_group_create_groups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_create_groups_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of group object. A group has an id, a courseid, a name, a description and an enrolment key."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates new groups.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_delete_group_members" : {
      "post" : {
        "description" : "Deletes group members.",
        "operationId" : "core_group_delete_group_members",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_delete_group_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes group members.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_delete_groupings" : {
      "post" : {
        "description" : "Deletes all specified groupings.",
        "operationId" : "core_group_delete_groupings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_delete_groupings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes all specified groupings.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_delete_groups" : {
      "post" : {
        "description" : "Deletes all specified groups.",
        "operationId" : "core_group_delete_groups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_delete_groups_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes all specified groups.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_activity_allowed_groups" : {
      "post" : {
        "description" : "Gets a list of groups that the user is allowed to access within the specified activity.",
        "operationId" : "core_group_get_activity_allowed_groups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_activity_allowed_groups_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_group_get_activity_allowed_groups_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets a list of groups that the user is allowed to access within the specified activity.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_activity_groupmode" : {
      "post" : {
        "description" : "Returns effective groupmode used in a given activity.",
        "operationId" : "core_group_get_activity_groupmode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_activity_groupmode_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_group_get_activity_groupmode_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns effective groupmode used in a given activity.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_course_groupings" : {
      "post" : {
        "description" : "Returns all groupings in specified course.",
        "operationId" : "core_group_get_course_groupings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_course_groupings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns all groupings in specified course.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_course_groups" : {
      "post" : {
        "description" : "Returns all groups in specified course.",
        "operationId" : "core_group_get_course_groups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_course_groupings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns all groups in specified course.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_course_user_groups" : {
      "post" : {
        "description" : "Returns all groups in specified course for the specified user.",
        "operationId" : "core_group_get_course_user_groups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_course_user_groups_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_group_get_course_user_groups_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns all groups in specified course for the specified user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_group_members" : {
      "post" : {
        "description" : "Returns group members.",
        "operationId" : "core_group_get_group_members",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_group_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns group members.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_groupings" : {
      "post" : {
        "description" : "Returns groupings details.",
        "operationId" : "core_group_get_groupings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_groupings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns groupings details.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_groups" : {
      "post" : {
        "description" : "Returns group details.",
        "operationId" : "core_group_get_groups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_get_group_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns group details.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_get_groups_for_selector" : {
      "post" : {
        "description" : "Get the group/(s) for a course",
        "operationId" : "core_group_get_groups_for_selector",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_groups_for_search_widget_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_groups_for_selector_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the group/(s) for a course",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_unassign_grouping" : {
      "post" : {
        "description" : "Unassing groups from groupings",
        "operationId" : "core_group_unassign_grouping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_unassign_grouping_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unassing groups from groupings",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_update_groupings" : {
      "post" : {
        "description" : "Updates existing groupings",
        "operationId" : "core_group_update_groupings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_update_groupings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates existing groupings",
        "tags" : [ "moodle" ]
      }
    },
    "/core_group_update_groups" : {
      "post" : {
        "description" : "Updates existing groups.",
        "operationId" : "core_group_update_groups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_group_update_groups_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates existing groups.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_h5p_get_trusted_h5p_file" : {
      "post" : {
        "description" : "Get the H5P file cleaned for Mobile App.",
        "operationId" : "core_h5p_get_trusted_h5p_file",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_h5p_get_trusted_h5p_file_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_h5p_get_trusted_h5p_file_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the H5P file cleaned for Mobile App.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_block_user" : {
      "post" : {
        "description" : "Blocks a user",
        "operationId" : "core_message_block_user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_block_user_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Blocks a user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_confirm_contact_request" : {
      "post" : {
        "description" : "Confirms a contact request",
        "operationId" : "core_message_confirm_contact_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_confirm_contact_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Confirms a contact request",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_create_contact_request" : {
      "post" : {
        "description" : "Creates a contact request",
        "operationId" : "core_message_create_contact_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_create_contact_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_create_contact_request_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates a contact request",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_data_for_messagearea_search_messages" : {
      "post" : {
        "description" : "Retrieve the template data for searching for messages",
        "operationId" : "core_message_data_for_messagearea_search_messages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_data_for_messagearea_search_messages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_data_for_messagearea_search_messages_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve the template data for searching for messages",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_decline_contact_request" : {
      "post" : {
        "description" : "Declines a contact request",
        "operationId" : "core_message_decline_contact_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_create_contact_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Declines a contact request",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_delete_contacts" : {
      "post" : {
        "description" : "Remove contacts from the contact list",
        "operationId" : "core_message_delete_contacts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_delete_contacts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove contacts from the contact list",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_delete_conversations_by_id" : {
      "post" : {
        "description" : "Deletes a list of conversations.",
        "operationId" : "core_message_delete_conversations_by_id",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_delete_conversations_by_id_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes a list of conversations.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_delete_message" : {
      "post" : {
        "description" : "Deletes a message.",
        "operationId" : "core_message_delete_message",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_delete_message_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_delete_message_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes a message.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_delete_message_for_all_users" : {
      "post" : {
        "description" : "Deletes a message for all users.",
        "operationId" : "core_message_delete_message_for_all_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_delete_message_for_all_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes a message for all users.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_blocked_users" : {
      "post" : {
        "description" : "Retrieve a list of users blocked",
        "operationId" : "core_message_get_blocked_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_blocked_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_blocked_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of users blocked",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_contact_requests" : {
      "post" : {
        "description" : "Returns contact requests for a user",
        "operationId" : "core_message_get_contact_requests",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_contact_requests_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns contact requests for a user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_conversation" : {
      "post" : {
        "description" : "Retrieve a conversation for a user",
        "operationId" : "core_message_get_conversation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_conversation_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a conversation for a user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_conversation_between_users" : {
      "post" : {
        "description" : "Retrieve a conversation for a user between another user",
        "operationId" : "core_message_get_conversation_between_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_between_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a conversation for a user between another user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_conversation_counts" : {
      "post" : {
        "description" : "Retrieve a list of conversation counts, indexed by type.",
        "operationId" : "core_message_get_conversation_counts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_counts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_conversation_counts_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of conversation counts, indexed by type.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_conversation_members" : {
      "post" : {
        "description" : "Retrieve a list of members in a conversation",
        "operationId" : "core_message_get_conversation_members",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_members_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of members in a conversation",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_conversation_messages" : {
      "post" : {
        "description" : "Retrieve the conversation messages and relevant member information",
        "operationId" : "core_message_get_conversation_messages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_messages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_conversation_messages_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve the conversation messages and relevant member information",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_conversations" : {
      "post" : {
        "description" : "Retrieve a list of conversations for a user",
        "operationId" : "core_message_get_conversations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversations_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_conversations_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of conversations for a user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_member_info" : {
      "post" : {
        "description" : "Retrieve a user message profiles",
        "operationId" : "core_message_get_member_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_member_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a user message profiles",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_message_processor" : {
      "post" : {
        "description" : "Get a message processor",
        "operationId" : "core_message_get_message_processor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_message_processor_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_message_processor_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a message processor",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_messages" : {
      "post" : {
        "description" : "Retrieve a list of messages sent and received by a user (conversations, notifications or both)",
        "operationId" : "core_message_get_messages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_messages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_messages_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of messages sent and received by a user (conversations, notifications or both)",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_received_contact_requests_count" : {
      "post" : {
        "description" : "Gets the number of received contact requests",
        "operationId" : "core_message_get_received_contact_requests_count",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_received_contact_requests_count_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The number of received contact requests"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets the number of received contact requests",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_self_conversation" : {
      "post" : {
        "description" : "Retrieve a self-conversation for a user",
        "operationId" : "core_message_get_self_conversation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_self_conversation_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a self-conversation for a user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_unread_conversation_counts" : {
      "post" : {
        "description" : "Retrieve a list of unread conversation counts, indexed by type.",
        "operationId" : "core_message_get_unread_conversation_counts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_counts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_unread_conversation_counts_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of unread conversation counts, indexed by type.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_unread_conversations_count" : {
      "post" : {
        "description" : "Retrieve the count of unread conversations for a given user",
        "operationId" : "core_message_get_unread_conversations_count",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_unread_conversations_count_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The count of unread messages for the user"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve the count of unread conversations for a given user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_unread_notification_count" : {
      "post" : {
        "description" : "Get number of unread notifications.",
        "operationId" : "core_message_get_unread_notification_count",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_unread_notification_count_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The count of unread notifications."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get number of unread notifications.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_user_contacts" : {
      "post" : {
        "description" : "Retrieve the contact list",
        "operationId" : "core_message_get_user_contacts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_user_contacts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve the contact list",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_user_message_preferences" : {
      "post" : {
        "description" : "Get the message preferences for a given user.",
        "operationId" : "core_message_get_user_message_preferences",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_counts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the message preferences for a given user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_get_user_notification_preferences" : {
      "post" : {
        "description" : "Get the notification preferences for a given user.",
        "operationId" : "core_message_get_user_notification_preferences",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_conversation_counts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_get_user_notification_preferences_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the notification preferences for a given user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_mark_all_conversation_messages_as_read" : {
      "post" : {
        "description" : "Mark all conversation messages as read for a given user",
        "operationId" : "core_message_mark_all_conversation_messages_as_read",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_mark_all_conversation_messages_as_read_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark all conversation messages as read for a given user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_mark_all_notifications_as_read" : {
      "post" : {
        "description" : "Mark all notifications as read for a given user",
        "operationId" : "core_message_mark_all_notifications_as_read",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_mark_all_notifications_as_read_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if the messages were marked read, false otherwise"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark all notifications as read for a given user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_mark_message_read" : {
      "post" : {
        "description" : "Mark a single message as read, trigger message_viewed event.",
        "operationId" : "core_message_mark_message_read",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_mark_message_read_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_mark_message_read_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark a single message as read, trigger message_viewed event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_mark_notification_read" : {
      "post" : {
        "description" : "Mark a single notification as read, trigger notification_viewed event.",
        "operationId" : "core_message_mark_notification_read",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_mark_notification_read_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_mark_notification_read_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark a single notification as read, trigger notification_viewed event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_message_processor_config_form" : {
      "post" : {
        "description" : "Process the message processor config form",
        "operationId" : "core_message_message_processor_config_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_message_processor_config_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Process the message processor config form",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_message_search_users" : {
      "post" : {
        "description" : "Retrieve the data for searching for people",
        "operationId" : "core_message_message_search_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_message_search_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_message_message_search_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve the data for searching for people",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_mute_conversations" : {
      "post" : {
        "description" : "Mutes a list of conversations",
        "operationId" : "core_message_mute_conversations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_mute_conversations_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mutes a list of conversations",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_search_contacts" : {
      "post" : {
        "description" : "Search for contacts",
        "operationId" : "core_message_search_contacts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_search_contacts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of contacts"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search for contacts",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_send_instant_messages" : {
      "post" : {
        "description" : "Send instant messages",
        "operationId" : "core_message_send_instant_messages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_send_instant_messages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Send instant messages",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_send_messages_to_conversation" : {
      "post" : {
        "description" : "Send messages to an existing conversation between users",
        "operationId" : "core_message_send_messages_to_conversation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_send_messages_to_conversation_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Send messages to an existing conversation between users",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_set_favourite_conversations" : {
      "post" : {
        "description" : "Mark a conversation or group of conversations as favourites/starred conversations.",
        "operationId" : "core_message_set_favourite_conversations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_set_favourite_conversations_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark a conversation or group of conversations as favourites/starred conversations.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_unblock_user" : {
      "post" : {
        "description" : "Unblocks a user",
        "operationId" : "core_message_unblock_user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_unblock_user_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unblocks a user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_unmute_conversations" : {
      "post" : {
        "description" : "Unmutes a list of conversations",
        "operationId" : "core_message_unmute_conversations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_unmute_conversations_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unmutes a list of conversations",
        "tags" : [ "moodle" ]
      }
    },
    "/core_message_unset_favourite_conversations" : {
      "post" : {
        "description" : "Unset a conversation or group of conversations as favourites/starred conversations.",
        "operationId" : "core_message_unset_favourite_conversations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_set_favourite_conversations_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Unset a conversation or group of conversations as favourites/starred conversations.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_moodlenet_auth_check" : {
      "post" : {
        "description" : "Check a user has authorized for a given MoodleNet site",
        "operationId" : "core_moodlenet_auth_check",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_moodlenet_auth_check_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_moodlenet_auth_check_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check a user has authorized for a given MoodleNet site",
        "tags" : [ "moodle" ]
      }
    },
    "/core_moodlenet_get_share_info_activity" : {
      "post" : {
        "description" : "Get information about an activity being shared",
        "operationId" : "core_moodlenet_get_share_info_activity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_moodlenet_get_share_info_activity_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_moodlenet_get_share_info_activity_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get information about an activity being shared",
        "tags" : [ "moodle" ]
      }
    },
    "/core_moodlenet_get_shared_course_info" : {
      "post" : {
        "description" : "Get information about an course being shared",
        "operationId" : "core_moodlenet_get_shared_course_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_moodlenet_get_shared_course_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_moodlenet_get_shared_course_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get information about an course being shared",
        "tags" : [ "moodle" ]
      }
    },
    "/core_moodlenet_send_activity" : {
      "post" : {
        "description" : "Send activity to MoodleNet",
        "operationId" : "core_moodlenet_send_activity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_moodlenet_send_activity_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_moodlenet_send_activity_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Send activity to MoodleNet",
        "tags" : [ "moodle" ]
      }
    },
    "/core_moodlenet_send_course" : {
      "post" : {
        "description" : "Send course to MoodleNet",
        "operationId" : "core_moodlenet_send_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_moodlenet_send_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_moodlenet_send_course_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Send course to MoodleNet",
        "tags" : [ "moodle" ]
      }
    },
    "/core_my_view_page" : {
      "post" : {
        "description" : "Trigger the My or Dashboard viewed event.",
        "operationId" : "core_my_view_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_my_view_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the My or Dashboard viewed event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_notes_create_notes" : {
      "post" : {
        "description" : "Create notes",
        "operationId" : "core_notes_create_notes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_notes_create_notes_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create notes",
        "tags" : [ "moodle" ]
      }
    },
    "/core_notes_delete_notes" : {
      "post" : {
        "description" : "Delete notes",
        "operationId" : "core_notes_delete_notes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_notes_delete_notes_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete notes",
        "tags" : [ "moodle" ]
      }
    },
    "/core_notes_get_course_notes" : {
      "post" : {
        "description" : "Returns all notes in specified course (or site), for the specified user.",
        "operationId" : "core_notes_get_course_notes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_notes_get_course_notes_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_notes_get_course_notes_200_response"
                }
              }
            },
            "description" : "notes"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns all notes in specified course (or site), for the specified user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_notes_get_notes" : {
      "post" : {
        "description" : "Get notes",
        "operationId" : "core_notes_get_notes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_notes_get_notes_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_notes_get_notes_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get notes",
        "tags" : [ "moodle" ]
      }
    },
    "/core_notes_update_notes" : {
      "post" : {
        "description" : "Update notes",
        "operationId" : "core_notes_update_notes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_notes_update_notes_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update notes",
        "tags" : [ "moodle" ]
      }
    },
    "/core_notes_view_notes" : {
      "post" : {
        "description" : "Simulates the web interface view of notes/index.php: trigger events.",
        "operationId" : "core_notes_view_notes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_notes_view_notes_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulates the web interface view of notes/index.php: trigger events.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_output_load_fontawesome_icon_map" : {
      "post" : {
        "description" : "Load the mapping of names to icons",
        "operationId" : "core_output_load_fontawesome_icon_map",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the mapping of names to icons",
        "tags" : [ "moodle" ]
      }
    },
    "/core_output_load_fontawesome_icon_system_map" : {
      "post" : {
        "description" : "Load the mapping of moodle pix names to fontawesome icon names",
        "operationId" : "core_output_load_fontawesome_icon_system_map",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_output_load_fontawesome_icon_system_map_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the mapping of moodle pix names to fontawesome icon names",
        "tags" : [ "moodle" ]
      }
    },
    "/core_output_load_template" : {
      "post" : {
        "description" : "Load a template for a renderable",
        "operationId" : "core_output_load_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_output_load_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "template"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a template for a renderable",
        "tags" : [ "moodle" ]
      }
    },
    "/core_output_load_template_with_dependencies" : {
      "post" : {
        "description" : "Load a template and its dependencies for a renderable",
        "operationId" : "core_output_load_template_with_dependencies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_output_load_template_with_dependencies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_output_load_template_with_dependencies_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a template and its dependencies for a renderable",
        "tags" : [ "moodle" ]
      }
    },
    "/core_payment_get_available_gateways" : {
      "post" : {
        "description" : "Get the list of payment gateways that support the given component/area",
        "operationId" : "core_payment_get_available_gateways",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_payment_get_available_gateways_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the list of payment gateways that support the given component/area",
        "tags" : [ "moodle" ]
      }
    },
    "/core_question_get_random_question_summaries" : {
      "post" : {
        "description" : "Get the random question set for a criteria",
        "operationId" : "core_question_get_random_question_summaries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_question_get_random_question_summaries_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_question_get_random_question_summaries_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the random question set for a criteria",
        "tags" : [ "moodle" ]
      }
    },
    "/core_question_submit_tags_form" : {
      "post" : {
        "description" : "Update the question tags.",
        "operationId" : "core_question_submit_tags_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_question_submit_tags_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_question_submit_tags_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the question tags.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_question_update_flag" : {
      "post" : {
        "description" : "Update the flag state of a question attempt.",
        "operationId" : "core_question_update_flag",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_question_update_flag_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the flag state of a question attempt.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_rating_add_rating" : {
      "post" : {
        "description" : "Rates an item.",
        "operationId" : "core_rating_add_rating",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_rating_add_rating_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_rating_add_rating_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Rates an item.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_rating_get_item_ratings" : {
      "post" : {
        "description" : "Retrieve all the ratings for an item.",
        "operationId" : "core_rating_get_item_ratings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_rating_get_item_ratings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_rating_get_item_ratings_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve all the ratings for an item.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_audiences_delete" : {
      "post" : {
        "description" : "Delete audience from report",
        "operationId" : "core_reportbuilder_audiences_delete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_audiences_delete_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete audience from report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_can_view_system_report" : {
      "post" : {
        "description" : "Determine access to a system report",
        "operationId" : "core_reportbuilder_can_view_system_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_can_view_system_report_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Determine access to a system report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_columns_add" : {
      "post" : {
        "description" : "Add column to report",
        "operationId" : "core_reportbuilder_columns_add",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_add_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_columns_add_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add column to report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_columns_delete" : {
      "post" : {
        "description" : "Delete column from report",
        "operationId" : "core_reportbuilder_columns_delete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete column from report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_columns_reorder" : {
      "post" : {
        "description" : "Re-order column within report",
        "operationId" : "core_reportbuilder_columns_reorder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_reorder_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Re-order column within report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_columns_sort_get" : {
      "post" : {
        "description" : "Retrieve column sorting for report",
        "operationId" : "core_reportbuilder_columns_sort_get",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_sort_get_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve column sorting for report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_columns_sort_reorder" : {
      "post" : {
        "description" : "Re-order column sorting within report",
        "operationId" : "core_reportbuilder_columns_sort_reorder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_sort_reorder_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Re-order column sorting within report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_columns_sort_toggle" : {
      "post" : {
        "description" : "Toggle sorting of column within report",
        "operationId" : "core_reportbuilder_columns_sort_toggle",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_sort_toggle_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Toggle sorting of column within report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_conditions_add" : {
      "post" : {
        "description" : "Add condition to report",
        "operationId" : "core_reportbuilder_conditions_add",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_conditions_add_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_conditions_add_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add condition to report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_conditions_delete" : {
      "post" : {
        "description" : "Delete condition from report",
        "operationId" : "core_reportbuilder_conditions_delete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete condition from report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_conditions_reorder" : {
      "post" : {
        "description" : "Re-order condition within report",
        "operationId" : "core_reportbuilder_conditions_reorder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_conditions_reorder_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Re-order condition within report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_conditions_reset" : {
      "post" : {
        "description" : "Reset conditions for given report",
        "operationId" : "core_reportbuilder_conditions_reset",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_sort_get_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Reset conditions for given report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_filters_add" : {
      "post" : {
        "description" : "Add filter to report",
        "operationId" : "core_reportbuilder_filters_add",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_filters_add_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_filters_add_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add filter to report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_filters_delete" : {
      "post" : {
        "description" : "Delete filter from report",
        "operationId" : "core_reportbuilder_filters_delete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_filters_delete_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_filters_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete filter from report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_filters_reorder" : {
      "post" : {
        "description" : "Re-order filter within report",
        "operationId" : "core_reportbuilder_filters_reorder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_filters_reorder_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_filters_delete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Re-order filter within report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_filters_reset" : {
      "post" : {
        "description" : "Reset filters for given report",
        "operationId" : "core_reportbuilder_filters_reset",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_filters_reset_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Reset filters for given report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_list_reports" : {
      "post" : {
        "description" : "List custom reports for current user",
        "operationId" : "core_reportbuilder_list_reports",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_list_reports_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_list_reports_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List custom reports for current user",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_reports_delete" : {
      "post" : {
        "description" : "Delete report",
        "operationId" : "core_reportbuilder_reports_delete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_sort_get_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_reports_get" : {
      "post" : {
        "description" : "Get custom report",
        "operationId" : "core_reportbuilder_reports_get",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_reports_get_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_reports_get_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get custom report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_retrieve_report" : {
      "post" : {
        "description" : "Retrieve custom report content",
        "operationId" : "core_reportbuilder_retrieve_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_retrieve_report_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_retrieve_report_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve custom report content",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_retrieve_system_report" : {
      "post" : {
        "description" : "Retrieve system report content",
        "operationId" : "core_reportbuilder_retrieve_system_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_retrieve_system_report_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_retrieve_system_report_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve system report content",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_schedules_delete" : {
      "post" : {
        "description" : "Delete schedule from report",
        "operationId" : "core_reportbuilder_schedules_delete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_schedules_delete_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete schedule from report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_schedules_send" : {
      "post" : {
        "description" : "Send report schedule",
        "operationId" : "core_reportbuilder_schedules_send",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_schedules_send_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Send report schedule",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_schedules_toggle" : {
      "post" : {
        "description" : "Toggle state of report schedule",
        "operationId" : "core_reportbuilder_schedules_toggle",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_schedules_toggle_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Toggle state of report schedule",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_set_filters" : {
      "post" : {
        "description" : "Set filter values for given report",
        "operationId" : "core_reportbuilder_set_filters",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_set_filters_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set filter values for given report",
        "tags" : [ "moodle" ]
      }
    },
    "/core_reportbuilder_view_report" : {
      "post" : {
        "description" : "Trigger custom report viewed",
        "operationId" : "core_reportbuilder_view_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_reportbuilder_columns_sort_get_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_reportbuilder_view_report_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger custom report viewed",
        "tags" : [ "moodle" ]
      }
    },
    "/core_role_assign_roles" : {
      "post" : {
        "description" : "Manual role assignments.",
        "operationId" : "core_role_assign_roles",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_role_assign_roles_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Manual role assignments.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_role_unassign_roles" : {
      "post" : {
        "description" : "Manual role unassignments.",
        "operationId" : "core_role_unassign_roles",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_role_unassign_roles_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Manual role unassignments.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_search_get_relevant_users" : {
      "post" : {
        "description" : "Gets relevant users for a search request.",
        "operationId" : "core_search_get_relevant_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_search_get_relevant_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets relevant users for a search request.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_search_get_results" : {
      "post" : {
        "description" : "Get search results.",
        "operationId" : "core_search_get_results",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_search_get_results_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_search_get_results_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get search results.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_search_get_search_areas_list" : {
      "post" : {
        "description" : "Get search areas.",
        "operationId" : "core_search_get_search_areas_list",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_search_get_search_areas_list_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_search_get_search_areas_list_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get search areas.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_search_get_top_results" : {
      "post" : {
        "description" : "Get top search results.",
        "operationId" : "core_search_get_top_results",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_search_get_top_results_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_search_get_top_results_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get top search results.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_search_view_results" : {
      "post" : {
        "description" : "Trigger view search results event.",
        "operationId" : "core_search_view_results",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_search_view_results_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger view search results event.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_session_time_remaining" : {
      "post" : {
        "description" : "Count the seconds remaining in this session",
        "operationId" : "core_session_time_remaining",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_session_time_remaining_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Count the seconds remaining in this session",
        "tags" : [ "moodle" ]
      }
    },
    "/core_session_touch" : {
      "post" : {
        "description" : "Keep the users session alive",
        "operationId" : "core_session_touch",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "result"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Keep the users session alive",
        "tags" : [ "moodle" ]
      }
    },
    "/core_table_get_dynamic_table_content" : {
      "post" : {
        "description" : "Get the dynamic table content raw html",
        "operationId" : "core_table_get_dynamic_table_content",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_table_get_dynamic_table_content_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_table_get_dynamic_table_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the dynamic table content raw html",
        "tags" : [ "moodle" ]
      }
    },
    "/core_tag_get_tag_areas" : {
      "post" : {
        "description" : "Retrieves existing tag areas.",
        "operationId" : "core_tag_get_tag_areas",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_tag_get_tag_areas_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves existing tag areas.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_tag_get_tag_cloud" : {
      "post" : {
        "description" : "Retrieves a tag cloud for the given collection and/or query search.",
        "operationId" : "core_tag_get_tag_cloud",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_tag_get_tag_cloud_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_tag_get_tag_cloud_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves a tag cloud for the given collection and/or query search.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_tag_get_tag_collections" : {
      "post" : {
        "description" : "Retrieves existing tag collections.",
        "operationId" : "core_tag_get_tag_collections",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_tag_get_tag_collections_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves existing tag collections.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_tag_get_tagindex" : {
      "post" : {
        "description" : "Gets tag index page for one tag and one tag area",
        "operationId" : "core_tag_get_tagindex",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_tag_get_tagindex_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_tag_get_tagindex_200_response"
                }
              }
            },
            "description" : "tag index"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets tag index page for one tag and one tag area",
        "tags" : [ "moodle" ]
      }
    },
    "/core_tag_get_tagindex_per_area" : {
      "post" : {
        "description" : "Gets tag index page per different areas.",
        "operationId" : "core_tag_get_tagindex_per_area",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_tag_get_tagindex_per_area_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets tag index page per different areas.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_tag_get_tags" : {
      "post" : {
        "description" : "Gets tags by their ids",
        "operationId" : "core_tag_get_tags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_tag_get_tags_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_tag_get_tags_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Gets tags by their ids",
        "tags" : [ "moodle" ]
      }
    },
    "/core_tag_update_tags" : {
      "post" : {
        "description" : "Updates tags",
        "operationId" : "core_tag_update_tags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_tag_update_tags_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates tags",
        "tags" : [ "moodle" ]
      }
    },
    "/core_update_inplace_editable" : {
      "post" : {
        "description" : "Generic service to update title",
        "operationId" : "core_update_inplace_editable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_update_inplace_editable_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_update_inplace_editable_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Generic service to update title",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_add_user_device" : {
      "post" : {
        "description" : "Store mobile user devices information for PUSH Notifications.",
        "operationId" : "core_user_add_user_device",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_add_user_device_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Store mobile user devices information for PUSH Notifications.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_add_user_private_files" : {
      "post" : {
        "description" : "Copy files from a draft area to users private files area.",
        "operationId" : "core_user_add_user_private_files",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_add_user_private_files_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Copy files from a draft area to users private files area.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_agree_site_policy" : {
      "post" : {
        "description" : "Agree the site policy for the current user.",
        "operationId" : "core_user_agree_site_policy",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_agree_site_policy_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Agree the site policy for the current user.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_create_users" : {
      "post" : {
        "description" : "Create users.",
        "operationId" : "core_user_create_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_create_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create users.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_delete_users" : {
      "post" : {
        "description" : "Delete users.",
        "operationId" : "core_user_delete_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_delete_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete users.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_get_course_user_profiles" : {
      "post" : {
        "description" : "Get course user profiles (each of the profils matching a course id and a user id),.",
        "operationId" : "core_user_get_course_user_profiles",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_get_course_user_profiles_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get course user profiles (each of the profils matching a course id and a user id),.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_get_private_files_info" : {
      "post" : {
        "description" : "Returns general information about files in the user private files area.",
        "operationId" : "core_user_get_private_files_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_get_private_files_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_get_private_files_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns general information about files in the user private files area.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_get_user_preferences" : {
      "post" : {
        "description" : "Return user preferences.",
        "operationId" : "core_user_get_user_preferences",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_get_user_preferences_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_get_user_preferences_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return user preferences.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_get_users" : {
      "post" : {
        "description" : "search for users matching the parameters",
        "operationId" : "core_user_get_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_get_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_get_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "search for users matching the parameters",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_get_users_by_field" : {
      "post" : {
        "description" : "Retrieve users' information for a specified unique field - If you want to do a user search, use core_user_get_users() or core_user_search_identity().",
        "operationId" : "core_user_get_users_by_field",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_get_users_by_field_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve users' information for a specified unique field - If you want to do a user search, use core_user_get_users() or core_user_search_identity().",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_remove_user_device" : {
      "post" : {
        "description" : "Remove a user device from the Moodle database.",
        "operationId" : "core_user_remove_user_device",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_remove_user_device_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_remove_user_device_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove a user device from the Moodle database.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_search_identity" : {
      "post" : {
        "description" : "Return list of users identities matching the given criteria in their name or other identity fields.",
        "operationId" : "core_user_search_identity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_search_identity_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_search_identity_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return list of users identities matching the given criteria in their name or other identity fields.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_set_user_preferences" : {
      "post" : {
        "description" : "Set user preferences.",
        "operationId" : "core_user_set_user_preferences",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_set_user_preferences_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_set_user_preferences_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set user preferences.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_update_picture" : {
      "post" : {
        "description" : "Update or delete the user picture in the site",
        "operationId" : "core_user_update_picture",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_update_picture_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_update_picture_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update or delete the user picture in the site",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_update_user_device_public_key" : {
      "post" : {
        "description" : "Store mobile user public key.",
        "operationId" : "core_user_update_user_device_public_key",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_update_user_device_public_key_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_user_update_user_device_public_key_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Store mobile user public key.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_update_user_preferences" : {
      "post" : {
        "description" : "Update a user's preferences",
        "operationId" : "core_user_update_user_preferences",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_update_user_preferences_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update a user's preferences",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_update_users" : {
      "post" : {
        "description" : "Update users.",
        "operationId" : "core_user_update_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_update_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update users.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_view_user_list" : {
      "post" : {
        "description" : "Simulates the web-interface view of user/index.php (triggering events),.",
        "operationId" : "core_user_view_user_list",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_view_user_list_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulates the web-interface view of user/index.php (triggering events),.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_user_view_user_profile" : {
      "post" : {
        "description" : "Simulates the web-interface view of user/view.php and user/profile.php (triggering events),.",
        "operationId" : "core_user_view_user_profile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_user_view_user_profile_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulates the web-interface view of user/view.php and user/profile.php (triggering events),.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_webservice_get_site_info" : {
      "post" : {
        "description" : "Return some site info / user info / list web service functions",
        "operationId" : "core_webservice_get_site_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_webservice_get_site_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_webservice_get_site_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return some site info / user info / list web service functions",
        "tags" : [ "moodle" ]
      }
    },
    "/core_xapi_delete_state" : {
      "post" : {
        "description" : "Delete an xAPI state data from an activityId.",
        "operationId" : "core_xapi_delete_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_xapi_delete_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "If the state data is deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete an xAPI state data from an activityId.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_xapi_delete_states" : {
      "post" : {
        "description" : "Delete all xAPI state data from an activityId.",
        "operationId" : "core_xapi_delete_states",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_xapi_delete_states_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete all xAPI state data from an activityId.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_xapi_get_state" : {
      "post" : {
        "description" : "Get an xAPI state data from an activityId.",
        "operationId" : "core_xapi_get_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_xapi_get_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The state data json"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get an xAPI state data from an activityId.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_xapi_get_states" : {
      "post" : {
        "description" : "Get all state ID from an activityId.",
        "operationId" : "core_xapi_get_states",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_xapi_get_states_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of state Ids"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get all state ID from an activityId.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_xapi_post_state" : {
      "post" : {
        "description" : "Post an xAPI state into an activityId.",
        "operationId" : "core_xapi_post_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_xapi_post_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "If the state is accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Post an xAPI state into an activityId.",
        "tags" : [ "moodle" ]
      }
    },
    "/core_xapi_statement_post" : {
      "post" : {
        "description" : "Post an xAPI statement.",
        "operationId" : "core_xapi_statement_post",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_xapi_statement_post_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of statements storing acceptance results"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Post an xAPI statement.",
        "tags" : [ "moodle" ]
      }
    },
    "/enrol_guest_get_instance_info" : {
      "post" : {
        "description" : "Return guest enrolment instance information.",
        "operationId" : "enrol_guest_get_instance_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_guest_get_instance_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/enrol_guest_get_instance_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return guest enrolment instance information.",
        "tags" : [ "enrol_guest" ]
      }
    },
    "/enrol_guest_validate_password" : {
      "post" : {
        "description" : "Perform password validation.",
        "operationId" : "enrol_guest_validate_password",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_guest_validate_password_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/enrol_guest_validate_password_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Perform password validation.",
        "tags" : [ "enrol_guest" ]
      }
    },
    "/enrol_license_enrol_user" : {
      "post" : {
        "description" : "License enrol the current user in the given course.",
        "operationId" : "enrol_license_enrol_user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_license_enrol_user_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/enrol_license_enrol_user_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "License enrol the current user in the given course.",
        "tags" : [ "enrol_license" ]
      }
    },
    "/enrol_license_get_instance_info" : {
      "post" : {
        "description" : "License enrolment instance information.",
        "operationId" : "enrol_license_get_instance_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_license_get_instance_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/enrol_license_get_instance_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "License enrolment instance information.",
        "tags" : [ "enrol_license" ]
      }
    },
    "/enrol_manual_enrol_users" : {
      "post" : {
        "description" : "Manual enrol users",
        "operationId" : "enrol_manual_enrol_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_manual_enrol_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Manual enrol users",
        "tags" : [ "enrol_manual" ]
      }
    },
    "/enrol_manual_unenrol_users" : {
      "post" : {
        "description" : "Manual unenrol users",
        "operationId" : "enrol_manual_unenrol_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_manual_unenrol_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Manual unenrol users",
        "tags" : [ "enrol_manual" ]
      }
    },
    "/enrol_meta_add_instances" : {
      "post" : {
        "description" : "Add meta enrolment instances",
        "operationId" : "enrol_meta_add_instances",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_meta_add_instances_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of course meta enrolment instances that were created."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add meta enrolment instances",
        "tags" : [ "enrol_meta" ]
      }
    },
    "/enrol_meta_delete_instances" : {
      "post" : {
        "description" : "Delete meta enrolment instances",
        "operationId" : "enrol_meta_delete_instances",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_meta_delete_instances_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "List of course meta enrolment instances that were deleted."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete meta enrolment instances",
        "tags" : [ "enrol_meta" ]
      }
    },
    "/enrol_self_enrol_user" : {
      "post" : {
        "description" : "Self enrol the current user in the given course.",
        "operationId" : "enrol_self_enrol_user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_self_enrol_user_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/enrol_self_enrol_user_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Self enrol the current user in the given course.",
        "tags" : [ "enrol_self" ]
      }
    },
    "/enrol_self_get_instance_info" : {
      "post" : {
        "description" : "self enrolment instance information.",
        "operationId" : "enrol_self_get_instance_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/enrol_self_get_instance_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/enrol_self_get_instance_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "self enrolment instance information.",
        "tags" : [ "enrol_self" ]
      }
    },
    "/gradereport_grader_get_users_in_report" : {
      "post" : {
        "description" : "Returns the dataset of users within the report",
        "operationId" : "gradereport_grader_get_users_in_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_completion_mark_course_self_completed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the dataset of users within the report",
        "tags" : [ "gradereport_grader" ]
      }
    },
    "/gradereport_overview_get_course_grades" : {
      "post" : {
        "description" : "Get the given user courses final grades",
        "operationId" : "gradereport_overview_get_course_grades",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/gradereport_overview_get_course_grades_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradereport_overview_get_course_grades_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the given user courses final grades",
        "tags" : [ "gradereport_overview" ]
      }
    },
    "/gradereport_overview_view_grade_report" : {
      "post" : {
        "description" : "Trigger the report view event",
        "operationId" : "gradereport_overview_view_grade_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/gradereport_overview_view_grade_report_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the report view event",
        "tags" : [ "gradereport_overview" ]
      }
    },
    "/gradereport_singleview_get_grade_items_for_search_widget" : {
      "post" : {
        "description" : "Get the gradeitem/(s) for a course",
        "operationId" : "gradereport_singleview_get_grade_items_for_search_widget",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_get_groups_for_search_widget_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradereport_singleview_get_grade_items_for_search_widget_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the gradeitem/(s) for a course",
        "tags" : [ "gradereport_singleview" ]
      }
    },
    "/gradereport_user_get_access_information" : {
      "post" : {
        "description" : "Returns user access information for the user grade report.",
        "operationId" : "gradereport_user_get_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/gradereport_user_get_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradereport_user_get_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns user access information for the user grade report.",
        "tags" : [ "gradereport_user" ]
      }
    },
    "/gradereport_user_get_grade_items" : {
      "post" : {
        "description" : "Returns the complete list of grade items for users in a course",
        "operationId" : "gradereport_user_get_grade_items",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/gradereport_user_get_grade_items_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradereport_user_get_grade_items_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the complete list of grade items for users in a course",
        "tags" : [ "gradereport_user" ]
      }
    },
    "/gradereport_user_get_grades_table" : {
      "post" : {
        "description" : "Get the user/s report grades table for a course",
        "operationId" : "gradereport_user_get_grades_table",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/gradereport_user_get_grade_items_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the user/s report grades table for a course",
        "tags" : [ "gradereport_user" ]
      }
    },
    "/gradereport_user_view_grade_report" : {
      "post" : {
        "description" : "Trigger the report view event",
        "operationId" : "gradereport_user_view_grade_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/gradereport_overview_view_grade_report_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the report view event",
        "tags" : [ "gradereport_user" ]
      }
    },
    "/gradingform_guide_grader_gradingpanel_fetch" : {
      "post" : {
        "description" : "Fetch the data required to display the grader grading panel, creating the grade item if required",
        "operationId" : "gradingform_guide_grader_gradingpanel_fetch",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_fetch_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_fetch_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the data required to display the grader grading panel, creating the grade item if required",
        "tags" : [ "gradingform_guide" ]
      }
    },
    "/gradingform_guide_grader_gradingpanel_store" : {
      "post" : {
        "description" : "Store the grading data for a user from the grader grading panel.",
        "operationId" : "gradingform_guide_grader_gradingpanel_store",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_store_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_store_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Store the grading data for a user from the grader grading panel.",
        "tags" : [ "gradingform_guide" ]
      }
    },
    "/gradingform_rubric_grader_gradingpanel_fetch" : {
      "post" : {
        "description" : "Fetch the data required to display the grader grading panel, creating the grade item if required",
        "operationId" : "gradingform_rubric_grader_gradingpanel_fetch",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_fetch_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_fetch_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the data required to display the grader grading panel, creating the grade item if required",
        "tags" : [ "gradingform_rubric" ]
      }
    },
    "/gradingform_rubric_grader_gradingpanel_store" : {
      "post" : {
        "description" : "Store the grading data for a user from the grader grading panel.",
        "operationId" : "gradingform_rubric_grader_gradingpanel_store",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_store_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_store_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Store the grading data for a user from the grader grading panel.",
        "tags" : [ "gradingform_rubric" ]
      }
    },
    "/local_iomad_learningpath_activate" : {
      "post" : {
        "description" : "Activates / deactivates learning path",
        "operationId" : "local_iomad_learningpath_activate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_activate_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if active state set correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Activates / deactivates learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_addcourses" : {
      "post" : {
        "description" : "Add courses to learning path",
        "operationId" : "local_iomad_learningpath_addcourses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_addcourses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if courses added correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add courses to learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_addusers" : {
      "post" : {
        "description" : "Add users to learning path",
        "operationId" : "local_iomad_learningpath_addusers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_addusers_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if users added correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add users to learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_copypath" : {
      "post" : {
        "description" : "Copy a learning path",
        "operationId" : "local_iomad_learningpath_copypath",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_copypath_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if path copied correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Copy a learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_deletepath" : {
      "post" : {
        "description" : "Completely delete a learning path",
        "operationId" : "local_iomad_learningpath_deletepath",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_copypath_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if courses added correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Completely delete a learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_getcourses" : {
      "post" : {
        "description" : "Read list of courses for given learning",
        "operationId" : "local_iomad_learningpath_getcourses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_getcourses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Read list of courses for given learning",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_getprospectivecourses" : {
      "post" : {
        "description" : "Read set of filtered courses for given company",
        "operationId" : "local_iomad_learningpath_getprospectivecourses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_getprospectivecourses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Read set of filtered courses for given company",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_getprospectiveusers" : {
      "post" : {
        "description" : "Get set of filtered users for given company",
        "operationId" : "local_iomad_learningpath_getprospectiveusers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_getprospectiveusers_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get set of filtered users for given company",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_getusers" : {
      "post" : {
        "description" : "Get users assigned to path",
        "operationId" : "local_iomad_learningpath_getusers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_getusers_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get users assigned to path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_ordercourses" : {
      "post" : {
        "description" : "Set sequence of courses in learning path",
        "operationId" : "local_iomad_learningpath_ordercourses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_ordercourses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if courses ordered correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set sequence of courses in learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_removecourses" : {
      "post" : {
        "description" : "Remove courses from learning path",
        "operationId" : "local_iomad_learningpath_removecourses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_removecourses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if courses removed correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove courses from learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/local_iomad_learningpath_removeusers" : {
      "post" : {
        "description" : "Remove users from learning path",
        "operationId" : "local_iomad_learningpath_removeusers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/local_iomad_learningpath_removeusers_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "True if users removed correctly"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove users from learning path",
        "tags" : [ "local_iomad_learningpath" ]
      }
    },
    "/media_videojs_get_language" : {
      "post" : {
        "description" : "get language.",
        "operationId" : "media_videojs_get_language",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/media_videojs_get_language_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "language pack json"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "get language.",
        "tags" : [ "media_videojs" ]
      }
    },
    "/message_airnotifier_are_notification_preferences_configured" : {
      "post" : {
        "description" : "Check if the users have notification preferences configured yet",
        "operationId" : "message_airnotifier_are_notification_preferences_configured",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/message_airnotifier_are_notification_preferences_configured_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/message_airnotifier_are_notification_preferences_configured_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check if the users have notification preferences configured yet",
        "tags" : [ "message_airnotifier" ]
      }
    },
    "/message_airnotifier_enable_device" : {
      "post" : {
        "description" : "Enables or disables a registered user device so it can receive Push notifications",
        "operationId" : "message_airnotifier_enable_device",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/message_airnotifier_enable_device_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/message_airnotifier_enable_device_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Enables or disables a registered user device so it can receive Push notifications",
        "tags" : [ "message_airnotifier" ]
      }
    },
    "/message_airnotifier_get_user_devices" : {
      "post" : {
        "description" : "Return the list of mobile devices that are registered in Moodle for the given user",
        "operationId" : "message_airnotifier_get_user_devices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/message_airnotifier_get_user_devices_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/message_airnotifier_get_user_devices_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the list of mobile devices that are registered in Moodle for the given user",
        "tags" : [ "message_airnotifier" ]
      }
    },
    "/message_airnotifier_is_system_configured" : {
      "post" : {
        "description" : "Check whether the airnotifier settings have been configured",
        "operationId" : "message_airnotifier_is_system_configured",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "0 if the system is not configured, 1 otherwise"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check whether the airnotifier settings have been configured",
        "tags" : [ "message_airnotifier" ]
      }
    },
    "/message_popup_get_popup_notifications" : {
      "post" : {
        "description" : "Retrieve a list of popup notifications for a user",
        "operationId" : "message_popup_get_popup_notifications",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/message_popup_get_popup_notifications_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/message_popup_get_popup_notifications_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of popup notifications for a user",
        "tags" : [ "message_popup" ]
      }
    },
    "/message_popup_get_unread_popup_notification_count" : {
      "post" : {
        "description" : "Retrieve the count of unread popup notifications for a given user",
        "operationId" : "message_popup_get_unread_popup_notification_count",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_message_get_unread_conversations_count_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "The count of unread popup notifications"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve the count of unread popup notifications for a given user",
        "tags" : [ "message_popup" ]
      }
    },
    "/mod_assign_copy_previous_attempt" : {
      "post" : {
        "description" : "Copy a students previous attempt to a new attempt.",
        "operationId" : "mod_assign_copy_previous_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_copy_previous_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Copy a students previous attempt to a new attempt.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_get_assignments" : {
      "post" : {
        "description" : "Returns the courses and assignments for the users capability",
        "operationId" : "mod_assign_get_assignments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_get_assignments_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_get_assignments_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the courses and assignments for the users capability",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_get_grades" : {
      "post" : {
        "description" : "Returns grades from the assignment",
        "operationId" : "mod_assign_get_grades",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_get_grades_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_get_grades_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns grades from the assignment",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_get_participant" : {
      "post" : {
        "description" : "Get a participant for an assignment, with some summary info about their submissions.",
        "operationId" : "mod_assign_get_participant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_get_participant_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_get_participant_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a participant for an assignment, with some summary info about their submissions.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_get_submission_status" : {
      "post" : {
        "description" : "Returns information about an assignment submission status for a given user.",
        "operationId" : "mod_assign_get_submission_status",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_get_submission_status_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns information about an assignment submission status for a given user.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_get_submissions" : {
      "post" : {
        "description" : "Returns the submissions for assignments",
        "operationId" : "mod_assign_get_submissions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_get_submissions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_get_submissions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the submissions for assignments",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_get_user_flags" : {
      "post" : {
        "description" : "Returns the user flags for assignments",
        "operationId" : "mod_assign_get_user_flags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_get_user_flags_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_get_user_flags_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the user flags for assignments",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_get_user_mappings" : {
      "post" : {
        "description" : "Returns the blind marking mappings for assignments",
        "operationId" : "mod_assign_get_user_mappings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_get_user_flags_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_get_user_mappings_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the blind marking mappings for assignments",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_list_participants" : {
      "post" : {
        "description" : "List the participants for a single assignment, with some summary info about their submissions.",
        "operationId" : "mod_assign_list_participants",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_list_participants_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List the participants for a single assignment, with some summary info about their submissions.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_lock_submissions" : {
      "post" : {
        "description" : "Prevent students from making changes to a list of submissions",
        "operationId" : "mod_assign_lock_submissions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_lock_submissions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Prevent students from making changes to a list of submissions",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_reveal_identities" : {
      "post" : {
        "description" : "Reveal the identities for a blind marking assignment",
        "operationId" : "mod_assign_reveal_identities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_reveal_identities_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Reveal the identities for a blind marking assignment",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_revert_submissions_to_draft" : {
      "post" : {
        "description" : "Reverts the list of submissions to draft status",
        "operationId" : "mod_assign_revert_submissions_to_draft",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_revert_submissions_to_draft_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Reverts the list of submissions to draft status",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_save_grade" : {
      "post" : {
        "description" : "Save a grade update for a single student.",
        "operationId" : "mod_assign_save_grade",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_save_grade_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Save a grade update for a single student.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_save_grades" : {
      "post" : {
        "description" : "Save multiple grade updates for an assignment.",
        "operationId" : "mod_assign_save_grades",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_save_grades_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Save multiple grade updates for an assignment.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_save_submission" : {
      "post" : {
        "description" : "Update the current students submission",
        "operationId" : "mod_assign_save_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_save_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the current students submission",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_save_user_extensions" : {
      "post" : {
        "description" : "Save a list of assignment extensions",
        "operationId" : "mod_assign_save_user_extensions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_save_user_extensions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Save a list of assignment extensions",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_set_user_flags" : {
      "post" : {
        "description" : "Creates or updates user flags",
        "operationId" : "mod_assign_set_user_flags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_set_user_flags_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates or updates user flags",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_start_submission" : {
      "post" : {
        "description" : "Start a submission for user if assignment has a time limit.",
        "operationId" : "mod_assign_start_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_start_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_assign_start_submission_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Start a submission for user if assignment has a time limit.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_submit_for_grading" : {
      "post" : {
        "description" : "Submit the current students assignment for grading",
        "operationId" : "mod_assign_submit_for_grading",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_submit_for_grading_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Submit the current students assignment for grading",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_submit_grading_form" : {
      "post" : {
        "description" : "Submit the grading form data via ajax",
        "operationId" : "mod_assign_submit_grading_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_submit_grading_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Submit the grading form data via ajax",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_unlock_submissions" : {
      "post" : {
        "description" : "Allow students to make changes to a list of submissions",
        "operationId" : "mod_assign_unlock_submissions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_revert_submissions_to_draft_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "list of warnings"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Allow students to make changes to a list of submissions",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_view_assign" : {
      "post" : {
        "description" : "Update the module completion status.",
        "operationId" : "mod_assign_view_assign",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_view_assign_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the module completion status.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_view_grading_table" : {
      "post" : {
        "description" : "Trigger the grading_table_viewed event.",
        "operationId" : "mod_assign_view_grading_table",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_view_assign_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the grading_table_viewed event.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_assign_view_submission_status" : {
      "post" : {
        "description" : "Trigger the submission status viewed event.",
        "operationId" : "mod_assign_view_submission_status",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_assign_view_assign_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the submission status viewed event.",
        "tags" : [ "mod_assign" ]
      }
    },
    "/mod_bigbluebuttonbn_can_join" : {
      "post" : {
        "description" : "Returns information if the current user can join or not.",
        "operationId" : "mod_bigbluebuttonbn_can_join",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_can_join_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_bigbluebuttonbn_can_join_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns information if the current user can join or not.",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_completion_validate" : {
      "post" : {
        "description" : "Validate completion",
        "operationId" : "mod_bigbluebuttonbn_completion_validate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_completion_validate_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Validate completion",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_end_meeting" : {
      "post" : {
        "description" : "End a meeting",
        "operationId" : "mod_bigbluebuttonbn_end_meeting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_end_meeting_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "End a meeting",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses" : {
      "post" : {
        "description" : "Returns a list of bigbluebuttonbns in a provided list of courses, if no list is provided\n                            all bigbluebuttonbns that the user can view will be returned.",
        "operationId" : "mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of bigbluebuttonbns in a provided list of courses, if no list is provided\n                            all bigbluebuttonbns that the user can view will be returned.",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_get_join_url" : {
      "post" : {
        "description" : "Get the join URL for the meeting and create if it does not exist.",
        "operationId" : "mod_bigbluebuttonbn_get_join_url",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_can_join_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_join_url_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the join URL for the meeting and create if it does not exist.",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_get_recordings" : {
      "post" : {
        "description" : "Returns a list of recordings ready to be processed by a datatable.",
        "operationId" : "mod_bigbluebuttonbn_get_recordings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of recordings ready to be processed by a datatable.",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_get_recordings_to_import" : {
      "post" : {
        "description" : "Returns a list of recordings ready to import to be processed by a datatable.",
        "operationId" : "mod_bigbluebuttonbn_get_recordings_to_import",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_to_import_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_to_import_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of recordings ready to import to be processed by a datatable.",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_meeting_info" : {
      "post" : {
        "description" : "Get displayable information on the meeting",
        "operationId" : "mod_bigbluebuttonbn_meeting_info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_meeting_info_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_bigbluebuttonbn_meeting_info_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get displayable information on the meeting",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_update_recording" : {
      "post" : {
        "description" : "Update a single recording",
        "operationId" : "mod_bigbluebuttonbn_update_recording",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_update_recording_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update a single recording",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_bigbluebuttonbn_view_bigbluebuttonbn" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_bigbluebuttonbn_view_bigbluebuttonbn",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_view_bigbluebuttonbn_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_bigbluebuttonbn" ]
      }
    },
    "/mod_book_get_books_by_courses" : {
      "post" : {
        "description" : "Returns a list of book instances in a provided set of courses,\n                            if no courses are provided then all the book instances the user has access to will be returned.",
        "operationId" : "mod_book_get_books_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_book_get_books_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_book_get_books_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of book instances in a provided set of courses,\n                            if no courses are provided then all the book instances the user has access to will be returned.",
        "tags" : [ "mod_book" ]
      }
    },
    "/mod_book_view_book" : {
      "post" : {
        "description" : "Simulate the view.php web interface book: trigger events, completion, etc...",
        "operationId" : "mod_book_view_book",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_book_view_book_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulate the view.php web interface book: trigger events, completion, etc...",
        "tags" : [ "mod_book" ]
      }
    },
    "/mod_chat_get_chat_latest_messages" : {
      "post" : {
        "description" : "Get the latest messages from the given chat session.",
        "operationId" : "mod_chat_get_chat_latest_messages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chat_latest_messages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_chat_get_chat_latest_messages_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the latest messages from the given chat session.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_get_chat_users" : {
      "post" : {
        "description" : "Get the list of users in the given chat session.",
        "operationId" : "mod_chat_get_chat_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chat_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_chat_get_chat_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the list of users in the given chat session.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_get_chats_by_courses" : {
      "post" : {
        "description" : "Returns a list of chat instances in a provided set of courses,\n                            if no courses are provided then all the chat instances the user has access to will be returned.",
        "operationId" : "mod_chat_get_chats_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of chat instances in a provided set of courses,\n                            if no courses are provided then all the chat instances the user has access to will be returned.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_get_session_messages" : {
      "post" : {
        "description" : "Retrieves messages of the given chat session.",
        "operationId" : "mod_chat_get_session_messages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_session_messages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_chat_get_session_messages_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves messages of the given chat session.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_get_sessions" : {
      "post" : {
        "description" : "Retrieves chat sessions for a given chat.",
        "operationId" : "mod_chat_get_sessions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_sessions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_chat_get_sessions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves chat sessions for a given chat.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_login_user" : {
      "post" : {
        "description" : "Log a user into a chat room in the given chat.",
        "operationId" : "mod_chat_login_user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_login_user_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_chat_login_user_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log a user into a chat room in the given chat.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_send_chat_message" : {
      "post" : {
        "description" : "Send a message on the given chat session.",
        "operationId" : "mod_chat_send_chat_message",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_send_chat_message_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_chat_send_chat_message_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Send a message on the given chat session.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_view_chat" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_chat_view_chat",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_view_chat_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_chat_view_sessions" : {
      "post" : {
        "description" : "Trigger the chat session viewed event.",
        "operationId" : "mod_chat_view_sessions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_view_sessions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the chat session viewed event.",
        "tags" : [ "mod_chat" ]
      }
    },
    "/mod_choice_delete_choice_responses" : {
      "post" : {
        "description" : "Delete the given submitted responses in a choice",
        "operationId" : "mod_choice_delete_choice_responses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_choice_delete_choice_responses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_choice_delete_choice_responses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete the given submitted responses in a choice",
        "tags" : [ "mod_choice" ]
      }
    },
    "/mod_choice_get_choice_options" : {
      "post" : {
        "description" : "Retrieve options for a specific choice.",
        "operationId" : "mod_choice_get_choice_options",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_choice_get_choice_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_choice_get_choice_options_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve options for a specific choice.",
        "tags" : [ "mod_choice" ]
      }
    },
    "/mod_choice_get_choice_results" : {
      "post" : {
        "description" : "Retrieve users results for a given choice.",
        "operationId" : "mod_choice_get_choice_results",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_choice_get_choice_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_choice_get_choice_results_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve users results for a given choice.",
        "tags" : [ "mod_choice" ]
      }
    },
    "/mod_choice_get_choices_by_courses" : {
      "post" : {
        "description" : "Returns a list of choice instances in a provided set of courses,\n                            if no courses are provided then all the choice instances the user has access to will be returned.",
        "operationId" : "mod_choice_get_choices_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_choice_get_choices_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of choice instances in a provided set of courses,\n                            if no courses are provided then all the choice instances the user has access to will be returned.",
        "tags" : [ "mod_choice" ]
      }
    },
    "/mod_choice_submit_choice_response" : {
      "post" : {
        "description" : "Submit responses to a specific choice item.",
        "operationId" : "mod_choice_submit_choice_response",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_choice_submit_choice_response_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_choice_submit_choice_response_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Submit responses to a specific choice item.",
        "tags" : [ "mod_choice" ]
      }
    },
    "/mod_choice_view_choice" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_choice_view_choice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_choice_get_choice_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_choice" ]
      }
    },
    "/mod_data_add_entry" : {
      "post" : {
        "description" : "Adds a new entry.",
        "operationId" : "mod_data_add_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_add_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_add_entry_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds a new entry.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_approve_entry" : {
      "post" : {
        "description" : "Approves or unapproves an entry.",
        "operationId" : "mod_data_approve_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_approve_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Approves or unapproves an entry.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_delete_entry" : {
      "post" : {
        "description" : "Deletes an entry.",
        "operationId" : "mod_data_delete_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_delete_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_delete_entry_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes an entry.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_delete_saved_preset" : {
      "post" : {
        "description" : "Delete site user preset.",
        "operationId" : "mod_data_delete_saved_preset",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_delete_saved_preset_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete site user preset.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_get_data_access_information" : {
      "post" : {
        "description" : "Return access information for a given database.",
        "operationId" : "mod_data_get_data_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_get_data_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_get_data_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return access information for a given database.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_get_databases_by_courses" : {
      "post" : {
        "description" : "Returns a list of database instances in a provided set of courses, if\n            no courses are provided then all the database instances the user has access to will be returned.",
        "operationId" : "mod_data_get_databases_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_get_databases_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of database instances in a provided set of courses, if\n            no courses are provided then all the database instances the user has access to will be returned.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_get_entries" : {
      "post" : {
        "description" : "Return the complete list of entries of the given database.",
        "operationId" : "mod_data_get_entries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_get_entries_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_get_entries_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the complete list of entries of the given database.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_get_entry" : {
      "post" : {
        "description" : "Return one entry record from the database, including contents optionally.",
        "operationId" : "mod_data_get_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_get_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_get_entry_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return one entry record from the database, including contents optionally.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_get_fields" : {
      "post" : {
        "description" : "Return the list of configured fields for the given database.",
        "operationId" : "mod_data_get_fields",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_get_fields_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_get_fields_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the list of configured fields for the given database.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_get_mapping_information" : {
      "post" : {
        "description" : "Get importing information",
        "operationId" : "mod_data_get_mapping_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_get_mapping_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_get_mapping_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get importing information",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_search_entries" : {
      "post" : {
        "description" : "Search for entries in the given database.",
        "operationId" : "mod_data_search_entries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_search_entries_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_search_entries_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search for entries in the given database.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_update_entry" : {
      "post" : {
        "description" : "Updates an existing entry.",
        "operationId" : "mod_data_update_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_update_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_data_update_entry_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates an existing entry.",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_data_view_database" : {
      "post" : {
        "description" : "Simulate the view.php web interface data: trigger events, completion, etc...",
        "operationId" : "mod_data_view_database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_data_view_database_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulate the view.php web interface data: trigger events, completion, etc...",
        "tags" : [ "mod_data" ]
      }
    },
    "/mod_feedback_get_analysis" : {
      "post" : {
        "description" : "Retrieves the feedback analysis.",
        "operationId" : "mod_feedback_get_analysis",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_analysis_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves the feedback analysis.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_current_completed_tmp" : {
      "post" : {
        "description" : "Returns the temporary completion record for the current user.",
        "operationId" : "mod_feedback_get_current_completed_tmp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_current_completed_tmp_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_current_completed_tmp_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the temporary completion record for the current user.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_feedback_access_information" : {
      "post" : {
        "description" : "Return access information for a given feedback.",
        "operationId" : "mod_feedback_get_feedback_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_feedback_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_feedback_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return access information for a given feedback.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_feedbacks_by_courses" : {
      "post" : {
        "description" : "Returns a list of feedbacks in a provided list of courses, if no list is provided all feedbacks that\n                            the user can view will be returned.",
        "operationId" : "mod_feedback_get_feedbacks_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_feedbacks_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of feedbacks in a provided list of courses, if no list is provided all feedbacks that\n                            the user can view will be returned.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_finished_responses" : {
      "post" : {
        "description" : "Retrieves responses from the last finished attempt.",
        "operationId" : "mod_feedback_get_finished_responses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_finished_responses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_finished_responses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves responses from the last finished attempt.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_items" : {
      "post" : {
        "description" : "Returns the items (questions) in the given feedback.",
        "operationId" : "mod_feedback_get_items",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_current_completed_tmp_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_items_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the items (questions) in the given feedback.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_last_completed" : {
      "post" : {
        "description" : "Retrieves the last completion record for the current user.",
        "operationId" : "mod_feedback_get_last_completed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_current_completed_tmp_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_last_completed_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves the last completion record for the current user.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_non_respondents" : {
      "post" : {
        "description" : "Retrieves a list of students who didn't submit the feedback.",
        "operationId" : "mod_feedback_get_non_respondents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_non_respondents_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_non_respondents_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves a list of students who didn't submit the feedback.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_page_items" : {
      "post" : {
        "description" : "Get a single feedback page items.",
        "operationId" : "mod_feedback_get_page_items",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_page_items_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_page_items_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a single feedback page items.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_responses_analysis" : {
      "post" : {
        "description" : "Return the feedback user responses analysis.",
        "operationId" : "mod_feedback_get_responses_analysis",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_responses_analysis_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_responses_analysis_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the feedback user responses analysis.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_get_unfinished_responses" : {
      "post" : {
        "description" : "Retrieves responses from the current unfinished attempt.",
        "operationId" : "mod_feedback_get_unfinished_responses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_finished_responses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_get_unfinished_responses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves responses from the current unfinished attempt.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_launch_feedback" : {
      "post" : {
        "description" : "Starts or continues a feedback submission.",
        "operationId" : "mod_feedback_launch_feedback",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_get_current_completed_tmp_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_launch_feedback_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Starts or continues a feedback submission.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_process_page" : {
      "post" : {
        "description" : "Process a jump between pages.",
        "operationId" : "mod_feedback_process_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_process_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_feedback_process_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Process a jump between pages.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_feedback_view_feedback" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_feedback_view_feedback",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_feedback_view_feedback_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_feedback" ]
      }
    },
    "/mod_folder_get_folders_by_courses" : {
      "post" : {
        "description" : "Returns a list of folders in a provided list of courses, if no list is provided all folders that\n                            the user can view will be returned. Please note that this WS is not returning the folder contents.",
        "operationId" : "mod_folder_get_folders_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_folder_get_folders_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of folders in a provided list of courses, if no list is provided all folders that\n                            the user can view will be returned. Please note that this WS is not returning the folder contents.",
        "tags" : [ "mod_folder" ]
      }
    },
    "/mod_folder_view_folder" : {
      "post" : {
        "description" : "Simulate the view.php web interface folder: trigger events, completion, etc...",
        "operationId" : "mod_folder_view_folder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_folder_view_folder_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulate the view.php web interface folder: trigger events, completion, etc...",
        "tags" : [ "mod_folder" ]
      }
    },
    "/mod_forum_add_discussion" : {
      "post" : {
        "description" : "Add a new discussion into an existing forum.",
        "operationId" : "mod_forum_add_discussion",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_add_discussion_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_add_discussion_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add a new discussion into an existing forum.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_add_discussion_post" : {
      "post" : {
        "description" : "Create new posts into an existing discussion.",
        "operationId" : "mod_forum_add_discussion_post",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_add_discussion_post_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create new posts into an existing discussion.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_can_add_discussion" : {
      "post" : {
        "description" : "Check if the current user can add discussions in the given forum (and optionally for the given group).",
        "operationId" : "mod_forum_can_add_discussion",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_can_add_discussion_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_can_add_discussion_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check if the current user can add discussions in the given forum (and optionally for the given group).",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_delete_post" : {
      "post" : {
        "description" : "Deletes a post or a discussion completely when the post is the discussion topic.",
        "operationId" : "mod_forum_delete_post",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_delete_post_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_delete_post_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes a post or a discussion completely when the post is the discussion topic.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_get_discussion_post" : {
      "post" : {
        "description" : "Get a particular discussion post.",
        "operationId" : "mod_forum_get_discussion_post",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_get_discussion_post_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a particular discussion post.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_get_discussion_posts" : {
      "post" : {
        "description" : "Returns a list of forum posts for a discussion.",
        "operationId" : "mod_forum_get_discussion_posts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of forum posts for a discussion.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_get_discussion_posts_by_userid" : {
      "post" : {
        "description" : "Returns a list of forum posts for a discussion for a user.",
        "operationId" : "mod_forum_get_discussion_posts_by_userid",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_by_userid_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_by_userid_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of forum posts for a discussion for a user.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_get_forum_access_information" : {
      "post" : {
        "description" : "Return capabilities information for a given forum.",
        "operationId" : "mod_forum_get_forum_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_get_forum_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_get_forum_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return capabilities information for a given forum.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_get_forum_discussions" : {
      "post" : {
        "description" : "Returns a list of forum discussions optionally sorted and paginated.",
        "operationId" : "mod_forum_get_forum_discussions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_get_forum_discussions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_get_forum_discussions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of forum discussions optionally sorted and paginated.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_get_forum_discussions_paginated" : {
      "post" : {
        "description" : "** DEPRECATED ** Please do not call this function any more.\n                          Returns a list of forum discussions optionally sorted and paginated.",
        "operationId" : "mod_forum_get_forum_discussions_paginated",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_get_forum_discussions_paginated_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_get_forum_discussions_paginated_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "** DEPRECATED ** Please do not call this function any more.\n                          Returns a list of forum discussions optionally sorted and paginated.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_get_forums_by_courses" : {
      "post" : {
        "description" : "Returns a list of forum instances in a provided set of courses, if\n            no courses are provided then all the forum instances the user has access to will be\n            returned.",
        "operationId" : "mod_forum_get_forums_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_get_forums_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of forum instances in a provided set of courses, if\n            no courses are provided then all the forum instances the user has access to will be\n            returned.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_prepare_draft_area_for_post" : {
      "post" : {
        "description" : "Prepares a draft area for editing a post.",
        "operationId" : "mod_forum_prepare_draft_area_for_post",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_prepare_draft_area_for_post_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_prepare_draft_area_for_post_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Prepares a draft area for editing a post.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_set_lock_state" : {
      "post" : {
        "description" : "Set the lock state for the discussion",
        "operationId" : "mod_forum_set_lock_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_set_lock_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_set_lock_state_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the lock state for the discussion",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_set_pin_state" : {
      "post" : {
        "description" : "Set the pin state",
        "operationId" : "mod_forum_set_pin_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_set_pin_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the pin state",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_set_subscription_state" : {
      "post" : {
        "description" : "Set the subscription state",
        "operationId" : "mod_forum_set_subscription_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_set_subscription_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the subscription state",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_toggle_favourite_state" : {
      "post" : {
        "description" : "Toggle the favourite state",
        "operationId" : "mod_forum_toggle_favourite_state",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_toggle_favourite_state_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Toggle the favourite state",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_update_discussion_post" : {
      "post" : {
        "description" : "Updates a post or a discussion topic post.",
        "operationId" : "mod_forum_update_discussion_post",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_update_discussion_post_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_forum_update_discussion_post_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates a post or a discussion topic post.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_view_forum" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_forum_view_forum",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_view_forum_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_forum_view_forum_discussion" : {
      "post" : {
        "description" : "Trigger the forum discussion viewed event.",
        "operationId" : "mod_forum_view_forum_discussion",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_forum_view_forum_discussion_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the forum discussion viewed event.",
        "tags" : [ "mod_forum" ]
      }
    },
    "/mod_glossary_add_entry" : {
      "post" : {
        "description" : "Add a new entry to a given glossary",
        "operationId" : "mod_glossary_add_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_add_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_add_entry_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add a new entry to a given glossary",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_delete_entry" : {
      "post" : {
        "description" : "Delete the given entry from the glossary.",
        "operationId" : "mod_glossary_delete_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_delete_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete the given entry from the glossary.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_authors" : {
      "post" : {
        "description" : "Get the authors.",
        "operationId" : "mod_glossary_get_authors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_authors_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_authors_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the authors.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_categories" : {
      "post" : {
        "description" : "Get the categories.",
        "operationId" : "mod_glossary_get_categories",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_categories_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_categories_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the categories.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_by_author" : {
      "post" : {
        "description" : "Browse entries by author.",
        "operationId" : "mod_glossary_get_entries_by_author",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries by author.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_by_author_id" : {
      "post" : {
        "description" : "Browse entries by author ID.",
        "operationId" : "mod_glossary_get_entries_by_author_id",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries by author ID.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_by_category" : {
      "post" : {
        "description" : "Browse entries by category.",
        "operationId" : "mod_glossary_get_entries_by_category",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_by_category_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_category_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries by category.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_by_date" : {
      "post" : {
        "description" : "Browse entries by date.",
        "operationId" : "mod_glossary_get_entries_by_date",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_by_date_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries by date.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_by_letter" : {
      "post" : {
        "description" : "Browse entries by letter.",
        "operationId" : "mod_glossary_get_entries_by_letter",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_by_letter_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries by letter.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_by_search" : {
      "post" : {
        "description" : "Browse entries by search query.",
        "operationId" : "mod_glossary_get_entries_by_search",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_by_search_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries by search query.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_by_term" : {
      "post" : {
        "description" : "Browse entries by term (concept or alias).",
        "operationId" : "mod_glossary_get_entries_by_term",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_by_term_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries by term (concept or alias).",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entries_to_approve" : {
      "post" : {
        "description" : "Browse entries to be approved.",
        "operationId" : "mod_glossary_get_entries_to_approve",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entries_to_approve_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Browse entries to be approved.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_entry_by_id" : {
      "post" : {
        "description" : "Get an entry by ID",
        "operationId" : "mod_glossary_get_entry_by_id",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entry_by_id_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_entry_by_id_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get an entry by ID",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_get_glossaries_by_courses" : {
      "post" : {
        "description" : "Retrieve a list of glossaries from several courses.",
        "operationId" : "mod_glossary_get_glossaries_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_get_glossaries_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve a list of glossaries from several courses.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_prepare_entry_for_edition" : {
      "post" : {
        "description" : "Prepares the given entry for edition returning draft item areas and file areas information.",
        "operationId" : "mod_glossary_prepare_entry_for_edition",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_prepare_entry_for_edition_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_prepare_entry_for_edition_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Prepares the given entry for edition returning draft item areas and file areas information.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_update_entry" : {
      "post" : {
        "description" : "Updates the given glossary entry.",
        "operationId" : "mod_glossary_update_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_update_entry_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_update_entry_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates the given glossary entry.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_view_entry" : {
      "post" : {
        "description" : "Notify a glossary entry as being viewed.",
        "operationId" : "mod_glossary_view_entry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_get_entry_by_id_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_view_entry_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Notify a glossary entry as being viewed.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_glossary_view_glossary" : {
      "post" : {
        "description" : "Notify the glossary as being viewed.",
        "operationId" : "mod_glossary_view_glossary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_glossary_view_glossary_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_glossary_view_glossary_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Notify the glossary as being viewed.",
        "tags" : [ "mod_glossary" ]
      }
    },
    "/mod_h5pactivity_get_attempts" : {
      "post" : {
        "description" : "Return the information needed to list a user attempts.",
        "operationId" : "mod_h5pactivity_get_attempts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_200_response"
                }
              }
            },
            "description" : "Activity attempts data"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the information needed to list a user attempts.",
        "tags" : [ "mod_h5pactivity" ]
      }
    },
    "/mod_h5pactivity_get_h5pactivities_by_courses" : {
      "post" : {
        "description" : "Returns a list of h5p activities in a list of\n            provided courses, if no list is provided all h5p activities\n            that the user can view will be returned.",
        "operationId" : "mod_h5pactivity_get_h5pactivities_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_h5pactivity_get_h5pactivities_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of h5p activities in a list of\n            provided courses, if no list is provided all h5p activities\n            that the user can view will be returned.",
        "tags" : [ "mod_h5pactivity" ]
      }
    },
    "/mod_h5pactivity_get_h5pactivity_access_information" : {
      "post" : {
        "description" : "Return access information for a given h5p activity.",
        "operationId" : "mod_h5pactivity_get_h5pactivity_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_h5pactivity_get_h5pactivity_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_h5pactivity_get_h5pactivity_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return access information for a given h5p activity.",
        "tags" : [ "mod_h5pactivity" ]
      }
    },
    "/mod_h5pactivity_get_results" : {
      "post" : {
        "description" : "Return the information needed to list a user attempt results.",
        "operationId" : "mod_h5pactivity_get_results",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_h5pactivity_get_results_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_h5pactivity_get_results_200_response"
                }
              }
            },
            "description" : "Activity attempts results data"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the information needed to list a user attempt results.",
        "tags" : [ "mod_h5pactivity" ]
      }
    },
    "/mod_h5pactivity_get_user_attempts" : {
      "post" : {
        "description" : "Return the information needed to list all enrolled user attempts.",
        "operationId" : "mod_h5pactivity_get_user_attempts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_h5pactivity_get_user_attempts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_h5pactivity_get_user_attempts_200_response"
                }
              }
            },
            "description" : "Activity attempts data"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the information needed to list all enrolled user attempts.",
        "tags" : [ "mod_h5pactivity" ]
      }
    },
    "/mod_h5pactivity_log_report_viewed" : {
      "post" : {
        "description" : "Log that the h5pactivity was viewed.",
        "operationId" : "mod_h5pactivity_log_report_viewed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_h5pactivity_log_report_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Log that the h5pactivity was viewed.",
        "tags" : [ "mod_h5pactivity" ]
      }
    },
    "/mod_h5pactivity_view_h5pactivity" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_h5pactivity_view_h5pactivity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_h5pactivity_view_h5pactivity_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_h5pactivity" ]
      }
    },
    "/mod_imscp_get_imscps_by_courses" : {
      "post" : {
        "description" : "Returns a list of IMSCP instances in a provided set of courses,\n                            if no courses are provided then all the IMSCP instances the user has access to will be returned.",
        "operationId" : "mod_imscp_get_imscps_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_imscp_get_imscps_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of IMSCP instances in a provided set of courses,\n                            if no courses are provided then all the IMSCP instances the user has access to will be returned.",
        "tags" : [ "mod_imscp" ]
      }
    },
    "/mod_imscp_view_imscp" : {
      "post" : {
        "description" : "Simulate the view.php web interface imscp: trigger events, completion, etc...",
        "operationId" : "mod_imscp_view_imscp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_imscp_view_imscp_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulate the view.php web interface imscp: trigger events, completion, etc...",
        "tags" : [ "mod_imscp" ]
      }
    },
    "/mod_iomadcertificate_get_iomadcertificates_by_courses" : {
      "post" : {
        "description" : "Returns a list of iomadcertificate instances in a provided set of courses, if\n                            no courses are provided then all the iomadcertificate instances the user has access to will be returned.",
        "operationId" : "mod_iomadcertificate_get_iomadcertificates_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_iomadcertificate_get_iomadcertificates_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of iomadcertificate instances in a provided set of courses, if\n                            no courses are provided then all the iomadcertificate instances the user has access to will be returned.",
        "tags" : [ "mod_iomadcertificate" ]
      }
    },
    "/mod_iomadcertificate_get_issued_iomadcertificates" : {
      "post" : {
        "description" : "Get the list of issued iomadcertificates for the current user.",
        "operationId" : "mod_iomadcertificate_get_issued_iomadcertificates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_iomadcertificate_get_issued_iomadcertificates_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_iomadcertificate_get_issued_iomadcertificates_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the list of issued iomadcertificates for the current user.",
        "tags" : [ "mod_iomadcertificate" ]
      }
    },
    "/mod_iomadcertificate_issue_iomadcertificate" : {
      "post" : {
        "description" : "Create new iomadcertificate record, or return existing record for the current user.",
        "operationId" : "mod_iomadcertificate_issue_iomadcertificate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_iomadcertificate_issue_iomadcertificate_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_iomadcertificate_issue_iomadcertificate_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create new iomadcertificate record, or return existing record for the current user.",
        "tags" : [ "mod_iomadcertificate" ]
      }
    },
    "/mod_iomadcertificate_view_iomadcertificate" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_iomadcertificate_view_iomadcertificate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_iomadcertificate_issue_iomadcertificate_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_iomadcertificate" ]
      }
    },
    "/mod_label_get_labels_by_courses" : {
      "post" : {
        "description" : "Returns a list of labels in a provided list of courses, if no list is provided all labels that the user\n                            can view will be returned.",
        "operationId" : "mod_label_get_labels_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_label_get_labels_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of labels in a provided list of courses, if no list is provided all labels that the user\n                            can view will be returned.",
        "tags" : [ "mod_label" ]
      }
    },
    "/mod_lesson_finish_attempt" : {
      "post" : {
        "description" : "Finishes the current attempt.",
        "operationId" : "mod_lesson_finish_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_finish_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_finish_attempt_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Finishes the current attempt.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_attempts_overview" : {
      "post" : {
        "description" : "Get a list of all the attempts made by users in a lesson.",
        "operationId" : "mod_lesson_get_attempts_overview",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_attempts_overview_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_attempts_overview_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a list of all the attempts made by users in a lesson.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_content_pages_viewed" : {
      "post" : {
        "description" : "Return the list of content pages viewed by a user during a lesson attempt.",
        "operationId" : "mod_lesson_get_content_pages_viewed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_content_pages_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_content_pages_viewed_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the list of content pages viewed by a user during a lesson attempt.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_lesson" : {
      "post" : {
        "description" : "Return information of a given lesson.",
        "operationId" : "mod_lesson_get_lesson",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_lesson_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_lesson_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return information of a given lesson.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_lesson_access_information" : {
      "post" : {
        "description" : "Return access information for a given lesson.",
        "operationId" : "mod_lesson_get_lesson_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_lesson_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_lesson_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return access information for a given lesson.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_lessons_by_courses" : {
      "post" : {
        "description" : "Returns a list of lessons in a provided list of courses,\n                            if no list is provided all lessons that the user can view will be returned.",
        "operationId" : "mod_lesson_get_lessons_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_lessons_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of lessons in a provided list of courses,\n                            if no list is provided all lessons that the user can view will be returned.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_page_data" : {
      "post" : {
        "description" : "Return information of a given page, including its contents.",
        "operationId" : "mod_lesson_get_page_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_page_data_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_page_data_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return information of a given page, including its contents.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_pages" : {
      "post" : {
        "description" : "Return the list of pages in a lesson (based on the user permissions).",
        "operationId" : "mod_lesson_get_pages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_pages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_pages_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the list of pages in a lesson (based on the user permissions).",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_pages_possible_jumps" : {
      "post" : {
        "description" : "Return all the possible jumps for the pages in a given lesson.",
        "operationId" : "mod_lesson_get_pages_possible_jumps",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_lesson_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_pages_possible_jumps_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return all the possible jumps for the pages in a given lesson.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_questions_attempts" : {
      "post" : {
        "description" : "Return the list of questions attempts in a given lesson.",
        "operationId" : "mod_lesson_get_questions_attempts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_questions_attempts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_questions_attempts_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the list of questions attempts in a given lesson.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_user_attempt" : {
      "post" : {
        "description" : "Return information about the given user attempt (including answers).",
        "operationId" : "mod_lesson_get_user_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return information about the given user attempt (including answers).",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_user_attempt_grade" : {
      "post" : {
        "description" : "Return grade information in the attempt for a given user.",
        "operationId" : "mod_lesson_get_user_attempt_grade",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_grade_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_grade_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return grade information in the attempt for a given user.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_user_grade" : {
      "post" : {
        "description" : "Return the final grade in the lesson for the given user.",
        "operationId" : "mod_lesson_get_user_grade",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_user_grade_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_user_grade_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the final grade in the lesson for the given user.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_get_user_timers" : {
      "post" : {
        "description" : "Return the timers in the current lesson for the given user.",
        "operationId" : "mod_lesson_get_user_timers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_user_grade_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_get_user_timers_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the timers in the current lesson for the given user.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_launch_attempt" : {
      "post" : {
        "description" : "Starts a new attempt or continues an existing one.",
        "operationId" : "mod_lesson_launch_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_launch_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_launch_attempt_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Starts a new attempt or continues an existing one.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_process_page" : {
      "post" : {
        "description" : "Processes page responses.",
        "operationId" : "mod_lesson_process_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_process_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lesson_process_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Processes page responses.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lesson_view_lesson" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_lesson_view_lesson",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lesson_get_lesson_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_lesson" ]
      }
    },
    "/mod_lti_create_tool_proxy" : {
      "post" : {
        "description" : "Create a tool proxy",
        "operationId" : "mod_lti_create_tool_proxy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_create_tool_proxy_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_create_tool_proxy_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create a tool proxy",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_create_tool_type" : {
      "post" : {
        "description" : "Create a tool type",
        "operationId" : "mod_lti_create_tool_type",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_create_tool_type_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_create_tool_type_200_response"
                }
              }
            },
            "description" : "Tool"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create a tool type",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_delete_course_tool_type" : {
      "post" : {
        "description" : "Delete a course tool type",
        "operationId" : "mod_lti_delete_course_tool_type",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_delete_course_tool_type_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a course tool type",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_delete_tool_proxy" : {
      "post" : {
        "description" : "Delete a tool proxy",
        "operationId" : "mod_lti_delete_tool_proxy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_delete_tool_proxy_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_delete_tool_proxy_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a tool proxy",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_delete_tool_type" : {
      "post" : {
        "description" : "Delete a tool type",
        "operationId" : "mod_lti_delete_tool_type",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_delete_tool_type_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_delete_tool_type_request"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Delete a tool type",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_get_ltis_by_courses" : {
      "post" : {
        "description" : "Returns a list of external tool instances in a provided set of courses, if\n                            no courses are provided then all the external tool instances the user has access to will be returned.",
        "operationId" : "mod_lti_get_ltis_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_get_ltis_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of external tool instances in a provided set of courses, if\n                            no courses are provided then all the external tool instances the user has access to will be returned.",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_get_tool_launch_data" : {
      "post" : {
        "description" : "Return the launch data for a given external tool.",
        "operationId" : "mod_lti_get_tool_launch_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_get_tool_launch_data_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_get_tool_launch_data_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the launch data for a given external tool.",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_get_tool_proxies" : {
      "post" : {
        "description" : "Get a list of the tool proxies",
        "operationId" : "mod_lti_get_tool_proxies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_get_tool_proxies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a list of the tool proxies",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_get_tool_proxy_registration_request" : {
      "post" : {
        "description" : "Get a registration request for a tool proxy",
        "operationId" : "mod_lti_get_tool_proxy_registration_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_delete_tool_proxy_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_get_tool_proxy_registration_request_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a registration request for a tool proxy",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_get_tool_types" : {
      "post" : {
        "description" : "Get a list of the tool types",
        "operationId" : "mod_lti_get_tool_types",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_get_tool_types_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a list of the tool types",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_get_tool_types_and_proxies" : {
      "post" : {
        "description" : "Get a list of the tool types and tool proxies",
        "operationId" : "mod_lti_get_tool_types_and_proxies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get a list of the tool types and tool proxies",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_get_tool_types_and_proxies_count" : {
      "post" : {
        "description" : "Get total number of the tool types and tool proxies",
        "operationId" : "mod_lti_get_tool_types_and_proxies_count",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_count_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_count_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get total number of the tool types and tool proxies",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_is_cartridge" : {
      "post" : {
        "description" : "Determine if the given url is for a cartridge",
        "operationId" : "mod_lti_is_cartridge",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_is_cartridge_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_is_cartridge_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Determine if the given url is for a cartridge",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_toggle_showinactivitychooser" : {
      "post" : {
        "description" : "Toggle showinactivitychooser for a tool type in a course",
        "operationId" : "mod_lti_toggle_showinactivitychooser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_toggle_showinactivitychooser_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Toggle showinactivitychooser for a tool type in a course",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_update_tool_type" : {
      "post" : {
        "description" : "Update a tool type",
        "operationId" : "mod_lti_update_tool_type",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_update_tool_type_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_lti_update_tool_type_200_response"
                }
              }
            },
            "description" : "Tool"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update a tool type",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_lti_view_lti" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_lti_view_lti",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_lti_view_lti_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_lti" ]
      }
    },
    "/mod_page_get_pages_by_courses" : {
      "post" : {
        "description" : "Returns a list of pages in a provided list of courses, if no list is provided all pages that the user\n                            can view will be returned.",
        "operationId" : "mod_page_get_pages_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_page_get_pages_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of pages in a provided list of courses, if no list is provided all pages that the user\n                            can view will be returned.",
        "tags" : [ "mod_page" ]
      }
    },
    "/mod_page_view_page" : {
      "post" : {
        "description" : "Simulate the view.php web interface page: trigger events, completion, etc...",
        "operationId" : "mod_page_view_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_page_view_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulate the view.php web interface page: trigger events, completion, etc...",
        "tags" : [ "mod_page" ]
      }
    },
    "/mod_quiz_add_random_questions" : {
      "post" : {
        "description" : "Add a number of random questions to a quiz.",
        "operationId" : "mod_quiz_add_random_questions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_add_random_questions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_add_random_questions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add a number of random questions to a quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_attempt_access_information" : {
      "post" : {
        "description" : "Return access information for a given attempt in a quiz.",
        "operationId" : "mod_quiz_get_attempt_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_attempt_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_attempt_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return access information for a given attempt in a quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_attempt_data" : {
      "post" : {
        "description" : "Returns information for the given attempt page for a quiz attempt in progress.",
        "operationId" : "mod_quiz_get_attempt_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns information for the given attempt page for a quiz attempt in progress.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_attempt_review" : {
      "post" : {
        "description" : "Returns review information for the given finished attempt, can be used by users or teachers.",
        "operationId" : "mod_quiz_get_attempt_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns review information for the given finished attempt, can be used by users or teachers.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_attempt_summary" : {
      "post" : {
        "description" : "Returns a summary of a quiz attempt before it is submitted.",
        "operationId" : "mod_quiz_get_attempt_summary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_attempt_summary_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_attempt_summary_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a summary of a quiz attempt before it is submitted.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_combined_review_options" : {
      "post" : {
        "description" : "Combines the review options from a number of different quiz attempts.",
        "operationId" : "mod_quiz_get_combined_review_options",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_combined_review_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_combined_review_options_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Combines the review options from a number of different quiz attempts.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_quiz_access_information" : {
      "post" : {
        "description" : "Return access information for a given quiz.",
        "operationId" : "mod_quiz_get_quiz_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_quiz_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_quiz_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return access information for a given quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_quiz_feedback_for_grade" : {
      "post" : {
        "description" : "Get the feedback text that should be show to a student who got the given grade in the given quiz.",
        "operationId" : "mod_quiz_get_quiz_feedback_for_grade",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_quiz_feedback_for_grade_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_quiz_feedback_for_grade_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the feedback text that should be show to a student who got the given grade in the given quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_quiz_required_qtypes" : {
      "post" : {
        "description" : "Return the potential question types that would be required for a given quiz.",
        "operationId" : "mod_quiz_get_quiz_required_qtypes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_quiz_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_quiz_required_qtypes_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the potential question types that would be required for a given quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_quizzes_by_courses" : {
      "post" : {
        "description" : "Returns a list of quizzes in a provided list of courses,\n                            if no list is provided all quizzes that the user can view will be returned.",
        "operationId" : "mod_quiz_get_quizzes_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_quizzes_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of quizzes in a provided list of courses,\n                            if no list is provided all quizzes that the user can view will be returned.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_reopen_attempt_confirmation" : {
      "post" : {
        "description" : "Verify it is OK to re-open a given quiz attempt, and if so, return a suitable confirmation message.",
        "operationId" : "mod_quiz_get_reopen_attempt_confirmation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_reopen_attempt_confirmation_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Confirmation to show the user before the attempt is reopened."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Verify it is OK to re-open a given quiz attempt, and if so, return a suitable confirmation message.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_user_attempts" : {
      "post" : {
        "description" : "Return a list of attempts for the given quiz and user.",
        "operationId" : "mod_quiz_get_user_attempts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_user_attempts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_user_attempts_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return a list of attempts for the given quiz and user.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_get_user_best_grade" : {
      "post" : {
        "description" : "Get the best current grade for the given user on a quiz.",
        "operationId" : "mod_quiz_get_user_best_grade",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_user_best_grade_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_get_user_best_grade_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the best current grade for the given user on a quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_process_attempt" : {
      "post" : {
        "description" : "Process responses during an attempt at a quiz and also deals with attempts finishing.",
        "operationId" : "mod_quiz_process_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_process_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_process_attempt_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Process responses during an attempt at a quiz and also deals with attempts finishing.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_reopen_attempt" : {
      "post" : {
        "description" : "Re-open an attempt that is currently in the never submitted state.",
        "operationId" : "mod_quiz_reopen_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_reopen_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Re-open an attempt that is currently in the never submitted state.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_save_attempt" : {
      "post" : {
        "description" : "Processes save requests during the quiz.\n                            This function is intended for the quiz auto-save feature.",
        "operationId" : "mod_quiz_save_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_save_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Processes save requests during the quiz.\n                            This function is intended for the quiz auto-save feature.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_set_question_version" : {
      "post" : {
        "description" : "Set the version of question that would be required for a given quiz.",
        "operationId" : "mod_quiz_set_question_version",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_set_question_version_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_set_question_version_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Set the version of question that would be required for a given quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_start_attempt" : {
      "post" : {
        "description" : "Starts a new attempt at a quiz.",
        "operationId" : "mod_quiz_start_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_start_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_start_attempt_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Starts a new attempt at a quiz.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_update_filter_condition" : {
      "post" : {
        "description" : "Update filter condition for a random question slot.",
        "operationId" : "mod_quiz_update_filter_condition",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_update_filter_condition_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_quiz_add_random_questions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update filter condition for a random question slot.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_view_attempt" : {
      "post" : {
        "description" : "Trigger the attempt viewed event.",
        "operationId" : "mod_quiz_view_attempt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_view_attempt_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the attempt viewed event.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_view_attempt_review" : {
      "post" : {
        "description" : "Trigger the attempt reviewed event.",
        "operationId" : "mod_quiz_view_attempt_review",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_view_attempt_review_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the attempt reviewed event.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_view_attempt_summary" : {
      "post" : {
        "description" : "Trigger the attempt summary viewed event.",
        "operationId" : "mod_quiz_view_attempt_summary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_attempt_summary_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the attempt summary viewed event.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_quiz_view_quiz" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_quiz_view_quiz",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_quiz_get_quiz_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_quiz" ]
      }
    },
    "/mod_resource_get_resources_by_courses" : {
      "post" : {
        "description" : "Returns a list of files in a provided list of courses, if no list is provided all files that\n                            the user can view will be returned.",
        "operationId" : "mod_resource_get_resources_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_resource_get_resources_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of files in a provided list of courses, if no list is provided all files that\n                            the user can view will be returned.",
        "tags" : [ "mod_resource" ]
      }
    },
    "/mod_resource_view_resource" : {
      "post" : {
        "description" : "Simulate the view.php web interface resource: trigger events, completion, etc...",
        "operationId" : "mod_resource_view_resource",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_resource_view_resource_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Simulate the view.php web interface resource: trigger events, completion, etc...",
        "tags" : [ "mod_resource" ]
      }
    },
    "/mod_scorm_get_scorm_access_information" : {
      "post" : {
        "description" : "Return capabilities information for a given scorm.",
        "operationId" : "mod_scorm_get_scorm_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_get_scorm_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_scorm_get_scorm_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return capabilities information for a given scorm.",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_get_scorm_attempt_count" : {
      "post" : {
        "description" : "Return the number of attempts done by a user in the given SCORM.",
        "operationId" : "mod_scorm_get_scorm_attempt_count",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_get_scorm_attempt_count_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_scorm_get_scorm_attempt_count_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the number of attempts done by a user in the given SCORM.",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_get_scorm_sco_tracks" : {
      "post" : {
        "description" : "Retrieves SCO tracking data for the given user id and attempt number",
        "operationId" : "mod_scorm_get_scorm_sco_tracks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_get_scorm_sco_tracks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_scorm_get_scorm_sco_tracks_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves SCO tracking data for the given user id and attempt number",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_get_scorm_scoes" : {
      "post" : {
        "description" : "Returns a list containing all the scoes data related to the given scorm id",
        "operationId" : "mod_scorm_get_scorm_scoes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_get_scorm_scoes_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_scorm_get_scorm_scoes_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list containing all the scoes data related to the given scorm id",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_get_scorm_user_data" : {
      "post" : {
        "description" : "Retrieves user tracking and SCO data and default SCORM values",
        "operationId" : "mod_scorm_get_scorm_user_data",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_get_scorm_user_data_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_scorm_get_scorm_user_data_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves user tracking and SCO data and default SCORM values",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_get_scorms_by_courses" : {
      "post" : {
        "description" : "Returns a list of scorm instances in a provided set of courses, if\n                            no courses are provided then all the scorm instances the user has access to will be returned.",
        "operationId" : "mod_scorm_get_scorms_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_scorm_get_scorms_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of scorm instances in a provided set of courses, if\n                            no courses are provided then all the scorm instances the user has access to will be returned.",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_insert_scorm_tracks" : {
      "post" : {
        "description" : "Saves a scorm tracking record.\n                          It will overwrite any existing tracking data for this attempt.\n                          Validation should be performed before running the function to ensure the user will not lose any existing\n                          attempt data.",
        "operationId" : "mod_scorm_insert_scorm_tracks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_insert_scorm_tracks_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_scorm_insert_scorm_tracks_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Saves a scorm tracking record.\n                          It will overwrite any existing tracking data for this attempt.\n                          Validation should be performed before running the function to ensure the user will not lose any existing\n                          attempt data.",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_launch_sco" : {
      "post" : {
        "description" : "Trigger the SCO launched event.",
        "operationId" : "mod_scorm_launch_sco",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_launch_sco_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the SCO launched event.",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_scorm_view_scorm" : {
      "post" : {
        "description" : "Trigger the course module viewed event.",
        "operationId" : "mod_scorm_view_scorm",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_scorm_view_scorm_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event.",
        "tags" : [ "mod_scorm" ]
      }
    },
    "/mod_survey_get_questions" : {
      "post" : {
        "description" : "Get the complete list of questions for the survey, including subquestions.",
        "operationId" : "mod_survey_get_questions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_survey_get_questions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_survey_get_questions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the complete list of questions for the survey, including subquestions.",
        "tags" : [ "mod_survey" ]
      }
    },
    "/mod_survey_get_surveys_by_courses" : {
      "post" : {
        "description" : "Returns a list of survey instances in a provided set of courses,\n                            if no courses are provided then all the survey instances the user has access to will be returned.",
        "operationId" : "mod_survey_get_surveys_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_survey_get_surveys_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of survey instances in a provided set of courses,\n                            if no courses are provided then all the survey instances the user has access to will be returned.",
        "tags" : [ "mod_survey" ]
      }
    },
    "/mod_survey_submit_answers" : {
      "post" : {
        "description" : "Submit the answers for a given survey.",
        "operationId" : "mod_survey_submit_answers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_survey_submit_answers_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Submit the answers for a given survey.",
        "tags" : [ "mod_survey" ]
      }
    },
    "/mod_survey_view_survey" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_survey_view_survey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_survey_view_survey_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_survey" ]
      }
    },
    "/mod_url_get_urls_by_courses" : {
      "post" : {
        "description" : "Returns a list of urls in a provided list of courses, if no list is provided all urls that the user\n                            can view will be returned.",
        "operationId" : "mod_url_get_urls_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_url_get_urls_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of urls in a provided list of courses, if no list is provided all urls that the user\n                            can view will be returned.",
        "tags" : [ "mod_url" ]
      }
    },
    "/mod_url_view_url" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_url_view_url",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_url_view_url_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_url" ]
      }
    },
    "/mod_wiki_edit_page" : {
      "post" : {
        "description" : "Save the contents of a page.",
        "operationId" : "mod_wiki_edit_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_edit_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_edit_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Save the contents of a page.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_get_page_contents" : {
      "post" : {
        "description" : "Returns the contents of a page.",
        "operationId" : "mod_wiki_get_page_contents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_get_page_contents_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_get_page_contents_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the contents of a page.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_get_page_for_editing" : {
      "post" : {
        "description" : "Locks and retrieves info of page-section to be edited.",
        "operationId" : "mod_wiki_get_page_for_editing",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_get_page_for_editing_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_get_page_for_editing_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Locks and retrieves info of page-section to be edited.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_get_subwiki_files" : {
      "post" : {
        "description" : "Returns the list of files for a specific subwiki.",
        "operationId" : "mod_wiki_get_subwiki_files",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_get_subwiki_files_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_h5p_get_trusted_h5p_file_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the list of files for a specific subwiki.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_get_subwiki_pages" : {
      "post" : {
        "description" : "Returns the list of pages for a specific subwiki.",
        "operationId" : "mod_wiki_get_subwiki_pages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_get_subwiki_pages_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_get_subwiki_pages_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the list of pages for a specific subwiki.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_get_subwikis" : {
      "post" : {
        "description" : "Returns the list of subwikis the user can see in a specific wiki.",
        "operationId" : "mod_wiki_get_subwikis",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_get_subwikis_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_get_subwikis_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the list of subwikis the user can see in a specific wiki.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_get_wikis_by_courses" : {
      "post" : {
        "description" : "Returns a list of wiki instances in a provided set of courses, if no courses are provided then all the wiki instances the user has access to will be returned.",
        "operationId" : "mod_wiki_get_wikis_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_get_wikis_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_get_wikis_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of wiki instances in a provided set of courses, if no courses are provided then all the wiki instances the user has access to will be returned.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_new_page" : {
      "post" : {
        "description" : "Create a new page in a subwiki.",
        "operationId" : "mod_wiki_new_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_new_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_new_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Create a new page in a subwiki.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_view_page" : {
      "post" : {
        "description" : "Trigger the page viewed event and update the module completion status.",
        "operationId" : "mod_wiki_view_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_view_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_view_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the page viewed event and update the module completion status.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_wiki_view_wiki" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_wiki_view_wiki",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_wiki_get_subwikis_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_wiki_view_wiki_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_wiki" ]
      }
    },
    "/mod_workshop_add_submission" : {
      "post" : {
        "description" : "Add a new submission to a given workshop.",
        "operationId" : "mod_workshop_add_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_add_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_add_submission_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add a new submission to a given workshop.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_delete_submission" : {
      "post" : {
        "description" : "Deletes the given submission.",
        "operationId" : "mod_workshop_delete_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_delete_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_delete_submission_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes the given submission.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_evaluate_assessment" : {
      "post" : {
        "description" : "Evaluates an assessment (used by teachers for provide feedback to the reviewer).",
        "operationId" : "mod_workshop_evaluate_assessment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_evaluate_assessment_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_evaluate_assessment_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Evaluates an assessment (used by teachers for provide feedback to the reviewer).",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_evaluate_submission" : {
      "post" : {
        "description" : "Evaluates a submission (used by teachers for provide feedback or override the submission grade).",
        "operationId" : "mod_workshop_evaluate_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_evaluate_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_evaluate_submission_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Evaluates a submission (used by teachers for provide feedback or override the submission grade).",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_assessment" : {
      "post" : {
        "description" : "Retrieves the given assessment.",
        "operationId" : "mod_workshop_get_assessment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_assessment_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_assessment_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves the given assessment.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_assessment_form_definition" : {
      "post" : {
        "description" : "Retrieves the assessment form definition.",
        "operationId" : "mod_workshop_get_assessment_form_definition",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_assessment_form_definition_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_assessment_form_definition_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves the assessment form definition.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_grades" : {
      "post" : {
        "description" : "Returns the assessment and submission grade for the given user.",
        "operationId" : "mod_workshop_get_grades",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_grades_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_grades_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the assessment and submission grade for the given user.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_grades_report" : {
      "post" : {
        "description" : "Retrieves the assessment grades report.",
        "operationId" : "mod_workshop_get_grades_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_grades_report_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_grades_report_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves the assessment grades report.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_reviewer_assessments" : {
      "post" : {
        "description" : "Retrieves all the assessments reviewed by the given user.",
        "operationId" : "mod_workshop_get_reviewer_assessments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_reviewer_assessments_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_reviewer_assessments_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves all the assessments reviewed by the given user.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_submission" : {
      "post" : {
        "description" : "Retrieves the given submission.",
        "operationId" : "mod_workshop_get_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_submission_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves the given submission.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_submission_assessments" : {
      "post" : {
        "description" : "Retrieves all the assessments of the given submission.",
        "operationId" : "mod_workshop_get_submission_assessments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_reviewer_assessments_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves all the assessments of the given submission.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_submissions" : {
      "post" : {
        "description" : "Retrieves all the workshop submissions or the one done by the given user (except example submissions).",
        "operationId" : "mod_workshop_get_submissions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_submissions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_submissions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieves all the workshop submissions or the one done by the given user (except example submissions).",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_user_plan" : {
      "post" : {
        "description" : "Return the planner information for the given user.",
        "operationId" : "mod_workshop_get_user_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_user_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_user_plan_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return the planner information for the given user.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_workshop_access_information" : {
      "post" : {
        "description" : "Return access information for a given workshop.",
        "operationId" : "mod_workshop_get_workshop_access_information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_workshop_access_information_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_workshop_access_information_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return access information for a given workshop.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_get_workshops_by_courses" : {
      "post" : {
        "description" : "Returns a list of workshops in a provided list of courses, if no list is provided all workshops that\n                            the user can view will be returned.",
        "operationId" : "mod_workshop_get_workshops_by_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_get_workshops_by_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of workshops in a provided list of courses, if no list is provided all workshops that\n                            the user can view will be returned.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_update_assessment" : {
      "post" : {
        "description" : "Add information to an allocated assessment.",
        "operationId" : "mod_workshop_update_assessment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_update_assessment_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_update_assessment_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Add information to an allocated assessment.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_update_submission" : {
      "post" : {
        "description" : "Update the given submission.",
        "operationId" : "mod_workshop_update_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_update_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mod_workshop_update_submission_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the given submission.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_view_submission" : {
      "post" : {
        "description" : "Trigger the submission viewed event.",
        "operationId" : "mod_workshop_view_submission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_get_submission_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the submission viewed event.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/mod_workshop_view_workshop" : {
      "post" : {
        "description" : "Trigger the course module viewed event and update the module completion status.",
        "operationId" : "mod_workshop_view_workshop",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mod_workshop_view_workshop_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_calendar_delete_subscription_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Trigger the course module viewed event and update the module completion status.",
        "tags" : [ "mod_workshop" ]
      }
    },
    "/paygw_paypal_create_transaction_complete" : {
      "post" : {
        "description" : "Takes care of what needs to be done when a PayPal transaction comes back as complete.",
        "operationId" : "paygw_paypal_create_transaction_complete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/paygw_paypal_create_transaction_complete_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/paygw_paypal_create_transaction_complete_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Takes care of what needs to be done when a PayPal transaction comes back as complete.",
        "tags" : [ "paygw_paypal" ]
      }
    },
    "/paygw_paypal_get_config_for_js" : {
      "post" : {
        "description" : "Returns the configuration settings to be used in js",
        "operationId" : "paygw_paypal_get_config_for_js",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/paygw_paypal_get_config_for_js_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/paygw_paypal_get_config_for_js_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns the configuration settings to be used in js",
        "tags" : [ "paygw_paypal" ]
      }
    },
    "/qbank_columnsortorder_set_column_size" : {
      "post" : {
        "description" : "Column size",
        "operationId" : "qbank_columnsortorder_set_column_size",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/qbank_columnsortorder_set_column_size_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Column size",
        "tags" : [ "qbank_columnsortorder" ]
      }
    },
    "/qbank_columnsortorder_set_columnbank_order" : {
      "post" : {
        "description" : "Sets question columns order in database",
        "operationId" : "qbank_columnsortorder_set_columnbank_order",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/qbank_columnsortorder_set_columnbank_order_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Sets question columns order in database",
        "tags" : [ "qbank_columnsortorder" ]
      }
    },
    "/qbank_columnsortorder_set_hidden_columns" : {
      "post" : {
        "description" : "Hidden Columns",
        "operationId" : "qbank_columnsortorder_set_hidden_columns",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/qbank_columnsortorder_set_hidden_columns_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Hidden Columns",
        "tags" : [ "qbank_columnsortorder" ]
      }
    },
    "/qbank_editquestion_set_status" : {
      "post" : {
        "description" : "Update the question status.",
        "operationId" : "qbank_editquestion_set_status",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/qbank_editquestion_set_status_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/qbank_editquestion_set_status_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the question status.",
        "tags" : [ "qbank_editquestion" ]
      }
    },
    "/qbank_tagquestion_submit_tags_form" : {
      "post" : {
        "description" : "Update the question tags.",
        "operationId" : "qbank_tagquestion_submit_tags_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/qbank_tagquestion_submit_tags_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_question_submit_tags_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update the question tags.",
        "tags" : [ "qbank_tagquestion" ]
      }
    },
    "/qbank_viewquestiontext_set_question_text_format" : {
      "post" : {
        "description" : "Sets the preference for displaying and formatting the question text",
        "operationId" : "qbank_viewquestiontext_set_question_text_format",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/qbank_viewquestiontext_set_question_text_format_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Sets the preference for displaying and formatting the question text",
        "tags" : [ "qbank_viewquestiontext" ]
      }
    },
    "/quizaccess_seb_validate_quiz_keys" : {
      "post" : {
        "description" : "Validate a Safe Exam Browser config key or a browser exam key.",
        "operationId" : "quizaccess_seb_validate_quiz_keys",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/quizaccess_seb_validate_quiz_keys_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quizaccess_seb_validate_quiz_keys_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Validate a Safe Exam Browser config key or a browser exam key.",
        "tags" : [ "quizaccess_seb" ]
      }
    },
    "/report_competency_data_for_report" : {
      "post" : {
        "description" : "Load the data for the competency report in a course.",
        "operationId" : "report_competency_data_for_report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/report_competency_data_for_report_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/report_competency_data_for_report_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the competency report in a course.",
        "tags" : [ "report_competency" ]
      }
    },
    "/report_insights_action_executed" : {
      "post" : {
        "description" : "Stores an action executed over a group of predictions.",
        "operationId" : "report_insights_action_executed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/report_insights_action_executed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_cohort_add_cohort_members_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Stores an action executed over a group of predictions.",
        "tags" : [ "report_insights" ]
      }
    },
    "/report_insights_set_fixed_prediction" : {
      "post" : {
        "description" : "Flags a prediction as fixed.",
        "operationId" : "report_insights_set_fixed_prediction",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/report_insights_set_fixed_prediction_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/report_insights_set_fixed_prediction_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Flags a prediction as fixed.",
        "tags" : [ "report_insights" ]
      }
    },
    "/report_insights_set_notuseful_prediction" : {
      "post" : {
        "description" : "Flags the prediction as not useful.",
        "operationId" : "report_insights_set_notuseful_prediction",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/report_insights_set_notuseful_prediction_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/report_insights_set_notuseful_prediction_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Flags the prediction as not useful.",
        "tags" : [ "report_insights" ]
      }
    },
    "/tiny_autosave_reset_session" : {
      "post" : {
        "description" : "Reset an autosave session",
        "operationId" : "tiny_autosave_reset_session",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tiny_autosave_reset_session_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Reset an autosave session",
        "tags" : [ "tiny_autosave" ]
      }
    },
    "/tiny_autosave_resume_session" : {
      "post" : {
        "description" : "Resume an autosave session",
        "operationId" : "tiny_autosave_resume_session",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tiny_autosave_resume_session_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tiny_autosave_resume_session_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Resume an autosave session",
        "tags" : [ "tiny_autosave" ]
      }
    },
    "/tiny_autosave_update_session" : {
      "post" : {
        "description" : "Update an autosave session",
        "operationId" : "tiny_autosave_update_session",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tiny_autosave_update_session_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Update an autosave session",
        "tags" : [ "tiny_autosave" ]
      }
    },
    "/tiny_equation_filter" : {
      "post" : {
        "description" : "Filter the equation",
        "operationId" : "tiny_equation_filter",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tiny_equation_filter_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tiny_equation_filter_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Filter the equation",
        "tags" : [ "tiny_equation" ]
      }
    },
    "/tiny_premium_get_api_key" : {
      "post" : {
        "description" : "Get the Tiny Premium API key from Moodle",
        "operationId" : "tiny_premium_get_api_key",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tiny_premium_get_api_key_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tiny_premium_get_api_key_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the Tiny Premium API key from Moodle",
        "tags" : [ "tiny_premium" ]
      }
    },
    "/tool_analytics_potential_contexts" : {
      "post" : {
        "description" : "Retrieve the list of potential contexts for a model.",
        "operationId" : "tool_analytics_potential_contexts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_analytics_potential_contexts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Retrieve the list of potential contexts for a model.",
        "tags" : [ "tool_analytics" ]
      }
    },
    "/tool_behat_get_entity_generator" : {
      "post" : {
        "description" : "Get the generator details for an entity",
        "operationId" : "tool_behat_get_entity_generator",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_behat_get_entity_generator_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_behat_get_entity_generator_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Get the generator details for an entity",
        "tags" : [ "tool_behat" ]
      }
    },
    "/tool_dataprivacy_approve_data_request" : {
      "post" : {
        "description" : "Approve a data request",
        "operationId" : "tool_dataprivacy_approve_data_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_approve_data_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Approve a data request",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_bulk_approve_data_requests" : {
      "post" : {
        "description" : "Bulk approve data requests",
        "operationId" : "tool_dataprivacy_bulk_approve_data_requests",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_bulk_approve_data_requests_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Bulk approve data requests",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_bulk_deny_data_requests" : {
      "post" : {
        "description" : "Bulk deny data requests",
        "operationId" : "tool_dataprivacy_bulk_deny_data_requests",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_bulk_deny_data_requests_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Bulk deny data requests",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_cancel_data_request" : {
      "post" : {
        "description" : "Cancel the data request made by the user",
        "operationId" : "tool_dataprivacy_cancel_data_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_cancel_data_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Cancel the data request made by the user",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_confirm_contexts_for_deletion" : {
      "post" : {
        "description" : "Mark the selected expired contexts as confirmed for deletion",
        "operationId" : "tool_dataprivacy_confirm_contexts_for_deletion",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_confirm_contexts_for_deletion_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_confirm_contexts_for_deletion_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark the selected expired contexts as confirmed for deletion",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_contact_dpo" : {
      "post" : {
        "description" : "Contact the site Data Protection Officer(s)",
        "operationId" : "tool_dataprivacy_contact_dpo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_contact_dpo_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Contact the site Data Protection Officer(s)",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_create_category_form" : {
      "post" : {
        "description" : "Adds a data category",
        "operationId" : "tool_dataprivacy_create_category_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_create_category_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_create_category_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds a data category",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_create_purpose_form" : {
      "post" : {
        "description" : "Adds a data purpose",
        "operationId" : "tool_dataprivacy_create_purpose_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_create_purpose_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_create_purpose_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Adds a data purpose",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_delete_category" : {
      "post" : {
        "description" : "Deletes an existing data category",
        "operationId" : "tool_dataprivacy_delete_category",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_delete_category_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes an existing data category",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_delete_purpose" : {
      "post" : {
        "description" : "Deletes an existing data purpose",
        "operationId" : "tool_dataprivacy_delete_purpose",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_delete_purpose_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deletes an existing data purpose",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_deny_data_request" : {
      "post" : {
        "description" : "Deny a data request",
        "operationId" : "tool_dataprivacy_deny_data_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_cancel_data_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Deny a data request",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_get_activity_options" : {
      "post" : {
        "description" : "Fetches a list of activity options",
        "operationId" : "tool_dataprivacy_get_activity_options",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_get_activity_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_get_activity_options_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetches a list of activity options",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_get_category_options" : {
      "post" : {
        "description" : "Fetches a list of data category options",
        "operationId" : "tool_dataprivacy_get_category_options",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_get_category_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_get_category_options_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetches a list of data category options",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_get_data_request" : {
      "post" : {
        "description" : "Fetch the details of a user's data request",
        "operationId" : "tool_dataprivacy_get_data_request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_cancel_data_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_get_data_request_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the details of a user's data request",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_get_purpose_options" : {
      "post" : {
        "description" : "Fetches a list of data storage purpose options",
        "operationId" : "tool_dataprivacy_get_purpose_options",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_get_category_options_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_get_purpose_options_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetches a list of data storage purpose options",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_get_users" : {
      "post" : {
        "description" : "Fetches a list of users",
        "operationId" : "tool_dataprivacy_get_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_get_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetches a list of users",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_mark_complete" : {
      "post" : {
        "description" : "Mark a user's general enquiry as complete",
        "operationId" : "tool_dataprivacy_mark_complete",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_cancel_data_request_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark a user's general enquiry as complete",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_set_context_defaults" : {
      "post" : {
        "description" : "Updates the default category and purpose for a given context level (and optionally, a plugin)",
        "operationId" : "tool_dataprivacy_set_context_defaults",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_set_context_defaults_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_set_context_defaults_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Updates the default category and purpose for a given context level (and optionally, a plugin)",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_set_context_form" : {
      "post" : {
        "description" : "Sets purpose and category for a specific context",
        "operationId" : "tool_dataprivacy_set_context_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_set_context_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_set_context_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Sets purpose and category for a specific context",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_set_contextlevel_form" : {
      "post" : {
        "description" : "Sets purpose and category across a context level",
        "operationId" : "tool_dataprivacy_set_contextlevel_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_set_contextlevel_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_set_contextlevel_form_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Sets purpose and category across a context level",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_submit_selected_courses_form" : {
      "post" : {
        "description" : "Save list of selected courses for export",
        "operationId" : "tool_dataprivacy_submit_selected_courses_form",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_submit_selected_courses_form_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/core_contentbank_rename_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Save list of selected courses for export",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_dataprivacy_tree_extra_branches" : {
      "post" : {
        "description" : "Return branches for the context tree",
        "operationId" : "tool_dataprivacy_tree_extra_branches",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_dataprivacy_tree_extra_branches_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_dataprivacy_tree_extra_branches_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Return branches for the context tree",
        "tags" : [ "tool_dataprivacy" ]
      }
    },
    "/tool_iomadpolicy_get_iomadpolicy_version" : {
      "post" : {
        "description" : "Fetch the details of a iomadpolicy version",
        "operationId" : "tool_iomadpolicy_get_iomadpolicy_version",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_iomadpolicy_get_iomadpolicy_version_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_iomadpolicy_get_iomadpolicy_version_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the details of a iomadpolicy version",
        "tags" : [ "tool_iomadpolicy" ]
      }
    },
    "/tool_iomadpolicy_submit_accept_on_behalf" : {
      "post" : {
        "description" : "Accept policies on behalf of other users",
        "operationId" : "tool_iomadpolicy_submit_accept_on_behalf",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_iomadpolicy_submit_accept_on_behalf_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Accept policies on behalf of other users",
        "tags" : [ "tool_iomadpolicy" ]
      }
    },
    "/tool_lp_data_for_competencies_manage_page" : {
      "post" : {
        "description" : "Load the data for the competencies manage page template",
        "operationId" : "tool_lp_data_for_competencies_manage_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_competencies_manage_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_competencies_manage_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the competencies manage page template",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_competency_frameworks_manage_page" : {
      "post" : {
        "description" : "Load the data for the competency frameworks manage page template",
        "operationId" : "tool_lp_data_for_competency_frameworks_manage_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_competency_frameworks_manage_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_competency_frameworks_manage_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the competency frameworks manage page template",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_competency_summary" : {
      "post" : {
        "description" : "Load competency data for summary template.",
        "operationId" : "tool_lp_data_for_competency_summary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load competency data for summary template.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_course_competencies_page" : {
      "post" : {
        "description" : "Load the data for the course competencies page template.",
        "operationId" : "tool_lp_data_for_course_competencies_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the course competencies page template.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_plan_page" : {
      "post" : {
        "description" : "Load the data for the plan page template.",
        "operationId" : "tool_lp_data_for_plan_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_complete_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_plan_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the plan page template.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_plans_page" : {
      "post" : {
        "description" : "Load the data for the plans page template",
        "operationId" : "tool_lp_data_for_plans_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_plans_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_plans_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the plans page template",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_related_competencies_section" : {
      "post" : {
        "description" : "Load the data for the related competencies template.",
        "operationId" : "tool_lp_data_for_related_competencies_section",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_related_competencies_section_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_related_competencies_section_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the related competencies template.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_template_competencies_page" : {
      "post" : {
        "description" : "Load the data for the template competencies page template.",
        "operationId" : "tool_lp_data_for_template_competencies_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_template_competencies_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_template_competencies_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the template competencies page template.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_templates_manage_page" : {
      "post" : {
        "description" : "Load the data for the learning plan templates manage page template",
        "operationId" : "tool_lp_data_for_templates_manage_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_competency_frameworks_manage_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_templates_manage_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the learning plan templates manage page template",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_user_competency_summary" : {
      "post" : {
        "description" : "Load a summary of a user competency.",
        "operationId" : "tool_lp_data_for_user_competency_summary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a summary of a user competency.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_user_competency_summary_in_course" : {
      "post" : {
        "description" : "Load a summary of a user competency.",
        "operationId" : "tool_lp_data_for_user_competency_summary_in_course",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_in_course_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_in_course_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a summary of a user competency.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_user_competency_summary_in_plan" : {
      "post" : {
        "description" : "Load a summary of a user competency.",
        "operationId" : "tool_lp_data_for_user_competency_summary_in_plan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_in_plan_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_in_plan_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a summary of a user competency.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_user_evidence_list_page" : {
      "post" : {
        "description" : "Load the data for the user evidence list page template",
        "operationId" : "tool_lp_data_for_user_evidence_list_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_list_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_list_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the user evidence list page template",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_data_for_user_evidence_page" : {
      "post" : {
        "description" : "Load the data for the user evidence page template",
        "operationId" : "tool_lp_data_for_user_evidence_page",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_page_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_page_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load the data for the user evidence page template",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_list_courses_using_competency" : {
      "post" : {
        "description" : "List the courses using a competency",
        "operationId" : "tool_lp_list_courses_using_competency",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/core_competency_competency_viewed_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List the courses using a competency",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_search_cohorts" : {
      "post" : {
        "description" : "Search for cohorts. This method is deprecated, please call 'core_cohort_search_cohorts' instead",
        "operationId" : "tool_lp_search_cohorts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_search_cohorts_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_search_cohorts_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search for cohorts. This method is deprecated, please call 'core_cohort_search_cohorts' instead",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_lp_search_users" : {
      "post" : {
        "description" : "Search for users.",
        "operationId" : "tool_lp_search_users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_lp_search_users_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_lp_search_users_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Search for users.",
        "tags" : [ "tool_lp" ]
      }
    },
    "/tool_mobile_call_external_functions" : {
      "post" : {
        "description" : "Call multiple external functions and return all responses.",
        "operationId" : "tool_mobile_call_external_functions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_mobile_call_external_functions_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_call_external_functions_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Call multiple external functions and return all responses.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_mobile_get_autologin_key" : {
      "post" : {
        "description" : "Creates an auto-login key for the current user.\n                            Is created only in https sites and is restricted by time, ip address and only works if the request\n                            comes from the Moodle mobile or desktop app.",
        "operationId" : "tool_mobile_get_autologin_key",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_mobile_get_autologin_key_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_get_autologin_key_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Creates an auto-login key for the current user.\n                            Is created only in https sites and is restricted by time, ip address and only works if the request\n                            comes from the Moodle mobile or desktop app.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_mobile_get_config" : {
      "post" : {
        "description" : "Returns a list of the site configurations, filtering by section.",
        "operationId" : "tool_mobile_get_config",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_mobile_get_config_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_get_config_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of the site configurations, filtering by section.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_mobile_get_content" : {
      "post" : {
        "description" : "Returns a piece of content to be displayed in the Mobile app.",
        "operationId" : "tool_mobile_get_content",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_mobile_get_content_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_get_content_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a piece of content to be displayed in the Mobile app.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_mobile_get_plugins_supporting_mobile" : {
      "post" : {
        "description" : "Returns a list of Moodle plugins supporting the mobile app.",
        "operationId" : "tool_mobile_get_plugins_supporting_mobile",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_get_plugins_supporting_mobile_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of Moodle plugins supporting the mobile app.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_mobile_get_public_config" : {
      "post" : {
        "description" : "Returns a list of the site public settings, those not requiring authentication.",
        "operationId" : "tool_mobile_get_public_config",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_get_public_config_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a list of the site public settings, those not requiring authentication.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_mobile_get_tokens_for_qr_login" : {
      "post" : {
        "description" : "Returns a WebService token (and private token) for QR login.",
        "operationId" : "tool_mobile_get_tokens_for_qr_login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_mobile_get_tokens_for_qr_login_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_get_tokens_for_qr_login_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Returns a WebService token (and private token) for QR login.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_mobile_validate_subscription_key" : {
      "post" : {
        "description" : "Check if the given site subscription key is valid.",
        "operationId" : "tool_mobile_validate_subscription_key",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_mobile_validate_subscription_key_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_mobile_validate_subscription_key_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Check if the given site subscription key is valid.",
        "tags" : [ "tool_mobile" ]
      }
    },
    "/tool_moodlenet_search_courses" : {
      "post" : {
        "description" : "For some given input search for a course that matches",
        "operationId" : "tool_moodlenet_search_courses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_moodlenet_search_courses_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_moodlenet_search_courses_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "For some given input search for a course that matches",
        "tags" : [ "tool_moodlenet" ]
      }
    },
    "/tool_moodlenet_verify_webfinger" : {
      "post" : {
        "description" : "Verify if the passed information resolves into a WebFinger profile URL",
        "operationId" : "tool_moodlenet_verify_webfinger",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_moodlenet_verify_webfinger_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_moodlenet_verify_webfinger_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Verify if the passed information resolves into a WebFinger profile URL",
        "tags" : [ "tool_moodlenet" ]
      }
    },
    "/tool_policy_get_policy_version" : {
      "post" : {
        "description" : "Fetch the details of a policy version",
        "operationId" : "tool_policy_get_policy_version",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_policy_get_policy_version_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_policy_get_policy_version_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the details of a policy version",
        "tags" : [ "tool_policy" ]
      }
    },
    "/tool_policy_submit_accept_on_behalf" : {
      "post" : {
        "description" : "Accept policies on behalf of other users",
        "operationId" : "tool_policy_submit_accept_on_behalf",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_policy_submit_accept_on_behalf_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Accept policies on behalf of other users",
        "tags" : [ "tool_policy" ]
      }
    },
    "/tool_templatelibrary_list_templates" : {
      "post" : {
        "description" : "List/search templates by component.",
        "operationId" : "tool_templatelibrary_list_templates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_templatelibrary_list_templates_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "List/search templates by component.",
        "tags" : [ "tool_templatelibrary" ]
      }
    },
    "/tool_templatelibrary_load_canonical_template" : {
      "post" : {
        "description" : "Load a canonical template by name (not the theme overidden one).",
        "operationId" : "tool_templatelibrary_load_canonical_template",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_templatelibrary_load_canonical_template_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "template"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Load a canonical template by name (not the theme overidden one).",
        "tags" : [ "tool_templatelibrary" ]
      }
    },
    "/tool_usertours_complete_tour" : {
      "post" : {
        "description" : "Mark the specified tour as completed for the current user",
        "operationId" : "tool_usertours_complete_tour",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_usertours_complete_tour_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark the specified tour as completed for the current user",
        "tags" : [ "tool_usertours" ]
      }
    },
    "/tool_usertours_fetch_and_start_tour" : {
      "post" : {
        "description" : "Fetch the specified tour",
        "operationId" : "tool_usertours_fetch_and_start_tour",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_usertours_fetch_and_start_tour_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_usertours_fetch_and_start_tour_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Fetch the specified tour",
        "tags" : [ "tool_usertours" ]
      }
    },
    "/tool_usertours_reset_tour" : {
      "post" : {
        "description" : "Remove the specified tour",
        "operationId" : "tool_usertours_reset_tour",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_usertours_reset_tour_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tool_usertours_reset_tour_200_response"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Remove the specified tour",
        "tags" : [ "tool_usertours" ]
      }
    },
    "/tool_usertours_step_shown" : {
      "post" : {
        "description" : "Mark the specified step as completed for the current user",
        "operationId" : "tool_usertours_step_shown",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_usertours_step_shown_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "Mark the specified step as completed for the current user",
        "tags" : [ "tool_usertours" ]
      }
    },
    "/tool_xmldb_invoke_move_action" : {
      "post" : {
        "description" : "moves element up/down",
        "operationId" : "tool_xmldb_invoke_move_action",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/tool_xmldb_invoke_move_action_request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Successful response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Invalid parameter value detected"
          }
        },
        "security" : [ {
          "apiKey" : [ ]
        } ],
        "summary" : "moves element up/down",
        "tags" : [ "tool_xmldb" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorResponse" : {
        "properties" : {
          "debuginfo" : {
            "description" : "Debug information",
            "type" : "string"
          },
          "errorcode" : {
            "description" : "Error code",
            "type" : "string"
          },
          "exception" : {
            "description" : "Type of the exception",
            "type" : "string"
          },
          "message" : {
            "description" : "Error message",
            "type" : "string"
          }
        }
      },
      "auth_email_get_signup_settings_200_response_profilefields_inner" : {
        "default" : null,
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "Profield field category id",
            "type" : "integer",
            "nullable" : true
          },
          "categoryname" : {
            "default" : null,
            "description" : "Profield field category name",
            "type" : "string",
            "nullable" : true
          },
          "datatype" : {
            "default" : null,
            "description" : "Profield field datatype",
            "type" : "string",
            "nullable" : true
          },
          "defaultdata" : {
            "default" : null,
            "description" : "Profield field default data",
            "type" : "string",
            "nullable" : true
          },
          "defaultdataformat" : {
            "default" : null,
            "description" : "defaultdata format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "default" : null,
            "description" : "Profield field description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : null,
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "forceunique" : {
            "default" : null,
            "description" : "Profield field unique",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Profile field id",
            "type" : "integer",
            "nullable" : true
          },
          "locked" : {
            "default" : null,
            "description" : "Profield field locked",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Profield field name",
            "type" : "string",
            "nullable" : true
          },
          "param1" : {
            "default" : null,
            "description" : "Profield field settings",
            "type" : "string",
            "nullable" : true
          },
          "param2" : {
            "description" : "Profield field settings",
            "type" : "string",
            "nullable" : true
          },
          "param3" : {
            "description" : "Profield field settings",
            "type" : "string",
            "nullable" : true
          },
          "param4" : {
            "description" : "Profield field settings",
            "type" : "string",
            "nullable" : true
          },
          "param5" : {
            "description" : "Profield field settings",
            "type" : "string",
            "nullable" : true
          },
          "required" : {
            "default" : null,
            "description" : "Profield field required",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "Profile field shortname",
            "type" : "string",
            "nullable" : true
          },
          "signup" : {
            "default" : null,
            "description" : "Profield field in signup form",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "default" : null,
            "description" : "Profield field sort order",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "default" : null,
            "description" : "Profield field visible",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "auth_email_get_signup_settings_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "default" : null,
            "description" : "item",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "item id",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "default" : null,
            "description" : "the warning code can be used by the client app to implement specific behaviour",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "auth_email_get_signup_settings_200_response" : {
        "properties" : {
          "country" : {
            "default" : null,
            "description" : "Default country",
            "type" : "string",
            "nullable" : true
          },
          "defaultcity" : {
            "default" : null,
            "description" : "Default city",
            "type" : "string",
            "nullable" : true
          },
          "namefields" : {
            "items" : {
              "default" : null,
              "description" : "The order of the name fields",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "passwordpolicy" : {
            "default" : null,
            "description" : "Password policy",
            "type" : "string",
            "nullable" : true
          },
          "profilefields" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_get_signup_settings_200_response_profilefields_inner"
            },
            "type" : "array"
          },
          "recaptchachallengehash" : {
            "default" : null,
            "description" : "Recaptcha challenge hash",
            "type" : "string",
            "nullable" : true
          },
          "recaptchachallengeimage" : {
            "default" : null,
            "description" : "Recaptcha challenge noscript image",
            "type" : "string",
            "nullable" : true
          },
          "recaptchachallengejs" : {
            "default" : null,
            "description" : "Recaptcha challenge js url",
            "type" : "string",
            "nullable" : true
          },
          "recaptchapublickey" : {
            "default" : null,
            "description" : "Recaptcha public key",
            "type" : "string",
            "nullable" : true
          },
          "sitepolicy" : {
            "default" : null,
            "description" : "Site policy",
            "type" : "string",
            "nullable" : true
          },
          "sitepolicyhandler" : {
            "default" : null,
            "description" : "Site policy handler",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_get_signup_settings_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "namefields" ]
      },
      "auth_email_signup_user_request_customprofilefields_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The name of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "The type of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Custom field value, can be an encoded json if required",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "auth_email_signup_user_request" : {
        "properties" : {
          "city" : {
            "default" : "",
            "description" : "Home city of the user",
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "default" : "",
            "description" : "Home country code",
            "type" : "string",
            "nullable" : true
          },
          "customprofilefields" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_request_customprofilefields_inner"
            },
            "type" : "array"
          },
          "email" : {
            "default" : null,
            "description" : "A valid and unique email address",
            "type" : "string",
            "nullable" : true
          },
          "firstname" : {
            "default" : null,
            "description" : "The first name(s) of the user",
            "type" : "string",
            "nullable" : true
          },
          "lastname" : {
            "default" : null,
            "description" : "The family name of the user",
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "default" : null,
            "description" : "Plain text password",
            "type" : "string",
            "nullable" : true
          },
          "recaptchachallengehash" : {
            "default" : "",
            "description" : "Recaptcha challenge hash",
            "type" : "string",
            "nullable" : true
          },
          "recaptcharesponse" : {
            "default" : "",
            "description" : "Recaptcha response",
            "type" : "string",
            "nullable" : true
          },
          "redirect" : {
            "default" : "",
            "description" : "Redirect the user to this site url after confirmation.",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : null,
            "description" : "Username",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "email", "firstname", "lastname", "password", "username" ]
      },
      "auth_email_signup_user_200_response_warnings_inner" : {
        "description" : "warning",
        "properties" : {
          "item" : {
            "description" : "item",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "item id",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "description" : "the warning code can be used by the client app to implement specific behaviour",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "auth_email_signup_user_200_response" : {
        "properties" : {
          "success" : {
            "default" : null,
            "description" : "True if the user was created false otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "success" ]
      },
      "block_accessreview_get_module_data_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "The course id to obtain results for.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "block_accessreview_get_section_data_request" : {
        "properties" : {
          "courseid" : {
            "description" : "The course id to obtain results for.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "block_iomad_company_admin_allocate_licenses_request_licenses_inner" : {
        "default" : null,
        "properties" : {
          "licensecourseid" : {
            "default" : null,
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "licenseid" : {
            "default" : null,
            "description" : "License ID",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_allocate_licenses_request" : {
        "properties" : {
          "licenses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_allocate_licenses_request_licenses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "licenses" ]
      },
      "block_iomad_company_admin_assign_courses_request_courses_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "default" : 0,
            "description" : "Course company ID",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : 0,
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "departmentid" : {
            "default" : 0,
            "description" : "Course department ID",
            "type" : "integer",
            "nullable" : true
          },
          "licensed" : {
            "default" : false,
            "description" : "Is the course licensed",
            "type" : "boolean",
            "nullable" : true
          },
          "owned" : {
            "default" : false,
            "description" : "Does the company own the course",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_assign_courses_request" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_assign_courses_request_courses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "block_iomad_company_admin_assign_users_request_users_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "default" : 0,
            "description" : "User company ID",
            "type" : "integer",
            "nullable" : true
          },
          "departmentid" : {
            "default" : 0,
            "description" : "User company department ID",
            "type" : "integer",
            "nullable" : true
          },
          "educator" : {
            "default" : 0,
            "description" : "User educator 0 => No, 1 => Yes",
            "type" : "integer",
            "nullable" : true
          },
          "managertype" : {
            "default" : 0,
            "description" : "User manager type 0 => User, 1 => company manager 2 => department manager, 3 => report only",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_assign_users_request" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_assign_users_request_users_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "block_iomad_company_admin_assign_users_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "default" : null,
            "description" : "Company ID",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "Failure message",
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "default" : null,
            "description" : "Success or failure",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "Department ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_assign_users_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "default" : null,
            "description" : "always set to 'key'",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "faulty key name",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "description" : "the warning code can be used by the client app to implement specific behaviour",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_assign_users_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_assign_users_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_assign_users_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "block_iomad_company_admin_capability_delete_template_request" : {
        "properties" : {
          "templateid" : {
            "default" : null,
            "description" : "Template ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "templateid" ]
      },
      "block_iomad_company_admin_check_token_request_key0" : {
        "properties" : {
          "token" : {
            "default" : null,
            "description" : "The user moodle session key",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : null,
            "description" : "The user that is going to be enrolled",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "token", "username" ]
      },
      "block_iomad_company_admin_check_token_request" : {
        "properties" : {
          "key0" : {
            "$ref" : "#/components/schemas/block_iomad_company_admin_check_token_request_key0"
          }
        },
        "required" : [ "key0" ]
      },
      "block_iomad_company_admin_check_token_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "Status: true only if token is valid",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "block_iomad_company_admin_create_companies_request_companies_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "default" : null,
            "description" : "Company location address",
            "type" : "string",
            "nullable" : true
          },
          "autosubscribe" : {
            "default" : 1,
            "description" : "User default forum auto-subscribe",
            "type" : "integer",
            "nullable" : true
          },
          "city" : {
            "default" : null,
            "description" : "Company location city",
            "type" : "string",
            "nullable" : true
          },
          "code" : {
            "default" : "",
            "description" : "Company code",
            "type" : "string",
            "nullable" : true
          },
          "companyterminated" : {
            "default" : 0,
            "description" : "Company contract is terminated when <> 0",
            "type" : "integer",
            "nullable" : true
          },
          "country" : {
            "default" : null,
            "description" : "Company location country",
            "type" : "string",
            "nullable" : true
          },
          "custom1" : {
            "default" : null,
            "description" : "Company custom 1",
            "type" : "string",
            "nullable" : true
          },
          "custom2" : {
            "default" : null,
            "description" : "Company custom 2",
            "type" : "string",
            "nullable" : true
          },
          "custom3" : {
            "default" : null,
            "description" : "Company custom 3",
            "type" : "string",
            "nullable" : true
          },
          "customcss" : {
            "default" : "",
            "description" : "Company custom css",
            "type" : "string",
            "nullable" : true
          },
          "ecommerce" : {
            "default" : 0,
            "description" : "Ecommerce is disabled when = 0",
            "type" : "integer",
            "nullable" : true
          },
          "headingcolor" : {
            "default" : "",
            "description" : "Company heading color",
            "type" : "string",
            "nullable" : true
          },
          "hostname" : {
            "default" : "",
            "description" : "Company hostname",
            "type" : "string",
            "nullable" : true
          },
          "htmleditor" : {
            "default" : 1,
            "description" : "User default text editor",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "default" : "en",
            "description" : "User default language",
            "type" : "string",
            "nullable" : true
          },
          "linkcolor" : {
            "default" : "",
            "description" : "Company ink color",
            "type" : "string",
            "nullable" : true
          },
          "maildigest" : {
            "default" : 0,
            "description" : "User default digest type",
            "type" : "integer",
            "nullable" : true
          },
          "maildisplay" : {
            "default" : 2,
            "description" : "User default email display",
            "type" : "integer",
            "nullable" : true
          },
          "mailformat" : {
            "default" : 1,
            "description" : "User default email format",
            "type" : "integer",
            "nullable" : true
          },
          "maincolor" : {
            "default" : "",
            "description" : "Company main color",
            "type" : "string",
            "nullable" : true
          },
          "maxusers" : {
            "default" : 0,
            "description" : "Company maximum number of users",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Company long name",
            "type" : "string",
            "nullable" : true
          },
          "parentid" : {
            "default" : 0,
            "description" : "ID of parent company",
            "type" : "integer",
            "nullable" : true
          },
          "postcode" : {
            "default" : null,
            "description" : "Company location postcode",
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "default" : null,
            "description" : "Company location region",
            "type" : "string",
            "nullable" : true
          },
          "screenreader" : {
            "default" : 0,
            "description" : "User default screen reader",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "Compay short name",
            "type" : "string",
            "nullable" : true
          },
          "suspendafter" : {
            "default" : 0,
            "description" : "Number of seconds after termination date to suspend the company",
            "type" : "integer",
            "nullable" : true
          },
          "suspended" : {
            "default" : 0,
            "description" : "Company is suspended when <> 0",
            "type" : "integer",
            "nullable" : true
          },
          "theme" : {
            "default" : "",
            "description" : "Company theme",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "default" : "99",
            "description" : "User default timezone",
            "type" : "string",
            "nullable" : true
          },
          "trackforums" : {
            "default" : 0,
            "description" : "User default forum tracking",
            "type" : "integer",
            "nullable" : true
          },
          "validto" : {
            "default" : null,
            "description" : "Contract termination date in unix timestamp",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_create_companies_request" : {
        "properties" : {
          "companies" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_create_companies_request_companies_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "companies" ]
      },
      "block_iomad_company_admin_create_licenses_request_licenses_inner_courses_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_create_licenses_request_licenses_inner" : {
        "default" : null,
        "description" : "one or many licenses",
        "properties" : {
          "allocation" : {
            "default" : null,
            "description" : "Number of license slots",
            "type" : "integer",
            "nullable" : true
          },
          "clearonexpire" : {
            "default" : null,
            "description" : "Clear license assignments on expire - 0 = no, 1 = yes",
            "type" : "integer",
            "nullable" : true
          },
          "companyid" : {
            "default" : null,
            "description" : "Company id",
            "type" : "integer",
            "nullable" : true
          },
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_create_licenses_request_licenses_inner_courses_inner"
            },
            "type" : "array"
          },
          "cutoffdate" : {
            "default" : null,
            "description" : "License cut off date (int = timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "expirydate" : {
            "default" : null,
            "description" : "License expiry date (int = timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "instant" : {
            "default" : null,
            "description" : "Instant access - 0 = no, 1 = yes",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "License name",
            "type" : "string",
            "nullable" : true
          },
          "parentid" : {
            "default" : null,
            "description" : "Parent license id",
            "type" : "integer",
            "nullable" : true
          },
          "program" : {
            "default" : null,
            "description" : "Program pf courses 0 = no, 1 = yes",
            "type" : "integer",
            "nullable" : true
          },
          "reference" : {
            "default" : null,
            "description" : "License reference",
            "type" : "string",
            "nullable" : true
          },
          "startdate" : {
            "default" : null,
            "description" : "Date from which the liucense is available (int = timestamp) ",
            "type" : "integer",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "License type - 0 = standard, 1 = reusable, 2 = standard educator, 3 = reusable educator",
            "type" : "integer",
            "nullable" : true
          },
          "used" : {
            "default" : null,
            "description" : "Number how often the lic can be allocated",
            "type" : "integer",
            "nullable" : true
          },
          "validlength" : {
            "default" : null,
            "description" : "Course access length (days)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_create_licenses_request" : {
        "properties" : {
          "licenses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_create_licenses_request_licenses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "licenses" ]
      },
      "block_iomad_company_admin_delete_licenses_request_licenses_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "license ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_delete_licenses_request" : {
        "properties" : {
          "licenses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_delete_licenses_request_licenses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "licenses" ]
      },
      "block_iomad_company_admin_edit_companies_request_companies_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "description" : "Company location address",
            "type" : "string",
            "nullable" : true
          },
          "autosubscribe" : {
            "default" : null,
            "description" : "User default forum auto-subscribe",
            "type" : "integer",
            "nullable" : true
          },
          "city" : {
            "description" : "Company location city",
            "type" : "string",
            "nullable" : true
          },
          "code" : {
            "default" : null,
            "description" : "Compay code",
            "type" : "string",
            "nullable" : true
          },
          "companyterminated" : {
            "default" : null,
            "description" : "Company contract is terminated when <> 0",
            "type" : "integer",
            "nullable" : true
          },
          "country" : {
            "description" : "Company location country",
            "type" : "string",
            "nullable" : true
          },
          "custom1" : {
            "description" : "Company custom 1",
            "type" : "string",
            "nullable" : true
          },
          "custom2" : {
            "description" : "Company custom 2",
            "type" : "string",
            "nullable" : true
          },
          "custom3" : {
            "description" : "Company custom 3",
            "type" : "string",
            "nullable" : true
          },
          "customcss" : {
            "default" : null,
            "description" : "Company custom css",
            "type" : "string",
            "nullable" : true
          },
          "ecommerce" : {
            "default" : null,
            "description" : "Ecommerce is disabled when = 0",
            "type" : "integer",
            "nullable" : true
          },
          "headingcolor" : {
            "default" : null,
            "description" : "Company heading color",
            "type" : "string",
            "nullable" : true
          },
          "hostname" : {
            "default" : null,
            "description" : "Company hostname",
            "type" : "string",
            "nullable" : true
          },
          "htmleditor" : {
            "default" : null,
            "description" : "User default text editor",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Company id number",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "default" : null,
            "description" : "User default language",
            "type" : "string",
            "nullable" : true
          },
          "linkcolor" : {
            "default" : null,
            "description" : "Company ink color",
            "type" : "string",
            "nullable" : true
          },
          "maildigest" : {
            "default" : null,
            "description" : "User default digest type",
            "type" : "integer",
            "nullable" : true
          },
          "maildisplay" : {
            "default" : null,
            "description" : "User default email display",
            "type" : "integer",
            "nullable" : true
          },
          "mailformat" : {
            "default" : null,
            "description" : "User default email format",
            "type" : "integer",
            "nullable" : true
          },
          "maincolor" : {
            "default" : null,
            "description" : "Company main color",
            "type" : "string",
            "nullable" : true
          },
          "maxusers" : {
            "default" : null,
            "description" : "Company maximum number of users",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Company long name",
            "type" : "string",
            "nullable" : true
          },
          "parentid" : {
            "default" : null,
            "description" : "ID of parent company",
            "type" : "integer",
            "nullable" : true
          },
          "postcode" : {
            "description" : "Company location postcode",
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "description" : "Company location region",
            "type" : "string",
            "nullable" : true
          },
          "screenreader" : {
            "default" : null,
            "description" : "User default screen reader",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "Compay short name",
            "type" : "string",
            "nullable" : true
          },
          "suspendafter" : {
            "default" : null,
            "description" : "Number of seconds after termination date to suspend the company",
            "type" : "integer",
            "nullable" : true
          },
          "suspended" : {
            "default" : null,
            "description" : "Company is suspended when <> 0",
            "type" : "integer",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "Company theme",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "default" : null,
            "description" : "User default timezone",
            "type" : "string",
            "nullable" : true
          },
          "trackforums" : {
            "default" : null,
            "description" : "User default forum tracking",
            "type" : "integer",
            "nullable" : true
          },
          "validto" : {
            "description" : "Contract termination date in unix timestamp",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_edit_companies_request" : {
        "properties" : {
          "companies" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_edit_companies_request_companies_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "companies" ]
      },
      "block_iomad_company_admin_edit_licenses_request_licenses_inner" : {
        "default" : null,
        "description" : "one or many licenses",
        "properties" : {
          "allocation" : {
            "description" : "Number of license slots",
            "type" : "integer",
            "nullable" : true
          },
          "companyid" : {
            "description" : "Company id",
            "type" : "integer",
            "nullable" : true
          },
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_create_licenses_request_licenses_inner_courses_inner"
            },
            "type" : "array"
          },
          "expirydate" : {
            "default" : null,
            "description" : "License expiry date",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "license ID",
            "type" : "integer",
            "nullable" : true
          },
          "instant" : {
            "description" : "Instant access - 0 = no, 1 = yes",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "License name",
            "type" : "string",
            "nullable" : true
          },
          "parentid" : {
            "description" : "Parent license id",
            "type" : "integer",
            "nullable" : true
          },
          "program" : {
            "description" : "Program pf courses 0 = no, 1 = yes",
            "type" : "integer",
            "nullable" : true
          },
          "reference" : {
            "description" : "License reference",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "License type - 0 = standard, 1 = reusable, 2 = standard educator, 3 = reusable educator",
            "type" : "integer",
            "nullable" : true
          },
          "used" : {
            "default" : null,
            "description" : "Number allocated",
            "type" : "integer",
            "nullable" : true
          },
          "validlength" : {
            "description" : "Course access length (days)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_edit_licenses_request" : {
        "properties" : {
          "licenses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_edit_licenses_request_licenses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "licenses" ]
      },
      "block_iomad_company_admin_enrol_users_request_enrolments_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "The course to enrol the user role in",
            "type" : "integer",
            "nullable" : true
          },
          "quantity" : {
            "default" : null,
            "description" : "Number of items purchased.",
            "type" : "integer",
            "nullable" : true
          },
          "roleid" : {
            "default" : null,
            "description" : "Role to assign to the user",
            "type" : "integer",
            "nullable" : true
          },
          "suspend" : {
            "default" : null,
            "description" : "set to 1 to suspend the enrolment",
            "type" : "integer",
            "nullable" : true
          },
          "timeend" : {
            "default" : null,
            "description" : "Timestamp when the enrolment end",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : null,
            "description" : "Timestamp when the enrolment start",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user that is going to be enrolled",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_enrol_users_request" : {
        "properties" : {
          "enrolments" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_enrol_users_request_enrolments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "enrolments" ]
      },
      "block_iomad_company_admin_get_companies_request_criteria_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "the company column to search, expected keys (value format) are:\n                                \"id\" (int) matching company id,\n                                \"name\" (string) company name (Note: you can use % for searching but it may be considerably slower!),\n                                \"shortname\" (string) company short name (Note: you can use % for searching but it may be considerably slower!),\n                                \"code\" (string) company code (Note: you can use % for searching but it may be considerably slower!),\n                                \"suspended\" (bool) company is suspended or not,\n                                \"city\" (string) matching company city,\n                                \"country\" (string) matching company country,\n                                \"timezone\" (int) company timezone,\n                                \"lang\" (string) matching company language setting",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "the value to search",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_companies_request" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_request_criteria_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "criteria" ]
      },
      "block_iomad_company_admin_get_companies_200_response_companies_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "description" : "Company location address",
            "type" : "string",
            "nullable" : true
          },
          "autosubscribe" : {
            "description" : "User default forum auto-subscribe",
            "type" : "integer",
            "nullable" : true
          },
          "city" : {
            "description" : "Company location city",
            "type" : "string",
            "nullable" : true
          },
          "code" : {
            "description" : "Compay code",
            "type" : "string",
            "nullable" : true
          },
          "companyterminated" : {
            "default" : 0,
            "description" : "Company contract is terminated when <> 0",
            "type" : "integer",
            "nullable" : true
          },
          "country" : {
            "description" : "Company location country",
            "type" : "string",
            "nullable" : true
          },
          "custom1" : {
            "description" : "Company custom 1",
            "type" : "string",
            "nullable" : true
          },
          "custom2" : {
            "description" : "Company custom 2",
            "type" : "string",
            "nullable" : true
          },
          "custom3" : {
            "description" : "Company custom 3",
            "type" : "string",
            "nullable" : true
          },
          "customcss" : {
            "default" : "",
            "description" : "Company custom css",
            "type" : "string",
            "nullable" : true
          },
          "ecommerce" : {
            "default" : 0,
            "description" : "Ecommerce is disabled when = 0",
            "type" : "integer",
            "nullable" : true
          },
          "headingcolor" : {
            "default" : "",
            "description" : "Company heading color",
            "type" : "string",
            "nullable" : true
          },
          "hostname" : {
            "default" : "",
            "description" : "Company hostname",
            "type" : "string",
            "nullable" : true
          },
          "htmleditor" : {
            "description" : "User default text editor",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Companid ID",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "User default language",
            "type" : "string",
            "nullable" : true
          },
          "linkcolor" : {
            "default" : "",
            "description" : "Company ink color",
            "type" : "string",
            "nullable" : true
          },
          "maildigest" : {
            "description" : "User default digest type",
            "type" : "integer",
            "nullable" : true
          },
          "maildisplay" : {
            "description" : "User default email display",
            "type" : "integer",
            "nullable" : true
          },
          "mailformat" : {
            "description" : "User default email format",
            "type" : "integer",
            "nullable" : true
          },
          "maincolor" : {
            "default" : "",
            "description" : "Company main color",
            "type" : "string",
            "nullable" : true
          },
          "maxusers" : {
            "default" : 0,
            "description" : "Company maximum number of users",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Company long name",
            "type" : "string",
            "nullable" : true
          },
          "parentid" : {
            "default" : 0,
            "description" : "ID of parent company",
            "type" : "integer",
            "nullable" : true
          },
          "region" : {
            "description" : "Company location region",
            "type" : "string",
            "nullable" : true
          },
          "screenreader" : {
            "description" : "User default screen reader",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "Compay short name",
            "type" : "string",
            "nullable" : true
          },
          "suspendafter" : {
            "default" : 0,
            "description" : "Number of seconds after termination date to suspend the company",
            "type" : "integer",
            "nullable" : true
          },
          "suspended" : {
            "description" : "Company is suspended when <> 0",
            "type" : "integer",
            "nullable" : true
          },
          "theme" : {
            "default" : "",
            "description" : "Company theme",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "description" : "User default timezone",
            "type" : "string",
            "nullable" : true
          },
          "trackforums" : {
            "description" : "User default forum tracking",
            "type" : "integer",
            "nullable" : true
          },
          "validto" : {
            "description" : "Contract termination date in unix timestamp",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_companies_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "description" : "always set to 'key'",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "faulty key name",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "description" : "the warning code can be used by the client app to implement specific behaviour",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_companies_200_response" : {
        "properties" : {
          "companies" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response_companies_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "companies" ]
      },
      "block_iomad_company_admin_get_company_courses_request_criteria_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "default" : 0,
            "description" : "the company id",
            "type" : "integer",
            "nullable" : true
          },
          "shared" : {
            "default" : 0,
            "description" : "Show all of the shared courses availabe to the company",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_company_courses_request" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_company_courses_request_criteria_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "criteria" ]
      },
      "block_iomad_company_admin_get_company_courses_200_response_companies_inner_courses_inner_customfields_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Custom field id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Custom field name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Custom field data value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_company_courses_200_response_companies_inner_courses_inner" : {
        "default" : null,
        "properties" : {
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_company_courses_200_response_companies_inner_courses_inner_customfields_inner"
            },
            "type" : "array"
          },
          "fullname" : {
            "default" : null,
            "description" : "Course full name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_company_courses_200_response_companies_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "default" : null,
            "description" : "Company address",
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "default" : null,
            "description" : "Company city",
            "type" : "string",
            "nullable" : true
          },
          "code" : {
            "default" : null,
            "description" : "Company code",
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "default" : null,
            "description" : "Company country",
            "type" : "string",
            "nullable" : true
          },
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_company_courses_200_response_companies_inner_courses_inner"
            },
            "type" : "array"
          },
          "custom1" : {
            "default" : null,
            "description" : "Company custom1",
            "type" : "string",
            "nullable" : true
          },
          "custom2" : {
            "default" : null,
            "description" : "Company custom2",
            "type" : "string",
            "nullable" : true
          },
          "custom3" : {
            "default" : null,
            "description" : "Company custom3",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Company ID",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Company name",
            "type" : "string",
            "nullable" : true
          },
          "postcode" : {
            "default" : null,
            "description" : "Company postcode",
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "default" : null,
            "description" : "Company region",
            "type" : "string",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "Company shortname",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_company_courses_200_response" : {
        "properties" : {
          "companies" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_company_courses_200_response_companies_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "companies" ]
      },
      "block_iomad_company_admin_get_course_info_request" : {
        "properties" : {
          "courrseids" : {
            "items" : {
              "default" : null,
              "description" : "Course id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "block_iomad_company_admin_get_department_users_request" : {
        "properties" : {
          "departmentids" : {
            "items" : {
              "default" : null,
              "description" : "Department id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "block_iomad_company_admin_get_department_users_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "description" : "Company ID",
            "type" : "integer",
            "nullable" : true
          },
          "departmentid" : {
            "description" : "Department ID",
            "type" : "integer",
            "nullable" : true
          },
          "email" : {
            "default" : null,
            "description" : "User email address",
            "type" : "string",
            "nullable" : true
          },
          "firstname" : {
            "default" : null,
            "description" : "User firstname",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          },
          "lastname" : {
            "default" : null,
            "description" : "User lastname",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_department_users_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_department_users_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "block_iomad_company_admin_get_departments_request_criteria_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "the user column to search, expected keys (value format) are:\n                                \"id\" (int) matching department id,\n                                \"name\" (string) department name (Note: you can use % for searching but it may be considerably slower!),\n                                \"shortname\" (string) department short name (Note: you can use % for searching but it may be considerably slower!),\n                                \"company\" (int) matching company id,\n                                \"parent\" (int) matching department parent id",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "the value to search",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_departments_request" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_departments_request_criteria_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "criteria" ]
      },
      "block_iomad_company_admin_get_departments_200_response_departments_inner" : {
        "default" : null,
        "properties" : {
          "company" : {
            "description" : "Company ID",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Department ID",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Department name",
            "type" : "string",
            "nullable" : true
          },
          "parent" : {
            "default" : null,
            "description" : "Department parent id",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "Department short name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_departments_200_response" : {
        "properties" : {
          "departments" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_departments_200_response_departments_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "departments" ]
      },
      "block_iomad_company_admin_get_license_from_id_request" : {
        "properties" : {
          "licenseid" : {
            "default" : null,
            "description" : "License ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "licenseid" ]
      },
      "block_iomad_company_admin_get_license_from_id_200_response_courses_inner" : {
        "default" : null,
        "properties" : {
          "fullname" : {
            "description" : "Course full name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_license_from_id_200_response_license" : {
        "properties" : {
          "allallocated" : {
            "default" : null,
            "description" : "All licenses allocated",
            "type" : "boolean",
            "nullable" : true
          },
          "allocation" : {
            "default" : null,
            "description" : "Allocation",
            "type" : "integer",
            "nullable" : true
          },
          "companyid" : {
            "description" : "Company ID",
            "type" : "integer",
            "nullable" : true
          },
          "expirydate" : {
            "default" : null,
            "description" : "Expiry date",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "License ID",
            "type" : "integer",
            "nullable" : true
          },
          "instant" : {
            "default" : null,
            "description" : "Instant",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "description" : "License name",
            "type" : "string",
            "nullable" : true
          },
          "parentid" : {
            "default" : null,
            "description" : "Parent ID",
            "type" : "integer",
            "nullable" : true
          },
          "program" : {
            "default" : null,
            "description" : "Program",
            "type" : "boolean",
            "nullable" : true
          },
          "reference" : {
            "default" : null,
            "description" : "Reference",
            "type" : "string",
            "nullable" : true
          },
          "startdate" : {
            "default" : null,
            "description" : "Start date",
            "type" : "integer",
            "nullable" : true
          },
          "type" : {
            "description" : "License type - 0 = standard, 1 = reusable, 2 = standard educator, 3 = reusable educator",
            "type" : "integer",
            "nullable" : true
          },
          "used" : {
            "default" : null,
            "description" : "Used",
            "type" : "integer",
            "nullable" : true
          },
          "validlength" : {
            "default" : null,
            "description" : "Valid length",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "allallocated", "allocation", "companyid", "expirydate", "id", "instant", "name", "parentid", "program", "reference", "startdate", "type", "used", "validlength" ]
      },
      "block_iomad_company_admin_get_license_from_id_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_from_id_200_response_courses_inner"
            },
            "type" : "array"
          },
          "license" : {
            "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_from_id_200_response_license"
          }
        },
        "required" : [ "courses", "license" ]
      },
      "block_iomad_company_admin_get_license_info_request_criteria_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "the user column to search, expected keys (value format) are:\n                                \"id\" (int) matching user id,\n                                \"name\" (string) license name (Note: you can use % for searching but it may be considerably slower!),\n                                \"startdate\" (int) license start date in unix time,\n                                \"expirydate\" (int) license expiry date in unix time,\n                                \"companyid\" (int) license company id,\n                                \"parentid\"  (int) license parent id for split licenses,\n                                \"program\"  (bool) license is program,\n                                \"instant\"  (bool) license is instant,\n                                \"type\"  (int) license type (0 = standard, 1 = reusable, 3 = educator),\n                                \"reference\" license reference (Note: you can use % for searching but it may be considerably slower!)",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "the value to search",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_license_info_request" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_info_request_criteria_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "criteria" ]
      },
      "block_iomad_company_admin_get_license_info_200_response_licenses_inner" : {
        "default" : null,
        "properties" : {
          "allocation" : {
            "description" : "Number of license slots",
            "type" : "integer",
            "nullable" : true
          },
          "companyid" : {
            "description" : "Company id",
            "type" : "integer",
            "nullable" : true
          },
          "expirydate" : {
            "description" : "License expiry date",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "license ID",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "License name",
            "type" : "string",
            "nullable" : true
          },
          "parentid" : {
            "description" : "Parent license id",
            "type" : "integer",
            "nullable" : true
          },
          "used" : {
            "description" : "Number allocated",
            "type" : "integer",
            "nullable" : true
          },
          "validlength" : {
            "description" : "Course access length (days)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_get_license_info_200_response" : {
        "properties" : {
          "licenses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_license_info_200_response_licenses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "licenses" ]
      },
      "block_iomad_company_admin_move_users_request_users_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "default" : 0,
            "description" : "User company ID",
            "type" : "integer",
            "nullable" : true
          },
          "departmentid" : {
            "default" : 0,
            "description" : "User company department ID",
            "type" : "integer",
            "nullable" : true
          },
          "managertype" : {
            "default" : 0,
            "description" : "User manager type 0 => User, 1 => company manager 2 => department manager",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_move_users_request" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_move_users_request_users_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "block_iomad_company_admin_restrict_capability_request" : {
        "properties" : {
          "allow" : {
            "default" : null,
            "description" : "Set capability?",
            "type" : "boolean",
            "nullable" : true
          },
          "capability" : {
            "default" : null,
            "description" : "The capability",
            "type" : "string",
            "nullable" : true
          },
          "companyid" : {
            "default" : null,
            "description" : "Company ID. Ignored if templateid is non-zero",
            "type" : "integer",
            "nullable" : true
          },
          "roleid" : {
            "default" : null,
            "description" : "Role ID",
            "type" : "integer",
            "nullable" : true
          },
          "templateid" : {
            "default" : 0,
            "description" : "Template ID. Set to 0 if company restriction",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "allow", "capability", "companyid", "roleid" ]
      },
      "block_iomad_company_admin_sync_users_request" : {
        "properties" : {
          "source" : {
            "description" : "The user that is going to be enrolled",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "source" ]
      },
      "block_iomad_company_admin_sync_users_200_response" : {
        "properties" : {
          "status" : {
            "description" : "Status: true only if token is valid",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "block_iomad_company_admin_unallocate_licenses_request_licenses_inner" : {
        "properties" : {
          "licensecourseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "licenseid" : {
            "description" : "License ID",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_unallocate_licenses_request" : {
        "properties" : {
          "licenses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_unallocate_licenses_request_licenses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "licenses" ]
      },
      "block_iomad_company_admin_unassign_courses_request_courses_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "default" : 0,
            "description" : "Course company ID",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : 0,
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_unassign_courses_request" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_unassign_courses_request_courses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "block_iomad_company_admin_unassign_users_request_users_inner" : {
        "default" : null,
        "properties" : {
          "companyid" : {
            "default" : 0,
            "description" : "User company ID",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          },
          "usertype" : {
            "default" : 0,
            "description" : "Old user manager type",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_unassign_users_request" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_unassign_users_request_users_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "block_iomad_company_admin_update_courses_request_courses_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "licensed" : {
            "default" : false,
            "description" : "Course licensed",
            "type" : "boolean",
            "nullable" : true
          },
          "notifyperiod" : {
            "default" : 0,
            "description" : "Course warning email notify period",
            "type" : "integer",
            "nullable" : true
          },
          "shared" : {
            "default" : 0,
            "description" : "Course shared value",
            "type" : "integer",
            "nullable" : true
          },
          "validlength" : {
            "default" : 0,
            "description" : "Course training valid for in days",
            "type" : "integer",
            "nullable" : true
          },
          "warncompletion" : {
            "default" : 0,
            "description" : "Course days to warn if not completed in",
            "type" : "integer",
            "nullable" : true
          },
          "warnexpire" : {
            "default" : 0,
            "description" : "Course days to warn before training expires",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "block_iomad_company_admin_update_courses_request" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_update_courses_request_courses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "block_recentlyaccesseditems_get_recent_items_request" : {
        "properties" : {
          "limit" : {
            "default" : 0,
            "description" : "result set limit",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "block_starredcourses_get_starred_courses_request" : {
        "properties" : {
          "limit" : {
            "default" : 0,
            "description" : "Limit",
            "type" : "integer",
            "nullable" : true
          },
          "offset" : {
            "default" : 0,
            "description" : "Offset",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_admin_set_block_protection_request" : {
        "properties" : {
          "plugin" : {
            "default" : null,
            "description" : "The name of the plugin",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "The target state",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "plugin", "state" ]
      },
      "core_admin_set_plugin_order_request" : {
        "properties" : {
          "direction" : {
            "default" : null,
            "description" : "The direction to move",
            "type" : "integer",
            "nullable" : true
          },
          "plugin" : {
            "description" : "The name of the plugin",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "direction", "plugin" ]
      },
      "core_admin_set_plugin_state_request" : {
        "properties" : {
          "plugin" : {
            "description" : "The name of the plugin",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "description" : "The target state",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "plugin", "state" ]
      },
      "core_auth_confirm_user_request" : {
        "properties" : {
          "secret" : {
            "default" : null,
            "description" : "Confirmation secret",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : null,
            "description" : "User name",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "secret", "username" ]
      },
      "core_auth_confirm_user_200_response" : {
        "properties" : {
          "success" : {
            "default" : null,
            "description" : "True if the user was confirmed, false if he was already confirmed",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "success" ]
      },
      "core_auth_is_age_digital_consent_verification_enabled_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if digital consent verification is enabled,\n                    false otherwise.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "status" ]
      },
      "core_auth_is_minor_request" : {
        "properties" : {
          "age" : {
            "default" : null,
            "description" : "Age",
            "type" : "integer",
            "nullable" : true
          },
          "country" : {
            "default" : null,
            "description" : "Country of residence",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "age", "country" ]
      },
      "core_auth_is_minor_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the user is considered to be a digital minor,\n                    false if not",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "status" ]
      },
      "core_auth_request_password_reset_request" : {
        "properties" : {
          "email" : {
            "default" : "",
            "description" : "User email",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : "",
            "description" : "User name",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "core_auth_request_password_reset_200_response" : {
        "properties" : {
          "notice" : {
            "default" : null,
            "description" : "Important information for the user about the process.",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "The returned status of the process:\n                    dataerror: Error in the sent data (username or email). More information in warnings field.\n                    emailpasswordconfirmmaybesent: Email sent or not (depends on user found in database).\n                    emailpasswordconfirmnotsent: Failure, user not found.\n                    emailpasswordconfirmnoemail: Failure, email not found.\n                    emailalreadysent: Email already sent.\n                    emailpasswordconfirmsent: User pending confirmation.\n                    emailresetconfirmsent: Email sent.\n                ",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "notice", "status" ]
      },
      "core_auth_resend_confirmation_email_request" : {
        "properties" : {
          "password" : {
            "default" : null,
            "description" : "Plain text password.",
            "type" : "string",
            "nullable" : true
          },
          "redirect" : {
            "default" : "",
            "description" : "Redirect the user to this site url after confirmation.",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : null,
            "description" : "Username.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "password", "username" ]
      },
      "core_auth_resend_confirmation_email_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the confirmation email was sent, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_backup_get_async_backup_links_backup_request" : {
        "properties" : {
          "backupid" : {
            "default" : null,
            "description" : "Backup id",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "default" : null,
            "description" : "Context id",
            "type" : "integer",
            "nullable" : false
          },
          "filename" : {
            "default" : null,
            "description" : "Backup filename",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "backupid", "contextid", "filename" ]
      },
      "core_backup_get_async_backup_links_backup_200_response" : {
        "properties" : {
          "filesize" : {
            "default" : null,
            "description" : "Backup file size",
            "type" : "string",
            "nullable" : true
          },
          "fileurl" : {
            "default" : null,
            "description" : "Backup file URL",
            "type" : "string",
            "nullable" : true
          },
          "restoreurl" : {
            "default" : null,
            "description" : "Backup restore URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "filesize", "fileurl", "restoreurl" ]
      },
      "core_backup_get_async_backup_links_restore_request" : {
        "properties" : {
          "backupid" : {
            "description" : "Backup id",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "description" : "Context id",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "backupid", "contextid" ]
      },
      "core_backup_get_async_backup_links_restore_200_response" : {
        "properties" : {
          "restoreurl" : {
            "default" : null,
            "description" : "Restore url",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "restoreurl" ]
      },
      "core_backup_get_async_backup_progress_request" : {
        "properties" : {
          "backupids" : {
            "items" : {
              "default" : null,
              "description" : "Backup id to get progress for",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "contextid" : {
            "description" : "Context id",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "backupids", "contextid" ]
      },
      "core_backup_get_copy_progress_request_copies_inner" : {
        "default" : null,
        "description" : "Copy data",
        "properties" : {
          "backupid" : {
            "default" : null,
            "description" : "Backup id",
            "type" : "string",
            "nullable" : true
          },
          "operation" : {
            "default" : null,
            "description" : "Operation type",
            "type" : "string",
            "nullable" : true
          },
          "restoreid" : {
            "default" : null,
            "description" : "Restore id",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_backup_get_copy_progress_request" : {
        "properties" : {
          "copies" : {
            "items" : {
              "$ref" : "#/components/schemas/core_backup_get_copy_progress_request_copies_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "copies" ]
      },
      "core_backup_submit_copy_form_request" : {
        "properties" : {
          "jsonformdata" : {
            "default" : null,
            "description" : "The data from the create copy form, encoded as a json array",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata" ]
      },
      "core_badges_get_user_badge_by_hash_request" : {
        "properties" : {
          "hash" : {
            "default" : null,
            "description" : "Badge issued hash",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "hash" ]
      },
      "core_badges_get_user_badge_by_hash_200_response_badge_inner_alignment_inner" : {
        "default" : null,
        "properties" : {
          "badgeid" : {
            "default" : null,
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Alignment id",
            "type" : "integer",
            "nullable" : false
          },
          "targetCode" : {
            "default" : null,
            "description" : "Target code",
            "type" : "string",
            "nullable" : true
          },
          "targetDescription" : {
            "default" : null,
            "description" : "Target description",
            "type" : "string",
            "nullable" : true
          },
          "targetFramework" : {
            "default" : null,
            "description" : "Target framework",
            "type" : "string",
            "nullable" : true
          },
          "targetName" : {
            "default" : null,
            "description" : "Target name",
            "type" : "string",
            "nullable" : false
          },
          "targetUrl" : {
            "default" : null,
            "description" : "Target URL",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_badges_get_user_badge_by_hash_200_response_badge_inner_endorsement" : {
        "properties" : {
          "badgeid" : {
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "claimcomment" : {
            "default" : null,
            "description" : "Claim comment",
            "type" : "string",
            "nullable" : true
          },
          "claimid" : {
            "default" : null,
            "description" : "Claim URL",
            "type" : "string",
            "nullable" : true
          },
          "dateissued" : {
            "default" : 0,
            "description" : "Date issued",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Endorsement id",
            "type" : "integer",
            "nullable" : false
          },
          "issueremail" : {
            "default" : null,
            "description" : "Endorsement issuer email",
            "type" : "string",
            "nullable" : false
          },
          "issuername" : {
            "default" : null,
            "description" : "Endorsement issuer name",
            "type" : "string",
            "nullable" : false
          },
          "issuerurl" : {
            "default" : null,
            "description" : "Endorsement issuer URL",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "badgeid", "claimcomment", "claimid", "dateissued", "id", "issueremail", "issuername", "issuerurl" ]
      },
      "core_badges_get_user_badge_by_hash_200_response_badge_inner_relatedbadges_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "language" : {
            "description" : "Language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Badge name",
            "type" : "string",
            "nullable" : false
          },
          "type" : {
            "default" : null,
            "description" : "Type",
            "type" : "integer",
            "nullable" : false
          },
          "version" : {
            "default" : null,
            "description" : "Version",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_badges_get_user_badge_by_hash_200_response_badge_inner" : {
        "default" : null,
        "properties" : {
          "alignment" : {
            "items" : {
              "$ref" : "#/components/schemas/core_badges_get_user_badge_by_hash_200_response_badge_inner_alignment_inner"
            },
            "type" : "array"
          },
          "attachment" : {
            "default" : 1,
            "description" : "Attachment",
            "type" : "integer",
            "nullable" : false
          },
          "badgeurl" : {
            "default" : null,
            "description" : "Badge URL",
            "type" : "string",
            "nullable" : false
          },
          "courseid" : {
            "default" : null,
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "dateexpire" : {
            "default" : null,
            "description" : "Date expire",
            "type" : "integer",
            "nullable" : true
          },
          "dateissued" : {
            "default" : 0,
            "description" : "Date issued",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : null,
            "description" : "Badge description",
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "default" : null,
            "description" : "User email",
            "type" : "string",
            "nullable" : false
          },
          "endorsement" : {
            "$ref" : "#/components/schemas/core_badges_get_user_badge_by_hash_200_response_badge_inner_endorsement"
          },
          "expiredate" : {
            "default" : null,
            "description" : "Expire date",
            "type" : "integer",
            "nullable" : true
          },
          "expireperiod" : {
            "default" : null,
            "description" : "Expire period",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "imageauthoremail" : {
            "default" : null,
            "description" : "Email of the image author",
            "type" : "string",
            "nullable" : true
          },
          "imageauthorname" : {
            "default" : null,
            "description" : "Name of the image author",
            "type" : "string",
            "nullable" : true
          },
          "imageauthorurl" : {
            "default" : null,
            "description" : "URL of the image author",
            "type" : "string",
            "nullable" : true
          },
          "imagecaption" : {
            "default" : null,
            "description" : "Caption of the image",
            "type" : "string",
            "nullable" : true
          },
          "issuedid" : {
            "default" : null,
            "description" : "Issued id",
            "type" : "integer",
            "nullable" : false
          },
          "issuercontact" : {
            "default" : null,
            "description" : "Issuer contact",
            "type" : "string",
            "nullable" : true
          },
          "issuername" : {
            "default" : null,
            "description" : "Issuer name",
            "type" : "string",
            "nullable" : false
          },
          "issuerurl" : {
            "default" : null,
            "description" : "Issuer URL",
            "type" : "string",
            "nullable" : false
          },
          "language" : {
            "default" : null,
            "description" : "Language",
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "Message",
            "type" : "string",
            "nullable" : false
          },
          "messagesubject" : {
            "default" : null,
            "description" : "Message subject",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Badge name",
            "type" : "string",
            "nullable" : false
          },
          "nextcron" : {
            "default" : null,
            "description" : "Next cron",
            "type" : "integer",
            "nullable" : true
          },
          "notification" : {
            "default" : 1,
            "description" : "Whether to notify when badge is awarded",
            "type" : "integer",
            "nullable" : false
          },
          "relatedbadges" : {
            "items" : {
              "$ref" : "#/components/schemas/core_badges_get_user_badge_by_hash_200_response_badge_inner_relatedbadges_inner"
            },
            "type" : "array"
          },
          "status" : {
            "default" : 0,
            "description" : "Status",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "Time created",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : false
          },
          "type" : {
            "default" : 1,
            "description" : "Type",
            "type" : "integer",
            "nullable" : false
          },
          "uniquehash" : {
            "default" : null,
            "description" : "Unique hash",
            "type" : "string",
            "nullable" : false
          },
          "usercreated" : {
            "default" : null,
            "description" : "User created",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : null,
            "description" : "User modified",
            "type" : "integer",
            "nullable" : false
          },
          "version" : {
            "description" : "Version",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "default" : 0,
            "description" : "Visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_badges_get_user_badge_by_hash_200_response" : {
        "properties" : {
          "badge" : {
            "items" : {
              "$ref" : "#/components/schemas/core_badges_get_user_badge_by_hash_200_response_badge_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "badge" ]
      },
      "core_badges_get_user_badges_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Filter badges by course id, empty all the courses",
            "type" : "integer",
            "nullable" : true
          },
          "onlypublic" : {
            "default" : false,
            "description" : "Whether to return only public badges",
            "type" : "boolean",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "The page of records to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "The number of records to return per page",
            "type" : "integer",
            "nullable" : true
          },
          "search" : {
            "default" : "",
            "description" : "A simple string to search for",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "Badges only for this user id, empty for current user",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_badges_get_user_badges_200_response_badges_inner_alignment_inner" : {
        "properties" : {
          "badgeid" : {
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "Alignment id",
            "type" : "integer",
            "nullable" : false
          },
          "targetCode" : {
            "description" : "Target code",
            "type" : "string",
            "nullable" : true
          },
          "targetDescription" : {
            "description" : "Target description",
            "type" : "string",
            "nullable" : true
          },
          "targetFramework" : {
            "description" : "Target framework",
            "type" : "string",
            "nullable" : true
          },
          "targetName" : {
            "description" : "Target name",
            "type" : "string",
            "nullable" : false
          },
          "targetUrl" : {
            "description" : "Target URL",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_badges_get_user_badges_200_response_badges_inner_endorsement" : {
        "properties" : {
          "badgeid" : {
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "claimcomment" : {
            "description" : "Claim comment",
            "type" : "string",
            "nullable" : true
          },
          "claimid" : {
            "description" : "Claim URL",
            "type" : "string",
            "nullable" : true
          },
          "dateissued" : {
            "default" : 0,
            "description" : "Date issued",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "Endorsement id",
            "type" : "integer",
            "nullable" : false
          },
          "issueremail" : {
            "description" : "Endorsement issuer email",
            "type" : "string",
            "nullable" : false
          },
          "issuername" : {
            "description" : "Endorsement issuer name",
            "type" : "string",
            "nullable" : false
          },
          "issuerurl" : {
            "description" : "Endorsement issuer URL",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "badgeid", "claimcomment", "claimid", "dateissued", "id", "issueremail", "issuername", "issuerurl" ]
      },
      "core_badges_get_user_badges_200_response_badges_inner_relatedbadges_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "language" : {
            "description" : "Language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Badge name",
            "type" : "string",
            "nullable" : false
          },
          "type" : {
            "description" : "Type",
            "type" : "integer",
            "nullable" : false
          },
          "version" : {
            "description" : "Version",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_badges_get_user_badges_200_response_badges_inner" : {
        "default" : null,
        "properties" : {
          "alignment" : {
            "items" : {
              "$ref" : "#/components/schemas/core_badges_get_user_badges_200_response_badges_inner_alignment_inner"
            },
            "type" : "array"
          },
          "attachment" : {
            "default" : 1,
            "description" : "Attachment",
            "type" : "integer",
            "nullable" : false
          },
          "badgeurl" : {
            "description" : "Badge URL",
            "type" : "string",
            "nullable" : false
          },
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "dateexpire" : {
            "description" : "Date expire",
            "type" : "integer",
            "nullable" : true
          },
          "dateissued" : {
            "default" : 0,
            "description" : "Date issued",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "description" : "Badge description",
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "description" : "User email",
            "type" : "string",
            "nullable" : false
          },
          "endorsement" : {
            "$ref" : "#/components/schemas/core_badges_get_user_badges_200_response_badges_inner_endorsement"
          },
          "expiredate" : {
            "description" : "Expire date",
            "type" : "integer",
            "nullable" : true
          },
          "expireperiod" : {
            "description" : "Expire period",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Badge id",
            "type" : "integer",
            "nullable" : false
          },
          "imageauthoremail" : {
            "description" : "Email of the image author",
            "type" : "string",
            "nullable" : true
          },
          "imageauthorname" : {
            "description" : "Name of the image author",
            "type" : "string",
            "nullable" : true
          },
          "imageauthorurl" : {
            "description" : "URL of the image author",
            "type" : "string",
            "nullable" : true
          },
          "imagecaption" : {
            "description" : "Caption of the image",
            "type" : "string",
            "nullable" : true
          },
          "issuedid" : {
            "description" : "Issued id",
            "type" : "integer",
            "nullable" : false
          },
          "issuercontact" : {
            "description" : "Issuer contact",
            "type" : "string",
            "nullable" : true
          },
          "issuername" : {
            "description" : "Issuer name",
            "type" : "string",
            "nullable" : false
          },
          "issuerurl" : {
            "description" : "Issuer URL",
            "type" : "string",
            "nullable" : false
          },
          "language" : {
            "description" : "Language",
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "description" : "Message",
            "type" : "string",
            "nullable" : false
          },
          "messagesubject" : {
            "description" : "Message subject",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "description" : "Badge name",
            "type" : "string",
            "nullable" : false
          },
          "nextcron" : {
            "description" : "Next cron",
            "type" : "integer",
            "nullable" : true
          },
          "notification" : {
            "default" : 1,
            "description" : "Whether to notify when badge is awarded",
            "type" : "integer",
            "nullable" : false
          },
          "relatedbadges" : {
            "items" : {
              "$ref" : "#/components/schemas/core_badges_get_user_badges_200_response_badges_inner_relatedbadges_inner"
            },
            "type" : "array"
          },
          "status" : {
            "default" : 0,
            "description" : "Status",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "Time created",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : false
          },
          "type" : {
            "default" : 1,
            "description" : "Type",
            "type" : "integer",
            "nullable" : false
          },
          "uniquehash" : {
            "description" : "Unique hash",
            "type" : "string",
            "nullable" : false
          },
          "usercreated" : {
            "description" : "User created",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "description" : "User modified",
            "type" : "integer",
            "nullable" : false
          },
          "version" : {
            "description" : "Version",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "default" : 0,
            "description" : "Visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_badges_get_user_badges_200_response" : {
        "properties" : {
          "badges" : {
            "items" : {
              "$ref" : "#/components/schemas/core_badges_get_user_badges_200_response_badges_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "badges" ]
      },
      "core_block_fetch_addable_blocks_request" : {
        "properties" : {
          "pagecontextid" : {
            "default" : null,
            "description" : "The context ID of the page.",
            "type" : "integer",
            "nullable" : true
          },
          "pagehash" : {
            "default" : "",
            "description" : "Page hash",
            "type" : "string",
            "nullable" : true
          },
          "pagelayout" : {
            "default" : null,
            "description" : "The layout of the page.",
            "type" : "string",
            "nullable" : true
          },
          "pagetype" : {
            "default" : null,
            "description" : "The type of the page.",
            "type" : "string",
            "nullable" : true
          },
          "subpage" : {
            "default" : "",
            "description" : "The subpage identifier",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "pagecontextid", "pagelayout", "pagetype" ]
      },
      "core_block_get_course_blocks_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "returncontents" : {
            "default" : false,
            "description" : "Whether to return the block contents.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_block_get_course_blocks_200_response_blocks_inner_configs_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Name.",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Type (instance or plugin).",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "JSON encoded representation of the config value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_block_get_course_blocks_200_response_blocks_inner_contents_files_inner" : {
        "default" : null,
        "description" : "File.",
        "properties" : {
          "filename" : {
            "default" : null,
            "description" : "File name.",
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "default" : null,
            "description" : "File path.",
            "type" : "string",
            "nullable" : true
          },
          "filesize" : {
            "default" : null,
            "description" : "File size.",
            "type" : "integer",
            "nullable" : true
          },
          "fileurl" : {
            "default" : null,
            "description" : "Downloadable file url.",
            "type" : "string",
            "nullable" : true
          },
          "isexternalfile" : {
            "default" : null,
            "description" : "Whether is an external file.",
            "type" : "boolean",
            "nullable" : true
          },
          "mimetype" : {
            "default" : null,
            "description" : "File mime type.",
            "type" : "string",
            "nullable" : true
          },
          "repositorytype" : {
            "default" : null,
            "description" : "The repository type for external files.",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time modified.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_block_get_course_blocks_200_response_blocks_inner_contents" : {
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "Block contents.",
            "type" : "string",
            "nullable" : true
          },
          "contentformat" : {
            "default" : null,
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_course_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "footer" : {
            "default" : null,
            "description" : "Block footer.",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Block title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "content", "contentformat", "files", "footer", "title" ]
      },
      "core_block_get_course_blocks_200_response_blocks_inner" : {
        "default" : null,
        "description" : "Block information.",
        "properties" : {
          "collapsible" : {
            "default" : null,
            "description" : "Whether the block is collapsible.",
            "type" : "boolean",
            "nullable" : true
          },
          "configs" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_course_blocks_200_response_blocks_inner_configs_inner"
            },
            "type" : "array"
          },
          "contents" : {
            "$ref" : "#/components/schemas/core_block_get_course_blocks_200_response_blocks_inner_contents"
          },
          "dockable" : {
            "default" : null,
            "description" : "Whether the block is dockable.",
            "type" : "boolean",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "Block instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Block name.",
            "type" : "string",
            "nullable" : true
          },
          "positionid" : {
            "default" : null,
            "description" : "Position id.",
            "type" : "integer",
            "nullable" : true
          },
          "region" : {
            "default" : null,
            "description" : "Block region.",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "default" : null,
            "description" : "Whether the block is visible.",
            "type" : "boolean",
            "nullable" : true
          },
          "weight" : {
            "default" : null,
            "description" : "Used to order blocks within a region.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_block_get_course_blocks_200_response" : {
        "properties" : {
          "blocks" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_course_blocks_200_response_blocks_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "blocks" ]
      },
      "core_block_get_dashboard_blocks_request" : {
        "properties" : {
          "mypage" : {
            "default" : "__default",
            "description" : "What my page to return blocks of",
            "type" : "string",
            "nullable" : true
          },
          "returncontents" : {
            "default" : false,
            "description" : "Whether to return the block contents.",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "User id (optional), default is current user.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_block_get_dashboard_blocks_200_response_blocks_inner_configs_inner" : {
        "properties" : {
          "name" : {
            "description" : "Name.",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "Type (instance or plugin).",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "JSON encoded representation of the config value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner" : {
        "description" : "File.",
        "properties" : {
          "filename" : {
            "description" : "File name.",
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "description" : "File path.",
            "type" : "string",
            "nullable" : true
          },
          "filesize" : {
            "description" : "File size.",
            "type" : "integer",
            "nullable" : true
          },
          "fileurl" : {
            "description" : "Downloadable file url.",
            "type" : "string",
            "nullable" : true
          },
          "isexternalfile" : {
            "description" : "Whether is an external file.",
            "type" : "boolean",
            "nullable" : true
          },
          "mimetype" : {
            "description" : "File mime type.",
            "type" : "string",
            "nullable" : true
          },
          "repositorytype" : {
            "description" : "The repository type for external files.",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_block_get_dashboard_blocks_200_response_blocks_inner_contents" : {
        "properties" : {
          "content" : {
            "description" : "Block contents.",
            "type" : "string",
            "nullable" : true
          },
          "contentformat" : {
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "footer" : {
            "description" : "Block footer.",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "description" : "Block title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "content", "contentformat", "files", "footer", "title" ]
      },
      "core_block_get_dashboard_blocks_200_response_blocks_inner" : {
        "description" : "Block information.",
        "properties" : {
          "collapsible" : {
            "description" : "Whether the block is collapsible.",
            "type" : "boolean",
            "nullable" : true
          },
          "configs" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_configs_inner"
            },
            "type" : "array"
          },
          "contents" : {
            "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents"
          },
          "dockable" : {
            "description" : "Whether the block is dockable.",
            "type" : "boolean",
            "nullable" : true
          },
          "instanceid" : {
            "description" : "Block instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Block name.",
            "type" : "string",
            "nullable" : true
          },
          "positionid" : {
            "description" : "Position id.",
            "type" : "integer",
            "nullable" : true
          },
          "region" : {
            "description" : "Block region.",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "description" : "Whether the block is visible.",
            "type" : "boolean",
            "nullable" : true
          },
          "weight" : {
            "description" : "Used to order blocks within a region.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_block_get_dashboard_blocks_200_response" : {
        "properties" : {
          "blocks" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "blocks" ]
      },
      "core_blog_get_entries_request_filters_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The expected keys (value format) are:\n                                tag      PARAM_NOTAGS blog tag\n                                tagid    PARAM_INT    blog tag id\n                                userid   PARAM_INT    blog author (userid)\n                                cmid    PARAM_INT    course module id\n                                entryid  PARAM_INT    entry id\n                                groupid  PARAM_INT    group id\n                                courseid PARAM_INT    course id\n                                search   PARAM_RAW    search term\n                                ",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the filter.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_blog_get_entries_request" : {
        "properties" : {
          "filters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_request_filters_inner"
            },
            "type" : "array"
          },
          "page" : {
            "default" : 0,
            "description" : "The blog page to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 10,
            "description" : "The number of posts to return per page.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_blog_get_entries_200_response_entries_inner_attachmentfiles_inner" : {
        "default" : null,
        "properties" : {
          "filename" : {
            "default" : null,
            "description" : "File name.",
            "type" : "string",
            "nullable" : false
          },
          "filepath" : {
            "default" : null,
            "description" : "File path.",
            "type" : "string",
            "nullable" : false
          },
          "filesize" : {
            "default" : null,
            "description" : "File size.",
            "type" : "integer",
            "nullable" : false
          },
          "fileurl" : {
            "default" : null,
            "description" : "Downloadable file url.",
            "type" : "string",
            "nullable" : false
          },
          "isexternalfile" : {
            "default" : null,
            "description" : "Whether is an external file.",
            "type" : "boolean",
            "nullable" : false
          },
          "mimetype" : {
            "default" : null,
            "description" : "File mime type.",
            "type" : "string",
            "nullable" : false
          },
          "repositorytype" : {
            "default" : null,
            "description" : "The repository type for the external files.",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time modified.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_blog_get_entries_200_response_entries_inner_summaryfiles_inner" : {
        "properties" : {
          "filename" : {
            "description" : "File name.",
            "type" : "string",
            "nullable" : false
          },
          "filepath" : {
            "description" : "File path.",
            "type" : "string",
            "nullable" : false
          },
          "filesize" : {
            "description" : "File size.",
            "type" : "integer",
            "nullable" : false
          },
          "fileurl" : {
            "description" : "Downloadable file url.",
            "type" : "string",
            "nullable" : false
          },
          "isexternalfile" : {
            "description" : "Whether is an external file.",
            "type" : "boolean",
            "nullable" : false
          },
          "mimetype" : {
            "description" : "File mime type.",
            "type" : "string",
            "nullable" : false
          },
          "repositorytype" : {
            "description" : "The repository type for the external files.",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_blog_get_entries_200_response_entries_inner_tags_inner" : {
        "default" : null,
        "properties" : {
          "flag" : {
            "default" : 0,
            "description" : "Whether the tag is flagged as inappropriate.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Tag id.",
            "type" : "integer",
            "nullable" : false
          },
          "isstandard" : {
            "default" : false,
            "description" : "Whether this tag is standard.",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "default" : null,
            "description" : "Id of the record tagged.",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Tag name.",
            "type" : "string",
            "nullable" : false
          },
          "ordering" : {
            "default" : null,
            "description" : "Tag ordering.",
            "type" : "integer",
            "nullable" : false
          },
          "rawname" : {
            "default" : null,
            "description" : "The raw, unnormalised name for the tag as entered by users.",
            "type" : "string",
            "nullable" : false
          },
          "tagcollid" : {
            "default" : null,
            "description" : "Tag collection id.",
            "type" : "integer",
            "nullable" : false
          },
          "taginstancecontextid" : {
            "default" : null,
            "description" : "Context the tag instance belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "taginstanceid" : {
            "default" : null,
            "description" : "Tag instance id.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_blog_get_entries_200_response_entries_inner" : {
        "default" : null,
        "properties" : {
          "attachment" : {
            "default" : null,
            "description" : "Post atachment.",
            "type" : "string",
            "nullable" : true
          },
          "attachmentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_attachmentfiles_inner"
            },
            "type" : "array"
          },
          "content" : {
            "default" : null,
            "description" : "Post content.",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "default" : 0,
            "description" : "Course where the post was created.",
            "type" : "integer",
            "nullable" : false
          },
          "coursemoduleid" : {
            "default" : 0,
            "description" : "Course module id where the post was created.",
            "type" : "integer",
            "nullable" : false
          },
          "created" : {
            "default" : 0,
            "description" : "When it was created.",
            "type" : "integer",
            "nullable" : false
          },
          "format" : {
            "default" : 0,
            "description" : "Post content format.",
            "type" : "integer",
            "nullable" : false
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group post was created for.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Post/entry id.",
            "type" : "integer",
            "nullable" : true
          },
          "lastmodified" : {
            "default" : 0,
            "description" : "When it was last modified.",
            "type" : "integer",
            "nullable" : false
          },
          "module" : {
            "default" : null,
            "description" : "Where it was published the post (blog, blog_external...).",
            "type" : "string",
            "nullable" : false
          },
          "moduleid" : {
            "default" : 0,
            "description" : "Module id where the post was created (not used anymore).",
            "type" : "integer",
            "nullable" : false
          },
          "publishstate" : {
            "default" : "draft",
            "description" : "Post publish state.",
            "type" : "string",
            "nullable" : false
          },
          "rating" : {
            "default" : 0,
            "description" : "Post rating.",
            "type" : "integer",
            "nullable" : false
          },
          "subject" : {
            "default" : null,
            "description" : "Post subject.",
            "type" : "string",
            "nullable" : false
          },
          "summary" : {
            "default" : null,
            "description" : "Post summary.",
            "type" : "string",
            "nullable" : true
          },
          "summaryfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "summaryformat" : {
            "default" : "0",
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "uniquehash" : {
            "default" : null,
            "description" : "Post unique hash.",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "default" : 0,
            "description" : "Post author.",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : null,
            "description" : "User that updated the post.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_blog_get_entries_200_response" : {
        "properties" : {
          "entries" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner"
            },
            "type" : "array"
          },
          "totalentries" : {
            "default" : null,
            "description" : "The total number of entries found.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "entries", "totalentries" ]
      },
      "core_blog_view_entries_request_filters_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The expected keys (value format) are:\n                                tag      PARAM_NOTAGS blog tag\n                                tagid    PARAM_INT    blog tag id\n                                userid   PARAM_INT    blog author (userid)\n                                cmid     PARAM_INT    course module id\n                                entryid  PARAM_INT    entry id\n                                groupid  PARAM_INT    group id\n                                courseid PARAM_INT    course id\n                                search   PARAM_RAW    search term\n                                ",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the filter.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_blog_view_entries_request" : {
        "properties" : {
          "filters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_view_entries_request_filters_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_blog_view_entries_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_calendar_create_calendar_events_request_events_inner" : {
        "default" : null,
        "description" : "event",
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "course id",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : null,
            "description" : "Description",
            "type" : "string",
            "nullable" : true
          },
          "eventtype" : {
            "default" : "user",
            "description" : "Event type",
            "type" : "string",
            "nullable" : false
          },
          "format" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "group id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "default" : "",
            "description" : "event name",
            "type" : "string",
            "nullable" : false
          },
          "repeats" : {
            "default" : 0,
            "description" : "number of repeats",
            "type" : "integer",
            "nullable" : false
          },
          "sequence" : {
            "default" : 1,
            "description" : "sequence",
            "type" : "integer",
            "nullable" : false
          },
          "timeduration" : {
            "default" : 0,
            "description" : "time duration",
            "type" : "integer",
            "nullable" : false
          },
          "timestart" : {
            "default" : 1716010508,
            "description" : "timestart",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_calendar_create_calendar_events_request" : {
        "properties" : {
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_create_calendar_events_request_events_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "events" ]
      },
      "core_calendar_create_calendar_events_200_response_events_inner" : {
        "default" : null,
        "description" : "event",
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "Description",
            "type" : "string",
            "nullable" : true
          },
          "eventtype" : {
            "default" : null,
            "description" : "Event type",
            "type" : "string",
            "nullable" : true
          },
          "format" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "event id",
            "type" : "integer",
            "nullable" : true
          },
          "instance" : {
            "default" : null,
            "description" : "instance id",
            "type" : "integer",
            "nullable" : true
          },
          "modulename" : {
            "default" : null,
            "description" : "module name",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "event name",
            "type" : "string",
            "nullable" : true
          },
          "repeatid" : {
            "default" : null,
            "description" : "repeat id",
            "type" : "integer",
            "nullable" : true
          },
          "sequence" : {
            "default" : null,
            "description" : "sequence",
            "type" : "integer",
            "nullable" : true
          },
          "subscriptionid" : {
            "default" : null,
            "description" : "Subscription id",
            "type" : "integer",
            "nullable" : true
          },
          "timeduration" : {
            "default" : null,
            "description" : "time duration",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "time modified",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : null,
            "description" : "timestart",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "uuid" : {
            "default" : "",
            "description" : "unique id of ical events",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "default" : null,
            "description" : "visible",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_calendar_create_calendar_events_200_response" : {
        "properties" : {
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_create_calendar_events_200_response_events_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "events" ]
      },
      "core_calendar_delete_calendar_events_request_events_inner" : {
        "default" : null,
        "description" : "List of events to delete",
        "properties" : {
          "eventid" : {
            "default" : "",
            "description" : "Event ID",
            "type" : "integer",
            "nullable" : false
          },
          "repeat" : {
            "default" : null,
            "description" : "Delete comeplete series if repeated event",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_calendar_delete_calendar_events_request" : {
        "properties" : {
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_delete_calendar_events_request_events_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "events" ]
      },
      "core_calendar_delete_subscription_request" : {
        "properties" : {
          "subscriptionid" : {
            "default" : null,
            "description" : "The id of the subscription",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "subscriptionid" ]
      },
      "core_calendar_delete_subscription_200_response" : {
        "properties" : {
          "status" : {
            "description" : "status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_calendar_get_action_events_by_course_request" : {
        "properties" : {
          "aftereventid" : {
            "default" : 0,
            "description" : "The last seen event id",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 20,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "searchvalue" : {
            "default" : null,
            "description" : "The value a user wishes to search against",
            "type" : "string",
            "nullable" : true
          },
          "timesortfrom" : {
            "default" : null,
            "description" : "Time sort from",
            "type" : "integer",
            "nullable" : true
          },
          "timesortto" : {
            "default" : null,
            "description" : "Time sort to",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_calendar_get_action_events_by_course_200_response_events_inner_action" : {
        "properties" : {
          "actionable" : {
            "default" : null,
            "description" : "actionable",
            "type" : "boolean",
            "nullable" : false
          },
          "itemcount" : {
            "default" : null,
            "description" : "itemcount",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "showitemcount" : {
            "default" : false,
            "description" : "showitemcount",
            "type" : "boolean",
            "nullable" : false
          },
          "url" : {
            "default" : null,
            "description" : "url",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "actionable", "itemcount", "name", "showitemcount", "url" ]
      },
      "core_calendar_get_action_events_by_course_200_response_events_inner_category" : {
        "properties" : {
          "coursecount" : {
            "default" : 0,
            "description" : "coursecount",
            "type" : "integer",
            "nullable" : false
          },
          "depth" : {
            "default" : 0,
            "description" : "depth",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : null,
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "default" : null,
            "description" : "idnumber",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : "",
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "nestedname" : {
            "default" : null,
            "description" : "nestedname",
            "type" : "string",
            "nullable" : false
          },
          "parent" : {
            "default" : null,
            "description" : "parent",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "coursecount", "depth", "id", "idnumber", "name", "nestedname", "parent", "timemodified", "url", "visible" ]
      },
      "core_calendar_get_action_events_by_course_200_response_events_inner_course" : {
        "properties" : {
          "coursecategory" : {
            "default" : null,
            "description" : "coursecategory",
            "type" : "string",
            "nullable" : false
          },
          "courseimage" : {
            "default" : null,
            "description" : "courseimage",
            "type" : "string",
            "nullable" : false
          },
          "enddate" : {
            "default" : null,
            "description" : "enddate",
            "type" : "integer",
            "nullable" : false
          },
          "fullname" : {
            "default" : null,
            "description" : "fullname",
            "type" : "string",
            "nullable" : false
          },
          "fullnamedisplay" : {
            "default" : null,
            "description" : "fullnamedisplay",
            "type" : "string",
            "nullable" : false
          },
          "hasprogress" : {
            "default" : null,
            "description" : "hasprogress",
            "type" : "boolean",
            "nullable" : false
          },
          "hidden" : {
            "default" : null,
            "description" : "hidden",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "default" : null,
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "isfavourite" : {
            "default" : null,
            "description" : "isfavourite",
            "type" : "boolean",
            "nullable" : false
          },
          "pdfexportfont" : {
            "default" : null,
            "description" : "pdfexportfont",
            "type" : "string",
            "nullable" : true
          },
          "progress" : {
            "default" : null,
            "description" : "progress",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "default" : null,
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "showactivitydates" : {
            "default" : null,
            "description" : "showactivitydates",
            "type" : "boolean",
            "nullable" : true
          },
          "showcompletionconditions" : {
            "default" : null,
            "description" : "showcompletionconditions",
            "type" : "boolean",
            "nullable" : true
          },
          "showshortname" : {
            "default" : null,
            "description" : "showshortname",
            "type" : "boolean",
            "nullable" : false
          },
          "startdate" : {
            "default" : null,
            "description" : "startdate",
            "type" : "integer",
            "nullable" : false
          },
          "summary" : {
            "default" : null,
            "description" : "summary",
            "type" : "string",
            "nullable" : true
          },
          "summaryformat" : {
            "default" : null,
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "timeaccess" : {
            "default" : null,
            "description" : "timeaccess",
            "type" : "integer",
            "nullable" : false
          },
          "viewurl" : {
            "default" : null,
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "default" : null,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "coursecategory", "courseimage", "enddate", "fullname", "fullnamedisplay", "hasprogress", "hidden", "id", "idnumber", "isfavourite", "pdfexportfont", "shortname", "showactivitydates", "showcompletionconditions", "showshortname", "startdate", "summary", "summaryformat", "viewurl", "visible" ]
      },
      "core_calendar_get_action_events_by_course_200_response_events_inner_icon" : {
        "properties" : {
          "alttext" : {
            "default" : null,
            "description" : "alttext",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "default" : null,
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "iconclass" : {
            "default" : null,
            "description" : "iconclass",
            "type" : "string",
            "nullable" : false
          },
          "iconurl" : {
            "default" : null,
            "description" : "iconurl",
            "type" : "string",
            "nullable" : false
          },
          "key" : {
            "default" : null,
            "description" : "key",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "alttext", "component", "iconclass", "iconurl", "key" ]
      },
      "core_calendar_get_action_events_by_course_200_response_events_inner_subscription" : {
        "properties" : {
          "displayeventsource" : {
            "default" : null,
            "description" : "displayeventsource",
            "type" : "boolean",
            "nullable" : false
          },
          "subscriptionname" : {
            "default" : null,
            "description" : "subscriptionname",
            "type" : "string",
            "nullable" : false
          },
          "subscriptionurl" : {
            "default" : null,
            "description" : "subscriptionurl",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "displayeventsource" ]
      },
      "core_calendar_get_action_events_by_course_200_response_events_inner" : {
        "default" : null,
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_200_response_events_inner_action"
          },
          "activityname" : {
            "default" : null,
            "description" : "activityname",
            "type" : "string",
            "nullable" : true
          },
          "activitystr" : {
            "default" : null,
            "description" : "activitystr",
            "type" : "string",
            "nullable" : true
          },
          "candelete" : {
            "default" : null,
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "canedit" : {
            "default" : null,
            "description" : "canedit",
            "type" : "boolean",
            "nullable" : false
          },
          "category" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_200_response_events_inner_category"
          },
          "categoryid" : {
            "default" : null,
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_200_response_events_inner_course"
          },
          "deleteurl" : {
            "default" : null,
            "description" : "deleteurl",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "default" : null,
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "editurl" : {
            "default" : null,
            "description" : "editurl",
            "type" : "string",
            "nullable" : false
          },
          "eventcount" : {
            "default" : null,
            "description" : "eventcount",
            "type" : "integer",
            "nullable" : true
          },
          "eventtype" : {
            "default" : null,
            "description" : "eventtype",
            "type" : "string",
            "nullable" : false
          },
          "formattedlocation" : {
            "default" : null,
            "description" : "formattedlocation",
            "type" : "string",
            "nullable" : false
          },
          "formattedtime" : {
            "default" : null,
            "description" : "formattedtime",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "default" : null,
            "description" : "groupid",
            "type" : "integer",
            "nullable" : true
          },
          "groupname" : {
            "default" : null,
            "description" : "groupname",
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_200_response_events_inner_icon"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "instance" : {
            "default" : null,
            "description" : "instance",
            "type" : "integer",
            "nullable" : true
          },
          "isactionevent" : {
            "default" : null,
            "description" : "isactionevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscategoryevent" : {
            "default" : null,
            "description" : "iscategoryevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscourseevent" : {
            "default" : null,
            "description" : "iscourseevent",
            "type" : "boolean",
            "nullable" : false
          },
          "location" : {
            "default" : null,
            "description" : "location",
            "type" : "string",
            "nullable" : true
          },
          "modulename" : {
            "default" : null,
            "description" : "modulename",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtype" : {
            "default" : null,
            "description" : "normalisedeventtype",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtypetext" : {
            "default" : null,
            "description" : "normalisedeventtypetext",
            "type" : "string",
            "nullable" : false
          },
          "overdue" : {
            "default" : false,
            "description" : "overdue",
            "type" : "boolean",
            "nullable" : true
          },
          "purpose" : {
            "default" : null,
            "description" : "purpose",
            "type" : "string",
            "nullable" : false
          },
          "repeatid" : {
            "default" : null,
            "description" : "repeatid",
            "type" : "integer",
            "nullable" : true
          },
          "subscription" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_200_response_events_inner_subscription"
          },
          "timeduration" : {
            "default" : null,
            "description" : "timeduration",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timesort" : {
            "default" : null,
            "description" : "timesort",
            "type" : "integer",
            "nullable" : false
          },
          "timestart" : {
            "default" : null,
            "description" : "timestart",
            "type" : "integer",
            "nullable" : false
          },
          "timeusermidnight" : {
            "default" : null,
            "description" : "timeusermidnight",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "default" : null,
            "description" : "userid",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "default" : null,
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_calendar_get_action_events_by_course_200_response" : {
        "properties" : {
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_action_events_by_course_200_response_events_inner"
            },
            "type" : "array"
          },
          "firstid" : {
            "default" : null,
            "description" : "firstid",
            "type" : "integer",
            "nullable" : true
          },
          "lastid" : {
            "default" : null,
            "description" : "lastid",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "events", "firstid", "lastid" ]
      },
      "core_calendar_get_action_events_by_courses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "description" : "Course id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "limitnum" : {
            "default" : 10,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "searchvalue" : {
            "description" : "The value a user wishes to search against",
            "type" : "string",
            "nullable" : true
          },
          "timesortfrom" : {
            "description" : "Time sort from",
            "type" : "integer",
            "nullable" : true
          },
          "timesortto" : {
            "description" : "Time sort to",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseids" ]
      },
      "core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_action" : {
        "properties" : {
          "actionable" : {
            "description" : "actionable",
            "type" : "boolean",
            "nullable" : false
          },
          "itemcount" : {
            "description" : "itemcount",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "showitemcount" : {
            "default" : false,
            "description" : "showitemcount",
            "type" : "boolean",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "actionable", "itemcount", "name", "showitemcount", "url" ]
      },
      "core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_category" : {
        "properties" : {
          "coursecount" : {
            "default" : 0,
            "description" : "coursecount",
            "type" : "integer",
            "nullable" : false
          },
          "depth" : {
            "default" : 0,
            "description" : "depth",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : "",
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "nestedname" : {
            "description" : "nestedname",
            "type" : "string",
            "nullable" : false
          },
          "parent" : {
            "description" : "parent",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "coursecount", "depth", "id", "idnumber", "name", "nestedname", "parent", "timemodified", "url", "visible" ]
      },
      "core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_course" : {
        "properties" : {
          "coursecategory" : {
            "description" : "coursecategory",
            "type" : "string",
            "nullable" : false
          },
          "courseimage" : {
            "description" : "courseimage",
            "type" : "string",
            "nullable" : false
          },
          "enddate" : {
            "description" : "enddate",
            "type" : "integer",
            "nullable" : false
          },
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : false
          },
          "fullnamedisplay" : {
            "description" : "fullnamedisplay",
            "type" : "string",
            "nullable" : false
          },
          "hasprogress" : {
            "description" : "hasprogress",
            "type" : "boolean",
            "nullable" : false
          },
          "hidden" : {
            "description" : "hidden",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "isfavourite" : {
            "description" : "isfavourite",
            "type" : "boolean",
            "nullable" : false
          },
          "pdfexportfont" : {
            "description" : "pdfexportfont",
            "type" : "string",
            "nullable" : true
          },
          "progress" : {
            "description" : "progress",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "showactivitydates" : {
            "description" : "showactivitydates",
            "type" : "boolean",
            "nullable" : true
          },
          "showcompletionconditions" : {
            "description" : "showcompletionconditions",
            "type" : "boolean",
            "nullable" : true
          },
          "showshortname" : {
            "description" : "showshortname",
            "type" : "boolean",
            "nullable" : false
          },
          "startdate" : {
            "description" : "startdate",
            "type" : "integer",
            "nullable" : false
          },
          "summary" : {
            "description" : "summary",
            "type" : "string",
            "nullable" : true
          },
          "summaryformat" : {
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "timeaccess" : {
            "description" : "timeaccess",
            "type" : "integer",
            "nullable" : false
          },
          "viewurl" : {
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "coursecategory", "courseimage", "enddate", "fullname", "fullnamedisplay", "hasprogress", "hidden", "id", "idnumber", "isfavourite", "pdfexportfont", "shortname", "showactivitydates", "showcompletionconditions", "showshortname", "startdate", "summary", "summaryformat", "viewurl", "visible" ]
      },
      "core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_icon" : {
        "properties" : {
          "alttext" : {
            "description" : "alttext",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "iconclass" : {
            "description" : "iconclass",
            "type" : "string",
            "nullable" : false
          },
          "iconurl" : {
            "description" : "iconurl",
            "type" : "string",
            "nullable" : false
          },
          "key" : {
            "description" : "key",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "alttext", "component", "iconclass", "iconurl", "key" ]
      },
      "core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_subscription" : {
        "properties" : {
          "displayeventsource" : {
            "description" : "displayeventsource",
            "type" : "boolean",
            "nullable" : false
          },
          "subscriptionname" : {
            "description" : "subscriptionname",
            "type" : "string",
            "nullable" : false
          },
          "subscriptionurl" : {
            "description" : "subscriptionurl",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "displayeventsource" ]
      },
      "core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner" : {
        "default" : null,
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_action"
          },
          "activityname" : {
            "description" : "activityname",
            "type" : "string",
            "nullable" : true
          },
          "activitystr" : {
            "description" : "activitystr",
            "type" : "string",
            "nullable" : true
          },
          "candelete" : {
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "canedit" : {
            "description" : "canedit",
            "type" : "boolean",
            "nullable" : false
          },
          "category" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_category"
          },
          "categoryid" : {
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_course"
          },
          "deleteurl" : {
            "description" : "deleteurl",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "editurl" : {
            "description" : "editurl",
            "type" : "string",
            "nullable" : false
          },
          "eventcount" : {
            "description" : "eventcount",
            "type" : "integer",
            "nullable" : true
          },
          "eventtype" : {
            "description" : "eventtype",
            "type" : "string",
            "nullable" : false
          },
          "formattedlocation" : {
            "description" : "formattedlocation",
            "type" : "string",
            "nullable" : false
          },
          "formattedtime" : {
            "description" : "formattedtime",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "description" : "groupid",
            "type" : "integer",
            "nullable" : true
          },
          "groupname" : {
            "description" : "groupname",
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_icon"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "instance" : {
            "description" : "instance",
            "type" : "integer",
            "nullable" : true
          },
          "isactionevent" : {
            "description" : "isactionevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscategoryevent" : {
            "description" : "iscategoryevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscourseevent" : {
            "description" : "iscourseevent",
            "type" : "boolean",
            "nullable" : false
          },
          "location" : {
            "description" : "location",
            "type" : "string",
            "nullable" : true
          },
          "modulename" : {
            "description" : "modulename",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtype" : {
            "description" : "normalisedeventtype",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtypetext" : {
            "description" : "normalisedeventtypetext",
            "type" : "string",
            "nullable" : false
          },
          "overdue" : {
            "default" : false,
            "description" : "overdue",
            "type" : "boolean",
            "nullable" : true
          },
          "purpose" : {
            "description" : "purpose",
            "type" : "string",
            "nullable" : false
          },
          "repeatid" : {
            "description" : "repeatid",
            "type" : "integer",
            "nullable" : true
          },
          "subscription" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_subscription"
          },
          "timeduration" : {
            "description" : "timeduration",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timesort" : {
            "description" : "timesort",
            "type" : "integer",
            "nullable" : false
          },
          "timestart" : {
            "description" : "timestart",
            "type" : "integer",
            "nullable" : false
          },
          "timeusermidnight" : {
            "description" : "timeusermidnight",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner" : {
        "default" : [ ],
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner"
            },
            "type" : "array"
          },
          "firstid" : {
            "description" : "firstid",
            "type" : "integer",
            "nullable" : true
          },
          "lastid" : {
            "description" : "lastid",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_calendar_get_action_events_by_courses_200_response" : {
        "properties" : {
          "groupedbycourse" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groupedbycourse" ]
      },
      "core_calendar_get_action_events_by_timesort_request" : {
        "properties" : {
          "aftereventid" : {
            "default" : 0,
            "description" : "The last seen event id",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 20,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "limittononsuspendedevents" : {
            "default" : false,
            "description" : "Limit the events to courses the user is not suspended in",
            "type" : "boolean",
            "nullable" : true
          },
          "searchvalue" : {
            "description" : "The value a user wishes to search against",
            "type" : "string",
            "nullable" : true
          },
          "timesortfrom" : {
            "default" : 0,
            "description" : "Time sort from",
            "type" : "integer",
            "nullable" : true
          },
          "timesortto" : {
            "description" : "Time sort to",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_calendar_get_action_events_by_timesort_200_response" : {
        "properties" : {
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner"
            },
            "type" : "array"
          },
          "firstid" : {
            "description" : "firstid",
            "type" : "integer",
            "nullable" : true
          },
          "lastid" : {
            "description" : "lastid",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "events", "firstid", "lastid" ]
      },
      "core_calendar_get_allowed_event_types_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course to check, empty for site.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_calendar_get_allowed_event_types_200_response" : {
        "properties" : {
          "allowedeventtypes" : {
            "items" : {
              "default" : null,
              "description" : "Allowed event types to be created in the given course.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "allowedeventtypes" ]
      },
      "core_calendar_get_calendar_access_information_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course to check, empty for site calendar events.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_calendar_get_calendar_access_information_200_response" : {
        "properties" : {
          "canmanageentries" : {
            "default" : null,
            "description" : "Whether the user can manage entries.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanagegroupentries" : {
            "default" : null,
            "description" : "Whether the user can manage group entries.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanageownentries" : {
            "default" : null,
            "description" : "Whether the user can manage its own entries.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "canmanageentries", "canmanagegroupentries", "canmanageownentries" ]
      },
      "core_calendar_get_calendar_day_view_request" : {
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "Category being viewed",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : "1",
            "description" : "Course being viewed",
            "type" : "integer",
            "nullable" : true
          },
          "day" : {
            "default" : null,
            "description" : "Day to be viewed",
            "type" : "integer",
            "nullable" : true
          },
          "month" : {
            "default" : null,
            "description" : "Month to be viewed",
            "type" : "integer",
            "nullable" : true
          },
          "year" : {
            "default" : null,
            "description" : "Year to be viewed",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "day", "month", "year" ]
      },
      "core_calendar_get_calendar_day_view_200_response_date" : {
        "properties" : {
          "hours" : {
            "default" : null,
            "description" : "hours",
            "type" : "integer",
            "nullable" : false
          },
          "mday" : {
            "default" : null,
            "description" : "mday",
            "type" : "integer",
            "nullable" : false
          },
          "minutes" : {
            "default" : null,
            "description" : "minutes",
            "type" : "integer",
            "nullable" : false
          },
          "mon" : {
            "default" : null,
            "description" : "mon",
            "type" : "integer",
            "nullable" : false
          },
          "month" : {
            "default" : null,
            "description" : "month",
            "type" : "string",
            "nullable" : false
          },
          "seconds" : {
            "default" : null,
            "description" : "seconds",
            "type" : "integer",
            "nullable" : false
          },
          "timestamp" : {
            "default" : null,
            "description" : "timestamp",
            "type" : "integer",
            "nullable" : false
          },
          "wday" : {
            "default" : null,
            "description" : "wday",
            "type" : "integer",
            "nullable" : false
          },
          "weekday" : {
            "default" : null,
            "description" : "weekday",
            "type" : "string",
            "nullable" : false
          },
          "yday" : {
            "default" : null,
            "description" : "yday",
            "type" : "integer",
            "nullable" : false
          },
          "year" : {
            "default" : null,
            "description" : "year",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "hours", "mday", "minutes", "mon", "month", "seconds", "timestamp", "wday", "weekday", "yday", "year" ]
      },
      "core_calendar_get_calendar_day_view_200_response_events_inner" : {
        "default" : null,
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_action"
          },
          "activityname" : {
            "description" : "activityname",
            "type" : "string",
            "nullable" : true
          },
          "activitystr" : {
            "description" : "activitystr",
            "type" : "string",
            "nullable" : true
          },
          "candelete" : {
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "canedit" : {
            "description" : "canedit",
            "type" : "boolean",
            "nullable" : false
          },
          "category" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_category"
          },
          "categoryid" : {
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_course"
          },
          "deleteurl" : {
            "description" : "deleteurl",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "draggable" : {
            "default" : false,
            "description" : "draggable",
            "type" : "boolean",
            "nullable" : false
          },
          "editurl" : {
            "description" : "editurl",
            "type" : "string",
            "nullable" : false
          },
          "eventcount" : {
            "description" : "eventcount",
            "type" : "integer",
            "nullable" : true
          },
          "eventtype" : {
            "description" : "eventtype",
            "type" : "string",
            "nullable" : false
          },
          "formattedlocation" : {
            "description" : "formattedlocation",
            "type" : "string",
            "nullable" : false
          },
          "formattedtime" : {
            "description" : "formattedtime",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "description" : "groupid",
            "type" : "integer",
            "nullable" : true
          },
          "groupname" : {
            "description" : "groupname",
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_icon"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "instance" : {
            "description" : "instance",
            "type" : "integer",
            "nullable" : true
          },
          "isactionevent" : {
            "description" : "isactionevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscategoryevent" : {
            "description" : "iscategoryevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscourseevent" : {
            "description" : "iscourseevent",
            "type" : "boolean",
            "nullable" : false
          },
          "islastday" : {
            "default" : false,
            "description" : "islastday",
            "type" : "boolean",
            "nullable" : false
          },
          "location" : {
            "description" : "location",
            "type" : "string",
            "nullable" : true
          },
          "maxdayerror" : {
            "default" : null,
            "description" : "maxdayerror",
            "type" : "string",
            "nullable" : false
          },
          "maxdaytimestamp" : {
            "default" : null,
            "description" : "maxdaytimestamp",
            "type" : "integer",
            "nullable" : false
          },
          "mindayerror" : {
            "default" : null,
            "description" : "mindayerror",
            "type" : "string",
            "nullable" : false
          },
          "mindaytimestamp" : {
            "default" : null,
            "description" : "mindaytimestamp",
            "type" : "integer",
            "nullable" : false
          },
          "modulename" : {
            "description" : "modulename",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtype" : {
            "description" : "normalisedeventtype",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtypetext" : {
            "description" : "normalisedeventtypetext",
            "type" : "string",
            "nullable" : false
          },
          "overdue" : {
            "default" : false,
            "description" : "overdue",
            "type" : "boolean",
            "nullable" : true
          },
          "popupname" : {
            "default" : null,
            "description" : "popupname",
            "type" : "string",
            "nullable" : false
          },
          "purpose" : {
            "description" : "purpose",
            "type" : "string",
            "nullable" : false
          },
          "repeatid" : {
            "description" : "repeatid",
            "type" : "integer",
            "nullable" : true
          },
          "subscription" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_subscription"
          },
          "timeduration" : {
            "description" : "timeduration",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timesort" : {
            "description" : "timesort",
            "type" : "integer",
            "nullable" : false
          },
          "timestart" : {
            "description" : "timestart",
            "type" : "integer",
            "nullable" : false
          },
          "timeusermidnight" : {
            "description" : "timeusermidnight",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_calendar_get_calendar_day_view_200_response_nextperiod" : {
        "properties" : {
          "hours" : {
            "description" : "hours",
            "type" : "integer",
            "nullable" : false
          },
          "mday" : {
            "description" : "mday",
            "type" : "integer",
            "nullable" : false
          },
          "minutes" : {
            "description" : "minutes",
            "type" : "integer",
            "nullable" : false
          },
          "mon" : {
            "description" : "mon",
            "type" : "integer",
            "nullable" : false
          },
          "month" : {
            "description" : "month",
            "type" : "string",
            "nullable" : false
          },
          "seconds" : {
            "description" : "seconds",
            "type" : "integer",
            "nullable" : false
          },
          "timestamp" : {
            "description" : "timestamp",
            "type" : "integer",
            "nullable" : false
          },
          "wday" : {
            "description" : "wday",
            "type" : "integer",
            "nullable" : false
          },
          "weekday" : {
            "description" : "weekday",
            "type" : "string",
            "nullable" : false
          },
          "yday" : {
            "description" : "yday",
            "type" : "integer",
            "nullable" : false
          },
          "year" : {
            "description" : "year",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "hours", "mday", "minutes", "mon", "month", "seconds", "timestamp", "wday", "weekday", "yday", "year" ]
      },
      "core_calendar_get_calendar_day_view_200_response" : {
        "properties" : {
          "categoryid" : {
            "default" : 0,
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "date" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_date"
          },
          "defaulteventcontext" : {
            "default" : 0,
            "description" : "defaulteventcontext",
            "type" : "integer",
            "nullable" : false
          },
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_events_inner"
            },
            "type" : "array"
          },
          "filter_selector" : {
            "default" : null,
            "description" : "filter_selector",
            "type" : "string",
            "nullable" : false
          },
          "larrow" : {
            "default" : null,
            "description" : "larrow",
            "type" : "string",
            "nullable" : false
          },
          "neweventtimestamp" : {
            "default" : null,
            "description" : "neweventtimestamp",
            "type" : "integer",
            "nullable" : false
          },
          "nextperiod" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_nextperiod"
          },
          "nextperiodlink" : {
            "default" : null,
            "description" : "nextperiodlink",
            "type" : "string",
            "nullable" : false
          },
          "nextperiodname" : {
            "default" : null,
            "description" : "nextperiodname",
            "type" : "string",
            "nullable" : false
          },
          "periodname" : {
            "default" : null,
            "description" : "periodname",
            "type" : "string",
            "nullable" : false
          },
          "previousperiod" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_nextperiod"
          },
          "previousperiodlink" : {
            "default" : null,
            "description" : "previousperiodlink",
            "type" : "string",
            "nullable" : false
          },
          "previousperiodname" : {
            "default" : null,
            "description" : "previousperiodname",
            "type" : "string",
            "nullable" : false
          },
          "rarrow" : {
            "default" : null,
            "description" : "rarrow",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "courseid", "date", "defaulteventcontext", "events", "filter_selector", "larrow", "neweventtimestamp", "nextperiod", "nextperiodlink", "nextperiodname", "periodname", "previousperiod", "previousperiodlink", "previousperiodname", "rarrow" ]
      },
      "core_calendar_get_calendar_event_by_id_request" : {
        "properties" : {
          "eventid" : {
            "default" : null,
            "description" : "The event id to be retrieved",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "eventid" ]
      },
      "core_calendar_get_calendar_event_by_id_200_response_event" : {
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_action"
          },
          "activityname" : {
            "description" : "activityname",
            "type" : "string",
            "nullable" : true
          },
          "activitystr" : {
            "description" : "activitystr",
            "type" : "string",
            "nullable" : true
          },
          "candelete" : {
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "canedit" : {
            "description" : "canedit",
            "type" : "boolean",
            "nullable" : false
          },
          "category" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_category"
          },
          "categoryid" : {
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_course"
          },
          "deleteurl" : {
            "description" : "deleteurl",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "editurl" : {
            "description" : "editurl",
            "type" : "string",
            "nullable" : false
          },
          "eventcount" : {
            "description" : "eventcount",
            "type" : "integer",
            "nullable" : true
          },
          "eventtype" : {
            "description" : "eventtype",
            "type" : "string",
            "nullable" : false
          },
          "formattedlocation" : {
            "description" : "formattedlocation",
            "type" : "string",
            "nullable" : false
          },
          "formattedtime" : {
            "description" : "formattedtime",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "description" : "groupid",
            "type" : "integer",
            "nullable" : true
          },
          "groupname" : {
            "description" : "groupname",
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_icon"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "instance" : {
            "description" : "instance",
            "type" : "integer",
            "nullable" : true
          },
          "isactionevent" : {
            "description" : "isactionevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscategoryevent" : {
            "description" : "iscategoryevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscourseevent" : {
            "description" : "iscourseevent",
            "type" : "boolean",
            "nullable" : false
          },
          "location" : {
            "description" : "location",
            "type" : "string",
            "nullable" : true
          },
          "modulename" : {
            "description" : "modulename",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtype" : {
            "description" : "normalisedeventtype",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtypetext" : {
            "description" : "normalisedeventtypetext",
            "type" : "string",
            "nullable" : false
          },
          "overdue" : {
            "default" : false,
            "description" : "overdue",
            "type" : "boolean",
            "nullable" : true
          },
          "purpose" : {
            "description" : "purpose",
            "type" : "string",
            "nullable" : false
          },
          "repeatid" : {
            "description" : "repeatid",
            "type" : "integer",
            "nullable" : true
          },
          "subscription" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_subscription"
          },
          "timeduration" : {
            "description" : "timeduration",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timesort" : {
            "description" : "timesort",
            "type" : "integer",
            "nullable" : false
          },
          "timestart" : {
            "description" : "timestart",
            "type" : "integer",
            "nullable" : false
          },
          "timeusermidnight" : {
            "description" : "timeusermidnight",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "candelete", "canedit", "deleteurl", "editurl", "eventtype", "formattedlocation", "formattedtime", "icon", "id", "isactionevent", "iscategoryevent", "iscourseevent", "name", "normalisedeventtype", "normalisedeventtypetext", "purpose", "timeduration", "timemodified", "timesort", "timestart", "timeusermidnight", "url", "viewurl", "visible" ]
      },
      "core_calendar_get_calendar_event_by_id_200_response" : {
        "properties" : {
          "event" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_event_by_id_200_response_event"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "event" ]
      },
      "core_calendar_get_calendar_events_request_events" : {
        "properties" : {
          "categoryids" : {
            "items" : {
              "default" : null,
              "description" : "Category ids",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "courseids" : {
            "items" : {
              "default" : null,
              "description" : "course ids",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "eventids" : {
            "items" : {
              "default" : null,
              "description" : "event ids",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "groupids" : {
            "items" : {
              "default" : null,
              "description" : "group ids",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "core_calendar_get_calendar_events_request_options" : {
        "properties" : {
          "ignorehidden" : {
            "default" : true,
            "description" : "Ignore hidden events or not",
            "type" : "boolean",
            "nullable" : true
          },
          "siteevents" : {
            "default" : true,
            "description" : "Set to true to return site events",
            "type" : "boolean",
            "nullable" : true
          },
          "timeend" : {
            "default" : 0,
            "description" : "Time to which the events should be returned. We treat 0 and null as no end",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : 0,
            "description" : "Time from which events should be returned",
            "type" : "integer",
            "nullable" : true
          },
          "userevents" : {
            "default" : true,
            "description" : "Set to true to return current user's user events",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "core_calendar_get_calendar_events_request" : {
        "properties" : {
          "events" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_events_request_events"
          },
          "options" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_events_request_options"
          }
        }
      },
      "core_calendar_get_calendar_events_200_response_events_inner" : {
        "default" : null,
        "description" : "event",
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "Category id (only for category events).",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "Description",
            "type" : "string",
            "nullable" : true
          },
          "eventtype" : {
            "description" : "Event type",
            "type" : "string",
            "nullable" : true
          },
          "format" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "event id",
            "type" : "integer",
            "nullable" : true
          },
          "instance" : {
            "description" : "instance id",
            "type" : "integer",
            "nullable" : true
          },
          "modulename" : {
            "description" : "module name",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "event name",
            "type" : "string",
            "nullable" : true
          },
          "repeatid" : {
            "description" : "repeat id",
            "type" : "integer",
            "nullable" : true
          },
          "sequence" : {
            "description" : "sequence",
            "type" : "integer",
            "nullable" : true
          },
          "subscriptionid" : {
            "description" : "Subscription id",
            "type" : "integer",
            "nullable" : true
          },
          "timeduration" : {
            "description" : "time duration",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "time modified",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "description" : "timestart",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "uuid" : {
            "default" : null,
            "description" : "unique id of ical events",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_calendar_get_calendar_events_200_response" : {
        "properties" : {
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_calendar_events_200_response_events_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "events" ]
      },
      "core_calendar_get_calendar_export_token_200_response" : {
        "properties" : {
          "token" : {
            "default" : null,
            "description" : "The calendar permanent access token for calendar export.",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "token" ]
      },
      "core_calendar_get_calendar_monthly_view_request" : {
        "properties" : {
          "categoryid" : {
            "description" : "Category being viewed",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : "1",
            "description" : "Course being viewed",
            "type" : "integer",
            "nullable" : true
          },
          "day" : {
            "default" : 1,
            "description" : "Day to be viewed",
            "type" : "integer",
            "nullable" : true
          },
          "includenavigation" : {
            "default" : true,
            "description" : "Whether to show course navigation",
            "type" : "boolean",
            "nullable" : true
          },
          "mini" : {
            "default" : false,
            "description" : "Whether to return the mini month view or not",
            "type" : "boolean",
            "nullable" : true
          },
          "month" : {
            "description" : "Month to be viewed",
            "type" : "integer",
            "nullable" : true
          },
          "view" : {
            "default" : "month",
            "description" : "The view mode of the calendar",
            "type" : "string",
            "nullable" : true
          },
          "year" : {
            "description" : "Year to be viewed",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "month", "year" ]
      },
      "core_calendar_get_calendar_monthly_view_200_response_daynames_inner" : {
        "default" : null,
        "properties" : {
          "dayno" : {
            "default" : null,
            "description" : "dayno",
            "type" : "integer",
            "nullable" : false
          },
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_calendar_get_calendar_monthly_view_200_response_weeks_inner_days_inner_events_inner" : {
        "default" : null,
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_action"
          },
          "activityname" : {
            "description" : "activityname",
            "type" : "string",
            "nullable" : true
          },
          "activitystr" : {
            "description" : "activitystr",
            "type" : "string",
            "nullable" : true
          },
          "candelete" : {
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "canedit" : {
            "description" : "canedit",
            "type" : "boolean",
            "nullable" : false
          },
          "category" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_category"
          },
          "categoryid" : {
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_course"
          },
          "deleteurl" : {
            "description" : "deleteurl",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "draggable" : {
            "default" : false,
            "description" : "draggable",
            "type" : "boolean",
            "nullable" : false
          },
          "editurl" : {
            "description" : "editurl",
            "type" : "string",
            "nullable" : false
          },
          "eventcount" : {
            "description" : "eventcount",
            "type" : "integer",
            "nullable" : true
          },
          "eventtype" : {
            "description" : "eventtype",
            "type" : "string",
            "nullable" : false
          },
          "formattedlocation" : {
            "description" : "formattedlocation",
            "type" : "string",
            "nullable" : false
          },
          "formattedtime" : {
            "description" : "formattedtime",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "description" : "groupid",
            "type" : "integer",
            "nullable" : true
          },
          "groupname" : {
            "description" : "groupname",
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_icon"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "instance" : {
            "description" : "instance",
            "type" : "integer",
            "nullable" : true
          },
          "isactionevent" : {
            "description" : "isactionevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscategoryevent" : {
            "description" : "iscategoryevent",
            "type" : "boolean",
            "nullable" : false
          },
          "iscourseevent" : {
            "description" : "iscourseevent",
            "type" : "boolean",
            "nullable" : false
          },
          "islastday" : {
            "default" : false,
            "description" : "islastday",
            "type" : "boolean",
            "nullable" : false
          },
          "location" : {
            "description" : "location",
            "type" : "string",
            "nullable" : true
          },
          "maxdayerror" : {
            "description" : "maxdayerror",
            "type" : "string",
            "nullable" : false
          },
          "maxdaytimestamp" : {
            "description" : "maxdaytimestamp",
            "type" : "integer",
            "nullable" : false
          },
          "mindayerror" : {
            "description" : "mindayerror",
            "type" : "string",
            "nullable" : false
          },
          "mindaytimestamp" : {
            "description" : "mindaytimestamp",
            "type" : "integer",
            "nullable" : false
          },
          "modulename" : {
            "description" : "modulename",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtype" : {
            "description" : "normalisedeventtype",
            "type" : "string",
            "nullable" : false
          },
          "normalisedeventtypetext" : {
            "description" : "normalisedeventtypetext",
            "type" : "string",
            "nullable" : false
          },
          "overdue" : {
            "default" : false,
            "description" : "overdue",
            "type" : "boolean",
            "nullable" : true
          },
          "popupname" : {
            "description" : "popupname",
            "type" : "string",
            "nullable" : false
          },
          "purpose" : {
            "description" : "purpose",
            "type" : "string",
            "nullable" : false
          },
          "repeatid" : {
            "description" : "repeatid",
            "type" : "integer",
            "nullable" : true
          },
          "subscription" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_subscription"
          },
          "timeduration" : {
            "description" : "timeduration",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timesort" : {
            "description" : "timesort",
            "type" : "integer",
            "nullable" : false
          },
          "timestart" : {
            "description" : "timestart",
            "type" : "integer",
            "nullable" : false
          },
          "timeusermidnight" : {
            "description" : "timeusermidnight",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_calendar_get_calendar_monthly_view_200_response_weeks_inner_days_inner" : {
        "default" : null,
        "properties" : {
          "calendareventtypes" : {
            "items" : {
              "default" : null,
              "description" : "calendareventtypes",
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          },
          "daytitle" : {
            "default" : null,
            "description" : "daytitle",
            "type" : "string",
            "nullable" : false
          },
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_calendar_monthly_view_200_response_weeks_inner_days_inner_events_inner"
            },
            "type" : "array"
          },
          "hasevents" : {
            "default" : false,
            "description" : "hasevents",
            "type" : "boolean",
            "nullable" : false
          },
          "haslastdayofevent" : {
            "default" : false,
            "description" : "haslastdayofevent",
            "type" : "boolean",
            "nullable" : false
          },
          "hours" : {
            "description" : "hours",
            "type" : "integer",
            "nullable" : false
          },
          "istoday" : {
            "default" : false,
            "description" : "istoday",
            "type" : "boolean",
            "nullable" : false
          },
          "isweekend" : {
            "default" : false,
            "description" : "isweekend",
            "type" : "boolean",
            "nullable" : false
          },
          "mday" : {
            "description" : "mday",
            "type" : "integer",
            "nullable" : false
          },
          "minutes" : {
            "description" : "minutes",
            "type" : "integer",
            "nullable" : false
          },
          "neweventtimestamp" : {
            "description" : "neweventtimestamp",
            "type" : "integer",
            "nullable" : false
          },
          "nextperiod" : {
            "default" : null,
            "description" : "nextperiod",
            "type" : "integer",
            "nullable" : false
          },
          "popovertitle" : {
            "default" : "",
            "description" : "popovertitle",
            "type" : "string",
            "nullable" : false
          },
          "previousperiod" : {
            "default" : null,
            "description" : "previousperiod",
            "type" : "integer",
            "nullable" : false
          },
          "seconds" : {
            "description" : "seconds",
            "type" : "integer",
            "nullable" : false
          },
          "timestamp" : {
            "description" : "timestamp",
            "type" : "integer",
            "nullable" : false
          },
          "viewdaylink" : {
            "default" : null,
            "description" : "viewdaylink",
            "type" : "string",
            "nullable" : false
          },
          "viewdaylinktitle" : {
            "default" : null,
            "description" : "viewdaylinktitle",
            "type" : "string",
            "nullable" : false
          },
          "wday" : {
            "description" : "wday",
            "type" : "integer",
            "nullable" : false
          },
          "yday" : {
            "description" : "yday",
            "type" : "integer",
            "nullable" : false
          },
          "year" : {
            "description" : "year",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_calendar_get_calendar_monthly_view_200_response_weeks_inner" : {
        "default" : null,
        "properties" : {
          "days" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_calendar_monthly_view_200_response_weeks_inner_days_inner"
            },
            "type" : "array"
          },
          "postpadding" : {
            "items" : {
              "default" : null,
              "description" : "postpadding",
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          },
          "prepadding" : {
            "items" : {
              "default" : null,
              "description" : "prepadding",
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_calendar_get_calendar_monthly_view_200_response" : {
        "properties" : {
          "calendarinstanceid" : {
            "default" : 0,
            "description" : "calendarinstanceid",
            "type" : "integer",
            "nullable" : false
          },
          "categoryid" : {
            "default" : 0,
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "date" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_nextperiod"
          },
          "daynames" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_calendar_monthly_view_200_response_daynames_inner"
            },
            "type" : "array"
          },
          "defaulteventcontext" : {
            "default" : 0,
            "description" : "defaulteventcontext",
            "type" : "integer",
            "nullable" : false
          },
          "filter_selector" : {
            "description" : "filter_selector",
            "type" : "string",
            "nullable" : false
          },
          "includenavigation" : {
            "default" : true,
            "description" : "includenavigation",
            "type" : "boolean",
            "nullable" : false
          },
          "initialeventsloaded" : {
            "default" : true,
            "description" : "initialeventsloaded",
            "type" : "boolean",
            "nullable" : false
          },
          "larrow" : {
            "description" : "larrow",
            "type" : "string",
            "nullable" : false
          },
          "nextperiod" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_nextperiod"
          },
          "nextperiodlink" : {
            "description" : "nextperiodlink",
            "type" : "string",
            "nullable" : false
          },
          "nextperiodname" : {
            "description" : "nextperiodname",
            "type" : "string",
            "nullable" : false
          },
          "periodname" : {
            "description" : "periodname",
            "type" : "string",
            "nullable" : false
          },
          "previousperiod" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_nextperiod"
          },
          "previousperiodlink" : {
            "description" : "previousperiodlink",
            "type" : "string",
            "nullable" : false
          },
          "previousperiodname" : {
            "description" : "previousperiodname",
            "type" : "string",
            "nullable" : false
          },
          "rarrow" : {
            "description" : "rarrow",
            "type" : "string",
            "nullable" : false
          },
          "showviewselector" : {
            "default" : true,
            "description" : "showviewselector",
            "type" : "boolean",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "view" : {
            "default" : null,
            "description" : "view",
            "type" : "string",
            "nullable" : false
          },
          "viewinginblock" : {
            "default" : false,
            "description" : "viewinginblock",
            "type" : "boolean",
            "nullable" : false
          },
          "viewingmonth" : {
            "default" : true,
            "description" : "viewingmonth",
            "type" : "boolean",
            "nullable" : false
          },
          "weeks" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_calendar_monthly_view_200_response_weeks_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "calendarinstanceid", "courseid", "date", "daynames", "defaulteventcontext", "includenavigation", "initialeventsloaded", "larrow", "nextperiod", "nextperiodlink", "nextperiodname", "periodname", "previousperiod", "previousperiodlink", "previousperiodname", "rarrow", "showviewselector", "url", "view", "viewinginblock", "viewingmonth", "weeks" ]
      },
      "core_calendar_get_calendar_upcoming_view_request" : {
        "properties" : {
          "categoryid" : {
            "description" : "Category being viewed",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : "1",
            "description" : "Course being viewed",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_calendar_get_calendar_upcoming_view_200_response" : {
        "properties" : {
          "categoryid" : {
            "default" : 0,
            "description" : "categoryid",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "date" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_day_view_200_response_nextperiod"
          },
          "defaulteventcontext" : {
            "default" : 0,
            "description" : "defaulteventcontext",
            "type" : "integer",
            "nullable" : false
          },
          "events" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_calendar_monthly_view_200_response_weeks_inner_days_inner_events_inner"
            },
            "type" : "array"
          },
          "filter_selector" : {
            "description" : "filter_selector",
            "type" : "string",
            "nullable" : false
          },
          "isloggedin" : {
            "default" : null,
            "description" : "isloggedin",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "courseid", "date", "defaulteventcontext", "events", "filter_selector", "isloggedin" ]
      },
      "core_calendar_get_timestamps_request_data_inner" : {
        "default" : null,
        "properties" : {
          "day" : {
            "default" : null,
            "description" : "day",
            "type" : "integer",
            "nullable" : true
          },
          "hour" : {
            "default" : null,
            "description" : "hour",
            "type" : "integer",
            "nullable" : true
          },
          "key" : {
            "default" : null,
            "description" : "key",
            "type" : "string",
            "nullable" : true
          },
          "minute" : {
            "default" : null,
            "description" : "minute",
            "type" : "integer",
            "nullable" : true
          },
          "month" : {
            "default" : null,
            "description" : "month",
            "type" : "integer",
            "nullable" : true
          },
          "year" : {
            "default" : null,
            "description" : "year",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_calendar_get_timestamps_request" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_timestamps_request_data_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ]
      },
      "core_calendar_get_timestamps_200_response_timestamps_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "Timestamp key",
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "default" : null,
            "description" : "Unix timestamp",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_calendar_get_timestamps_200_response" : {
        "properties" : {
          "timestamps" : {
            "items" : {
              "$ref" : "#/components/schemas/core_calendar_get_timestamps_200_response_timestamps_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "timestamps" ]
      },
      "core_calendar_submit_create_update_form_request" : {
        "properties" : {
          "formdata" : {
            "default" : null,
            "description" : "The data from the event form",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "formdata" ]
      },
      "core_calendar_submit_create_update_form_200_response" : {
        "properties" : {
          "event" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_event_by_id_200_response_event"
          },
          "validationerror" : {
            "default" : false,
            "description" : "Invalid form data",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "core_calendar_update_event_start_day_request" : {
        "properties" : {
          "daytimestamp" : {
            "default" : null,
            "description" : "Timestamp for the new start day",
            "type" : "integer",
            "nullable" : true
          },
          "eventid" : {
            "default" : null,
            "description" : "Id of event to be updated",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "daytimestamp", "eventid" ]
      },
      "core_calendar_update_event_start_day_200_response" : {
        "properties" : {
          "event" : {
            "$ref" : "#/components/schemas/core_calendar_get_calendar_event_by_id_200_response_event"
          }
        },
        "required" : [ "event" ]
      },
      "core_change_editmode_request" : {
        "properties" : {
          "context" : {
            "default" : null,
            "description" : "Page context id",
            "type" : "integer",
            "nullable" : true
          },
          "setmode" : {
            "default" : null,
            "description" : "Set edit mode to",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "context", "setmode" ]
      },
      "core_change_editmode_200_response" : {
        "properties" : {
          "success" : {
            "default" : null,
            "description" : "The edit mode was changed",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "success" ]
      },
      "core_cohort_add_cohort_members_request_members_inner_cohorttype" : {
        "properties" : {
          "type" : {
            "default" : null,
            "description" : "The name of the field: id\n                                        (numeric value of cohortid) or idnumber (alphanumeric value of idnumber) ",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the cohort",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "type", "value" ]
      },
      "core_cohort_add_cohort_members_request_members_inner_usertype" : {
        "properties" : {
          "type" : {
            "default" : null,
            "description" : "The name of the field: id\n                                        (numeric value of id) or username (alphanumeric value of username) ",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the cohort",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "type", "value" ]
      },
      "core_cohort_add_cohort_members_request_members_inner" : {
        "default" : null,
        "properties" : {
          "cohorttype" : {
            "$ref" : "#/components/schemas/core_cohort_add_cohort_members_request_members_inner_cohorttype"
          },
          "usertype" : {
            "$ref" : "#/components/schemas/core_cohort_add_cohort_members_request_members_inner_usertype"
          }
        },
        "nullable" : false
      },
      "core_cohort_add_cohort_members_request" : {
        "properties" : {
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_add_cohort_members_request_members_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "members" ]
      },
      "core_cohort_add_cohort_members_200_response" : {
        "properties" : {
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_cohort_create_cohorts_request_cohorts_inner_categorytype" : {
        "properties" : {
          "type" : {
            "default" : null,
            "description" : "the name of the field: id (numeric value\n                                        of course category id) or idnumber (alphanumeric value of idnumber course category)\n                                        or system (value ignored)",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "the value of the categorytype",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "type", "value" ]
      },
      "core_cohort_create_cohorts_request_cohorts_inner_customfields_inner" : {
        "default" : null,
        "properties" : {
          "shortname" : {
            "default" : null,
            "description" : "The shortname of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the custom field",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_cohort_create_cohorts_request_cohorts_inner" : {
        "default" : null,
        "properties" : {
          "categorytype" : {
            "$ref" : "#/components/schemas/core_cohort_create_cohorts_request_cohorts_inner_categorytype"
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_create_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "default" : null,
            "description" : "cohort description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "cohort idnumber",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "cohort name",
            "type" : "string",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "the cohort theme. The allowcohortthemes setting must be enabled on Moodle",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "default" : true,
            "description" : "cohort visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_cohort_create_cohorts_request" : {
        "properties" : {
          "cohorts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_create_cohorts_request_cohorts_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "cohorts" ]
      },
      "core_cohort_delete_cohort_members_request_members_inner" : {
        "default" : null,
        "properties" : {
          "cohortid" : {
            "default" : null,
            "description" : "cohort record id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_cohort_delete_cohort_members_request" : {
        "properties" : {
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_delete_cohort_members_request_members_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "members" ]
      },
      "core_cohort_delete_cohorts_request" : {
        "properties" : {
          "cohortids" : {
            "items" : {
              "default" : null,
              "description" : "cohort ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "cohortids" ]
      },
      "core_cohort_get_cohort_members_request" : {
        "properties" : {
          "cohortids" : {
            "items" : {
              "default" : null,
              "description" : "Cohort ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "cohortids" ]
      },
      "core_cohort_get_cohorts_request" : {
        "properties" : {
          "cohortids" : {
            "items" : {
              "description" : "Cohort ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "core_cohort_search_cohorts_request_context" : {
        "properties" : {
          "contextid" : {
            "default" : 0,
            "description" : "Context ID. Either use this value, or level and instanceid.",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : "",
            "description" : "Context level. To be used with instanceid.",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : 0,
            "description" : "Context instance ID. To be used with level",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_cohort_search_cohorts_request" : {
        "properties" : {
          "context" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "includes" : {
            "default" : "parents",
            "description" : "What other contexts to fetch the frameworks from. (all, parents, self)",
            "type" : "string",
            "nullable" : true
          },
          "limitfrom" : {
            "default" : 0,
            "description" : "limitfrom we are fetching the records from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 25,
            "description" : "Number of records to fetch",
            "type" : "integer",
            "nullable" : true
          },
          "query" : {
            "default" : null,
            "description" : "Query string",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "context", "query" ]
      },
      "core_cohort_search_cohorts_200_response_cohorts_inner_customfields_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "The name of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "The shortname of the custom field - to be able to build the field class in the code",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "The type of the custom field - text field, checkbox...",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "valueraw" : {
            "default" : null,
            "description" : "The raw value of the custom field",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_cohort_search_cohorts_200_response_cohorts_inner" : {
        "default" : null,
        "properties" : {
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_search_cohorts_200_response_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "cohort description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of the cohort",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "cohort idnumber",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "cohort name",
            "type" : "string",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "cohort theme",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "default" : null,
            "description" : "cohort visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_cohort_search_cohorts_200_response" : {
        "properties" : {
          "cohorts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_search_cohorts_200_response_cohorts_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "cohorts" ]
      },
      "core_cohort_update_cohorts_request_cohorts_inner_categorytype" : {
        "properties" : {
          "type" : {
            "description" : "the name of the field: id (numeric value\n                                        of course category id) or idnumber (alphanumeric value of idnumber course category)\n                                        or system (value ignored)",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "the value of the categorytype",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "type", "value" ]
      },
      "core_cohort_update_cohorts_request_cohorts_inner_customfields_inner" : {
        "properties" : {
          "shortname" : {
            "description" : "The shortname of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the custom field",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_cohort_update_cohorts_request_cohorts_inner" : {
        "default" : null,
        "properties" : {
          "categorytype" : {
            "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_categorytype"
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "cohort description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the cohort",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "cohort idnumber",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "cohort name",
            "type" : "string",
            "nullable" : true
          },
          "theme" : {
            "description" : "the cohort theme. The allowcohortthemes setting must be enabled on Moodle",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "description" : "cohort visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_cohort_update_cohorts_request" : {
        "properties" : {
          "cohorts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "cohorts" ]
      },
      "core_comment_add_comments_request_comments_inner" : {
        "default" : null,
        "properties" : {
          "area" : {
            "default" : "",
            "description" : "string comment area",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "content" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "contextlevel system, course, user...",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "the id of item associated with the contextlevel",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "associated id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_comment_add_comments_request" : {
        "properties" : {
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_comment_add_comments_request_comments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "comments" ]
      },
      "core_comment_delete_comments_request" : {
        "properties" : {
          "comments" : {
            "items" : {
              "default" : 0,
              "description" : "id of the comment",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "comments" ]
      },
      "core_comment_get_comments_request" : {
        "properties" : {
          "area" : {
            "default" : "",
            "description" : "string comment area",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "contextlevel" : {
            "description" : "contextlevel system, course, user...",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "the Instance id of item associated with the context level",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "description" : "associated id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "page number (0 based)",
            "type" : "integer",
            "nullable" : true
          },
          "sortdirection" : {
            "default" : "DESC",
            "description" : "Sort direction: ASC or DESC",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextlevel", "instanceid", "itemid" ]
      },
      "core_comment_get_comments_200_response_comments_inner" : {
        "default" : null,
        "description" : "comment",
        "properties" : {
          "avatar" : {
            "default" : null,
            "description" : "HTML user picture",
            "type" : "string",
            "nullable" : true
          },
          "content" : {
            "default" : null,
            "description" : "The content text formatted",
            "type" : "string",
            "nullable" : true
          },
          "delete" : {
            "default" : null,
            "description" : "Permission to delete=true/false",
            "type" : "boolean",
            "nullable" : true
          },
          "format" : {
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "fullname",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Comment ID",
            "type" : "integer",
            "nullable" : true
          },
          "profileurl" : {
            "default" : null,
            "description" : "URL profile",
            "type" : "string",
            "nullable" : true
          },
          "strftimeformat" : {
            "default" : null,
            "description" : "Time format",
            "type" : "string",
            "nullable" : true
          },
          "time" : {
            "default" : null,
            "description" : "Time in human format",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Time created (timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_comment_get_comments_200_response" : {
        "properties" : {
          "canpost" : {
            "default" : null,
            "description" : "Whether the user can post in this comment area.",
            "type" : "boolean",
            "nullable" : true
          },
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_comment_get_comments_200_response_comments_inner"
            },
            "type" : "array"
          },
          "count" : {
            "default" : null,
            "description" : "Total number of comments.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : null,
            "description" : "Number of comments per page.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "comments" ]
      },
      "core_competency_add_competency_to_course_request" : {
        "properties" : {
          "competencyid" : {
            "default" : null,
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : null,
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "courseid" ]
      },
      "core_competency_add_competency_to_plan_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "planid" : {
            "default" : null,
            "description" : "The plan id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "planid" ]
      },
      "core_competency_add_competency_to_template_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "templateid" : {
            "default" : null,
            "description" : "The template id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "templateid" ]
      },
      "core_competency_add_related_competency_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "relatedcompetencyid" : {
            "default" : null,
            "description" : "The related competency id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "relatedcompetencyid" ]
      },
      "core_competency_approve_plan_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The plan ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_competency_framework_viewed_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The competency framework id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_competency_viewed_request" : {
        "properties" : {
          "id" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_complete_plan_request" : {
        "properties" : {
          "planid" : {
            "description" : "The plan id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "planid" ]
      },
      "core_competency_count_competencies_request_filters_inner" : {
        "default" : null,
        "properties" : {
          "column" : {
            "default" : null,
            "description" : "Column name to filter by",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Value to filter by. Must be exact match",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_competency_count_competencies_request" : {
        "properties" : {
          "filters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_count_competencies_request_filters_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "filters" ]
      },
      "core_competency_count_competencies_in_course_request" : {
        "properties" : {
          "id" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_count_competencies_in_template_request" : {
        "properties" : {
          "id" : {
            "description" : "The template id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_count_competency_frameworks_request" : {
        "properties" : {
          "context" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "includes" : {
            "default" : "children",
            "description" : "What other contextes to fetch the frameworks from. (children, parents, self)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "context" ]
      },
      "core_competency_count_course_module_competencies_request" : {
        "properties" : {
          "cmid" : {
            "default" : null,
            "description" : "The course module id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "core_competency_create_competency_request_competency" : {
        "properties" : {
          "competencyframeworkid" : {
            "default" : 0,
            "description" : "competencyframeworkid",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "parentid" : {
            "default" : 0,
            "description" : "parentid",
            "type" : "integer",
            "nullable" : false
          },
          "path" : {
            "default" : "/0/",
            "description" : "path",
            "type" : "string",
            "nullable" : false
          },
          "ruleconfig" : {
            "default" : null,
            "description" : "ruleconfig",
            "type" : "string",
            "nullable" : true
          },
          "ruleoutcome" : {
            "default" : 0,
            "description" : "ruleoutcome",
            "type" : "integer",
            "nullable" : false
          },
          "ruletype" : {
            "default" : null,
            "description" : "ruletype",
            "type" : "string",
            "nullable" : true
          },
          "scaleconfiguration" : {
            "default" : null,
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : true
          },
          "scaleid" : {
            "default" : null,
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "default" : 0,
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "idnumber", "shortname" ]
      },
      "core_competency_create_competency_request" : {
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_request_competency"
          }
        },
        "required" : [ "competency" ]
      },
      "core_competency_create_competency_200_response" : {
        "properties" : {
          "competencyframeworkid" : {
            "default" : 0,
            "description" : "competencyframeworkid",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "parentid" : {
            "default" : 0,
            "description" : "parentid",
            "type" : "integer",
            "nullable" : false
          },
          "path" : {
            "default" : "/0/",
            "description" : "path",
            "type" : "string",
            "nullable" : false
          },
          "ruleconfig" : {
            "description" : "ruleconfig",
            "type" : "string",
            "nullable" : true
          },
          "ruleoutcome" : {
            "default" : 0,
            "description" : "ruleoutcome",
            "type" : "integer",
            "nullable" : false
          },
          "ruletype" : {
            "description" : "ruletype",
            "type" : "string",
            "nullable" : true
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : true
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "default" : 0,
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencyframeworkid", "description", "id", "idnumber", "parentid", "path", "ruleconfig", "ruleoutcome", "ruletype", "scaleconfiguration", "scaleid", "shortname", "sortorder", "timecreated", "timemodified", "usermodified" ]
      },
      "core_competency_create_competency_framework_request_competencyframework" : {
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The context id",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The context level",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "instanceid" : {
            "default" : null,
            "description" : "The Instance id",
            "type" : "integer",
            "nullable" : true
          },
          "scaleconfiguration" : {
            "default" : null,
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "default" : null,
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "taxonomies" : {
            "default" : "",
            "description" : "taxonomies",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "idnumber", "scaleconfiguration", "scaleid", "shortname" ]
      },
      "core_competency_create_competency_framework_request" : {
        "properties" : {
          "competencyframework" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_framework_request_competencyframework"
          }
        },
        "required" : [ "competencyframework" ]
      },
      "core_competency_create_competency_framework_200_response" : {
        "properties" : {
          "canmanage" : {
            "default" : null,
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "competenciescount" : {
            "default" : null,
            "description" : "competenciescount",
            "type" : "integer",
            "nullable" : false
          },
          "contextid" : {
            "default" : null,
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "contextname" : {
            "default" : null,
            "description" : "contextname",
            "type" : "string",
            "nullable" : false
          },
          "contextnamenoprefix" : {
            "default" : null,
            "description" : "contextnamenoprefix",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "taxonomies" : {
            "default" : "",
            "description" : "taxonomies",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "canmanage", "competenciescount", "contextid", "contextname", "contextnamenoprefix", "description", "id", "idnumber", "scaleconfiguration", "scaleid", "shortname", "taxonomies", "timecreated", "timemodified", "usermodified", "visible" ]
      },
      "core_competency_create_plan_request_plan" : {
        "properties" : {
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "origtemplateid" : {
            "default" : null,
            "description" : "origtemplateid",
            "type" : "integer",
            "nullable" : true
          },
          "reviewerid" : {
            "default" : null,
            "description" : "reviewerid",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : 0,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "templateid" : {
            "default" : null,
            "description" : "templateid",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "default" : null,
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "name", "userid" ]
      },
      "core_competency_create_plan_request" : {
        "properties" : {
          "plan" : {
            "$ref" : "#/components/schemas/core_competency_create_plan_request_plan"
          }
        },
        "required" : [ "plan" ]
      },
      "core_competency_create_plan_200_response_commentarea" : {
        "properties" : {
          "autostart" : {
            "default" : null,
            "description" : "autostart",
            "type" : "boolean",
            "nullable" : false
          },
          "canpost" : {
            "default" : null,
            "description" : "canpost",
            "type" : "boolean",
            "nullable" : false
          },
          "canpostorhascomments" : {
            "default" : null,
            "description" : "canpostorhascomments",
            "type" : "boolean",
            "nullable" : false
          },
          "canview" : {
            "default" : null,
            "description" : "canview",
            "type" : "boolean",
            "nullable" : false
          },
          "cid" : {
            "default" : null,
            "description" : "cid",
            "type" : "string",
            "nullable" : false
          },
          "collapsediconkey" : {
            "default" : null,
            "description" : "collapsediconkey",
            "type" : "string",
            "nullable" : false
          },
          "commentarea" : {
            "default" : null,
            "description" : "commentarea",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "count" : {
            "default" : null,
            "description" : "count",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "displaycancel" : {
            "default" : null,
            "description" : "displaycancel",
            "type" : "boolean",
            "nullable" : false
          },
          "displaytotalcount" : {
            "default" : null,
            "description" : "displaytotalcount",
            "type" : "boolean",
            "nullable" : false
          },
          "fullwidth" : {
            "default" : null,
            "description" : "fullwidth",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "default" : null,
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "linktext" : {
            "default" : null,
            "description" : "linktext",
            "type" : "string",
            "nullable" : false
          },
          "notoggle" : {
            "default" : null,
            "description" : "notoggle",
            "type" : "boolean",
            "nullable" : false
          },
          "template" : {
            "default" : null,
            "description" : "template",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "autostart", "canpost", "canpostorhascomments", "canview", "cid", "collapsediconkey", "commentarea", "component", "contextid", "count", "courseid", "displaycancel", "displaytotalcount", "fullwidth", "itemid", "linktext", "notoggle", "template" ]
      },
      "core_competency_create_plan_200_response_reviewer" : {
        "properties" : {
          "department" : {
            "default" : "",
            "description" : "department",
            "type" : "string",
            "nullable" : false
          },
          "email" : {
            "default" : "",
            "description" : "email",
            "type" : "string",
            "nullable" : false
          },
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "identity" : {
            "default" : null,
            "description" : "identity",
            "type" : "string",
            "nullable" : false
          },
          "idnumber" : {
            "default" : "",
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "institution" : {
            "default" : "",
            "description" : "institution",
            "type" : "string",
            "nullable" : false
          },
          "phone1" : {
            "default" : "",
            "description" : "phone1",
            "type" : "string",
            "nullable" : false
          },
          "phone2" : {
            "default" : "",
            "description" : "phone2",
            "type" : "string",
            "nullable" : false
          },
          "profileimageurl" : {
            "default" : null,
            "description" : "profileimageurl",
            "type" : "string",
            "nullable" : false
          },
          "profileimageurlsmall" : {
            "default" : null,
            "description" : "profileimageurlsmall",
            "type" : "string",
            "nullable" : false
          },
          "profileurl" : {
            "default" : null,
            "description" : "profileurl",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "department", "email", "fullname", "id", "identity", "idnumber", "institution", "phone1", "phone2", "profileimageurl", "profileimageurlsmall", "profileurl" ]
      },
      "core_competency_create_plan_200_response_template" : {
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "canread" : {
            "default" : null,
            "description" : "canread",
            "type" : "boolean",
            "nullable" : false
          },
          "cohortscount" : {
            "default" : null,
            "description" : "cohortscount",
            "type" : "integer",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "contextname" : {
            "description" : "contextname",
            "type" : "string",
            "nullable" : false
          },
          "contextnamenoprefix" : {
            "description" : "contextnamenoprefix",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "duedateformatted" : {
            "description" : "duedateformatted",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "planscount" : {
            "default" : null,
            "description" : "planscount",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "canmanage", "canread", "cohortscount", "contextid", "contextname", "contextnamenoprefix", "description", "duedate", "duedateformatted", "id", "planscount", "shortname", "timecreated", "timemodified", "usermodified", "visible" ]
      },
      "core_competency_create_plan_200_response" : {
        "properties" : {
          "canbeedited" : {
            "default" : null,
            "description" : "canbeedited",
            "type" : "boolean",
            "nullable" : false
          },
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "canrequestreview" : {
            "default" : null,
            "description" : "canrequestreview",
            "type" : "boolean",
            "nullable" : false
          },
          "canreview" : {
            "default" : null,
            "description" : "canreview",
            "type" : "boolean",
            "nullable" : false
          },
          "commentarea" : {
            "$ref" : "#/components/schemas/core_competency_create_plan_200_response_commentarea"
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "duedateformatted" : {
            "default" : null,
            "description" : "duedateformatted",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "isactive" : {
            "default" : null,
            "description" : "isactive",
            "type" : "boolean",
            "nullable" : false
          },
          "isapproveallowed" : {
            "default" : null,
            "description" : "isapproveallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isbasedontemplate" : {
            "default" : null,
            "description" : "isbasedontemplate",
            "type" : "boolean",
            "nullable" : false
          },
          "iscancelreviewrequestallowed" : {
            "default" : null,
            "description" : "iscancelreviewrequestallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iscompleteallowed" : {
            "default" : null,
            "description" : "iscompleteallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iscompleted" : {
            "default" : null,
            "description" : "iscompleted",
            "type" : "boolean",
            "nullable" : false
          },
          "isdraft" : {
            "default" : null,
            "description" : "isdraft",
            "type" : "boolean",
            "nullable" : false
          },
          "isinreview" : {
            "default" : null,
            "description" : "isinreview",
            "type" : "boolean",
            "nullable" : false
          },
          "isreopenallowed" : {
            "default" : null,
            "description" : "isreopenallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isrequestreviewallowed" : {
            "default" : null,
            "description" : "isrequestreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstartreviewallowed" : {
            "default" : null,
            "description" : "isstartreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstopreviewallowed" : {
            "default" : null,
            "description" : "isstopreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isunapproveallowed" : {
            "default" : null,
            "description" : "isunapproveallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isunlinkallowed" : {
            "default" : null,
            "description" : "isunlinkallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iswaitingforreview" : {
            "default" : null,
            "description" : "iswaitingforreview",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "origtemplateid" : {
            "description" : "origtemplateid",
            "type" : "integer",
            "nullable" : true
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/core_competency_create_plan_200_response_reviewer"
          },
          "reviewerid" : {
            "description" : "reviewerid",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : 0,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "statusname" : {
            "default" : null,
            "description" : "statusname",
            "type" : "string",
            "nullable" : false
          },
          "template" : {
            "$ref" : "#/components/schemas/core_competency_create_plan_200_response_template"
          },
          "templateid" : {
            "description" : "templateid",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "canbeedited", "canmanage", "canrequestreview", "canreview", "commentarea", "description", "duedate", "duedateformatted", "id", "isactive", "isapproveallowed", "isbasedontemplate", "iscancelreviewrequestallowed", "iscompleteallowed", "iscompleted", "isdraft", "isinreview", "isreopenallowed", "isrequestreviewallowed", "isstartreviewallowed", "isstopreviewallowed", "isunapproveallowed", "isunlinkallowed", "iswaitingforreview", "name", "origtemplateid", "reviewerid", "status", "statusname", "templateid", "timecreated", "timemodified", "url", "userid", "usermodified" ]
      },
      "core_competency_create_template_request_template" : {
        "properties" : {
          "contextid" : {
            "description" : "The context id",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "description" : "The context level",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "instanceid" : {
            "description" : "The Instance id",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "shortname" ]
      },
      "core_competency_create_template_request" : {
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/core_competency_create_template_request_template"
          }
        },
        "required" : [ "template" ]
      },
      "core_competency_create_template_200_response" : {
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "canread" : {
            "description" : "canread",
            "type" : "boolean",
            "nullable" : false
          },
          "cohortscount" : {
            "description" : "cohortscount",
            "type" : "integer",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "contextname" : {
            "description" : "contextname",
            "type" : "string",
            "nullable" : false
          },
          "contextnamenoprefix" : {
            "description" : "contextnamenoprefix",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "duedateformatted" : {
            "description" : "duedateformatted",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "planscount" : {
            "description" : "planscount",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "canmanage", "canread", "cohortscount", "contextid", "contextname", "contextnamenoprefix", "description", "duedate", "duedateformatted", "id", "planscount", "shortname", "timecreated", "timemodified", "usermodified", "visible" ]
      },
      "core_competency_create_user_evidence_competency_request" : {
        "properties" : {
          "competencyid" : {
            "default" : null,
            "description" : "The competency ID.",
            "type" : "integer",
            "nullable" : true
          },
          "userevidenceid" : {
            "default" : null,
            "description" : "The user evidence ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "userevidenceid" ]
      },
      "core_competency_create_user_evidence_competency_200_response" : {
        "properties" : {
          "competencyid" : {
            "default" : null,
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "userevidenceid" : {
            "default" : null,
            "description" : "userevidenceid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencyid", "id", "timecreated", "timemodified", "userevidenceid", "usermodified" ]
      },
      "core_competency_delete_competency_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Data base record id for the competency",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_delete_competency_framework_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Data base record id for the framework",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_delete_evidence_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The evidence ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_delete_plan_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Data base record id for the learning plan",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_delete_template_request" : {
        "properties" : {
          "deleteplans" : {
            "default" : null,
            "description" : "Boolean to indicate if plans must be deleted",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Data base record id for the template",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "deleteplans", "id" ]
      },
      "core_competency_delete_user_evidence_request" : {
        "properties" : {
          "id" : {
            "description" : "The user evidence ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_delete_user_evidence_competency_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency ID.",
            "type" : "integer",
            "nullable" : true
          },
          "userevidenceid" : {
            "description" : "The user evidence ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "userevidenceid" ]
      },
      "core_competency_duplicate_competency_framework_request" : {
        "properties" : {
          "id" : {
            "description" : "Data base record id for the framework",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_duplicate_competency_framework_200_response" : {
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "competenciescount" : {
            "description" : "competenciescount",
            "type" : "integer",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "contextname" : {
            "description" : "contextname",
            "type" : "string",
            "nullable" : false
          },
          "contextnamenoprefix" : {
            "description" : "contextnamenoprefix",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "taxonomies" : {
            "default" : "",
            "description" : "taxonomies",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "canmanage", "competenciescount", "contextid", "contextname", "contextnamenoprefix", "description", "id", "idnumber", "scaleconfiguration", "scaleid", "shortname", "taxonomies", "timecreated", "timemodified", "usermodified", "visible" ]
      },
      "core_competency_get_scale_values_request" : {
        "properties" : {
          "scaleid" : {
            "default" : null,
            "description" : "The scale id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "scaleid" ]
      },
      "core_competency_grade_competency_request" : {
        "properties" : {
          "competencyid" : {
            "default" : null,
            "description" : "Competency ID",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "New grade",
            "type" : "integer",
            "nullable" : true
          },
          "note" : {
            "default" : null,
            "description" : "A note to attach to the evidence",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "grade", "userid" ]
      },
      "core_competency_grade_competency_200_response_actionuser" : {
        "properties" : {
          "department" : {
            "default" : "",
            "description" : "department",
            "type" : "string",
            "nullable" : false
          },
          "email" : {
            "default" : "",
            "description" : "email",
            "type" : "string",
            "nullable" : false
          },
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "identity" : {
            "description" : "identity",
            "type" : "string",
            "nullable" : false
          },
          "idnumber" : {
            "default" : "",
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "institution" : {
            "default" : "",
            "description" : "institution",
            "type" : "string",
            "nullable" : false
          },
          "phone1" : {
            "default" : "",
            "description" : "phone1",
            "type" : "string",
            "nullable" : false
          },
          "phone2" : {
            "default" : "",
            "description" : "phone2",
            "type" : "string",
            "nullable" : false
          },
          "profileimageurl" : {
            "description" : "profileimageurl",
            "type" : "string",
            "nullable" : false
          },
          "profileimageurlsmall" : {
            "description" : "profileimageurlsmall",
            "type" : "string",
            "nullable" : false
          },
          "profileurl" : {
            "description" : "profileurl",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "department", "email", "fullname", "id", "identity", "idnumber", "institution", "phone1", "phone2", "profileimageurl", "profileimageurlsmall", "profileurl" ]
      },
      "core_competency_grade_competency_200_response" : {
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "action",
            "type" : "integer",
            "nullable" : false
          },
          "actionuser" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "actionuserid" : {
            "default" : null,
            "description" : "actionuserid",
            "type" : "integer",
            "nullable" : true
          },
          "candelete" : {
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "desca" : {
            "default" : null,
            "description" : "desca",
            "type" : "string",
            "nullable" : true
          },
          "desccomponent" : {
            "default" : null,
            "description" : "desccomponent",
            "type" : "string",
            "nullable" : false
          },
          "descidentifier" : {
            "default" : null,
            "description" : "descidentifier",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "grade" : {
            "default" : null,
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "default" : null,
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "note" : {
            "default" : null,
            "description" : "note",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "default" : null,
            "description" : "url",
            "type" : "string",
            "nullable" : true
          },
          "usercompetencyid" : {
            "default" : null,
            "description" : "usercompetencyid",
            "type" : "integer",
            "nullable" : false
          },
          "userdate" : {
            "default" : null,
            "description" : "userdate",
            "type" : "string",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "action", "actionuserid", "candelete", "contextid", "desca", "desccomponent", "descidentifier", "description", "grade", "gradename", "id", "note", "timecreated", "timemodified", "url", "usercompetencyid", "userdate", "usermodified" ]
      },
      "core_competency_grade_competency_in_course_request" : {
        "properties" : {
          "competencyid" : {
            "default" : null,
            "description" : "Competency id",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "New grade",
            "type" : "integer",
            "nullable" : true
          },
          "note" : {
            "description" : "A note to attach to the evidence",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "courseid", "grade", "userid" ]
      },
      "core_competency_grade_competency_in_course_200_response" : {
        "properties" : {
          "action" : {
            "description" : "action",
            "type" : "integer",
            "nullable" : false
          },
          "actionuser" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "actionuserid" : {
            "description" : "actionuserid",
            "type" : "integer",
            "nullable" : true
          },
          "candelete" : {
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "desca" : {
            "description" : "desca",
            "type" : "string",
            "nullable" : true
          },
          "desccomponent" : {
            "description" : "desccomponent",
            "type" : "string",
            "nullable" : false
          },
          "descidentifier" : {
            "description" : "descidentifier",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "note" : {
            "description" : "note",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : true
          },
          "usercompetencyid" : {
            "description" : "usercompetencyid",
            "type" : "integer",
            "nullable" : false
          },
          "userdate" : {
            "description" : "userdate",
            "type" : "string",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "action", "actionuserid", "candelete", "contextid", "desca", "desccomponent", "descidentifier", "description", "grade", "gradename", "id", "note", "timecreated", "timemodified", "url", "usercompetencyid", "userdate", "usermodified" ]
      },
      "core_competency_grade_competency_in_plan_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "Competency id",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "New grade",
            "type" : "integer",
            "nullable" : true
          },
          "note" : {
            "description" : "A note to attach to the evidence",
            "type" : "string",
            "nullable" : true
          },
          "planid" : {
            "default" : null,
            "description" : "Plan id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "grade", "planid" ]
      },
      "core_competency_list_competencies_request_filters_inner" : {
        "properties" : {
          "column" : {
            "description" : "Column name to filter by",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "Value to filter by. Must be exact match",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_competency_list_competencies_request" : {
        "properties" : {
          "filters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_list_competencies_request_filters_inner"
            },
            "type" : "array"
          },
          "limit" : {
            "default" : 0,
            "description" : "Return this number of records at most.",
            "type" : "integer",
            "nullable" : true
          },
          "order" : {
            "default" : "",
            "description" : "Sort direction. Should be either ASC or DESC",
            "type" : "string",
            "nullable" : true
          },
          "skip" : {
            "default" : 0,
            "description" : "Skip this number of records before returning results",
            "type" : "integer",
            "nullable" : true
          },
          "sort" : {
            "default" : "",
            "description" : "Column to sort by.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "filters" ]
      },
      "core_competency_list_competency_frameworks_request" : {
        "properties" : {
          "context" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "includes" : {
            "default" : "children",
            "description" : "What other contextes to fetch the frameworks from. (children, parents, self)",
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "default" : 0,
            "description" : "Return this number of records at most.",
            "type" : "integer",
            "nullable" : true
          },
          "onlyvisible" : {
            "default" : false,
            "description" : "Only visible frameworks will be returned if visible true",
            "type" : "boolean",
            "nullable" : true
          },
          "order" : {
            "default" : "",
            "description" : "Sort direction. Should be either ASC or DESC",
            "type" : "string",
            "nullable" : true
          },
          "query" : {
            "default" : "",
            "description" : "A query string to filter the results",
            "type" : "string",
            "nullable" : true
          },
          "skip" : {
            "default" : 0,
            "description" : "Skip this number of records before returning results",
            "type" : "integer",
            "nullable" : true
          },
          "sort" : {
            "default" : "shortname",
            "description" : "Column to sort by.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "context" ]
      },
      "core_competency_list_course_module_competencies_request" : {
        "properties" : {
          "cmid" : {
            "description" : "The course module id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "core_competency_list_plan_competencies_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The plan ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_list_templates_request" : {
        "properties" : {
          "context" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "includes" : {
            "default" : "children",
            "description" : "What other contexts to fetch the templates from. (children, parents, self)",
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "default" : 0,
            "description" : "Return this number of records at most.",
            "type" : "integer",
            "nullable" : true
          },
          "onlyvisible" : {
            "default" : false,
            "description" : "If should list only visible templates",
            "type" : "boolean",
            "nullable" : true
          },
          "order" : {
            "default" : "",
            "description" : "Sort direction. Should be either ASC or DESC",
            "type" : "string",
            "nullable" : true
          },
          "skip" : {
            "default" : 0,
            "description" : "Skip this number of records before returning results",
            "type" : "integer",
            "nullable" : true
          },
          "sort" : {
            "default" : "",
            "description" : "Column to sort by.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "context" ]
      },
      "core_competency_list_user_plans_request" : {
        "properties" : {
          "userid" : {
            "default" : null,
            "description" : "The user ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_competency_plan_cancel_review_request_request" : {
        "properties" : {
          "id" : {
            "description" : "The plan ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_read_competency_request" : {
        "properties" : {
          "id" : {
            "description" : "Data base record id for the competency",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_read_plan_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Data base record id for the plan",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_read_plan_200_response_commentarea" : {
        "properties" : {
          "autostart" : {
            "description" : "autostart",
            "type" : "boolean",
            "nullable" : false
          },
          "canpost" : {
            "description" : "canpost",
            "type" : "boolean",
            "nullable" : false
          },
          "canpostorhascomments" : {
            "description" : "canpostorhascomments",
            "type" : "boolean",
            "nullable" : false
          },
          "canview" : {
            "description" : "canview",
            "type" : "boolean",
            "nullable" : false
          },
          "cid" : {
            "description" : "cid",
            "type" : "string",
            "nullable" : false
          },
          "collapsediconkey" : {
            "description" : "collapsediconkey",
            "type" : "string",
            "nullable" : false
          },
          "commentarea" : {
            "description" : "commentarea",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "count" : {
            "description" : "count",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "displaycancel" : {
            "description" : "displaycancel",
            "type" : "boolean",
            "nullable" : false
          },
          "displaytotalcount" : {
            "description" : "displaytotalcount",
            "type" : "boolean",
            "nullable" : false
          },
          "fullwidth" : {
            "description" : "fullwidth",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "linktext" : {
            "description" : "linktext",
            "type" : "string",
            "nullable" : false
          },
          "notoggle" : {
            "description" : "notoggle",
            "type" : "boolean",
            "nullable" : false
          },
          "template" : {
            "description" : "template",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "autostart", "canpost", "canpostorhascomments", "canview", "cid", "collapsediconkey", "commentarea", "component", "contextid", "count", "courseid", "displaycancel", "displaytotalcount", "fullwidth", "itemid", "linktext", "notoggle", "template" ]
      },
      "core_competency_read_plan_200_response" : {
        "properties" : {
          "canbeedited" : {
            "description" : "canbeedited",
            "type" : "boolean",
            "nullable" : false
          },
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "canrequestreview" : {
            "description" : "canrequestreview",
            "type" : "boolean",
            "nullable" : false
          },
          "canreview" : {
            "description" : "canreview",
            "type" : "boolean",
            "nullable" : false
          },
          "commentarea" : {
            "$ref" : "#/components/schemas/core_competency_read_plan_200_response_commentarea"
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "duedateformatted" : {
            "description" : "duedateformatted",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "isactive" : {
            "description" : "isactive",
            "type" : "boolean",
            "nullable" : false
          },
          "isapproveallowed" : {
            "description" : "isapproveallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isbasedontemplate" : {
            "description" : "isbasedontemplate",
            "type" : "boolean",
            "nullable" : false
          },
          "iscancelreviewrequestallowed" : {
            "description" : "iscancelreviewrequestallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iscompleteallowed" : {
            "description" : "iscompleteallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iscompleted" : {
            "description" : "iscompleted",
            "type" : "boolean",
            "nullable" : false
          },
          "isdraft" : {
            "description" : "isdraft",
            "type" : "boolean",
            "nullable" : false
          },
          "isinreview" : {
            "description" : "isinreview",
            "type" : "boolean",
            "nullable" : false
          },
          "isreopenallowed" : {
            "description" : "isreopenallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isrequestreviewallowed" : {
            "description" : "isrequestreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstartreviewallowed" : {
            "description" : "isstartreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstopreviewallowed" : {
            "description" : "isstopreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isunapproveallowed" : {
            "description" : "isunapproveallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isunlinkallowed" : {
            "description" : "isunlinkallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iswaitingforreview" : {
            "description" : "iswaitingforreview",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "origtemplateid" : {
            "description" : "origtemplateid",
            "type" : "integer",
            "nullable" : true
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "reviewerid" : {
            "description" : "reviewerid",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : 0,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "statusname" : {
            "description" : "statusname",
            "type" : "string",
            "nullable" : false
          },
          "template" : {
            "$ref" : "#/components/schemas/core_competency_create_template_200_response"
          },
          "templateid" : {
            "description" : "templateid",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "canbeedited", "canmanage", "canrequestreview", "canreview", "commentarea", "description", "duedate", "duedateformatted", "id", "isactive", "isapproveallowed", "isbasedontemplate", "iscancelreviewrequestallowed", "iscompleteallowed", "iscompleted", "isdraft", "isinreview", "isreopenallowed", "isrequestreviewallowed", "isstartreviewallowed", "isstopreviewallowed", "isunapproveallowed", "isunlinkallowed", "iswaitingforreview", "name", "origtemplateid", "reviewerid", "status", "statusname", "templateid", "timecreated", "timemodified", "url", "userid", "usermodified" ]
      },
      "core_competency_read_template_request" : {
        "properties" : {
          "id" : {
            "description" : "Data base record id for the template",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_read_user_evidence_200_response_competencies_inner" : {
        "default" : null,
        "properties" : {
          "competencyframeworkid" : {
            "default" : 0,
            "description" : "competencyframeworkid",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "parentid" : {
            "default" : 0,
            "description" : "parentid",
            "type" : "integer",
            "nullable" : false
          },
          "path" : {
            "default" : "/0/",
            "description" : "path",
            "type" : "string",
            "nullable" : false
          },
          "ruleconfig" : {
            "description" : "ruleconfig",
            "type" : "string",
            "nullable" : true
          },
          "ruleoutcome" : {
            "default" : 0,
            "description" : "ruleoutcome",
            "type" : "integer",
            "nullable" : false
          },
          "ruletype" : {
            "description" : "ruletype",
            "type" : "string",
            "nullable" : true
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : true
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "default" : 0,
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_competency_read_user_evidence_200_response_files_inner" : {
        "default" : null,
        "properties" : {
          "author" : {
            "default" : null,
            "description" : "author",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "filearea" : {
            "default" : null,
            "description" : "filearea",
            "type" : "string",
            "nullable" : false
          },
          "filename" : {
            "default" : null,
            "description" : "filename",
            "type" : "string",
            "nullable" : false
          },
          "filenameshort" : {
            "default" : null,
            "description" : "filenameshort",
            "type" : "string",
            "nullable" : false
          },
          "filepath" : {
            "default" : null,
            "description" : "filepath",
            "type" : "string",
            "nullable" : false
          },
          "filesize" : {
            "default" : null,
            "description" : "filesize",
            "type" : "integer",
            "nullable" : false
          },
          "filesizeformatted" : {
            "default" : null,
            "description" : "filesizeformatted",
            "type" : "string",
            "nullable" : false
          },
          "icon" : {
            "default" : null,
            "description" : "icon",
            "type" : "string",
            "nullable" : false
          },
          "isdir" : {
            "default" : null,
            "description" : "isdir",
            "type" : "boolean",
            "nullable" : false
          },
          "isimage" : {
            "default" : null,
            "description" : "isimage",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "license" : {
            "default" : null,
            "description" : "license",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : null,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timecreatedformatted" : {
            "default" : null,
            "description" : "timecreatedformatted",
            "type" : "string",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timemodifiedformatted" : {
            "default" : null,
            "description" : "timemodifiedformatted",
            "type" : "string",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_competency_read_user_evidence_200_response" : {
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "competencies" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "competencycount" : {
            "default" : null,
            "description" : "competencycount",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "filecount" : {
            "default" : null,
            "description" : "filecount",
            "type" : "integer",
            "nullable" : false
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_files_inner"
            },
            "type" : "array"
          },
          "hasurlorfiles" : {
            "default" : null,
            "description" : "hasurlorfiles",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "default" : "",
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "urlshort" : {
            "default" : null,
            "description" : "urlshort",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "canmanage", "competencies", "competencycount", "description", "filecount", "files", "hasurlorfiles", "id", "name", "timecreated", "timemodified", "url", "urlshort", "userid", "usermodified" ]
      },
      "core_competency_remove_competency_from_course_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "courseid" ]
      },
      "core_competency_remove_competency_from_plan_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "planid" : {
            "description" : "The plan id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "planid" ]
      },
      "core_competency_remove_competency_from_template_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "templateid" : {
            "description" : "The template id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "templateid" ]
      },
      "core_competency_remove_related_competency_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "relatedcompetencyid" : {
            "description" : "The related competency id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "relatedcompetencyid" ]
      },
      "core_competency_reorder_course_competency_request" : {
        "properties" : {
          "competencyidfrom" : {
            "default" : null,
            "description" : "The competency id we are moving",
            "type" : "integer",
            "nullable" : true
          },
          "competencyidto" : {
            "default" : null,
            "description" : "The competency id we are moving to",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyidfrom", "competencyidto", "courseid" ]
      },
      "core_competency_reorder_plan_competency_request" : {
        "properties" : {
          "competencyidfrom" : {
            "description" : "The competency id we are moving",
            "type" : "integer",
            "nullable" : true
          },
          "competencyidto" : {
            "description" : "The competency id we are moving to",
            "type" : "integer",
            "nullable" : true
          },
          "planid" : {
            "description" : "The plan id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyidfrom", "competencyidto", "planid" ]
      },
      "core_competency_reorder_template_competency_request" : {
        "properties" : {
          "competencyidfrom" : {
            "description" : "The competency id we are moving",
            "type" : "integer",
            "nullable" : true
          },
          "competencyidto" : {
            "description" : "The competency id we are moving to",
            "type" : "integer",
            "nullable" : true
          },
          "templateid" : {
            "description" : "The template id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyidfrom", "competencyidto", "templateid" ]
      },
      "core_competency_search_competencies_request" : {
        "properties" : {
          "competencyframeworkid" : {
            "default" : null,
            "description" : "Competency framework id",
            "type" : "integer",
            "nullable" : true
          },
          "searchtext" : {
            "default" : null,
            "description" : "Text to search for",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "competencyframeworkid", "searchtext" ]
      },
      "core_competency_set_course_competency_ruleoutcome_request" : {
        "properties" : {
          "coursecompetencyid" : {
            "default" : null,
            "description" : "Data base record id for the course competency",
            "type" : "integer",
            "nullable" : true
          },
          "ruleoutcome" : {
            "default" : null,
            "description" : "Ruleoutcome value",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "coursecompetencyid", "ruleoutcome" ]
      },
      "core_competency_set_parent_competency_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "parentid" : {
            "default" : null,
            "description" : "The new competency parent id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "parentid" ]
      },
      "core_competency_unlink_plan_from_template_request" : {
        "properties" : {
          "planid" : {
            "description" : "Data base record id for the plan",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "planid" ]
      },
      "core_competency_update_competency_request_competency" : {
        "properties" : {
          "competencyframeworkid" : {
            "default" : null,
            "description" : "competencyframeworkid",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "parentid" : {
            "default" : null,
            "description" : "parentid",
            "type" : "integer",
            "nullable" : false
          },
          "path" : {
            "default" : null,
            "description" : "path",
            "type" : "string",
            "nullable" : false
          },
          "ruleconfig" : {
            "description" : "ruleconfig",
            "type" : "string",
            "nullable" : true
          },
          "ruleoutcome" : {
            "default" : null,
            "description" : "ruleoutcome",
            "type" : "integer",
            "nullable" : false
          },
          "ruletype" : {
            "description" : "ruletype",
            "type" : "string",
            "nullable" : true
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : true
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "default" : null,
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : null,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_update_competency_request" : {
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_update_competency_request_competency"
          }
        },
        "required" : [ "competency" ]
      },
      "core_competency_update_competency_framework_request_competencyframework" : {
        "properties" : {
          "contextid" : {
            "description" : "The context id",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "description" : "The context level",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "instanceid" : {
            "description" : "The Instance id",
            "type" : "integer",
            "nullable" : true
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "taxonomies" : {
            "default" : null,
            "description" : "taxonomies",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_update_competency_framework_request" : {
        "properties" : {
          "competencyframework" : {
            "$ref" : "#/components/schemas/core_competency_update_competency_framework_request_competencyframework"
          }
        },
        "required" : [ "competencyframework" ]
      },
      "core_competency_update_course_competency_settings_request_settings" : {
        "properties" : {
          "pushratingstouserplans" : {
            "default" : null,
            "description" : "New value of the setting",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "pushratingstouserplans" ]
      },
      "core_competency_update_course_competency_settings_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "Course id for the course to update",
            "type" : "integer",
            "nullable" : true
          },
          "settings" : {
            "$ref" : "#/components/schemas/core_competency_update_course_competency_settings_request_settings"
          }
        },
        "required" : [ "courseid", "settings" ]
      },
      "core_competency_update_plan_request_plan" : {
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : null,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "origtemplateid" : {
            "description" : "origtemplateid",
            "type" : "integer",
            "nullable" : true
          },
          "reviewerid" : {
            "description" : "reviewerid",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "templateid" : {
            "description" : "templateid",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_update_plan_request" : {
        "properties" : {
          "plan" : {
            "$ref" : "#/components/schemas/core_competency_update_plan_request_plan"
          }
        },
        "required" : [ "plan" ]
      },
      "core_competency_update_template_request_template" : {
        "properties" : {
          "contextid" : {
            "description" : "The context id",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "description" : "The context level",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "instanceid" : {
            "description" : "The Instance id",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "id" ]
      },
      "core_competency_update_template_request" : {
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/core_competency_update_template_request_template"
          }
        },
        "required" : [ "template" ]
      },
      "core_competency_user_competency_cancel_review_request_request" : {
        "properties" : {
          "competencyid" : {
            "default" : null,
            "description" : "The competency ID",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "userid" ]
      },
      "core_competency_user_competency_plan_viewed_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "planid" : {
            "description" : "The plan id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "planid", "userid" ]
      },
      "core_competency_user_competency_request_review_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency ID",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "userid" ]
      },
      "core_competency_user_competency_viewed_request" : {
        "properties" : {
          "usercompetencyid" : {
            "default" : null,
            "description" : "The user competency id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "usercompetencyid" ]
      },
      "core_competency_user_competency_viewed_in_course_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "courseid", "userid" ]
      },
      "core_completion_get_activities_completion_status_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "userid" ]
      },
      "core_completion_get_activities_completion_status_200_response_statuses_inner_details_inner_rulevalue" : {
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "Completion description",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "Completion status",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "description", "status" ]
      },
      "core_completion_get_activities_completion_status_200_response_statuses_inner_details_inner" : {
        "default" : null,
        "properties" : {
          "rulename" : {
            "default" : null,
            "description" : "Rule name",
            "type" : "string",
            "nullable" : true
          },
          "rulevalue" : {
            "$ref" : "#/components/schemas/core_completion_get_activities_completion_status_200_response_statuses_inner_details_inner_rulevalue"
          }
        },
        "nullable" : false
      },
      "core_completion_get_activities_completion_status_200_response_statuses_inner" : {
        "default" : null,
        "description" : "Activity",
        "properties" : {
          "cmid" : {
            "default" : null,
            "description" : "course module ID",
            "type" : "integer",
            "nullable" : true
          },
          "details" : {
            "items" : {
              "$ref" : "#/components/schemas/core_completion_get_activities_completion_status_200_response_statuses_inner_details_inner"
            },
            "type" : "array"
          },
          "hascompletion" : {
            "default" : null,
            "description" : "Whether this activity module has completion enabled",
            "type" : "boolean",
            "nullable" : true
          },
          "instance" : {
            "default" : null,
            "description" : "instance ID",
            "type" : "integer",
            "nullable" : true
          },
          "isautomatic" : {
            "default" : null,
            "description" : "Whether this activity module instance tracks completion automatically.",
            "type" : "boolean",
            "nullable" : true
          },
          "istrackeduser" : {
            "default" : null,
            "description" : "Whether completion is being tracked for this user.",
            "type" : "boolean",
            "nullable" : true
          },
          "modname" : {
            "default" : null,
            "description" : "activity module name",
            "type" : "string",
            "nullable" : true
          },
          "overrideby" : {
            "default" : null,
            "description" : "The user id who has overriden the status, or null",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "Completion state value:\n                                    0 means incomplete,\n                                    1 complete,\n                                    2 complete pass,\n                                    3 complete fail",
            "type" : "integer",
            "nullable" : true
          },
          "timecompleted" : {
            "default" : null,
            "description" : "timestamp for completed activity",
            "type" : "integer",
            "nullable" : true
          },
          "tracking" : {
            "default" : null,
            "description" : "type of tracking:\n                                    0 means none,\n                                    1 manual,\n                                    2 automatic",
            "type" : "integer",
            "nullable" : true
          },
          "uservisible" : {
            "default" : null,
            "description" : "Whether this activity is visible to the user.",
            "type" : "boolean",
            "nullable" : true
          },
          "valueused" : {
            "default" : null,
            "description" : "Whether the completion status affects the availability of another activity.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_completion_get_activities_completion_status_200_response" : {
        "properties" : {
          "statuses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_completion_get_activities_completion_status_200_response_statuses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "statuses" ]
      },
      "core_completion_get_course_completion_status_200_response_completionstatus_completions_inner_details" : {
        "properties" : {
          "criteria" : {
            "default" : null,
            "description" : "Criteria description",
            "type" : "string",
            "nullable" : true
          },
          "requirement" : {
            "default" : null,
            "description" : "Requirement description",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "Status description, can be anything",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Type description",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "criteria", "requirement", "status", "type" ]
      },
      "core_completion_get_course_completion_status_200_response_completionstatus_completions_inner" : {
        "default" : null,
        "description" : "Completions",
        "properties" : {
          "complete" : {
            "default" : null,
            "description" : "Completion status (true/false)",
            "type" : "boolean",
            "nullable" : true
          },
          "details" : {
            "$ref" : "#/components/schemas/core_completion_get_course_completion_status_200_response_completionstatus_completions_inner_details"
          },
          "status" : {
            "default" : null,
            "description" : "Completion status (Yes/No) a % or number",
            "type" : "string",
            "nullable" : true
          },
          "timecompleted" : {
            "default" : null,
            "description" : "Timestamp for criteria completetion",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Completion criteria Title",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Completion criteria type",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_completion_get_course_completion_status_200_response_completionstatus" : {
        "properties" : {
          "aggregation" : {
            "default" : null,
            "description" : "aggregation method 1 means all, 2 means any",
            "type" : "integer",
            "nullable" : true
          },
          "completed" : {
            "default" : null,
            "description" : "true if the course is complete, false otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "completions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_completion_get_course_completion_status_200_response_completionstatus_completions_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "aggregation", "completed", "completions" ]
      },
      "core_completion_get_course_completion_status_200_response" : {
        "properties" : {
          "completionstatus" : {
            "$ref" : "#/components/schemas/core_completion_get_course_completion_status_200_response_completionstatus"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "completionstatus" ]
      },
      "core_completion_mark_course_self_completed_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_completion_mark_course_self_completed_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "status, true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_completion_override_activity_completion_status_request" : {
        "properties" : {
          "cmid" : {
            "default" : null,
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "newstate" : {
            "default" : null,
            "description" : "the new activity completion state",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid", "newstate", "userid" ]
      },
      "core_completion_override_activity_completion_status_200_response" : {
        "properties" : {
          "cmid" : {
            "description" : "The course module id",
            "type" : "integer",
            "nullable" : true
          },
          "overrideby" : {
            "description" : "The user id who has overriden the status, or null",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "The current completion state.",
            "type" : "integer",
            "nullable" : true
          },
          "timecompleted" : {
            "default" : null,
            "description" : "time of completion",
            "type" : "integer",
            "nullable" : true
          },
          "tracking" : {
            "default" : null,
            "description" : "type of tracking:\n                                                                    0 means none, 1 manual, 2 automatic",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id to which the completion info belongs",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid", "overrideby", "state", "timecompleted", "tracking", "userid" ]
      },
      "core_completion_update_activity_completion_status_manually_request" : {
        "properties" : {
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "completed" : {
            "default" : null,
            "description" : "activity completed or not",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "cmid", "completed" ]
      },
      "core_completion_update_activity_completion_status_manually_200_response" : {
        "properties" : {
          "status" : {
            "description" : "status, true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_contentbank_copy_content_request" : {
        "properties" : {
          "contentid" : {
            "default" : null,
            "description" : "The content id to copy",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The new name for the content",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "contentid", "name" ]
      },
      "core_contentbank_copy_content_200_response" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The id of the new content",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "id" ]
      },
      "core_contentbank_delete_content_request" : {
        "properties" : {
          "contentids" : {
            "items" : {
              "default" : null,
              "description" : "The content id to delete",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "contentids" ]
      },
      "core_contentbank_delete_content_200_response" : {
        "properties" : {
          "result" : {
            "default" : null,
            "description" : "The processing result",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "core_contentbank_rename_content_request" : {
        "properties" : {
          "contentid" : {
            "default" : null,
            "description" : "The content id to rename",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "The new name for the content",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "contentid", "name" ]
      },
      "core_contentbank_rename_content_200_response" : {
        "properties" : {
          "result" : {
            "description" : "The processing result",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "core_contentbank_set_content_visibility_request" : {
        "properties" : {
          "contentid" : {
            "description" : "The content id to rename",
            "type" : "integer",
            "nullable" : true
          },
          "visibility" : {
            "default" : null,
            "description" : "The new visibility for the content",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "contentid", "visibility" ]
      },
      "core_course_add_content_item_to_user_favourites_request" : {
        "properties" : {
          "componentname" : {
            "default" : null,
            "description" : "frankenstyle name of the component to which the content item belongs",
            "type" : "string",
            "nullable" : true
          },
          "contentitemid" : {
            "default" : "",
            "description" : "id of the content item",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "componentname", "contentitemid" ]
      },
      "core_course_add_content_item_to_user_favourites_200_response" : {
        "properties" : {
          "archetype" : {
            "default" : null,
            "description" : "The archetype of the module exposing the content item",
            "type" : "string",
            "nullable" : false
          },
          "componentname" : {
            "default" : null,
            "description" : "The name of the component exposing the content item",
            "type" : "string",
            "nullable" : false
          },
          "favourite" : {
            "default" : null,
            "description" : "Has the user favourited the content item",
            "type" : "boolean",
            "nullable" : false
          },
          "help" : {
            "default" : null,
            "description" : "Html description / help for the content item",
            "type" : "string",
            "nullable" : false
          },
          "icon" : {
            "default" : null,
            "description" : "Html containing the icon for the content item",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "The id of the content item",
            "type" : "integer",
            "nullable" : false
          },
          "legacyitem" : {
            "default" : null,
            "description" : "If this item was pulled from the old callback and has no item id.",
            "type" : "boolean",
            "nullable" : false
          },
          "link" : {
            "default" : null,
            "description" : "The link to the content item creation page",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Name of the content item",
            "type" : "string",
            "nullable" : false
          },
          "purpose" : {
            "default" : null,
            "description" : "The purpose of the component exposing the content item",
            "type" : "string",
            "nullable" : false
          },
          "recommended" : {
            "default" : null,
            "description" : "Has this item been recommended",
            "type" : "boolean",
            "nullable" : false
          },
          "title" : {
            "default" : null,
            "description" : "The string title of the content item, human readable",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "archetype", "componentname", "favourite", "help", "icon", "id", "legacyitem", "link", "name", "purpose", "recommended", "title" ]
      },
      "core_course_check_updates_request_tocheck_inner" : {
        "default" : null,
        "properties" : {
          "contextlevel" : {
            "default" : null,
            "description" : "The context level for the file location.\n                                                                                Only module supported right now.",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Context instance id",
            "type" : "integer",
            "nullable" : true
          },
          "since" : {
            "default" : null,
            "description" : "Check updates since this time stamp",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_check_updates_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "Course id to check",
            "type" : "integer",
            "nullable" : true
          },
          "filter" : {
            "items" : {
              "default" : null,
              "description" : "Area name: configuration, fileareas, completion, ratings, comments,\n                                                        gradeitems, outcomes",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "tocheck" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_check_updates_request_tocheck_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courseid", "tocheck" ]
      },
      "core_course_check_updates_200_response_instances_inner_updates_inner" : {
        "default" : null,
        "properties" : {
          "itemids" : {
            "items" : {
              "default" : null,
              "description" : "Instance id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "name" : {
            "default" : null,
            "description" : "Name of the area updated.",
            "type" : "string",
            "nullable" : true
          },
          "timeupdated" : {
            "default" : null,
            "description" : "Last time was updated",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_check_updates_200_response_instances_inner" : {
        "default" : null,
        "properties" : {
          "contextlevel" : {
            "description" : "The context level",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Instance id",
            "type" : "integer",
            "nullable" : true
          },
          "updates" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_check_updates_200_response_instances_inner_updates_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_course_check_updates_200_response" : {
        "properties" : {
          "instances" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_check_updates_200_response_instances_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "instances" ]
      },
      "core_course_create_categories_request_categories_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "the new category description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "the new category idnumber",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "new category name",
            "type" : "string",
            "nullable" : true
          },
          "parent" : {
            "default" : 0,
            "description" : "the parent category id inside which the new category will be created\n                                         - set to 0 for a root category",
            "type" : "integer",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "the new category theme. This option must be enabled on moodle",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_create_categories_request" : {
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_create_categories_request_categories_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "categories" ]
      },
      "core_course_create_courses_request_courses_inner_courseformatoptions_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "course format option name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "course format option value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_create_courses_request_courses_inner" : {
        "default" : null,
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "category id",
            "type" : "integer",
            "nullable" : true
          },
          "completionnotify" : {
            "default" : null,
            "description" : "1: yes 0: no",
            "type" : "integer",
            "nullable" : true
          },
          "courseformatoptions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_create_courses_request_courses_inner_courseformatoptions_inner"
            },
            "type" : "array"
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "defaultgroupingid" : {
            "default" : 0,
            "description" : "default grouping id",
            "type" : "integer",
            "nullable" : true
          },
          "enablecompletion" : {
            "default" : null,
            "description" : "Enabled, control via completion and activity settings. Disabled,\n                                        not shown in activity settings.",
            "type" : "integer",
            "nullable" : true
          },
          "enddate" : {
            "default" : null,
            "description" : "timestamp when the course end",
            "type" : "integer",
            "nullable" : true
          },
          "forcetheme" : {
            "default" : null,
            "description" : "name of the force theme",
            "type" : "string",
            "nullable" : true
          },
          "format" : {
            "default" : "topics",
            "description" : "course format: weeks, topics, social, site,..",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "full name",
            "type" : "string",
            "nullable" : true
          },
          "groupmode" : {
            "default" : "0",
            "description" : "no group, separate, visible",
            "type" : "integer",
            "nullable" : true
          },
          "groupmodeforce" : {
            "default" : "0",
            "description" : "1: yes, 0: no",
            "type" : "integer",
            "nullable" : true
          },
          "hiddensections" : {
            "default" : null,
            "description" : "(deprecated, use courseformatoptions) How the hidden sections in the course are displayed to students",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "default" : null,
            "description" : "forced course language",
            "type" : "string",
            "nullable" : true
          },
          "maxbytes" : {
            "default" : "0",
            "description" : "largest size of file that can be uploaded into the course",
            "type" : "integer",
            "nullable" : true
          },
          "newsitems" : {
            "default" : "5",
            "description" : "number of recent items appearing on the course page",
            "type" : "integer",
            "nullable" : true
          },
          "numsections" : {
            "default" : null,
            "description" : "(deprecated, use courseformatoptions) number of weeks/topics",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "course short name",
            "type" : "string",
            "nullable" : true
          },
          "showgrades" : {
            "default" : "1",
            "description" : "1 if grades are shown, otherwise 0",
            "type" : "integer",
            "nullable" : true
          },
          "showreports" : {
            "default" : "0",
            "description" : "are activity report shown (yes = 1, no =0)",
            "type" : "integer",
            "nullable" : true
          },
          "startdate" : {
            "default" : null,
            "description" : "timestamp when the course start",
            "type" : "integer",
            "nullable" : true
          },
          "summary" : {
            "description" : "summary",
            "type" : "string",
            "nullable" : true
          },
          "summaryformat" : {
            "default" : "1",
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "default" : null,
            "description" : "1: available to student, 0:not available",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_create_courses_request" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_create_courses_request_courses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "core_course_delete_categories_request_categories_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "category id to delete",
            "type" : "integer",
            "nullable" : true
          },
          "newparent" : {
            "default" : null,
            "description" : "the parent category to move the contents to, if specified",
            "type" : "integer",
            "nullable" : true
          },
          "recursive" : {
            "default" : 0,
            "description" : "1: recursively delete all contents inside this\n                                category, 0 (default): move contents to newparent or current parent category (except if parent is root)",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_delete_categories_request" : {
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_delete_categories_request_categories_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "categories" ]
      },
      "core_course_delete_courses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "default" : null,
              "description" : "course ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "courseids" ]
      },
      "core_course_delete_modules_request" : {
        "properties" : {
          "cmids" : {
            "items" : {
              "default" : "",
              "description" : "course module ID",
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          }
        },
        "required" : [ "cmids" ]
      },
      "core_course_duplicate_course_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The backup option name:\n                                            \"activities\" (int) Include course activites (default to 1 that is equal to yes),\n                                            \"blocks\" (int) Include course blocks (default to 1 that is equal to yes),\n                                            \"filters\" (int) Include course filters  (default to 1 that is equal to yes),\n                                            \"users\" (int) Include users (default to 0 that is equal to no),\n                                            \"enrolments\" (int) Include enrolment methods (default to 1 - restore only with users),\n                                            \"role_assignments\" (int) Include role assignments  (default to 0 that is equal to no),\n                                            \"comments\" (int) Include user comments  (default to 0 that is equal to no),\n                                            \"userscompletion\" (int) Include user course completion information  (default to 0 that is equal to no),\n                                            \"logs\" (int) Include course logs  (default to 0 that is equal to no),\n                                            \"grade_histories\" (int) Include histories  (default to 0 that is equal to no)",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "the value for the option 1 (yes) or 0 (no)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_duplicate_course_request" : {
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "duplicated course category parent",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : null,
            "description" : "course to duplicate id",
            "type" : "integer",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "duplicated course full name",
            "type" : "string",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_duplicate_course_request_options_inner"
            },
            "type" : "array"
          },
          "shortname" : {
            "default" : null,
            "description" : "duplicated course short name",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "default" : 1,
            "description" : "duplicated course visible, default to yes",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "categoryid", "courseid", "fullname", "shortname" ]
      },
      "core_course_duplicate_course_200_response" : {
        "properties" : {
          "id" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "short name",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "id", "shortname" ]
      },
      "core_course_edit_module_request" : {
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "action: hide, show, stealth, duplicate, delete, moveleft, moveright, group...",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "sectionreturn" : {
            "default" : null,
            "description" : "section to return to",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "action", "id" ]
      },
      "core_course_edit_section_request" : {
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "action: hide, show, stealth, setmarker, removemarker",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "course section id",
            "type" : "integer",
            "nullable" : true
          },
          "sectionreturn" : {
            "description" : "section to return to",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "action", "id" ]
      },
      "core_course_get_activity_chooser_footer_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "ID of the course",
            "type" : "integer",
            "nullable" : true
          },
          "sectionid" : {
            "default" : null,
            "description" : "ID of the section",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "sectionid" ]
      },
      "core_course_get_activity_chooser_footer_200_response" : {
        "properties" : {
          "customcarouseltemplate" : {
            "default" : null,
            "description" : "Either \"\" or the prerendered carousel page",
            "type" : "string",
            "nullable" : true
          },
          "customfooterjs" : {
            "default" : null,
            "description" : "The path to the plugin JS file",
            "type" : "string",
            "nullable" : true
          },
          "customfootertemplate" : {
            "default" : null,
            "description" : "The prerendered footer",
            "type" : "string",
            "nullable" : true
          },
          "footer" : {
            "default" : null,
            "description" : "Is a footer being return by this request?",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "footer" ]
      },
      "core_course_get_categories_request_criteria_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "The category column to search, expected keys (value format) are:\"id\" (int) the category id,\"ids\" (string) category ids separated by commas,\"name\" (string) the category name,\"parent\" (int) the parent category id,\"idnumber\" (string) category idnumber - user must have 'moodle/category:manage' to search on idnumber,\"visible\" (int) whether the returned categories must be visible or hidden. If the key is not passed,\n                                             then the function return all categories that the user can see. - user must have 'moodle/category:manage' or 'moodle/category:viewhiddencategories' to search on visible,\"theme\" (string) only return the categories having this theme - user must have 'moodle/category:manage' to search on theme",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "the value to match",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_categories_request" : {
        "properties" : {
          "addsubcategories" : {
            "default" : 1,
            "description" : "return the sub categories infos\n                                          (1 - default) otherwise only the category info (0)",
            "type" : "boolean",
            "nullable" : true
          },
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_categories_request_criteria_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_course_get_contents_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The expected keys (value format) are:\n                                                excludemodules (bool) Do not return modules, return only the sections structure\n                                                excludecontents (bool) Do not return module contents (i.e: files inside a resource)\n                                                includestealthmodules (bool) Return stealth modules for students in a special\n                                                    section (with id -1)\n                                                sectionid (int) Return only this section\n                                                sectionnumber (int) Return only this section with number (order)\n                                                cmid (int) Return only this module information (among the whole sections structure)\n                                                modname (string) Return only modules with this name \"label, forum, etc...\"\n                                                modid (int) Return only the module with this id (to be used with modname",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "the value of the option,\n                                                                    this param is personaly validated in the external function.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_contents_request" : {
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_contents_request_options_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courseid" ]
      },
      "core_course_get_course_content_items_request" : {
        "properties" : {
          "courseid" : {
            "description" : "ID of the course",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_course_get_course_content_items_200_response_content_items_inner" : {
        "default" : null,
        "properties" : {
          "archetype" : {
            "description" : "The archetype of the module exposing the content item",
            "type" : "string",
            "nullable" : false
          },
          "componentname" : {
            "description" : "The name of the component exposing the content item",
            "type" : "string",
            "nullable" : false
          },
          "favourite" : {
            "description" : "Has the user favourited the content item",
            "type" : "boolean",
            "nullable" : false
          },
          "help" : {
            "description" : "Html description / help for the content item",
            "type" : "string",
            "nullable" : false
          },
          "icon" : {
            "description" : "Html containing the icon for the content item",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "The id of the content item",
            "type" : "integer",
            "nullable" : false
          },
          "legacyitem" : {
            "description" : "If this item was pulled from the old callback and has no item id.",
            "type" : "boolean",
            "nullable" : false
          },
          "link" : {
            "description" : "The link to the content item creation page",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "description" : "Name of the content item",
            "type" : "string",
            "nullable" : false
          },
          "purpose" : {
            "description" : "The purpose of the component exposing the content item",
            "type" : "string",
            "nullable" : false
          },
          "recommended" : {
            "description" : "Has this item been recommended",
            "type" : "boolean",
            "nullable" : false
          },
          "title" : {
            "description" : "The string title of the content item, human readable",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_course_get_course_content_items_200_response" : {
        "properties" : {
          "content_items" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_course_content_items_200_response_content_items_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "content_items" ]
      },
      "core_course_get_course_module_200_response_cm_advancedgrading_inner" : {
        "default" : null,
        "properties" : {
          "area" : {
            "default" : null,
            "description" : "Gradable area name",
            "type" : "string",
            "nullable" : true
          },
          "method" : {
            "default" : null,
            "description" : "Grading method",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_course_module_200_response_cm_outcomes_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Outcome id",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Outcome full name",
            "type" : "string",
            "nullable" : true
          },
          "scale" : {
            "default" : null,
            "description" : "Scale items",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_course_module_200_response_cm" : {
        "properties" : {
          "added" : {
            "default" : null,
            "description" : "Time added",
            "type" : "integer",
            "nullable" : true
          },
          "advancedgrading" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_course_module_200_response_cm_advancedgrading_inner"
            },
            "type" : "array"
          },
          "availability" : {
            "default" : null,
            "description" : "Availability settings",
            "type" : "string",
            "nullable" : true
          },
          "completion" : {
            "default" : null,
            "description" : "If completion is enabled",
            "type" : "integer",
            "nullable" : true
          },
          "completionexpected" : {
            "default" : null,
            "description" : "Completion time expected",
            "type" : "integer",
            "nullable" : true
          },
          "completiongradeitemnumber" : {
            "default" : null,
            "description" : "Completion grade item",
            "type" : "integer",
            "nullable" : true
          },
          "completionpassgrade" : {
            "default" : null,
            "description" : "Completion pass grade setting",
            "type" : "integer",
            "nullable" : true
          },
          "completionview" : {
            "default" : null,
            "description" : "Completion view setting",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          },
          "downloadcontent" : {
            "default" : null,
            "description" : "The download content value",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Grade (max value or scale id)",
            "type" : "number",
            "nullable" : true
          },
          "gradecat" : {
            "default" : null,
            "description" : "Grade category",
            "type" : "integer",
            "nullable" : true
          },
          "gradepass" : {
            "default" : null,
            "description" : "Grade to pass (float)",
            "type" : "string",
            "nullable" : true
          },
          "groupingid" : {
            "default" : null,
            "description" : "Grouping id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "default" : null,
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The course module id",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "Module id number",
            "type" : "string",
            "nullable" : true
          },
          "indent" : {
            "default" : null,
            "description" : "Indentation",
            "type" : "integer",
            "nullable" : true
          },
          "instance" : {
            "default" : null,
            "description" : "The activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "modname" : {
            "default" : null,
            "description" : "The module component name (forum, assign, etc..)",
            "type" : "string",
            "nullable" : true
          },
          "module" : {
            "default" : null,
            "description" : "The module type id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The activity name",
            "type" : "string",
            "nullable" : true
          },
          "outcomes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_course_module_200_response_cm_outcomes_inner"
            },
            "type" : "array"
          },
          "scale" : {
            "default" : null,
            "description" : "Scale items (if used)",
            "type" : "string",
            "nullable" : true
          },
          "score" : {
            "default" : null,
            "description" : "Score",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "default" : null,
            "description" : "The module section id",
            "type" : "integer",
            "nullable" : true
          },
          "sectionnum" : {
            "default" : null,
            "description" : "The module section number",
            "type" : "integer",
            "nullable" : true
          },
          "showdescription" : {
            "default" : null,
            "description" : "If the description is showed",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "default" : null,
            "description" : "If visible",
            "type" : "integer",
            "nullable" : true
          },
          "visibleold" : {
            "default" : null,
            "description" : "Visible old",
            "type" : "integer",
            "nullable" : true
          },
          "visibleoncoursepage" : {
            "default" : null,
            "description" : "If visible on course page",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "completion", "course", "groupingid", "groupmode", "id", "instance", "modname", "module", "name", "section", "sectionnum" ]
      },
      "core_course_get_course_module_200_response" : {
        "properties" : {
          "cm" : {
            "$ref" : "#/components/schemas/core_course_get_course_module_200_response_cm"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "cm" ]
      },
      "core_course_get_course_module_by_instance_request" : {
        "properties" : {
          "instance" : {
            "default" : null,
            "description" : "The module instance id",
            "type" : "integer",
            "nullable" : true
          },
          "module" : {
            "default" : null,
            "description" : "The module name",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "instance", "module" ]
      },
      "core_course_get_course_module_by_instance_200_response_cm_advancedgrading_inner" : {
        "properties" : {
          "area" : {
            "description" : "Gradable area name",
            "type" : "string",
            "nullable" : true
          },
          "method" : {
            "description" : "Grading method",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_course_module_by_instance_200_response_cm_outcomes_inner" : {
        "properties" : {
          "id" : {
            "description" : "Outcome id",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Outcome full name",
            "type" : "string",
            "nullable" : true
          },
          "scale" : {
            "description" : "Scale items",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_course_module_by_instance_200_response_cm" : {
        "properties" : {
          "added" : {
            "description" : "Time added",
            "type" : "integer",
            "nullable" : true
          },
          "advancedgrading" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_course_module_by_instance_200_response_cm_advancedgrading_inner"
            },
            "type" : "array"
          },
          "availability" : {
            "description" : "Availability settings",
            "type" : "string",
            "nullable" : true
          },
          "completion" : {
            "description" : "If completion is enabled",
            "type" : "integer",
            "nullable" : true
          },
          "completionexpected" : {
            "description" : "Completion time expected",
            "type" : "integer",
            "nullable" : true
          },
          "completiongradeitemnumber" : {
            "description" : "Completion grade item",
            "type" : "integer",
            "nullable" : true
          },
          "completionpassgrade" : {
            "description" : "Completion pass grade setting",
            "type" : "integer",
            "nullable" : true
          },
          "completionview" : {
            "description" : "Completion view setting",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          },
          "downloadcontent" : {
            "description" : "The download content value",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "Grade (max value or scale id)",
            "type" : "number",
            "nullable" : true
          },
          "gradecat" : {
            "description" : "Grade category",
            "type" : "integer",
            "nullable" : true
          },
          "gradepass" : {
            "description" : "Grade to pass (float)",
            "type" : "string",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Grouping id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The course module id",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "Module id number",
            "type" : "string",
            "nullable" : true
          },
          "indent" : {
            "description" : "Indentation",
            "type" : "integer",
            "nullable" : true
          },
          "instance" : {
            "description" : "The activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "modname" : {
            "description" : "The module component name (forum, assign, etc..)",
            "type" : "string",
            "nullable" : true
          },
          "module" : {
            "description" : "The module type id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "The activity name",
            "type" : "string",
            "nullable" : true
          },
          "outcomes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_course_module_by_instance_200_response_cm_outcomes_inner"
            },
            "type" : "array"
          },
          "scale" : {
            "description" : "Scale items (if used)",
            "type" : "string",
            "nullable" : true
          },
          "score" : {
            "description" : "Score",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "The module section id",
            "type" : "integer",
            "nullable" : true
          },
          "sectionnum" : {
            "description" : "The module section number",
            "type" : "integer",
            "nullable" : true
          },
          "showdescription" : {
            "description" : "If the description is showed",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "If visible",
            "type" : "integer",
            "nullable" : true
          },
          "visibleold" : {
            "description" : "Visible old",
            "type" : "integer",
            "nullable" : true
          },
          "visibleoncoursepage" : {
            "description" : "If visible on course page",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "completion", "course", "groupingid", "groupmode", "id", "instance", "modname", "module", "name", "section", "sectionnum" ]
      },
      "core_course_get_course_module_by_instance_200_response" : {
        "properties" : {
          "cm" : {
            "$ref" : "#/components/schemas/core_course_get_course_module_by_instance_200_response_cm"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "cm" ]
      },
      "core_course_get_courses_request_options" : {
        "properties" : {
          "ids" : {
            "items" : {
              "description" : "Course id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "core_course_get_courses_request" : {
        "properties" : {
          "options" : {
            "$ref" : "#/components/schemas/core_course_get_courses_request_options"
          }
        }
      },
      "core_course_get_courses_by_field_request" : {
        "properties" : {
          "field" : {
            "default" : "",
            "description" : "The field to search can be left empty for all courses or:\n                    id: course id\n                    ids: comma separated course ids\n                    shortname: course short name\n                    idnumber: course id number\n                    category: category id the course belongs to\n                ",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : "",
            "description" : "The value to match",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "core_course_get_courses_by_field_200_response_courses_inner_contacts_inner" : {
        "default" : null,
        "properties" : {
          "fullname" : {
            "default" : null,
            "description" : "contact user fullname",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "contact user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_courses_by_field_200_response_courses_inner_courseformatoptions_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Course format option name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Course format option value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_courses_by_field_200_response_courses_inner_customfields_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "The name of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "shortname" : {
            "description" : "The shortname of the custom field - to be able to build the field class in the code",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "The type of the custom field - text field, checkbox...",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "valueraw" : {
            "description" : "The raw value of the custom field",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_courses_by_field_200_response_courses_inner_filters_inner" : {
        "default" : null,
        "properties" : {
          "filter" : {
            "default" : null,
            "description" : "Filter plugin name",
            "type" : "string",
            "nullable" : true
          },
          "inheritedstate" : {
            "default" : null,
            "description" : "1 or 0 to use when localstate is set to inherit",
            "type" : "integer",
            "nullable" : true
          },
          "localstate" : {
            "default" : null,
            "description" : "Filter state: 1 for on, -1 for off, 0 if inherit",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_courses_by_field_200_response_courses_inner" : {
        "default" : null,
        "properties" : {
          "cacherev" : {
            "default" : null,
            "description" : "Cache revision number",
            "type" : "integer",
            "nullable" : true
          },
          "calendartype" : {
            "default" : null,
            "description" : "Calendar type",
            "type" : "string",
            "nullable" : true
          },
          "categoryid" : {
            "description" : "category id",
            "type" : "integer",
            "nullable" : true
          },
          "categoryname" : {
            "default" : null,
            "description" : "category name",
            "type" : "string",
            "nullable" : true
          },
          "completionnotify" : {
            "description" : "1: yes 0: no",
            "type" : "integer",
            "nullable" : true
          },
          "contacts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response_courses_inner_contacts_inner"
            },
            "type" : "array"
          },
          "courseformatoptions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response_courses_inner_courseformatoptions_inner"
            },
            "type" : "array"
          },
          "courseimage" : {
            "default" : null,
            "description" : "Course image",
            "type" : "string",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response_courses_inner_customfields_inner"
            },
            "type" : "array"
          },
          "defaultgroupingid" : {
            "default" : null,
            "description" : "default grouping id",
            "type" : "integer",
            "nullable" : true
          },
          "displayname" : {
            "default" : null,
            "description" : "course display name",
            "type" : "string",
            "nullable" : true
          },
          "enablecompletion" : {
            "default" : null,
            "description" : "Completion enabled? 1: yes 0: no",
            "type" : "integer",
            "nullable" : true
          },
          "enddate" : {
            "default" : null,
            "description" : "Timestamp when the course end",
            "type" : "integer",
            "nullable" : true
          },
          "enrollmentmethods" : {
            "items" : {
              "default" : null,
              "description" : "enrollment method",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "filters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response_courses_inner_filters_inner"
            },
            "type" : "array"
          },
          "format" : {
            "default" : null,
            "description" : "Course format: weeks, topics, social, site,..",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "course full name",
            "type" : "string",
            "nullable" : true
          },
          "groupmode" : {
            "default" : null,
            "description" : "no group, separate, visible",
            "type" : "integer",
            "nullable" : true
          },
          "groupmodeforce" : {
            "default" : null,
            "description" : "1: yes, 0: no",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "Id number",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "default" : null,
            "description" : "Forced course language",
            "type" : "string",
            "nullable" : true
          },
          "legacyfiles" : {
            "default" : null,
            "description" : "If legacy files are enabled",
            "type" : "integer",
            "nullable" : true
          },
          "marker" : {
            "default" : null,
            "description" : "Current course marker",
            "type" : "integer",
            "nullable" : true
          },
          "maxbytes" : {
            "default" : null,
            "description" : "Largest size of file that can be uploaded into",
            "type" : "integer",
            "nullable" : true
          },
          "newsitems" : {
            "default" : null,
            "description" : "Number of recent items appearing on the course page",
            "type" : "integer",
            "nullable" : true
          },
          "overviewfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "requested" : {
            "default" : null,
            "description" : "If is a requested course",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "course short name",
            "type" : "string",
            "nullable" : true
          },
          "showactivitydates" : {
            "default" : null,
            "description" : "Whether the activity dates are shown or not",
            "type" : "boolean",
            "nullable" : true
          },
          "showcompletionconditions" : {
            "default" : null,
            "description" : "Whether the activity completion conditions are shown or not",
            "type" : "boolean",
            "nullable" : true
          },
          "showgrades" : {
            "default" : null,
            "description" : "1 if grades are shown, otherwise 0",
            "type" : "integer",
            "nullable" : true
          },
          "showreports" : {
            "default" : null,
            "description" : "Are activity report shown (yes = 1, no =0)",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "default" : null,
            "description" : "Sort order in the category",
            "type" : "integer",
            "nullable" : true
          },
          "startdate" : {
            "default" : null,
            "description" : "Timestamp when the course start",
            "type" : "integer",
            "nullable" : true
          },
          "summary" : {
            "description" : "summary",
            "type" : "string",
            "nullable" : true
          },
          "summaryfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "summaryformat" : {
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "Fame of the forced theme",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Time when the course was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time  the course was updated",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "1: available to student, 0:not available",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_courses_by_field_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response_courses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "core_course_get_enrolled_courses_by_timeline_classification_request" : {
        "properties" : {
          "classification" : {
            "default" : null,
            "description" : "future, inprogress, or past",
            "type" : "string",
            "nullable" : true
          },
          "customfieldname" : {
            "default" : null,
            "description" : "Used when classification = customfield",
            "type" : "string",
            "nullable" : true
          },
          "customfieldvalue" : {
            "description" : "Used when classification = customfield",
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "default" : 0,
            "description" : "Result set limit",
            "type" : "integer",
            "nullable" : true
          },
          "offset" : {
            "default" : 0,
            "description" : "Result set offset",
            "type" : "integer",
            "nullable" : true
          },
          "searchvalue" : {
            "description" : "The value a user wishes to search against",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "default" : null,
            "description" : "Sort string",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "classification" ]
      },
      "core_course_get_enrolled_courses_by_timeline_classification_200_response_courses_inner" : {
        "default" : null,
        "properties" : {
          "coursecategory" : {
            "description" : "coursecategory",
            "type" : "string",
            "nullable" : false
          },
          "courseimage" : {
            "description" : "courseimage",
            "type" : "string",
            "nullable" : false
          },
          "enddate" : {
            "description" : "enddate",
            "type" : "integer",
            "nullable" : false
          },
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : false
          },
          "fullnamedisplay" : {
            "description" : "fullnamedisplay",
            "type" : "string",
            "nullable" : false
          },
          "hasprogress" : {
            "description" : "hasprogress",
            "type" : "boolean",
            "nullable" : false
          },
          "hidden" : {
            "description" : "hidden",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "isfavourite" : {
            "description" : "isfavourite",
            "type" : "boolean",
            "nullable" : false
          },
          "pdfexportfont" : {
            "description" : "pdfexportfont",
            "type" : "string",
            "nullable" : true
          },
          "progress" : {
            "description" : "progress",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "showactivitydates" : {
            "description" : "showactivitydates",
            "type" : "boolean",
            "nullable" : true
          },
          "showcompletionconditions" : {
            "description" : "showcompletionconditions",
            "type" : "boolean",
            "nullable" : true
          },
          "showshortname" : {
            "description" : "showshortname",
            "type" : "boolean",
            "nullable" : false
          },
          "startdate" : {
            "description" : "startdate",
            "type" : "integer",
            "nullable" : false
          },
          "summary" : {
            "description" : "summary",
            "type" : "string",
            "nullable" : true
          },
          "summaryformat" : {
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "timeaccess" : {
            "description" : "timeaccess",
            "type" : "integer",
            "nullable" : false
          },
          "viewurl" : {
            "description" : "viewurl",
            "type" : "string",
            "nullable" : false
          },
          "visible" : {
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_course_get_enrolled_courses_by_timeline_classification_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_enrolled_courses_by_timeline_classification_200_response_courses_inner"
            },
            "type" : "array"
          },
          "nextoffset" : {
            "default" : null,
            "description" : "Offset for the next request",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courses", "nextoffset" ]
      },
      "core_course_get_enrolled_courses_with_action_events_by_timeline_classification_request" : {
        "properties" : {
          "classification" : {
            "description" : "future, inprogress, or past",
            "type" : "string",
            "nullable" : true
          },
          "customfieldname" : {
            "description" : "Used when classification = customfield",
            "type" : "string",
            "nullable" : true
          },
          "customfieldvalue" : {
            "description" : "Used when classification = customfield",
            "type" : "string",
            "nullable" : true
          },
          "eventsfrom" : {
            "default" : null,
            "description" : "Optional starting timestamp for action events",
            "type" : "integer",
            "nullable" : true
          },
          "eventsto" : {
            "default" : null,
            "description" : "Optional ending timestamp for action events",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 0,
            "description" : "Result set limit",
            "type" : "integer",
            "nullable" : true
          },
          "offset" : {
            "default" : 0,
            "description" : "Result set offset",
            "type" : "integer",
            "nullable" : true
          },
          "searchvalue" : {
            "description" : "The value a user wishes to search against",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "description" : "Sort string",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "classification" ]
      },
      "core_course_get_enrolled_courses_with_action_events_by_timeline_classification_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_enrolled_courses_by_timeline_classification_200_response_courses_inner"
            },
            "type" : "array"
          },
          "morecoursesavailable" : {
            "default" : null,
            "description" : "Whether more courses with events exist within the provided parameters",
            "type" : "boolean",
            "nullable" : true
          },
          "nextoffset" : {
            "description" : "Offset for the next request",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courses", "morecoursesavailable", "nextoffset" ]
      },
      "core_course_get_enrolled_users_by_cmid_request" : {
        "properties" : {
          "cmid" : {
            "default" : null,
            "description" : "id of the course module",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "id of the group",
            "type" : "integer",
            "nullable" : true
          },
          "onlyactive" : {
            "default" : false,
            "description" : "whether to return only active users or all.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "core_course_get_enrolled_users_by_cmid_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "firstname" : {
            "description" : "The first name(s) of the user",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "The full name of the user",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          },
          "lastname" : {
            "description" : "The family name of the user",
            "type" : "string",
            "nullable" : true
          },
          "profileimage" : {
            "default" : null,
            "description" : "The location of the users larger image",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_enrolled_users_by_cmid_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_enrolled_users_by_cmid_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_course_get_module_request" : {
        "properties" : {
          "id" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "sectionreturn" : {
            "description" : "section to return to",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_course_get_recent_courses_request" : {
        "properties" : {
          "limit" : {
            "default" : 0,
            "description" : "result set limit",
            "type" : "integer",
            "nullable" : true
          },
          "offset" : {
            "default" : 0,
            "description" : "Result set offset",
            "type" : "integer",
            "nullable" : true
          },
          "sort" : {
            "description" : "Sort string",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "id of the user, default to current user",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_course_get_updates_since_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course id to check",
            "type" : "integer",
            "nullable" : true
          },
          "filter" : {
            "items" : {
              "description" : "Area name: configuration, fileareas, completion, ratings, comments,\n                                                        gradeitems, outcomes",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "since" : {
            "description" : "Check updates since this time stamp",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "since" ]
      },
      "core_course_get_updates_since_200_response_instances_inner_updates_inner" : {
        "properties" : {
          "itemids" : {
            "items" : {
              "description" : "Instance id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Name of the area updated.",
            "type" : "string",
            "nullable" : true
          },
          "timeupdated" : {
            "description" : "Last time was updated",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_updates_since_200_response_instances_inner" : {
        "default" : null,
        "properties" : {
          "contextlevel" : {
            "description" : "The context level",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Instance id",
            "type" : "integer",
            "nullable" : true
          },
          "updates" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_updates_since_200_response_instances_inner_updates_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_course_get_updates_since_200_response" : {
        "properties" : {
          "instances" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_updates_since_200_response_instances_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "instances" ]
      },
      "core_course_get_user_administration_options_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "default" : null,
              "description" : "Course id.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "courseids" ]
      },
      "core_course_get_user_administration_options_200_response_courses_inner_options_inner" : {
        "default" : null,
        "properties" : {
          "available" : {
            "default" : null,
            "description" : "Whether the option is available or not",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Option name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_user_administration_options_200_response_courses_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_user_administration_options_200_response_courses_inner_options_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_course_get_user_administration_options_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_user_administration_options_200_response_courses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "core_course_get_user_navigation_options_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "description" : "Course id.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "courseids" ]
      },
      "core_course_get_user_navigation_options_200_response_courses_inner_options_inner" : {
        "properties" : {
          "available" : {
            "description" : "Whether the option is available or not",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "description" : "Option name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_get_user_navigation_options_200_response_courses_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_user_navigation_options_200_response_courses_inner_options_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_course_get_user_navigation_options_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_user_navigation_options_200_response_courses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "core_course_import_course_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The backup option name:\n                                            \"activities\" (int) Include course activites (default to 1 that is equal to yes),\n                                            \"blocks\" (int) Include course blocks (default to 1 that is equal to yes),\n                                            \"filters\" (int) Include course filters  (default to 1 that is equal to yes)",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "the value for the option 1 (yes) or 0 (no)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_import_course_request" : {
        "properties" : {
          "deletecontent" : {
            "default" : 0,
            "description" : "whether to delete the course content where we are importing to (default to 0 = No)",
            "type" : "integer",
            "nullable" : true
          },
          "importfrom" : {
            "default" : null,
            "description" : "the id of the course we are importing from",
            "type" : "integer",
            "nullable" : true
          },
          "importto" : {
            "default" : null,
            "description" : "the id of the course we are importing to",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_import_course_request_options_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "importfrom", "importto" ]
      },
      "core_course_remove_content_item_from_user_favourites_request" : {
        "properties" : {
          "componentname" : {
            "description" : "frankenstyle name of the component to which the content item belongs",
            "type" : "string",
            "nullable" : true
          },
          "contentitemid" : {
            "default" : "",
            "description" : "id of the content item",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "componentname", "contentitemid" ]
      },
      "core_course_search_courses_request" : {
        "properties" : {
          "criterianame" : {
            "default" : null,
            "description" : "criteria name\n                                                        (search, modulelist (only admins), blocklist (only admins), tagid)",
            "type" : "string",
            "nullable" : true
          },
          "criteriavalue" : {
            "default" : null,
            "description" : "criteria value",
            "type" : "string",
            "nullable" : true
          },
          "limittoenrolled" : {
            "default" : 0,
            "description" : "limit to enrolled courses",
            "type" : "boolean",
            "nullable" : true
          },
          "onlywithcompletion" : {
            "default" : 0,
            "description" : "limit to courses where completion is enabled",
            "type" : "boolean",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "page number (0 based)",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "items per page",
            "type" : "integer",
            "nullable" : true
          },
          "requiredcapabilities" : {
            "items" : {
              "default" : null,
              "description" : "Capability string used to filter courses by permission",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "criterianame", "criteriavalue" ]
      },
      "core_course_search_courses_200_response_courses_inner_contacts_inner" : {
        "properties" : {
          "fullname" : {
            "description" : "contact user fullname",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "contact user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_search_courses_200_response_courses_inner" : {
        "default" : null,
        "properties" : {
          "categoryid" : {
            "description" : "category id",
            "type" : "integer",
            "nullable" : true
          },
          "categoryname" : {
            "description" : "category name",
            "type" : "string",
            "nullable" : true
          },
          "contacts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_search_courses_200_response_courses_inner_contacts_inner"
            },
            "type" : "array"
          },
          "courseimage" : {
            "description" : "Course image",
            "type" : "string",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response_courses_inner_customfields_inner"
            },
            "type" : "array"
          },
          "displayname" : {
            "description" : "course display name",
            "type" : "string",
            "nullable" : true
          },
          "enrollmentmethods" : {
            "items" : {
              "description" : "enrollment method",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "fullname" : {
            "description" : "course full name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "overviewfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "shortname" : {
            "description" : "course short name",
            "type" : "string",
            "nullable" : true
          },
          "showactivitydates" : {
            "description" : "Whether the activity dates are shown or not",
            "type" : "boolean",
            "nullable" : true
          },
          "showcompletionconditions" : {
            "description" : "Whether the activity completion conditions are shown or not",
            "type" : "boolean",
            "nullable" : true
          },
          "sortorder" : {
            "description" : "Sort order in the category",
            "type" : "integer",
            "nullable" : true
          },
          "summary" : {
            "description" : "summary",
            "type" : "string",
            "nullable" : true
          },
          "summaryfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "summaryformat" : {
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_search_courses_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_search_courses_200_response_courses_inner"
            },
            "type" : "array"
          },
          "total" : {
            "default" : null,
            "description" : "total course count",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses", "total" ]
      },
      "core_course_set_favourite_courses_request_courses_inner" : {
        "default" : null,
        "properties" : {
          "favourite" : {
            "default" : null,
            "description" : "favourite status",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "course ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_set_favourite_courses_request" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_set_favourite_courses_request_courses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "core_course_toggle_activity_recommendation_request" : {
        "properties" : {
          "area" : {
            "default" : null,
            "description" : "The favourite area (itemtype)",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "id of the activity or whatever",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "area", "id" ]
      },
      "core_course_toggle_activity_recommendation_200_response" : {
        "properties" : {
          "area" : {
            "description" : "The favourite area (itemtype)",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "id of the activity or whatever",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "If created or deleted",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "area", "id", "status" ]
      },
      "core_course_update_categories_request_categories_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "category description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "category id number",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "category name",
            "type" : "string",
            "nullable" : true
          },
          "parent" : {
            "default" : null,
            "description" : "parent category id",
            "type" : "integer",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "the category theme. This option must be enabled on moodle",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_update_categories_request" : {
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_update_categories_request_categories_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "categories" ]
      },
      "core_course_update_courses_request_courses_inner_courseformatoptions_inner" : {
        "properties" : {
          "name" : {
            "description" : "course format option name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "course format option value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_update_courses_request_courses_inner" : {
        "default" : null,
        "properties" : {
          "categoryid" : {
            "description" : "category id",
            "type" : "integer",
            "nullable" : true
          },
          "completionnotify" : {
            "description" : "1: yes 0: no",
            "type" : "integer",
            "nullable" : true
          },
          "courseformatoptions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_update_courses_request_courses_inner_courseformatoptions_inner"
            },
            "type" : "array"
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "defaultgroupingid" : {
            "description" : "default grouping id",
            "type" : "integer",
            "nullable" : true
          },
          "enablecompletion" : {
            "description" : "Enabled, control via completion and activity settings. Disabled,\n                                        not shown in activity settings.",
            "type" : "integer",
            "nullable" : true
          },
          "enddate" : {
            "description" : "timestamp when the course end",
            "type" : "integer",
            "nullable" : true
          },
          "forcetheme" : {
            "description" : "name of the force theme",
            "type" : "string",
            "nullable" : true
          },
          "format" : {
            "default" : null,
            "description" : "course format: weeks, topics, social, site,..",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "description" : "full name",
            "type" : "string",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "no group, separate, visible",
            "type" : "integer",
            "nullable" : true
          },
          "groupmodeforce" : {
            "description" : "1: yes, 0: no",
            "type" : "integer",
            "nullable" : true
          },
          "hiddensections" : {
            "default" : null,
            "description" : "(deprecated, use courseformatoptions) How the hidden sections in the course are\n                                        displayed to students",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the course",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "description" : "forced course language",
            "type" : "string",
            "nullable" : true
          },
          "maxbytes" : {
            "default" : null,
            "description" : "largest size of file that can be uploaded into the course",
            "type" : "integer",
            "nullable" : true
          },
          "newsitems" : {
            "default" : null,
            "description" : "number of recent items appearing on the course page",
            "type" : "integer",
            "nullable" : true
          },
          "numsections" : {
            "description" : "(deprecated, use courseformatoptions) number of weeks/topics",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "course short name",
            "type" : "string",
            "nullable" : true
          },
          "showgrades" : {
            "description" : "1 if grades are shown, otherwise 0",
            "type" : "integer",
            "nullable" : true
          },
          "showreports" : {
            "default" : null,
            "description" : "are activity report shown (yes = 1, no =0)",
            "type" : "integer",
            "nullable" : true
          },
          "startdate" : {
            "description" : "timestamp when the course start",
            "type" : "integer",
            "nullable" : true
          },
          "summary" : {
            "description" : "summary",
            "type" : "string",
            "nullable" : true
          },
          "summaryformat" : {
            "description" : "summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "1: available to student, 0:not available",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_course_update_courses_request" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_update_courses_request_courses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "core_course_view_course_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "id of the course",
            "type" : "integer",
            "nullable" : true
          },
          "sectionnumber" : {
            "default" : 0,
            "description" : "section number",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_courseformat_file_handlers_request" : {
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_courseformat_update_course_request" : {
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "action: cm_hide, cm_show, section_hide, section_show, cm_moveleft...",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "ids" : {
            "items" : {
              "default" : null,
              "description" : "Target id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "targetcmid" : {
            "default" : null,
            "description" : "Optional target cm id",
            "type" : "integer",
            "nullable" : true
          },
          "targetsectionid" : {
            "default" : null,
            "description" : "Optional target section id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "action", "courseid" ]
      },
      "core_create_userfeedback_action_record_request" : {
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "The action taken by user",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "The context id of the page the user is in",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "action", "contextid" ]
      },
      "core_customfield_create_category_request" : {
        "properties" : {
          "area" : {
            "default" : null,
            "description" : "area",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "itemid",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "area", "component", "itemid" ]
      },
      "core_customfield_delete_category_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "category ID to delete",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_customfield_delete_field_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Custom field ID to delete",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_customfield_move_category_request" : {
        "properties" : {
          "beforeid" : {
            "default" : 0,
            "description" : "Id of the category before which it needs to be moved",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Category ID to move",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "core_customfield_move_field_request" : {
        "properties" : {
          "beforeid" : {
            "default" : 0,
            "description" : "Id of the field before which it needs to be moved",
            "type" : "integer",
            "nullable" : true
          },
          "categoryid" : {
            "default" : null,
            "description" : "New parent category id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Id of the field to move",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "categoryid", "id" ]
      },
      "core_customfield_reload_template_request" : {
        "properties" : {
          "area" : {
            "description" : "area",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "itemid",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "area", "component", "itemid" ]
      },
      "core_customfield_reload_template_200_response_categories_inner_fields_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "shortname" : {
            "default" : null,
            "description" : "shortname",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "type",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_customfield_reload_template_200_response_categories_inner" : {
        "default" : null,
        "properties" : {
          "addfieldmenu" : {
            "default" : null,
            "description" : "addfieldmenu",
            "type" : "string",
            "nullable" : true
          },
          "fields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_customfield_reload_template_200_response_categories_inner_fields_inner"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : true
          },
          "nameeditable" : {
            "default" : null,
            "description" : "inplace editable name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_customfield_reload_template_200_response" : {
        "properties" : {
          "area" : {
            "description" : "area",
            "type" : "string",
            "nullable" : true
          },
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/core_customfield_reload_template_200_response_categories_inner"
            },
            "type" : "array"
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "itemid",
            "type" : "integer",
            "nullable" : true
          },
          "usescategories" : {
            "default" : null,
            "description" : "view has categories",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "area", "categories", "component", "itemid", "usescategories" ]
      },
      "core_dynamic_tabs_get_content_request" : {
        "properties" : {
          "jsondata" : {
            "default" : null,
            "description" : "Json-encoded data",
            "type" : "string",
            "nullable" : true
          },
          "tab" : {
            "default" : null,
            "description" : "Tab class",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsondata", "tab" ]
      },
      "core_dynamic_tabs_get_content_200_response" : {
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "JSON-encoded data for template",
            "type" : "string",
            "nullable" : true
          },
          "javascript" : {
            "default" : null,
            "description" : "JavaScript fragment",
            "type" : "string",
            "nullable" : true
          },
          "template" : {
            "default" : null,
            "description" : "Template name",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "content", "javascript", "template" ]
      },
      "core_enrol_get_course_enrolment_methods_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_enrol_get_enrolled_users_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "option name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "option value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_enrol_get_enrolled_users_request" : {
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_enrol_get_enrolled_users_request_options_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courseid" ]
      },
      "core_enrol_get_enrolled_users_with_capability_request_coursecapabilities_inner" : {
        "default" : null,
        "properties" : {
          "capabilities" : {
            "items" : {
              "default" : null,
              "description" : "Capability name, such as mod/forum:viewdiscussion",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "courseid" : {
            "default" : null,
            "description" : "Course ID number in the Moodle course table",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_enrol_get_enrolled_users_with_capability_request_options_inner" : {
        "properties" : {
          "name" : {
            "description" : "option name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "option value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_enrol_get_enrolled_users_with_capability_request" : {
        "properties" : {
          "coursecapabilities" : {
            "items" : {
              "$ref" : "#/components/schemas/core_enrol_get_enrolled_users_with_capability_request_coursecapabilities_inner"
            },
            "type" : "array"
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_enrol_get_enrolled_users_with_capability_request_options_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "coursecapabilities" ]
      },
      "core_enrol_get_potential_users_request" : {
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "enrolid" : {
            "default" : null,
            "description" : "enrolment id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : null,
            "description" : "Page number",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : null,
            "description" : "Number per page",
            "type" : "integer",
            "nullable" : true
          },
          "search" : {
            "default" : null,
            "description" : "query",
            "type" : "string",
            "nullable" : true
          },
          "searchanywhere" : {
            "default" : null,
            "description" : "find a match anywhere, or only at the beginning",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "enrolid", "page", "perpage", "search", "searchanywhere" ]
      },
      "core_enrol_get_users_courses_request" : {
        "properties" : {
          "returnusercount" : {
            "default" : true,
            "description" : "Include count of enrolled users for each course? This can add several seconds to the response time if a user is on several large courses, so set this to false if the value will not be used to improve performance.",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_enrol_search_users_request" : {
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "Context ID",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "description" : "Page number",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "description" : "Number per page",
            "type" : "integer",
            "nullable" : true
          },
          "search" : {
            "description" : "query",
            "type" : "string",
            "nullable" : true
          },
          "searchanywhere" : {
            "description" : "find a match anywhere, or only at the beginning",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "page", "perpage", "search", "searchanywhere" ]
      },
      "core_enrol_submit_user_enrolment_form_request" : {
        "properties" : {
          "formdata" : {
            "description" : "The data from the event form",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "formdata" ]
      },
      "core_enrol_submit_user_enrolment_form_200_response" : {
        "properties" : {
          "result" : {
            "default" : null,
            "description" : "True if the user's enrolment was successfully updated",
            "type" : "boolean",
            "nullable" : true
          },
          "validationerror" : {
            "default" : false,
            "description" : "Indicates invalid form data",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "result" ]
      },
      "core_enrol_unenrol_user_enrolment_request" : {
        "properties" : {
          "ueid" : {
            "default" : null,
            "description" : "User enrolment ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "ueid" ]
      },
      "core_enrol_unenrol_user_enrolment_200_response_errors_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "The data that failed the validation",
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "The error message",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_enrol_unenrol_user_enrolment_200_response" : {
        "properties" : {
          "errors" : {
            "items" : {
              "$ref" : "#/components/schemas/core_enrol_unenrol_user_enrolment_200_response_errors_inner"
            },
            "type" : "array"
          },
          "result" : {
            "description" : "True if the user's enrolment was successfully updated",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "errors", "result" ]
      },
      "core_fetch_notifications_request" : {
        "properties" : {
          "contextid" : {
            "description" : "Context ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "contextid" ]
      },
      "core_files_delete_draft_files_request_files_inner" : {
        "default" : null,
        "properties" : {
          "filename" : {
            "default" : null,
            "description" : "Name of the file to delete.",
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "default" : null,
            "description" : "Path to the file or directory to delete.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_files_delete_draft_files_request" : {
        "properties" : {
          "draftitemid" : {
            "default" : null,
            "description" : "Item id of the draft file area",
            "type" : "integer",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_files_delete_draft_files_request_files_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "draftitemid", "files" ]
      },
      "core_files_delete_draft_files_200_response" : {
        "properties" : {
          "parentpaths" : {
            "items" : {
              "default" : null,
              "description" : "Path to parent directory of the deleted files.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "parentpaths" ]
      },
      "core_files_get_files_request" : {
        "properties" : {
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "context id Set to -1 to use contextlevel and instanceid.",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The context level for the file location.",
            "type" : "string",
            "nullable" : true
          },
          "filearea" : {
            "default" : null,
            "description" : "file area",
            "type" : "string",
            "nullable" : true
          },
          "filename" : {
            "default" : null,
            "description" : "file name",
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "default" : null,
            "description" : "file path",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "The instance id for where the file is located.",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "description" : "associated id",
            "type" : "integer",
            "nullable" : true
          },
          "modified" : {
            "default" : null,
            "description" : "timestamp to return files changed after this time.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextid", "filearea", "filename", "filepath", "itemid" ]
      },
      "core_files_get_files_200_response_files_inner" : {
        "default" : null,
        "properties" : {
          "author" : {
            "default" : null,
            "description" : "File owner",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "type" : "integer",
            "nullable" : true
          },
          "filearea" : {
            "type" : "string",
            "nullable" : true
          },
          "filename" : {
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "type" : "string",
            "nullable" : true
          },
          "filesize" : {
            "default" : null,
            "description" : "File size",
            "type" : "integer",
            "nullable" : true
          },
          "isdir" : {
            "default" : null,
            "type" : "boolean",
            "nullable" : true
          },
          "itemid" : {
            "type" : "integer",
            "nullable" : true
          },
          "license" : {
            "default" : null,
            "description" : "File license",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "type" : "integer",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_files_get_files_200_response_parents_inner" : {
        "default" : null,
        "properties" : {
          "component" : {
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "type" : "integer",
            "nullable" : true
          },
          "filearea" : {
            "type" : "string",
            "nullable" : true
          },
          "filename" : {
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_files_get_files_200_response" : {
        "properties" : {
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_files_get_files_200_response_files_inner"
            },
            "type" : "array"
          },
          "parents" : {
            "items" : {
              "$ref" : "#/components/schemas/core_files_get_files_200_response_parents_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "files", "parents" ]
      },
      "core_files_get_unused_draft_itemid_200_response" : {
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "File area component.",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "File area context.",
            "type" : "integer",
            "nullable" : true
          },
          "filearea" : {
            "default" : null,
            "description" : "File area name.",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "File are item id.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "File area user id.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "component", "contextid", "filearea", "itemid", "userid" ]
      },
      "core_files_upload_request" : {
        "properties" : {
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "context id",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The context level to put the file in,\n                        (block, course, coursecat, system, user, module)",
            "type" : "string",
            "nullable" : true
          },
          "filearea" : {
            "description" : "file area",
            "type" : "string",
            "nullable" : true
          },
          "filecontent" : {
            "default" : null,
            "description" : "file content",
            "type" : "string",
            "nullable" : true
          },
          "filename" : {
            "description" : "file name",
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "description" : "file path",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "The Instance id of item associated\n                         with the context level",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "description" : "associated id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "component", "filearea", "filecontent", "filename", "filepath", "itemid" ]
      },
      "core_files_upload_200_response" : {
        "properties" : {
          "component" : {
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "type" : "integer",
            "nullable" : true
          },
          "filearea" : {
            "type" : "string",
            "nullable" : true
          },
          "filename" : {
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "type" : "integer",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextid", "filearea", "filename", "filepath", "itemid", "url" ]
      },
      "core_filters_get_available_in_context_request_contexts_inner" : {
        "default" : null,
        "properties" : {
          "contextlevel" : {
            "default" : null,
            "description" : "The context level where the filters are:\n                                (coursecat, course, module)",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "The instance id of item associated with the context.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_filters_get_available_in_context_request" : {
        "properties" : {
          "contexts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_filters_get_available_in_context_request_contexts_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "contexts" ]
      },
      "core_filters_get_available_in_context_200_response_filters_inner" : {
        "default" : null,
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The context id.",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The context level where the filters are:\n                                (coursecat, course, module).",
            "type" : "string",
            "nullable" : true
          },
          "filter" : {
            "default" : null,
            "description" : "Filter plugin name.",
            "type" : "string",
            "nullable" : true
          },
          "inheritedstate" : {
            "default" : null,
            "description" : "1 or 0 to use when localstate is set to inherit.",
            "type" : "integer",
            "nullable" : true
          },
          "instanceid" : {
            "description" : "The instance id of item associated with the context.",
            "type" : "integer",
            "nullable" : true
          },
          "localstate" : {
            "default" : null,
            "description" : "Filter state: 1 for on, -1 for off, 0 if inherit.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_filters_get_available_in_context_200_response" : {
        "properties" : {
          "filters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_filters_get_available_in_context_200_response_filters_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "filters" ]
      },
      "core_form_dynamic_form_request" : {
        "properties" : {
          "form" : {
            "default" : null,
            "description" : "Form class",
            "type" : "string",
            "nullable" : true
          },
          "formdata" : {
            "default" : null,
            "description" : "url-encoded form data",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "form", "formdata" ]
      },
      "core_form_dynamic_form_200_response" : {
        "properties" : {
          "data" : {
            "default" : null,
            "description" : "JSON-encoded return data from form processing method",
            "type" : "string",
            "nullable" : true
          },
          "html" : {
            "default" : null,
            "description" : "HTML fragment of the form",
            "type" : "string",
            "nullable" : true
          },
          "javascript" : {
            "default" : null,
            "description" : "JavaScript fragment of the form",
            "type" : "string",
            "nullable" : true
          },
          "submitted" : {
            "default" : null,
            "description" : "If form was submitted and validated",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "submitted" ]
      },
      "core_form_get_filetypes_browser_data_request" : {
        "properties" : {
          "allowall" : {
            "default" : true,
            "description" : "Allows to select All file types, does not apply with onlytypes are set.",
            "type" : "boolean",
            "nullable" : true
          },
          "current" : {
            "default" : "",
            "description" : "Current types that should be selected.",
            "type" : "string",
            "nullable" : true
          },
          "onlytypes" : {
            "default" : "",
            "description" : "Limit the browser to the given groups and extensions",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "core_form_get_filetypes_browser_data_200_response_groups_inner_types_inner" : {
        "default" : null,
        "properties" : {
          "ext" : {
            "default" : null,
            "description" : "The file extension associated with the file type",
            "type" : "string",
            "nullable" : true
          },
          "key" : {
            "default" : null,
            "description" : "The file type identifier",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The file type name",
            "type" : "string",
            "nullable" : true
          },
          "selected" : {
            "description" : "Should it be marked as selected",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_form_get_filetypes_browser_data_200_response_groups_inner" : {
        "default" : null,
        "properties" : {
          "expanded" : {
            "default" : null,
            "description" : "Should the group start as expanded or collapsed",
            "type" : "boolean",
            "nullable" : true
          },
          "ext" : {
            "default" : null,
            "description" : "The list of file extensions associated with the group",
            "type" : "string",
            "nullable" : true
          },
          "key" : {
            "default" : null,
            "description" : "The file type group identifier",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The file type group name",
            "type" : "string",
            "nullable" : true
          },
          "selectable" : {
            "default" : null,
            "description" : "Can it be marked as selected",
            "type" : "boolean",
            "nullable" : true
          },
          "selected" : {
            "default" : null,
            "description" : "Should it be marked as selected",
            "type" : "boolean",
            "nullable" : true
          },
          "types" : {
            "items" : {
              "$ref" : "#/components/schemas/core_form_get_filetypes_browser_data_200_response_groups_inner_types_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_form_get_filetypes_browser_data_200_response" : {
        "properties" : {
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/core_form_get_filetypes_browser_data_200_response_groups_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groups" ]
      },
      "core_get_component_strings_request" : {
        "properties" : {
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "default" : null,
            "description" : "lang",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component" ]
      },
      "core_get_fragment_request_args_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "param name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "param value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_get_fragment_request" : {
        "properties" : {
          "args" : {
            "items" : {
              "$ref" : "#/components/schemas/core_get_fragment_request_args_inner"
            },
            "type" : "array"
          },
          "callback" : {
            "default" : null,
            "description" : "Name of the callback to execute",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "Component for the callback e.g. mod_assign",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "Context ID that the fragment is from",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "callback", "component", "contextid" ]
      },
      "core_get_fragment_200_response" : {
        "properties" : {
          "html" : {
            "default" : null,
            "description" : "HTML fragment.",
            "type" : "string",
            "nullable" : true
          },
          "javascript" : {
            "description" : "JavaScript fragment",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "html", "javascript" ]
      },
      "core_get_string_request_stringparams_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "param name\n                            - if the string expect only one $a parameter then don't send this field, just send the value.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "param value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_get_string_request" : {
        "properties" : {
          "component" : {
            "default" : "moodle",
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "description" : "lang",
            "type" : "string",
            "nullable" : true
          },
          "stringid" : {
            "default" : null,
            "description" : "string identifier",
            "type" : "string",
            "nullable" : true
          },
          "stringparams" : {
            "items" : {
              "$ref" : "#/components/schemas/core_get_string_request_stringparams_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "stringid" ]
      },
      "core_get_strings_request_strings_inner_stringparams_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "param name\n                                    - if the string expect only one $a parameter then don't send this field, just send the value.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "param value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_get_strings_request_strings_inner" : {
        "default" : null,
        "properties" : {
          "component" : {
            "default" : "moodle",
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "description" : "lang",
            "type" : "string",
            "nullable" : true
          },
          "stringid" : {
            "description" : "string identifier",
            "type" : "string",
            "nullable" : true
          },
          "stringparams" : {
            "items" : {
              "$ref" : "#/components/schemas/core_get_strings_request_strings_inner_stringparams_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_get_strings_request" : {
        "properties" : {
          "strings" : {
            "items" : {
              "$ref" : "#/components/schemas/core_get_strings_request_strings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "strings" ]
      },
      "core_get_user_dates_request_timestamps_inner" : {
        "default" : null,
        "properties" : {
          "fixday" : {
            "default" : 1,
            "description" : "Remove leading zero for day",
            "type" : "integer",
            "nullable" : true
          },
          "fixhour" : {
            "default" : 1,
            "description" : "Remove leading zero for hour",
            "type" : "integer",
            "nullable" : true
          },
          "format" : {
            "default" : null,
            "description" : "format string",
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "default" : null,
            "description" : "unix timestamp",
            "type" : "integer",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "The calendar type",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_get_user_dates_request" : {
        "properties" : {
          "contextid" : {
            "default" : 0,
            "description" : "Context ID. Either use this value, or level and instanceid.",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : "",
            "description" : "Context level. To be used with instanceid.",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : 0,
            "description" : "Context instance ID. To be used with level",
            "type" : "integer",
            "nullable" : true
          },
          "timestamps" : {
            "items" : {
              "$ref" : "#/components/schemas/core_get_user_dates_request_timestamps_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "timestamps" ]
      },
      "core_get_user_dates_200_response" : {
        "properties" : {
          "dates" : {
            "items" : {
              "default" : null,
              "description" : "formatted dates strings",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "dates" ]
      },
      "core_grades_create_gradecategories_request_categories_inner_options" : {
        "properties" : {
          "aggregateonlygraded" : {
            "default" : null,
            "description" : "exclude empty grades",
            "type" : "boolean",
            "nullable" : true
          },
          "aggregateoutcomes" : {
            "default" : null,
            "description" : "aggregate outcomes",
            "type" : "boolean",
            "nullable" : true
          },
          "aggregation" : {
            "default" : null,
            "description" : "aggregation method",
            "type" : "integer",
            "nullable" : true
          },
          "aggregationcoef2" : {
            "default" : null,
            "description" : "weight coefficient",
            "type" : "string",
            "nullable" : true
          },
          "decimals" : {
            "default" : null,
            "description" : "the decimal count",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "default" : null,
            "description" : "the display type",
            "type" : "integer",
            "nullable" : true
          },
          "droplow" : {
            "default" : null,
            "description" : "drop low grades",
            "type" : "integer",
            "nullable" : true
          },
          "grademax" : {
            "default" : null,
            "description" : "the grade max",
            "type" : "integer",
            "nullable" : true
          },
          "grademin" : {
            "default" : null,
            "description" : "the grade min",
            "type" : "integer",
            "nullable" : true
          },
          "gradepass" : {
            "default" : null,
            "description" : "the grade to pass",
            "type" : "integer",
            "nullable" : true
          },
          "gradetype" : {
            "default" : null,
            "description" : "the grade type",
            "type" : "integer",
            "nullable" : true
          },
          "hiddenuntil" : {
            "default" : null,
            "description" : "grades hidden until",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "the category idnumber",
            "type" : "string",
            "nullable" : true
          },
          "iteminfo" : {
            "default" : null,
            "description" : "the category iteminfo",
            "type" : "string",
            "nullable" : true
          },
          "itemname" : {
            "default" : null,
            "description" : "the category total name",
            "type" : "string",
            "nullable" : true
          },
          "locktime" : {
            "default" : null,
            "description" : "lock grades after",
            "type" : "integer",
            "nullable" : true
          },
          "parentcategoryid" : {
            "default" : null,
            "description" : "The parent category id",
            "type" : "integer",
            "nullable" : true
          },
          "parentcategoryidnumber" : {
            "default" : null,
            "description" : "the parent category idnumber",
            "type" : "string",
            "nullable" : true
          },
          "weightoverride" : {
            "default" : null,
            "description" : "weight adjusted",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "core_grades_create_gradecategories_request_categories_inner" : {
        "default" : null,
        "description" : "Category to create",
        "properties" : {
          "fullname" : {
            "default" : null,
            "description" : "fullname of category",
            "type" : "string",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/core_grades_create_gradecategories_request_categories_inner_options"
          }
        },
        "nullable" : false
      },
      "core_grades_create_gradecategories_request" : {
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_create_gradecategories_request_categories_inner"
            },
            "type" : "array"
          },
          "courseid" : {
            "default" : null,
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "categories", "courseid" ]
      },
      "core_grades_create_gradecategories_200_response" : {
        "properties" : {
          "categoryids" : {
            "items" : {
              "default" : null,
              "description" : "created cateogry ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "categoryids" ]
      },
      "core_grades_get_enrolled_users_for_search_widget_request" : {
        "properties" : {
          "actionbaseurl" : {
            "default" : null,
            "description" : "The base URL for the user option",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "default" : null,
            "description" : "Course Id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group Id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "actionbaseurl", "courseid" ]
      },
      "core_grades_get_enrolled_users_for_search_widget_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "active" : {
            "default" : null,
            "description" : "Are we currently on this item?",
            "type" : "boolean",
            "nullable" : true
          },
          "email" : {
            "default" : null,
            "description" : "An email address - allow email as root@localhost",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "description" : "The full name of the user",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          },
          "profileimage" : {
            "description" : "The location of the users larger image",
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "default" : null,
            "description" : "The link to the user report",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_enrolled_users_for_search_widget_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_search_widget_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_grades_get_enrolled_users_for_selector_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course Id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group Id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_grades_get_enrolled_users_for_selector_200_response_users_inner_customfields_inner" : {
        "default" : null,
        "properties" : {
          "displayvalue" : {
            "default" : null,
            "description" : "The value of the custom field for display",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "The name of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "shortname" : {
            "description" : "The shortname of the custom field - to be able to build the field class in the code",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "The type of the custom field - text field, checkbox...",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the custom field (as stored in the database)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_enrolled_users_for_selector_200_response_users_inner_preferences_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The name of the preferences",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the preference",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_enrolled_users_for_selector_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "default" : null,
            "description" : "Postal address",
            "type" : "string",
            "nullable" : true
          },
          "auth" : {
            "default" : null,
            "description" : "Auth plugins include manual, ldap, etc",
            "type" : "string",
            "nullable" : true
          },
          "calendartype" : {
            "default" : null,
            "description" : "Calendar type such as \"gregorian\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "default" : null,
            "description" : "Home city of the user",
            "type" : "string",
            "nullable" : true
          },
          "confirmed" : {
            "default" : null,
            "description" : "Active user: 1 if confirmed, 0 otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "country" : {
            "default" : null,
            "description" : "Home country code of the user, such as AU or CZ",
            "type" : "string",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_selector_200_response_users_inner_customfields_inner"
            },
            "type" : "array"
          },
          "department" : {
            "default" : null,
            "description" : "department",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "default" : null,
            "description" : "User profile description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : null,
            "description" : "int format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "email" : {
            "description" : "An email address - allow email as root@localhost",
            "type" : "string",
            "nullable" : true
          },
          "firstaccess" : {
            "default" : null,
            "description" : "first access to the site (0 if never)",
            "type" : "integer",
            "nullable" : true
          },
          "firstname" : {
            "description" : "The first name(s) of the user",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "The fullname of the user",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "An arbitrary ID code number perhaps from the institution",
            "type" : "string",
            "nullable" : true
          },
          "institution" : {
            "default" : null,
            "description" : "institution",
            "type" : "string",
            "nullable" : true
          },
          "interests" : {
            "default" : null,
            "description" : "user interests (separated by commas)",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "default" : null,
            "description" : "Language code such as \"en\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "lastaccess" : {
            "default" : null,
            "description" : "last access to the site (0 if never)",
            "type" : "integer",
            "nullable" : true
          },
          "lastname" : {
            "description" : "The family name of the user",
            "type" : "string",
            "nullable" : true
          },
          "mailformat" : {
            "default" : null,
            "description" : "Mail format code is 0 for plain text, 1 for HTML etc",
            "type" : "integer",
            "nullable" : true
          },
          "phone1" : {
            "default" : null,
            "description" : "Phone 1",
            "type" : "string",
            "nullable" : true
          },
          "phone2" : {
            "default" : null,
            "description" : "Phone 2",
            "type" : "string",
            "nullable" : true
          },
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_selector_200_response_users_inner_preferences_inner"
            },
            "type" : "array"
          },
          "profileimageurl" : {
            "default" : null,
            "description" : "User image profile URL - big version",
            "type" : "string",
            "nullable" : true
          },
          "profileimageurlsmall" : {
            "default" : null,
            "description" : "User image profile URL - small version",
            "type" : "string",
            "nullable" : true
          },
          "suspended" : {
            "default" : null,
            "description" : "Suspend user account, either false to enable user login or true to disable it",
            "type" : "boolean",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "Theme name such as \"standard\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "default" : null,
            "description" : "Timezone code such as Australia/Perth, or 99 for default",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : null,
            "description" : "The username",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_enrolled_users_for_selector_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_enrolled_users_for_selector_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_grades_get_feedback_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "Grade Item ID",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "itemid", "userid" ]
      },
      "core_grades_get_feedback_200_response" : {
        "properties" : {
          "additionalfield" : {
            "default" : null,
            "description" : "Additional field for the user (email or ID number, for example)",
            "type" : "string",
            "nullable" : true
          },
          "feedbacktext" : {
            "default" : null,
            "description" : "The full feedback text",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "Students name",
            "type" : "string",
            "nullable" : true
          },
          "picture" : {
            "default" : null,
            "description" : "Students picture",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Title of the grade item that the feedback is for",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "additionalfield", "feedbacktext", "fullname", "picture", "title" ]
      },
      "core_grades_get_gradable_users_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course Id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group Id",
            "type" : "integer",
            "nullable" : true
          },
          "onlyactive" : {
            "default" : false,
            "description" : "Only active enrolment",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_grades_get_gradable_users_200_response_users_inner_customfields_inner" : {
        "default" : null,
        "properties" : {
          "displayvalue" : {
            "description" : "The value of the custom field for display",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "The name of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "shortname" : {
            "description" : "The shortname of the custom field - to be able to build the field class in the code",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "The type of the custom field - text field, checkbox...",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the custom field (as stored in the database)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_gradable_users_200_response_users_inner_preferences_inner" : {
        "properties" : {
          "name" : {
            "description" : "The name of the preferences",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the preference",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_gradable_users_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "description" : "Postal address",
            "type" : "string",
            "nullable" : true
          },
          "auth" : {
            "description" : "Auth plugins include manual, ldap, etc",
            "type" : "string",
            "nullable" : true
          },
          "calendartype" : {
            "description" : "Calendar type such as \"gregorian\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "description" : "Home city of the user",
            "type" : "string",
            "nullable" : true
          },
          "confirmed" : {
            "description" : "Active user: 1 if confirmed, 0 otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "country" : {
            "description" : "Home country code of the user, such as AU or CZ",
            "type" : "string",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response_users_inner_customfields_inner"
            },
            "type" : "array"
          },
          "department" : {
            "description" : "department",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "description" : "User profile description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "int format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "email" : {
            "description" : "An email address - allow email as root@localhost",
            "type" : "string",
            "nullable" : true
          },
          "firstaccess" : {
            "description" : "first access to the site (0 if never)",
            "type" : "integer",
            "nullable" : true
          },
          "firstname" : {
            "description" : "The first name(s) of the user",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "description" : "The fullname of the user",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "An arbitrary ID code number perhaps from the institution",
            "type" : "string",
            "nullable" : true
          },
          "institution" : {
            "description" : "institution",
            "type" : "string",
            "nullable" : true
          },
          "interests" : {
            "description" : "user interests (separated by commas)",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "description" : "Language code such as \"en\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "lastaccess" : {
            "description" : "last access to the site (0 if never)",
            "type" : "integer",
            "nullable" : true
          },
          "lastname" : {
            "description" : "The family name of the user",
            "type" : "string",
            "nullable" : true
          },
          "mailformat" : {
            "description" : "Mail format code is 0 for plain text, 1 for HTML etc",
            "type" : "integer",
            "nullable" : true
          },
          "phone1" : {
            "description" : "Phone 1",
            "type" : "string",
            "nullable" : true
          },
          "phone2" : {
            "description" : "Phone 2",
            "type" : "string",
            "nullable" : true
          },
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response_users_inner_preferences_inner"
            },
            "type" : "array"
          },
          "profileimageurl" : {
            "description" : "User image profile URL - big version",
            "type" : "string",
            "nullable" : true
          },
          "profileimageurlsmall" : {
            "description" : "User image profile URL - small version",
            "type" : "string",
            "nullable" : true
          },
          "suspended" : {
            "description" : "Suspend user account, either false to enable user login or true to disable it",
            "type" : "boolean",
            "nullable" : true
          },
          "theme" : {
            "description" : "Theme name such as \"standard\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "description" : "Timezone code such as Australia/Perth, or 99 for default",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "description" : "The username",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_gradable_users_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_grades_get_gradeitems_200_response_gradeItems_inner" : {
        "default" : null,
        "properties" : {
          "category" : {
            "default" : null,
            "description" : "The grade category of the grade item",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "An ID for the grade item",
            "type" : "string",
            "nullable" : true
          },
          "itemname" : {
            "default" : null,
            "description" : "The full name of the grade item",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_gradeitems_200_response" : {
        "properties" : {
          "gradeItems" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_gradeitems_200_response_gradeItems_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "gradeItems" ]
      },
      "core_grades_get_groups_for_search_widget_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course Id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_grades_get_groups_for_search_widget_200_response_groups_inner" : {
        "default" : null,
        "properties" : {
          "groupimageurl" : {
            "default" : null,
            "description" : "Group image URL",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "An ID for the group",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The full name of the group",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_groups_for_search_widget_200_response" : {
        "properties" : {
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_groups_for_search_widget_200_response_groups_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groups" ]
      },
      "core_grades_get_groups_for_selector_200_response_groups_inner" : {
        "properties" : {
          "groupimageurl" : {
            "description" : "Group image URL",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "An ID for the group",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "The full name of the group",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_get_groups_for_selector_200_response" : {
        "properties" : {
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_groups_for_selector_200_response_groups_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groups" ]
      },
      "core_grades_grader_gradingpanel_point_fetch_request" : {
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "The name of the component",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "The ID of the context being graded",
            "type" : "integer",
            "nullable" : true
          },
          "gradeduserid" : {
            "default" : null,
            "description" : "The ID of the user show",
            "type" : "integer",
            "nullable" : true
          },
          "itemname" : {
            "default" : null,
            "description" : "The grade item itemname being graded",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextid", "gradeduserid", "itemname" ]
      },
      "core_grades_grader_gradingpanel_point_fetch_200_response_grade" : {
        "properties" : {
          "grade" : {
            "default" : null,
            "description" : "The numeric grade",
            "type" : "number",
            "nullable" : true
          },
          "gradedby" : {
            "default" : null,
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "maxgrade" : {
            "default" : null,
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "default" : null,
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "grade", "gradedby", "maxgrade", "timecreated", "timemodified", "usergrade" ]
      },
      "core_grades_grader_gradingpanel_point_fetch_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_point_fetch_200_response_grade"
          },
          "hasgrade" : {
            "default" : null,
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "default" : null,
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "core_grades_grader_gradingpanel_point_store_request" : {
        "properties" : {
          "component" : {
            "description" : "The name of the component",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "description" : "The ID of the context being graded",
            "type" : "integer",
            "nullable" : true
          },
          "formdata" : {
            "default" : null,
            "description" : "The serialised form data representing the grade",
            "type" : "string",
            "nullable" : true
          },
          "gradeduserid" : {
            "description" : "The ID of the user show",
            "type" : "integer",
            "nullable" : true
          },
          "itemname" : {
            "description" : "The grade item itemname being graded",
            "type" : "string",
            "nullable" : true
          },
          "notifyuser" : {
            "default" : false,
            "description" : "Wheteher to notify the user or not",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextid", "formdata", "gradeduserid", "itemname" ]
      },
      "core_grades_grader_gradingpanel_point_store_200_response_grade" : {
        "properties" : {
          "grade" : {
            "description" : "The numeric grade",
            "type" : "number",
            "nullable" : true
          },
          "gradedby" : {
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "maxgrade" : {
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "grade", "gradedby", "maxgrade", "timecreated", "timemodified", "usergrade" ]
      },
      "core_grades_grader_gradingpanel_point_store_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_point_store_200_response_grade"
          },
          "hasgrade" : {
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "core_grades_grader_gradingpanel_scale_fetch_request" : {
        "properties" : {
          "component" : {
            "description" : "The name of the component",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "description" : "The ID of the context being graded",
            "type" : "integer",
            "nullable" : true
          },
          "gradeduserid" : {
            "description" : "The ID of the user show",
            "type" : "integer",
            "nullable" : true
          },
          "itemname" : {
            "description" : "The grade item itemname being graded",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextid", "gradeduserid", "itemname" ]
      },
      "core_grades_grader_gradingpanel_scale_fetch_200_response_grade_options_inner" : {
        "default" : null,
        "properties" : {
          "selected" : {
            "default" : null,
            "description" : "Whether this item is currently selected",
            "type" : "boolean",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "The description fo the option",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The grade value",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_grader_gradingpanel_scale_fetch_200_response_grade" : {
        "properties" : {
          "gradedby" : {
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "maxgrade" : {
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_fetch_200_response_grade_options_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "gradedby", "maxgrade", "options", "timecreated", "timemodified", "usergrade" ]
      },
      "core_grades_grader_gradingpanel_scale_fetch_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_fetch_200_response_grade"
          },
          "hasgrade" : {
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "core_grades_grader_gradingpanel_scale_store_request" : {
        "properties" : {
          "component" : {
            "description" : "The name of the component",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "description" : "The ID of the context being graded",
            "type" : "integer",
            "nullable" : true
          },
          "formdata" : {
            "description" : "The serialised form data representing the grade",
            "type" : "string",
            "nullable" : true
          },
          "gradeduserid" : {
            "description" : "The ID of the user show",
            "type" : "integer",
            "nullable" : true
          },
          "itemname" : {
            "description" : "The grade item itemname being graded",
            "type" : "string",
            "nullable" : true
          },
          "notifyuser" : {
            "default" : false,
            "description" : "Wheteher to notify the user or not",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextid", "formdata", "gradeduserid", "itemname" ]
      },
      "core_grades_grader_gradingpanel_scale_store_200_response_grade_options_inner" : {
        "properties" : {
          "selected" : {
            "description" : "Whether this item is currently selected",
            "type" : "boolean",
            "nullable" : true
          },
          "title" : {
            "description" : "The description fo the option",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The grade value",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_grader_gradingpanel_scale_store_200_response_grade" : {
        "properties" : {
          "gradedby" : {
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "maxgrade" : {
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_store_200_response_grade_options_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "gradedby", "maxgrade", "options", "timecreated", "timemodified", "usergrade" ]
      },
      "core_grades_grader_gradingpanel_scale_store_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/core_grades_grader_gradingpanel_scale_store_200_response_grade"
          },
          "hasgrade" : {
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "core_grades_update_grades_request_grades_inner" : {
        "default" : null,
        "properties" : {
          "grade" : {
            "default" : null,
            "description" : "Student grade",
            "type" : "number",
            "nullable" : true
          },
          "str_feedback" : {
            "default" : null,
            "description" : "A string representation of the feedback from the grader",
            "type" : "string",
            "nullable" : true
          },
          "studentid" : {
            "default" : null,
            "description" : "Student ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grades_update_grades_request_itemdetails" : {
        "properties" : {
          "deleted" : {
            "default" : null,
            "description" : "True if the grade item should be deleted",
            "type" : "boolean",
            "nullable" : true
          },
          "grademax" : {
            "default" : null,
            "description" : "Maximum grade allowed",
            "type" : "number",
            "nullable" : true
          },
          "grademin" : {
            "default" : null,
            "description" : "Minimum grade allowed",
            "type" : "number",
            "nullable" : true
          },
          "gradetype" : {
            "default" : null,
            "description" : "The type of grade (0 = none, 1 = value, 2 = scale, 3 = text)",
            "type" : "integer",
            "nullable" : true
          },
          "hidden" : {
            "default" : null,
            "description" : "True if the grade item is hidden",
            "type" : "boolean",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "Arbitrary ID provided by the module responsible for the grade item",
            "type" : "integer",
            "nullable" : true
          },
          "itemname" : {
            "default" : null,
            "description" : "The grade item name",
            "type" : "string",
            "nullable" : true
          },
          "multfactor" : {
            "default" : null,
            "description" : "Multiply all grades by this number",
            "type" : "number",
            "nullable" : true
          },
          "plusfactor" : {
            "default" : null,
            "description" : "Add this to all grades",
            "type" : "number",
            "nullable" : true
          },
          "scaleid" : {
            "default" : null,
            "description" : "The ID of the custom scale being is used",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_grades_update_grades_request" : {
        "properties" : {
          "activityid" : {
            "default" : null,
            "description" : "The activity ID",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "A component, for example mod_forum or mod_quiz",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          },
          "grades" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_update_grades_request_grades_inner"
            },
            "type" : "array"
          },
          "itemdetails" : {
            "$ref" : "#/components/schemas/core_grades_update_grades_request_itemdetails"
          },
          "itemnumber" : {
            "default" : null,
            "description" : "grade item ID number for modules that have multiple grades. Typically this is 0.",
            "type" : "integer",
            "nullable" : true
          },
          "source" : {
            "default" : null,
            "description" : "The source of the grade update",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "activityid", "component", "courseid", "itemnumber", "source" ]
      },
      "core_grading_get_definitions_request" : {
        "properties" : {
          "activeonly" : {
            "default" : 0,
            "description" : "Only the active method",
            "type" : "boolean",
            "nullable" : true
          },
          "areaname" : {
            "default" : null,
            "description" : "area name",
            "type" : "string",
            "nullable" : true
          },
          "cmids" : {
            "items" : {
              "default" : null,
              "description" : "course module id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "areaname", "cmids" ]
      },
      "core_grading_get_definitions_200_response_areas_inner_definitions_inner_guide_guide_comments_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "default" : null,
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_definitions_200_response_areas_inner_definitions_inner_guide_guide_criteria_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "descriptionmarkers" : {
            "default" : null,
            "description" : "markers description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionmarkersformat" : {
            "default" : null,
            "description" : "descriptionmarkers format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "maxscore" : {
            "default" : null,
            "description" : "maximum score",
            "type" : "number",
            "nullable" : true
          },
          "shortname" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_definitions_200_response_areas_inner_definitions_inner_guide" : {
        "properties" : {
          "guide_comments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner_definitions_inner_guide_guide_comments_inner"
            },
            "type" : "array"
          },
          "guide_criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner_definitions_inner_guide_guide_criteria_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_grading_get_definitions_200_response_areas_inner_definitions_inner_rubric_rubric_criteria_inner_levels_inner" : {
        "default" : null,
        "properties" : {
          "definition" : {
            "default" : null,
            "description" : "definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "default" : null,
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "level id",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "default" : null,
            "description" : "score",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_definitions_200_response_areas_inner_definitions_inner_rubric_rubric_criteria_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "levels" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner_definitions_inner_rubric_rubric_criteria_inner_levels_inner"
            },
            "type" : "array"
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_definitions_200_response_areas_inner_definitions_inner_rubric" : {
        "properties" : {
          "rubric_criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner_definitions_inner_rubric_rubric_criteria_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_grading_get_definitions_200_response_areas_inner_definitions_inner" : {
        "default" : null,
        "properties" : {
          "copiedfromid" : {
            "default" : null,
            "description" : "copied from id",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "guide" : {
            "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner_definitions_inner_guide"
          },
          "id" : {
            "default" : null,
            "description" : "definition id",
            "type" : "integer",
            "nullable" : true
          },
          "method" : {
            "default" : null,
            "description" : "method",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "rubric" : {
            "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner_definitions_inner_rubric"
          },
          "status" : {
            "default" : null,
            "description" : "status",
            "type" : "integer",
            "nullable" : true
          },
          "timecopied" : {
            "default" : null,
            "description" : "time copied",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "creation time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "last modified time",
            "type" : "integer",
            "nullable" : true
          },
          "usercreated" : {
            "default" : null,
            "description" : "user who created definition",
            "type" : "integer",
            "nullable" : true
          },
          "usermodified" : {
            "default" : null,
            "description" : "user who modified definition",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_definitions_200_response_areas_inner" : {
        "default" : null,
        "properties" : {
          "activemethod" : {
            "default" : null,
            "description" : "active method",
            "type" : "string",
            "nullable" : true
          },
          "areaname" : {
            "description" : "area name",
            "type" : "string",
            "nullable" : true
          },
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "component name",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "description" : "context id",
            "type" : "integer",
            "nullable" : true
          },
          "definitions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner_definitions_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_grading_get_definitions_200_response" : {
        "properties" : {
          "areas" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_definitions_200_response_areas_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "areas" ]
      },
      "core_grading_get_gradingform_instances_request" : {
        "properties" : {
          "definitionid" : {
            "description" : "definition id",
            "type" : "integer",
            "nullable" : true
          },
          "since" : {
            "default" : 0,
            "description" : "submitted since",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "definitionid" ]
      },
      "core_grading_get_gradingform_instances_200_response_instances_inner_guide_criteria_inner" : {
        "default" : null,
        "properties" : {
          "criterionid" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "filling id",
            "type" : "integer",
            "nullable" : true
          },
          "levelid" : {
            "description" : "level id",
            "type" : "integer",
            "nullable" : true
          },
          "remark" : {
            "default" : null,
            "description" : "remark",
            "type" : "string",
            "nullable" : true
          },
          "remarkformat" : {
            "default" : null,
            "description" : "remark format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "description" : "maximum score",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_gradingform_instances_200_response_instances_inner_guide" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_gradingform_instances_200_response_instances_inner_guide_criteria_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_grading_get_gradingform_instances_200_response_instances_inner_rubric_criteria_inner" : {
        "default" : null,
        "properties" : {
          "criterionid" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "filling id",
            "type" : "integer",
            "nullable" : true
          },
          "levelid" : {
            "description" : "level id",
            "type" : "integer",
            "nullable" : true
          },
          "remark" : {
            "description" : "remark",
            "type" : "string",
            "nullable" : true
          },
          "remarkformat" : {
            "description" : "remark format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_gradingform_instances_200_response_instances_inner_rubric" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_gradingform_instances_200_response_instances_inner_rubric_criteria_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_grading_get_gradingform_instances_200_response_instances_inner" : {
        "default" : null,
        "properties" : {
          "feedback" : {
            "default" : null,
            "description" : "feedback",
            "type" : "string",
            "nullable" : true
          },
          "feedbackformat" : {
            "default" : null,
            "description" : "feedback format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "guide" : {
            "$ref" : "#/components/schemas/core_grading_get_gradingform_instances_200_response_instances_inner_guide"
          },
          "id" : {
            "description" : "instance id",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "description" : "item id",
            "type" : "integer",
            "nullable" : true
          },
          "raterid" : {
            "default" : null,
            "description" : "rater id",
            "type" : "integer",
            "nullable" : true
          },
          "rawgrade" : {
            "default" : null,
            "description" : "raw grade",
            "type" : "string",
            "nullable" : true
          },
          "rubric" : {
            "$ref" : "#/components/schemas/core_grading_get_gradingform_instances_200_response_instances_inner_rubric"
          },
          "status" : {
            "description" : "status",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "modified time",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_get_gradingform_instances_200_response" : {
        "properties" : {
          "instances" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_get_gradingform_instances_200_response_instances_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "instances" ]
      },
      "core_grading_save_definitions_request_areas_inner_definitions_inner_guide_guide_comments_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_save_definitions_request_areas_inner_definitions_inner_guide_guide_criteria_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "descriptionmarkers" : {
            "description" : "markers description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionmarkersformat" : {
            "description" : "descriptionmarkers format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "maxscore" : {
            "description" : "maximum score",
            "type" : "number",
            "nullable" : true
          },
          "shortname" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_save_definitions_request_areas_inner_definitions_inner_guide" : {
        "properties" : {
          "guide_comments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner_definitions_inner_guide_guide_comments_inner"
            },
            "type" : "array"
          },
          "guide_criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner_definitions_inner_guide_guide_criteria_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_grading_save_definitions_request_areas_inner_definitions_inner_rubric_rubric_criteria_inner_levels_inner" : {
        "properties" : {
          "definition" : {
            "description" : "definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "level id",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "description" : "score",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_save_definitions_request_areas_inner_definitions_inner_rubric_rubric_criteria_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "levels" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner_definitions_inner_rubric_rubric_criteria_inner_levels_inner"
            },
            "type" : "array"
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_save_definitions_request_areas_inner_definitions_inner_rubric" : {
        "properties" : {
          "rubric_criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner_definitions_inner_rubric_rubric_criteria_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_grading_save_definitions_request_areas_inner_definitions_inner" : {
        "default" : null,
        "properties" : {
          "copiedfromid" : {
            "description" : "copied from id",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "guide" : {
            "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner_definitions_inner_guide"
          },
          "id" : {
            "description" : "definition id",
            "type" : "integer",
            "nullable" : true
          },
          "method" : {
            "description" : "method",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "rubric" : {
            "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner_definitions_inner_rubric"
          },
          "status" : {
            "description" : "status",
            "type" : "integer",
            "nullable" : true
          },
          "timecopied" : {
            "description" : "time copied",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "creation time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "last modified time",
            "type" : "integer",
            "nullable" : true
          },
          "usercreated" : {
            "description" : "user who created definition",
            "type" : "integer",
            "nullable" : true
          },
          "usermodified" : {
            "description" : "user who modified definition",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_grading_save_definitions_request_areas_inner" : {
        "default" : null,
        "properties" : {
          "activemethod" : {
            "description" : "active method",
            "type" : "string",
            "nullable" : true
          },
          "areaname" : {
            "description" : "area name",
            "type" : "string",
            "nullable" : true
          },
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "description" : "component name",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "description" : "context id",
            "type" : "integer",
            "nullable" : true
          },
          "definitions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner_definitions_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_grading_save_definitions_request" : {
        "properties" : {
          "areas" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grading_save_definitions_request_areas_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "areas" ]
      },
      "core_group_add_group_members_request_members_inner" : {
        "default" : null,
        "properties" : {
          "groupid" : {
            "default" : null,
            "description" : "group record id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_add_group_members_request" : {
        "properties" : {
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_add_group_members_request_members_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "members" ]
      },
      "core_group_assign_grouping_request_assignments_inner" : {
        "default" : null,
        "properties" : {
          "groupid" : {
            "description" : "group record id",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "default" : null,
            "description" : "grouping record id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_assign_grouping_request" : {
        "properties" : {
          "assignments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_assign_grouping_request_assignments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assignments" ]
      },
      "core_group_create_groupings_request_groupings_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "default" : null,
            "description" : "grouping description text",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "multilang compatible name, course unique",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_create_groupings_request" : {
        "properties" : {
          "groupings" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_create_groupings_request_groupings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groupings" ]
      },
      "core_group_create_groups_request_groups_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "default" : null,
            "description" : "group description text",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "enrolmentkey" : {
            "default" : null,
            "description" : "group enrol secret phrase",
            "type" : "string",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "multilang compatible name, course unique",
            "type" : "string",
            "nullable" : true
          },
          "participation" : {
            "default" : true,
            "description" : "activity participation enabled? Only for \"all\" and \"members\" visibility. Default true.",
            "type" : "boolean",
            "nullable" : true
          },
          "visibility" : {
            "default" : 0,
            "description" : "group visibility mode. 0 = Visible to all. 1 = Visible to members. 2 = See own membership. 3 = Membership is hidden. default: 0",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_create_groups_request" : {
        "properties" : {
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_create_groups_request_groups_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groups" ]
      },
      "core_group_delete_group_members_request_members_inner" : {
        "default" : null,
        "properties" : {
          "groupid" : {
            "description" : "group record id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_delete_group_members_request" : {
        "properties" : {
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_delete_group_members_request_members_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "members" ]
      },
      "core_group_delete_groupings_request" : {
        "properties" : {
          "groupingids" : {
            "items" : {
              "default" : null,
              "description" : "grouping ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "groupingids" ]
      },
      "core_group_delete_groups_request" : {
        "properties" : {
          "groupids" : {
            "items" : {
              "default" : null,
              "description" : "Group ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "groupids" ]
      },
      "core_group_get_activity_allowed_groups_request" : {
        "properties" : {
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "id of user, empty for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "core_group_get_activity_allowed_groups_200_response_groups_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "group description text",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "group record id",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "group name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_get_activity_allowed_groups_200_response" : {
        "properties" : {
          "canaccessallgroups" : {
            "default" : null,
            "description" : "Whether the user will be able to access all the activity groups.",
            "type" : "boolean",
            "nullable" : true
          },
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_get_activity_allowed_groups_200_response_groups_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groups" ]
      },
      "core_group_get_activity_groupmode_request" : {
        "properties" : {
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "core_group_get_activity_groupmode_200_response" : {
        "properties" : {
          "groupmode" : {
            "default" : null,
            "description" : "group mode:\n                                                    0 for no groups, 1 for separate groups, 2 for visible groups",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groupmode" ]
      },
      "core_group_get_course_groupings_request" : {
        "properties" : {
          "courseid" : {
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_group_get_course_user_groups_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Id of course (empty or 0 for all the courses where the user is enrolled).",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "default" : 0,
            "description" : "returns only groups in the specified grouping",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "Id of user (empty or 0 for current user).",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_group_get_course_user_groups_200_response_groups_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "group description text",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "group record id",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "group name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_get_course_user_groups_200_response" : {
        "properties" : {
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_get_course_user_groups_200_response_groups_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groups" ]
      },
      "core_group_get_group_members_request" : {
        "properties" : {
          "groupids" : {
            "items" : {
              "description" : "Group ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "groupids" ]
      },
      "core_group_get_groupings_request" : {
        "properties" : {
          "groupingids" : {
            "items" : {
              "description" : "grouping ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "returngroups" : {
            "default" : 0,
            "description" : "return associated groups",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "groupingids" ]
      },
      "core_group_unassign_grouping_request_unassignments_inner" : {
        "default" : null,
        "properties" : {
          "groupid" : {
            "description" : "group record id",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "grouping record id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_unassign_grouping_request" : {
        "properties" : {
          "unassignments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_unassign_grouping_request_unassignments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "unassignments" ]
      },
      "core_group_update_groupings_request_groupings_inner" : {
        "default" : null,
        "properties" : {
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "grouping description text",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "id of grouping",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "multilang compatible name, course unique",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_update_groupings_request" : {
        "properties" : {
          "groupings" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_update_groupings_request_groupings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groupings" ]
      },
      "core_group_update_groups_request_groups_inner" : {
        "default" : null,
        "properties" : {
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_cohort_update_cohorts_request_cohorts_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "group description text",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "enrolmentkey" : {
            "description" : "group enrol secret phrase",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of the group",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "id number",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "multilang compatible name, course unique",
            "type" : "string",
            "nullable" : true
          },
          "participation" : {
            "default" : null,
            "description" : "activity participation enabled? Only for \"all\" and \"members\" visibility",
            "type" : "boolean",
            "nullable" : true
          },
          "visibility" : {
            "default" : null,
            "description" : "group visibility mode. 0 = Visible to all. 1 = Visible to members. 2 = See own membership. 3 = Membership is hidden.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_group_update_groups_request" : {
        "properties" : {
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/core_group_update_groups_request_groups_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "groups" ]
      },
      "core_h5p_get_trusted_h5p_file_request" : {
        "properties" : {
          "copyright" : {
            "default" : 0,
            "description" : "The copyright option",
            "type" : "integer",
            "nullable" : true
          },
          "embed" : {
            "default" : 0,
            "description" : "The embed allow to copy the code to your site",
            "type" : "integer",
            "nullable" : true
          },
          "export" : {
            "default" : 0,
            "description" : "The export allow to download the package",
            "type" : "integer",
            "nullable" : true
          },
          "frame" : {
            "default" : 0,
            "description" : "The frame allow to show the bar options below the content",
            "type" : "integer",
            "nullable" : true
          },
          "url" : {
            "default" : null,
            "description" : "H5P file url.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "url" ]
      },
      "core_h5p_get_trusted_h5p_file_200_response" : {
        "properties" : {
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "files" ]
      },
      "core_message_block_user_request" : {
        "properties" : {
          "blockeduserid" : {
            "default" : null,
            "description" : "The id of the user being blocked",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user who is blocking",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "blockeduserid", "userid" ]
      },
      "core_message_confirm_contact_request_request" : {
        "properties" : {
          "requesteduserid" : {
            "default" : null,
            "description" : "The id of the user being requested",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user making the request",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "requesteduserid", "userid" ]
      },
      "core_message_create_contact_request_request" : {
        "properties" : {
          "requesteduserid" : {
            "description" : "The id of the user being requested",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The id of the user making the request",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "requesteduserid", "userid" ]
      },
      "core_message_create_contact_request_200_response_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Message id",
            "type" : "integer",
            "nullable" : true
          },
          "requesteduserid" : {
            "default" : null,
            "description" : "User to id",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User from id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id", "requesteduserid", "timecreated", "userid" ]
      },
      "core_message_create_contact_request_200_response" : {
        "properties" : {
          "request" : {
            "$ref" : "#/components/schemas/core_message_create_contact_request_200_response_request"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_message_data_for_messagearea_search_messages_request" : {
        "properties" : {
          "limitfrom" : {
            "default" : 0,
            "description" : "Limit from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "search" : {
            "default" : null,
            "description" : "The string being searched",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user who is performing the search",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "search", "userid" ]
      },
      "core_message_data_for_messagearea_search_messages_200_response_contacts_inner" : {
        "default" : null,
        "properties" : {
          "conversationid" : {
            "default" : null,
            "description" : "The id of the conversation",
            "type" : "integer",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "The user's name",
            "type" : "string",
            "nullable" : true
          },
          "isblocked" : {
            "default" : null,
            "description" : "If the user has been blocked",
            "type" : "boolean",
            "nullable" : true
          },
          "ismessaging" : {
            "default" : null,
            "description" : "If we are messaging the user",
            "type" : "boolean",
            "nullable" : true
          },
          "isonline" : {
            "default" : null,
            "description" : "The user's online status",
            "type" : "boolean",
            "nullable" : true
          },
          "isread" : {
            "default" : null,
            "description" : "If the user has read the message",
            "type" : "boolean",
            "nullable" : true
          },
          "lastmessage" : {
            "default" : null,
            "description" : "The user's last message",
            "type" : "string",
            "nullable" : true
          },
          "lastmessagedate" : {
            "default" : null,
            "description" : "Timestamp for last message",
            "type" : "integer",
            "nullable" : true
          },
          "messageid" : {
            "default" : null,
            "description" : "The unique search message id",
            "type" : "integer",
            "nullable" : true
          },
          "profileimageurl" : {
            "default" : null,
            "description" : "User picture URL",
            "type" : "string",
            "nullable" : true
          },
          "profileimageurlsmall" : {
            "default" : null,
            "description" : "Small user picture URL",
            "type" : "string",
            "nullable" : true
          },
          "sentfromcurrentuser" : {
            "default" : null,
            "description" : "Was the last message sent from the current user?",
            "type" : "boolean",
            "nullable" : true
          },
          "showonlinestatus" : {
            "default" : null,
            "description" : "Show the user's online status?",
            "type" : "boolean",
            "nullable" : true
          },
          "unreadcount" : {
            "default" : null,
            "description" : "The number of unread messages in this conversation",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user's id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_data_for_messagearea_search_messages_200_response" : {
        "properties" : {
          "contacts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_data_for_messagearea_search_messages_200_response_contacts_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "contacts" ]
      },
      "core_message_delete_contacts_request" : {
        "properties" : {
          "userid" : {
            "default" : 0,
            "description" : "The id of the user we are deleting the contacts for, 0 for the\n                    current user",
            "type" : "integer",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "default" : null,
              "description" : "User ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "userids" ]
      },
      "core_message_delete_conversations_by_id_request" : {
        "properties" : {
          "conversationids" : {
            "items" : {
              "default" : null,
              "description" : "The id of the conversation",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "userid" : {
            "default" : null,
            "description" : "The user id of who we want to delete the conversation for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conversationids", "userid" ]
      },
      "core_message_delete_message_request" : {
        "properties" : {
          "messageid" : {
            "default" : null,
            "description" : "The message id",
            "type" : "integer",
            "nullable" : true
          },
          "read" : {
            "default" : true,
            "description" : "If is a message read",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id of who we want to delete the message for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "messageid", "userid" ]
      },
      "core_message_delete_message_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the message was deleted, false otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_message_delete_message_for_all_users_request" : {
        "properties" : {
          "messageid" : {
            "description" : "The message id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id of who we want to delete the message for all users",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "messageid", "userid" ]
      },
      "core_message_get_blocked_users_request" : {
        "properties" : {
          "userid" : {
            "default" : null,
            "description" : "the user whose blocked users we want to retrieve",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_message_get_blocked_users_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "fullname" : {
            "default" : null,
            "description" : "User full name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "User ID",
            "type" : "integer",
            "nullable" : true
          },
          "profileimageurl" : {
            "description" : "User picture URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_blocked_users_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_blocked_users_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_message_get_contact_requests_request" : {
        "properties" : {
          "limitfrom" : {
            "default" : 0,
            "description" : "Limit from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user we want the requests for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_message_get_conversation_request" : {
        "properties" : {
          "conversationid" : {
            "default" : null,
            "description" : "The id of the conversation to fetch",
            "type" : "integer",
            "nullable" : true
          },
          "includecontactrequests" : {
            "default" : null,
            "description" : "Include contact requests in the members",
            "type" : "boolean",
            "nullable" : true
          },
          "includeprivacyinfo" : {
            "default" : null,
            "description" : "Include privacy info in the members",
            "type" : "boolean",
            "nullable" : true
          },
          "memberlimit" : {
            "default" : 0,
            "description" : "Limit for number of members",
            "type" : "integer",
            "nullable" : true
          },
          "memberoffset" : {
            "default" : 0,
            "description" : "Offset for member list",
            "type" : "integer",
            "nullable" : true
          },
          "messagelimit" : {
            "default" : 100,
            "description" : "Limit for number of messages",
            "type" : "integer",
            "nullable" : true
          },
          "messageoffset" : {
            "default" : 0,
            "description" : "Offset for messages list",
            "type" : "integer",
            "nullable" : true
          },
          "newestmessagesfirst" : {
            "default" : true,
            "description" : "Order messages by newest first",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user who we are viewing conversations for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conversationid", "includecontactrequests", "includeprivacyinfo", "userid" ]
      },
      "core_message_get_conversation_200_response_members_inner_contactrequests_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The id of the contact request",
            "type" : "integer",
            "nullable" : true
          },
          "requesteduserid" : {
            "default" : null,
            "description" : "The id of the user confirming the request",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "The timecreated timestamp for the contact request",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user who created the contact request",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_200_response_members_inner_conversations_inner" : {
        "default" : null,
        "description" : "information about conversation",
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Conversations id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Multilang compatible conversation name2",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "The timecreated timestamp for the conversation",
            "type" : "integer",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Conversation type: private or public",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_200_response_members_inner" : {
        "default" : null,
        "properties" : {
          "canmessage" : {
            "default" : null,
            "description" : "If the user can be messaged",
            "type" : "boolean",
            "nullable" : true
          },
          "canmessageevenifblocked" : {
            "default" : null,
            "description" : "If the user can still message even if they get blocked",
            "type" : "boolean",
            "nullable" : true
          },
          "contactrequests" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_200_response_members_inner_contactrequests_inner"
            },
            "type" : "array"
          },
          "conversations" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_200_response_members_inner_conversations_inner"
            },
            "type" : "array"
          },
          "fullname" : {
            "description" : "The user's name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          },
          "isblocked" : {
            "description" : "If the user has been blocked",
            "type" : "boolean",
            "nullable" : true
          },
          "iscontact" : {
            "default" : null,
            "description" : "Is the user a contact?",
            "type" : "boolean",
            "nullable" : true
          },
          "isdeleted" : {
            "default" : null,
            "description" : "Is the user deleted?",
            "type" : "boolean",
            "nullable" : true
          },
          "isonline" : {
            "description" : "The user's online status",
            "type" : "boolean",
            "nullable" : true
          },
          "profileimageurl" : {
            "description" : "User picture URL",
            "type" : "string",
            "nullable" : true
          },
          "profileimageurlsmall" : {
            "description" : "Small user picture URL",
            "type" : "string",
            "nullable" : true
          },
          "profileurl" : {
            "default" : null,
            "description" : "The link to the user's profile page",
            "type" : "string",
            "nullable" : true
          },
          "requirescontact" : {
            "default" : null,
            "description" : "If the user requires to be contacts",
            "type" : "boolean",
            "nullable" : true
          },
          "showonlinestatus" : {
            "description" : "Show the user's online status?",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_200_response_messages_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The id of the message",
            "type" : "integer",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "The text of the message",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "The timecreated timestamp for the message",
            "type" : "integer",
            "nullable" : true
          },
          "useridfrom" : {
            "default" : null,
            "description" : "The id of the user who sent the message",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_200_response" : {
        "properties" : {
          "candeletemessagesforallusers" : {
            "default" : false,
            "description" : "If the user can delete messages in the conversation for all users",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The conversation id",
            "type" : "integer",
            "nullable" : true
          },
          "imageurl" : {
            "default" : null,
            "description" : "A link to the conversation picture, if set",
            "type" : "string",
            "nullable" : true
          },
          "isfavourite" : {
            "default" : null,
            "description" : "If the user marked this conversation as a favourite",
            "type" : "boolean",
            "nullable" : true
          },
          "ismuted" : {
            "default" : null,
            "description" : "If the user muted this conversation",
            "type" : "boolean",
            "nullable" : true
          },
          "isread" : {
            "default" : null,
            "description" : "If the user has read all messages in the conversation",
            "type" : "boolean",
            "nullable" : true
          },
          "membercount" : {
            "default" : null,
            "description" : "Total number of conversation members",
            "type" : "integer",
            "nullable" : true
          },
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_200_response_members_inner"
            },
            "type" : "array"
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_200_response_messages_inner"
            },
            "type" : "array"
          },
          "name" : {
            "default" : null,
            "description" : "The conversation name, if set",
            "type" : "string",
            "nullable" : true
          },
          "subname" : {
            "default" : null,
            "description" : "A subtitle for the conversation name, if set",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "The type of the conversation (1=individual,2=group,3=self)",
            "type" : "integer",
            "nullable" : true
          },
          "unreadcount" : {
            "description" : "The number of unread messages in this conversation",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id", "isfavourite", "ismuted", "isread", "membercount", "members", "messages", "type" ]
      },
      "core_message_get_conversation_between_users_request" : {
        "properties" : {
          "includecontactrequests" : {
            "description" : "Include contact requests in the members",
            "type" : "boolean",
            "nullable" : true
          },
          "includeprivacyinfo" : {
            "description" : "Include privacy info in the members",
            "type" : "boolean",
            "nullable" : true
          },
          "memberlimit" : {
            "default" : 0,
            "description" : "Limit for number of members",
            "type" : "integer",
            "nullable" : true
          },
          "memberoffset" : {
            "default" : 0,
            "description" : "Offset for member list",
            "type" : "integer",
            "nullable" : true
          },
          "messagelimit" : {
            "default" : 100,
            "description" : "Limit for number of messages",
            "type" : "integer",
            "nullable" : true
          },
          "messageoffset" : {
            "default" : 0,
            "description" : "Offset for messages list",
            "type" : "integer",
            "nullable" : true
          },
          "newestmessagesfirst" : {
            "default" : true,
            "description" : "Order messages by newest first",
            "type" : "boolean",
            "nullable" : true
          },
          "otheruserid" : {
            "default" : null,
            "description" : "The other user id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The id of the user who we are viewing conversations for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "includecontactrequests", "includeprivacyinfo", "otheruserid", "userid" ]
      },
      "core_message_get_conversation_between_users_200_response_members_inner_contactrequests_inner" : {
        "properties" : {
          "id" : {
            "description" : "The id of the contact request",
            "type" : "integer",
            "nullable" : true
          },
          "requesteduserid" : {
            "description" : "The id of the user confirming the request",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The timecreated timestamp for the contact request",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The id of the user who created the contact request",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_between_users_200_response_members_inner_conversations_inner" : {
        "description" : "information about conversation",
        "properties" : {
          "id" : {
            "description" : "Conversations id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Multilang compatible conversation name2",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The timecreated timestamp for the conversation",
            "type" : "integer",
            "nullable" : true
          },
          "type" : {
            "description" : "Conversation type: private or public",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_between_users_200_response_members_inner" : {
        "default" : null,
        "properties" : {
          "canmessage" : {
            "description" : "If the user can be messaged",
            "type" : "boolean",
            "nullable" : true
          },
          "canmessageevenifblocked" : {
            "description" : "If the user can still message even if they get blocked",
            "type" : "boolean",
            "nullable" : true
          },
          "contactrequests" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_members_inner_contactrequests_inner"
            },
            "type" : "array"
          },
          "conversations" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_members_inner_conversations_inner"
            },
            "type" : "array"
          },
          "fullname" : {
            "description" : "The user's name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          },
          "isblocked" : {
            "description" : "If the user has been blocked",
            "type" : "boolean",
            "nullable" : true
          },
          "iscontact" : {
            "description" : "Is the user a contact?",
            "type" : "boolean",
            "nullable" : true
          },
          "isdeleted" : {
            "description" : "Is the user deleted?",
            "type" : "boolean",
            "nullable" : true
          },
          "isonline" : {
            "description" : "The user's online status",
            "type" : "boolean",
            "nullable" : true
          },
          "profileimageurl" : {
            "description" : "User picture URL",
            "type" : "string",
            "nullable" : true
          },
          "profileimageurlsmall" : {
            "description" : "Small user picture URL",
            "type" : "string",
            "nullable" : true
          },
          "profileurl" : {
            "description" : "The link to the user's profile page",
            "type" : "string",
            "nullable" : true
          },
          "requirescontact" : {
            "description" : "If the user requires to be contacts",
            "type" : "boolean",
            "nullable" : true
          },
          "showonlinestatus" : {
            "description" : "Show the user's online status?",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_between_users_200_response_messages_inner" : {
        "properties" : {
          "id" : {
            "description" : "The id of the message",
            "type" : "integer",
            "nullable" : true
          },
          "text" : {
            "description" : "The text of the message",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The timecreated timestamp for the message",
            "type" : "integer",
            "nullable" : true
          },
          "useridfrom" : {
            "description" : "The id of the user who sent the message",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversation_between_users_200_response" : {
        "properties" : {
          "candeletemessagesforallusers" : {
            "default" : false,
            "description" : "If the user can delete messages in the conversation for all users",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "description" : "The conversation id",
            "type" : "integer",
            "nullable" : true
          },
          "imageurl" : {
            "description" : "A link to the conversation picture, if set",
            "type" : "string",
            "nullable" : true
          },
          "isfavourite" : {
            "description" : "If the user marked this conversation as a favourite",
            "type" : "boolean",
            "nullable" : true
          },
          "ismuted" : {
            "description" : "If the user muted this conversation",
            "type" : "boolean",
            "nullable" : true
          },
          "isread" : {
            "description" : "If the user has read all messages in the conversation",
            "type" : "boolean",
            "nullable" : true
          },
          "membercount" : {
            "description" : "Total number of conversation members",
            "type" : "integer",
            "nullable" : true
          },
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_members_inner"
            },
            "type" : "array"
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_messages_inner"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "The conversation name, if set",
            "type" : "string",
            "nullable" : true
          },
          "subname" : {
            "description" : "A subtitle for the conversation name, if set",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "The type of the conversation (1=individual,2=group,3=self)",
            "type" : "integer",
            "nullable" : true
          },
          "unreadcount" : {
            "description" : "The number of unread messages in this conversation",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id", "isfavourite", "ismuted", "isread", "membercount", "members", "messages", "type" ]
      },
      "core_message_get_conversation_counts_request" : {
        "properties" : {
          "userid" : {
            "default" : 0,
            "description" : "id of the user, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_message_get_conversation_counts_200_response_types" : {
        "properties" : {
          "1" : {
            "default" : null,
            "description" : "Total number of individual conversations",
            "type" : "integer",
            "nullable" : true
          },
          "2" : {
            "default" : null,
            "description" : "Total number of group conversations",
            "type" : "integer",
            "nullable" : true
          },
          "3" : {
            "default" : null,
            "description" : "Total number of self conversations",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "1", "2", "3" ]
      },
      "core_message_get_conversation_counts_200_response" : {
        "properties" : {
          "favourites" : {
            "default" : null,
            "description" : "Total number of favourite conversations",
            "type" : "integer",
            "nullable" : true
          },
          "types" : {
            "$ref" : "#/components/schemas/core_message_get_conversation_counts_200_response_types"
          }
        },
        "required" : [ "favourites", "types" ]
      },
      "core_message_get_conversation_members_request" : {
        "properties" : {
          "conversationid" : {
            "description" : "The id of the conversation",
            "type" : "integer",
            "nullable" : true
          },
          "includecontactrequests" : {
            "default" : false,
            "description" : "Do we want to include contact requests?",
            "type" : "boolean",
            "nullable" : true
          },
          "includeprivacyinfo" : {
            "default" : false,
            "description" : "Do we want to include privacy info?",
            "type" : "boolean",
            "nullable" : true
          },
          "limitfrom" : {
            "default" : 0,
            "description" : "Limit from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user we are performing this action on behalf of",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conversationid", "userid" ]
      },
      "core_message_get_conversation_messages_request" : {
        "properties" : {
          "convid" : {
            "description" : "The conversation id",
            "type" : "integer",
            "nullable" : true
          },
          "currentuserid" : {
            "default" : null,
            "description" : "The current user's id",
            "type" : "integer",
            "nullable" : true
          },
          "limitfrom" : {
            "default" : 0,
            "description" : "Limit from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "newest" : {
            "default" : false,
            "description" : "Newest first?",
            "type" : "boolean",
            "nullable" : true
          },
          "timefrom" : {
            "default" : 0,
            "description" : "The timestamp from which the messages were created",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "convid", "currentuserid" ]
      },
      "core_message_get_conversation_messages_200_response" : {
        "properties" : {
          "id" : {
            "description" : "The conversation id",
            "type" : "integer",
            "nullable" : true
          },
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_members_inner"
            },
            "type" : "array"
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_messages_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "id", "members", "messages" ]
      },
      "core_message_get_conversations_request" : {
        "properties" : {
          "favourites" : {
            "default" : null,
            "description" : "Whether to restrict the results to contain NO favourite\n                conversations (false), ONLY favourite conversation (true), or ignore any restriction altogether (null)",
            "type" : "boolean",
            "nullable" : true
          },
          "limitfrom" : {
            "default" : 0,
            "description" : "The offset to start at",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "Limit number of conversations to this",
            "type" : "integer",
            "nullable" : true
          },
          "mergeself" : {
            "default" : false,
            "description" : "Whether to include self-conversations (true) or ONLY private\n                    conversations (false) when private conversations are requested.",
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Filter by type",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The id of the user who we are viewing conversations for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_message_get_conversations_200_response_conversations_inner" : {
        "default" : null,
        "properties" : {
          "candeletemessagesforallusers" : {
            "default" : false,
            "description" : "If the user can delete messages in the conversation for all users",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "description" : "The conversation id",
            "type" : "integer",
            "nullable" : true
          },
          "imageurl" : {
            "description" : "A link to the conversation picture, if set",
            "type" : "string",
            "nullable" : true
          },
          "isfavourite" : {
            "description" : "If the user marked this conversation as a favourite",
            "type" : "boolean",
            "nullable" : true
          },
          "ismuted" : {
            "description" : "If the user muted this conversation",
            "type" : "boolean",
            "nullable" : true
          },
          "isread" : {
            "description" : "If the user has read all messages in the conversation",
            "type" : "boolean",
            "nullable" : true
          },
          "membercount" : {
            "description" : "Total number of conversation members",
            "type" : "integer",
            "nullable" : true
          },
          "members" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_members_inner"
            },
            "type" : "array"
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_messages_inner"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "The conversation name, if set",
            "type" : "string",
            "nullable" : true
          },
          "subname" : {
            "description" : "A subtitle for the conversation name, if set",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "The type of the conversation (1=individual,2=group,3=self)",
            "type" : "integer",
            "nullable" : true
          },
          "unreadcount" : {
            "description" : "The number of unread messages in this conversation",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_conversations_200_response" : {
        "properties" : {
          "conversations" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversations_200_response_conversations_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "conversations" ]
      },
      "core_message_get_member_info_request" : {
        "properties" : {
          "includecontactrequests" : {
            "default" : false,
            "description" : "include contact requests in response",
            "type" : "boolean",
            "nullable" : true
          },
          "includeprivacyinfo" : {
            "default" : false,
            "description" : "include privacy info in response",
            "type" : "boolean",
            "nullable" : true
          },
          "referenceuserid" : {
            "default" : null,
            "description" : "id of the user",
            "type" : "integer",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "default" : null,
              "description" : "id of members to get",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "referenceuserid", "userids" ]
      },
      "core_message_get_message_processor_request" : {
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The name of the message processor",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "id of the user, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "name", "userid" ]
      },
      "core_message_get_message_processor_200_response" : {
        "properties" : {
          "systemconfigured" : {
            "default" : null,
            "description" : "Site configuration status",
            "type" : "boolean",
            "nullable" : true
          },
          "userconfigured" : {
            "default" : null,
            "description" : "The user configuration status",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "systemconfigured", "userconfigured" ]
      },
      "core_message_get_messages_request" : {
        "properties" : {
          "limitfrom" : {
            "default" : 0,
            "description" : "limit from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "limit number",
            "type" : "integer",
            "nullable" : true
          },
          "newestfirst" : {
            "default" : true,
            "description" : "true for ordering by newest first, false for oldest first",
            "type" : "boolean",
            "nullable" : true
          },
          "read" : {
            "default" : 1,
            "description" : "1 for getting read messages, 0 for unread, 2 for both",
            "type" : "integer",
            "nullable" : true
          },
          "type" : {
            "default" : "both",
            "description" : "type of message to return, expected values are: notifications, conversations and both",
            "type" : "string",
            "nullable" : true
          },
          "useridfrom" : {
            "default" : 0,
            "description" : "the user id who send the message, 0 for any user. -10 or -20 for no-reply or support user",
            "type" : "integer",
            "nullable" : true
          },
          "useridto" : {
            "default" : null,
            "description" : "the user id who received the message, 0 for any user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "useridto" ]
      },
      "core_message_get_messages_200_response_messages_inner" : {
        "default" : null,
        "description" : "message",
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "The component that generated the notification",
            "type" : "string",
            "nullable" : true
          },
          "contexturl" : {
            "default" : null,
            "description" : "Context URL",
            "type" : "string",
            "nullable" : true
          },
          "contexturlname" : {
            "default" : null,
            "description" : "Context URL link name",
            "type" : "string",
            "nullable" : true
          },
          "customdata" : {
            "default" : null,
            "description" : "Custom data to be passed to the message processor.\n                                The data here is serialised using json_encode().",
            "type" : "string",
            "nullable" : true
          },
          "eventtype" : {
            "default" : null,
            "description" : "The type of notification",
            "type" : "string",
            "nullable" : true
          },
          "fullmessage" : {
            "default" : null,
            "description" : "The message",
            "type" : "string",
            "nullable" : true
          },
          "fullmessageformat" : {
            "default" : null,
            "description" : "fullmessage format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "fullmessagehtml" : {
            "default" : null,
            "description" : "The message in html",
            "type" : "string",
            "nullable" : true
          },
          "iconurl" : {
            "default" : null,
            "description" : "URL for icon, only for notifications.",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Message id",
            "type" : "integer",
            "nullable" : true
          },
          "notification" : {
            "default" : null,
            "description" : "Is a notification?",
            "type" : "integer",
            "nullable" : true
          },
          "smallmessage" : {
            "default" : null,
            "description" : "The shorten message",
            "type" : "string",
            "nullable" : true
          },
          "subject" : {
            "default" : null,
            "description" : "The message subject",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "The message text formated",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timeread" : {
            "default" : null,
            "description" : "Time read",
            "type" : "integer",
            "nullable" : true
          },
          "userfromfullname" : {
            "default" : null,
            "description" : "User from full name",
            "type" : "string",
            "nullable" : true
          },
          "useridfrom" : {
            "description" : "User from id",
            "type" : "integer",
            "nullable" : true
          },
          "useridto" : {
            "description" : "User to id",
            "type" : "integer",
            "nullable" : true
          },
          "usertofullname" : {
            "default" : null,
            "description" : "User to full name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_messages_200_response" : {
        "properties" : {
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_messages_200_response_messages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "messages" ]
      },
      "core_message_get_received_contact_requests_count_request" : {
        "properties" : {
          "userid" : {
            "default" : null,
            "description" : "The id of the user we want to return the number of received contact requests for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_message_get_self_conversation_request" : {
        "properties" : {
          "messagelimit" : {
            "default" : 100,
            "description" : "Limit for number of messages",
            "type" : "integer",
            "nullable" : true
          },
          "messageoffset" : {
            "default" : 0,
            "description" : "Offset for messages list",
            "type" : "integer",
            "nullable" : true
          },
          "newestmessagesfirst" : {
            "default" : true,
            "description" : "Order messages by newest first",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user who we are viewing self-conversations for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_message_get_unread_conversation_counts_200_response_types" : {
        "properties" : {
          "1" : {
            "default" : null,
            "description" : "Total number of unread individual conversations",
            "type" : "integer",
            "nullable" : true
          },
          "2" : {
            "default" : null,
            "description" : "Total number of unread group conversations",
            "type" : "integer",
            "nullable" : true
          },
          "3" : {
            "default" : null,
            "description" : "Total number of unread self conversations",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "1", "2", "3" ]
      },
      "core_message_get_unread_conversation_counts_200_response" : {
        "properties" : {
          "favourites" : {
            "default" : null,
            "description" : "Total number of unread favourite conversations",
            "type" : "integer",
            "nullable" : true
          },
          "types" : {
            "$ref" : "#/components/schemas/core_message_get_unread_conversation_counts_200_response_types"
          }
        },
        "required" : [ "favourites", "types" ]
      },
      "core_message_get_unread_conversations_count_request" : {
        "properties" : {
          "useridto" : {
            "description" : "the user id who received the message, 0 for any user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "useridto" ]
      },
      "core_message_get_unread_notification_count_request" : {
        "properties" : {
          "useridto" : {
            "default" : null,
            "description" : "user id who received the notification, 0 for any user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "useridto" ]
      },
      "core_message_get_user_contacts_request" : {
        "properties" : {
          "limitfrom" : {
            "default" : 0,
            "description" : "Limit from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user who we retrieving the contacts for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner_loggedin" : {
        "properties" : {
          "checked" : {
            "default" : null,
            "description" : "Is checked?",
            "type" : "boolean",
            "nullable" : true
          },
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Name",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "checked", "displayname", "name" ]
      },
      "core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner_loggedoff" : {
        "properties" : {
          "checked" : {
            "description" : "Is checked?",
            "type" : "boolean",
            "nullable" : true
          },
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Name",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "checked", "displayname", "name" ]
      },
      "core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "default" : null,
            "description" : "Is enabled?",
            "type" : "boolean",
            "nullable" : true
          },
          "locked" : {
            "default" : null,
            "description" : "Is locked by admin?",
            "type" : "boolean",
            "nullable" : true
          },
          "lockedmessage" : {
            "default" : null,
            "description" : "Text to display if locked",
            "type" : "string",
            "nullable" : true
          },
          "loggedin" : {
            "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner_loggedin"
          },
          "loggedoff" : {
            "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner_loggedoff"
          },
          "name" : {
            "default" : null,
            "description" : "Processor name",
            "type" : "string",
            "nullable" : true
          },
          "userconfigured" : {
            "default" : null,
            "description" : "Is configured?",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "preferencekey" : {
            "default" : null,
            "description" : "Preference key",
            "type" : "string",
            "nullable" : true
          },
          "processors" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_message_get_user_message_preferences_200_response_preferences_components_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "default" : null,
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "notifications" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_message_get_user_message_preferences_200_response_preferences_processors_inner" : {
        "default" : null,
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "Context id",
            "type" : "integer",
            "nullable" : true
          },
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "hassettings" : {
            "default" : null,
            "description" : "Whether has settings",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "description" : "Processor name",
            "type" : "string",
            "nullable" : true
          },
          "userconfigured" : {
            "default" : null,
            "description" : "Whether is configured by the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_user_message_preferences_200_response_preferences" : {
        "properties" : {
          "components" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_components_inner"
            },
            "type" : "array"
          },
          "disableall" : {
            "default" : null,
            "description" : "Whether all the preferences are disabled",
            "type" : "integer",
            "nullable" : true
          },
          "processors" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_processors_inner"
            },
            "type" : "array"
          },
          "userid" : {
            "description" : "User id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "components", "disableall", "processors", "userid" ]
      },
      "core_message_get_user_message_preferences_200_response" : {
        "properties" : {
          "blocknoncontacts" : {
            "default" : null,
            "description" : "Privacy messaging setting to define who can message you",
            "type" : "integer",
            "nullable" : true
          },
          "entertosend" : {
            "default" : null,
            "description" : "User preference for using enter to send messages",
            "type" : "boolean",
            "nullable" : true
          },
          "preferences" : {
            "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "blocknoncontacts", "entertosend", "preferences" ]
      },
      "core_message_get_user_notification_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "description" : "Is enabled?",
            "type" : "boolean",
            "nullable" : true
          },
          "locked" : {
            "description" : "Is locked by admin?",
            "type" : "boolean",
            "nullable" : true
          },
          "lockedmessage" : {
            "description" : "Text to display if locked",
            "type" : "string",
            "nullable" : true
          },
          "loggedin" : {
            "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner_loggedoff"
          },
          "loggedoff" : {
            "$ref" : "#/components/schemas/core_message_get_user_message_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner_loggedoff"
          },
          "name" : {
            "description" : "Processor name",
            "type" : "string",
            "nullable" : true
          },
          "userconfigured" : {
            "description" : "Is configured?",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_user_notification_preferences_200_response_preferences_components_inner_notifications_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "preferencekey" : {
            "description" : "Preference key",
            "type" : "string",
            "nullable" : true
          },
          "processors" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_notification_preferences_200_response_preferences_components_inner_notifications_inner_processors_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_message_get_user_notification_preferences_200_response_preferences_components_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "notifications" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_notification_preferences_200_response_preferences_components_inner_notifications_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_message_get_user_notification_preferences_200_response_preferences_processors_inner" : {
        "default" : null,
        "properties" : {
          "contextid" : {
            "description" : "Context id",
            "type" : "integer",
            "nullable" : true
          },
          "displayname" : {
            "description" : "Display name",
            "type" : "string",
            "nullable" : true
          },
          "hassettings" : {
            "description" : "Whether has settings",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "description" : "Processor name",
            "type" : "string",
            "nullable" : true
          },
          "userconfigured" : {
            "description" : "Whether is configured by the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_get_user_notification_preferences_200_response_preferences" : {
        "properties" : {
          "components" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_notification_preferences_200_response_preferences_components_inner"
            },
            "type" : "array"
          },
          "disableall" : {
            "description" : "Whether all the preferences are disabled",
            "type" : "integer",
            "nullable" : true
          },
          "processors" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_user_notification_preferences_200_response_preferences_processors_inner"
            },
            "type" : "array"
          },
          "userid" : {
            "description" : "User id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "components", "disableall", "processors", "userid" ]
      },
      "core_message_get_user_notification_preferences_200_response" : {
        "properties" : {
          "preferences" : {
            "$ref" : "#/components/schemas/core_message_get_user_notification_preferences_200_response_preferences"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "preferences" ]
      },
      "core_message_mark_all_conversation_messages_as_read_request" : {
        "properties" : {
          "conversationid" : {
            "default" : null,
            "description" : "The conversation id who who we are marking the messages as read for",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id who who we are marking the messages as read for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conversationid", "userid" ]
      },
      "core_message_mark_all_notifications_as_read_request" : {
        "properties" : {
          "timecreatedto" : {
            "default" : 0,
            "description" : "mark messages created before this time as read, 0 for all messages",
            "type" : "integer",
            "nullable" : true
          },
          "useridfrom" : {
            "default" : 0,
            "description" : "the user id who send the message, 0 for any user. -10 or -20 for no-reply or support user",
            "type" : "integer",
            "nullable" : true
          },
          "useridto" : {
            "description" : "the user id who received the message, 0 for any user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "useridto" ]
      },
      "core_message_mark_message_read_request" : {
        "properties" : {
          "messageid" : {
            "default" : null,
            "description" : "id of the message in the messages table",
            "type" : "integer",
            "nullable" : true
          },
          "timeread" : {
            "default" : 0,
            "description" : "timestamp for when the message should be marked read",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "messageid" ]
      },
      "core_message_mark_message_read_200_response" : {
        "properties" : {
          "messageid" : {
            "default" : null,
            "description" : "the id of the message in the messages table",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "messageid" ]
      },
      "core_message_mark_notification_read_request" : {
        "properties" : {
          "notificationid" : {
            "default" : null,
            "description" : "id of the notification",
            "type" : "integer",
            "nullable" : true
          },
          "timeread" : {
            "default" : 0,
            "description" : "timestamp for when the notification should be marked read",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "notificationid" ]
      },
      "core_message_mark_notification_read_200_response" : {
        "properties" : {
          "notificationid" : {
            "description" : "id of the notification",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "notificationid" ]
      },
      "core_message_message_processor_config_form_request_formvalues_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "name of the form element",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "value of the form element",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_message_processor_config_form_request" : {
        "properties" : {
          "formvalues" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_message_processor_config_form_request_formvalues_inner"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "The name of the message processor",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "id of the user, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "formvalues", "name", "userid" ]
      },
      "core_message_message_search_users_request" : {
        "properties" : {
          "limitfrom" : {
            "default" : 0,
            "description" : "Limit from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 0,
            "description" : "Limit number",
            "type" : "integer",
            "nullable" : true
          },
          "search" : {
            "description" : "The string being searched",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "The id of the user who is performing the search",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "search", "userid" ]
      },
      "core_message_message_search_users_200_response" : {
        "properties" : {
          "contacts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_members_inner"
            },
            "type" : "array"
          },
          "noncontacts" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_get_conversation_between_users_200_response_members_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "contacts", "noncontacts" ]
      },
      "core_message_mute_conversations_request" : {
        "properties" : {
          "conversationids" : {
            "items" : {
              "default" : null,
              "description" : "id of the conversation",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "userid" : {
            "description" : "The id of the user who is blocking",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conversationids", "userid" ]
      },
      "core_message_search_contacts_request" : {
        "properties" : {
          "onlymycourses" : {
            "default" : false,
            "description" : "Limit search to the user's courses",
            "type" : "boolean",
            "nullable" : true
          },
          "searchtext" : {
            "default" : null,
            "description" : "String the user's fullname has to match to be found",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "searchtext" ]
      },
      "core_message_send_instant_messages_request_messages_inner" : {
        "default" : null,
        "properties" : {
          "clientmsgid" : {
            "default" : null,
            "description" : "your own client id for the message. If this id is provided, the fail message id will be returned to you",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "the text of the message",
            "type" : "string",
            "nullable" : true
          },
          "textformat" : {
            "default" : "0",
            "description" : "text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "touserid" : {
            "default" : null,
            "description" : "id of the user to send the private message",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_send_instant_messages_request" : {
        "properties" : {
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_send_instant_messages_request_messages_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "messages" ]
      },
      "core_message_send_messages_to_conversation_request_messages_inner" : {
        "default" : null,
        "properties" : {
          "text" : {
            "description" : "the text of the message",
            "type" : "string",
            "nullable" : true
          },
          "textformat" : {
            "default" : "0",
            "description" : "text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_message_send_messages_to_conversation_request" : {
        "properties" : {
          "conversationid" : {
            "default" : null,
            "description" : "id of the conversation",
            "type" : "integer",
            "nullable" : true
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/core_message_send_messages_to_conversation_request_messages_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "conversationid", "messages" ]
      },
      "core_message_set_favourite_conversations_request" : {
        "properties" : {
          "conversations" : {
            "items" : {
              "default" : 0,
              "description" : "id of the conversation",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "userid" : {
            "default" : 0,
            "description" : "id of the user, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conversations" ]
      },
      "core_message_unblock_user_request" : {
        "properties" : {
          "unblockeduserid" : {
            "default" : null,
            "description" : "The id of the user being unblocked",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user who is unblocking",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "unblockeduserid", "userid" ]
      },
      "core_message_unmute_conversations_request" : {
        "properties" : {
          "conversationids" : {
            "items" : {
              "description" : "id of the conversation",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "userid" : {
            "description" : "The id of the user who is unblocking",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conversationids", "userid" ]
      },
      "core_moodlenet_auth_check_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "issuerid" : {
            "default" : null,
            "description" : "OAuth 2 issuer ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "issuerid" ]
      },
      "core_moodlenet_auth_check_200_response" : {
        "properties" : {
          "loginurl" : {
            "default" : null,
            "description" : "Login url",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "description" : "status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "loginurl", "status" ]
      },
      "core_moodlenet_get_share_info_activity_request" : {
        "properties" : {
          "cmid" : {
            "default" : null,
            "description" : "The cmid of the activity",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "core_moodlenet_get_share_info_activity_200_response" : {
        "properties" : {
          "issuerid" : {
            "default" : null,
            "description" : "MoodleNet issuer id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "server" : {
            "default" : null,
            "description" : "MoodleNet server",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "description" : "status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "supportpageurl" : {
            "default" : null,
            "description" : "Support page URL",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Activity type",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "issuerid", "name", "server", "status", "supportpageurl", "type" ]
      },
      "core_moodlenet_get_shared_course_info_request" : {
        "properties" : {
          "courseid" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_moodlenet_get_shared_course_info_200_response" : {
        "properties" : {
          "issuerid" : {
            "description" : "MoodleNet issuer id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Course short name",
            "type" : "string",
            "nullable" : true
          },
          "server" : {
            "description" : "MoodleNet server",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "description" : "status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "supportpageurl" : {
            "description" : "Support page URL",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Course type",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "issuerid", "name", "server", "status", "supportpageurl", "type" ]
      },
      "core_moodlenet_send_activity_request" : {
        "properties" : {
          "cmid" : {
            "default" : null,
            "description" : "Course module ID",
            "type" : "integer",
            "nullable" : true
          },
          "issuerid" : {
            "description" : "OAuth 2 issuer ID",
            "type" : "integer",
            "nullable" : true
          },
          "shareformat" : {
            "default" : null,
            "description" : "Share format",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid", "issuerid", "shareformat" ]
      },
      "core_moodlenet_send_activity_200_response" : {
        "properties" : {
          "resourceurl" : {
            "default" : null,
            "description" : "Resource URL from MoodleNet",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "Status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "resourceurl", "status" ]
      },
      "core_moodlenet_send_course_request" : {
        "properties" : {
          "cmids" : {
            "items" : {
              "default" : null,
              "description" : "Course module id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "courseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "issuerid" : {
            "description" : "OAuth 2 issuer ID",
            "type" : "integer",
            "nullable" : true
          },
          "shareformat" : {
            "description" : "Share format",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "issuerid", "shareformat" ]
      },
      "core_moodlenet_send_course_200_response" : {
        "properties" : {
          "resourceurl" : {
            "description" : "Resource URL from MoodleNet",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "description" : "Status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "resourceurl", "status" ]
      },
      "core_my_view_page_request" : {
        "properties" : {
          "page" : {
            "default" : null,
            "description" : "My page to trigger a view event",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "page" ]
      },
      "core_notes_create_notes_request_notes_inner" : {
        "default" : null,
        "properties" : {
          "clientnoteid" : {
            "default" : null,
            "description" : "your own client id for the note. If this id is provided, the fail message id will be returned to you",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "default" : null,
            "description" : "course id of the note (in Moodle a note can only be created into a course, even for site and personal notes)",
            "type" : "integer",
            "nullable" : true
          },
          "format" : {
            "default" : "1",
            "description" : "text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "publishstate" : {
            "default" : null,
            "description" : "'personal', 'course' or 'site'",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "the text of the message - text or HTML",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "id of the user the note is about",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_notes_create_notes_request" : {
        "properties" : {
          "notes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_notes_create_notes_request_notes_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "notes" ]
      },
      "core_notes_delete_notes_request" : {
        "properties" : {
          "notes" : {
            "items" : {
              "default" : null,
              "description" : "ID of the note to be deleted",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "notes" ]
      },
      "core_notes_get_course_notes_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "course id, 0 for SITE",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_notes_get_course_notes_200_response_coursenotes_inner" : {
        "default" : null,
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "the content text formated",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "description" : "id of the course",
            "type" : "integer",
            "nullable" : true
          },
          "created" : {
            "default" : null,
            "description" : "time created (timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "format" : {
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "id of this note",
            "type" : "integer",
            "nullable" : true
          },
          "lastmodified" : {
            "default" : null,
            "description" : "time of last modification (timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "publishstate" : {
            "default" : null,
            "description" : "state of the note (i.e. draft, public, site) ",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "usermodified" : {
            "default" : null,
            "description" : "user id of the creator of this note",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_notes_get_course_notes_200_response_personalnotes_inner" : {
        "default" : null,
        "properties" : {
          "content" : {
            "description" : "the content text formated",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "description" : "id of the course",
            "type" : "integer",
            "nullable" : true
          },
          "created" : {
            "description" : "time created (timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "format" : {
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "id of this note",
            "type" : "integer",
            "nullable" : true
          },
          "lastmodified" : {
            "description" : "time of last modification (timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "publishstate" : {
            "description" : "state of the note (i.e. draft, public, site) ",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "usermodified" : {
            "description" : "user id of the creator of this note",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_notes_get_course_notes_200_response" : {
        "properties" : {
          "canmanagecoursenotes" : {
            "default" : null,
            "description" : "Whether the user can manage notes at the given course.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanagesystemnotes" : {
            "default" : null,
            "description" : "Whether the user can manage notes at system level.",
            "type" : "boolean",
            "nullable" : true
          },
          "coursenotes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_notes_get_course_notes_200_response_coursenotes_inner"
            },
            "type" : "array"
          },
          "personalnotes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_notes_get_course_notes_200_response_personalnotes_inner"
            },
            "type" : "array"
          },
          "sitenotes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_notes_get_course_notes_200_response_personalnotes_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_notes_get_notes_request" : {
        "properties" : {
          "notes" : {
            "items" : {
              "default" : null,
              "description" : "ID of the note to be retrieved",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "notes" ]
      },
      "core_notes_get_notes_200_response_notes_inner" : {
        "default" : null,
        "description" : "note",
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "course id of the note",
            "type" : "integer",
            "nullable" : true
          },
          "format" : {
            "default" : null,
            "description" : "text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "noteid" : {
            "default" : null,
            "description" : "id of the note",
            "type" : "integer",
            "nullable" : true
          },
          "publishstate" : {
            "description" : "'personal', 'course' or 'site'",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "description" : "the text of the message - text or HTML",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "id of the user the note is about",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_notes_get_notes_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "default" : null,
            "description" : "item is always 'note'",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "When errorcode is savedfailed the note could not be modified.When errorcode is badparam, an incorrect parameter was provided.When errorcode is badid, the note does not exist",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "default" : null,
            "description" : "errorcode can be badparam (incorrect parameter), savedfailed (could not be modified), or badid (note does not exist)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_notes_get_notes_200_response" : {
        "properties" : {
          "notes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_notes_get_notes_200_response_notes_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/core_notes_get_notes_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "notes" ]
      },
      "core_notes_update_notes_request_notes_inner" : {
        "default" : null,
        "properties" : {
          "format" : {
            "default" : "1",
            "description" : "text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "id of the note",
            "type" : "integer",
            "nullable" : true
          },
          "publishstate" : {
            "description" : "'personal', 'course' or 'site'",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "description" : "the text of the message - text or HTML",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_notes_update_notes_request" : {
        "properties" : {
          "notes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_notes_update_notes_request_notes_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_notes_view_notes_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "course id, 0 for notes at system level",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "user id, 0 means view all the user notes",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_output_load_fontawesome_icon_system_map_request" : {
        "properties" : {
          "themename" : {
            "default" : null,
            "description" : "The theme to fetch the map for",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "themename" ]
      },
      "core_output_load_template_request" : {
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "component containing the template",
            "type" : "string",
            "nullable" : true
          },
          "includecomments" : {
            "default" : false,
            "description" : "Include comments or not",
            "type" : "boolean",
            "nullable" : true
          },
          "template" : {
            "default" : null,
            "description" : "name of the template",
            "type" : "string",
            "nullable" : true
          },
          "themename" : {
            "default" : null,
            "description" : "The current theme.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "template", "themename" ]
      },
      "core_output_load_template_with_dependencies_request" : {
        "properties" : {
          "component" : {
            "description" : "component containing the template",
            "type" : "string",
            "nullable" : true
          },
          "includecomments" : {
            "default" : false,
            "description" : "Include comments or not",
            "type" : "boolean",
            "nullable" : true
          },
          "lang" : {
            "description" : "lang",
            "type" : "string",
            "nullable" : true
          },
          "template" : {
            "description" : "name of the template",
            "type" : "string",
            "nullable" : true
          },
          "themename" : {
            "description" : "The current theme.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "template", "themename" ]
      },
      "core_output_load_template_with_dependencies_200_response_strings_inner" : {
        "default" : null,
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "component containing the resource",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "name of the resource",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "resource value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_output_load_template_with_dependencies_200_response_templates_inner" : {
        "properties" : {
          "component" : {
            "description" : "component containing the resource",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "name of the resource",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "resource value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_output_load_template_with_dependencies_200_response" : {
        "properties" : {
          "strings" : {
            "items" : {
              "$ref" : "#/components/schemas/core_output_load_template_with_dependencies_200_response_strings_inner"
            },
            "type" : "array"
          },
          "templates" : {
            "items" : {
              "$ref" : "#/components/schemas/core_output_load_template_with_dependencies_200_response_templates_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "strings", "templates" ]
      },
      "core_payment_get_available_gateways_request" : {
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "Component",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "An identifier for payment area in the component",
            "type" : "integer",
            "nullable" : true
          },
          "paymentarea" : {
            "default" : null,
            "description" : "Payment area in the component",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "itemid", "paymentarea" ]
      },
      "core_question_get_random_question_summaries_request" : {
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "Category id to find random questions",
            "type" : "integer",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "Context id that the questions will be rendered in (used for exporting)",
            "type" : "integer",
            "nullable" : true
          },
          "includesubcategories" : {
            "default" : null,
            "description" : "Include the subcategories in the search",
            "type" : "boolean",
            "nullable" : true
          },
          "limit" : {
            "default" : 0,
            "description" : "Maximum number of results to return",
            "type" : "integer",
            "nullable" : true
          },
          "offset" : {
            "default" : 0,
            "description" : "Number of items to skip from the begging of the result set",
            "type" : "integer",
            "nullable" : true
          },
          "tagids" : {
            "items" : {
              "default" : null,
              "description" : "Tag id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "categoryid", "contextid", "includesubcategories", "tagids" ]
      },
      "core_question_get_random_question_summaries_200_response_questions_inner_icon" : {
        "properties" : {
          "alttext" : {
            "description" : "alttext",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "key" : {
            "description" : "key",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "alttext", "component", "key" ]
      },
      "core_question_get_random_question_summaries_200_response_questions_inner" : {
        "default" : null,
        "properties" : {
          "category" : {
            "default" : null,
            "description" : "category",
            "type" : "integer",
            "nullable" : false
          },
          "icon" : {
            "$ref" : "#/components/schemas/core_question_get_random_question_summaries_200_response_questions_inner_icon"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "parent" : {
            "description" : "parent",
            "type" : "integer",
            "nullable" : false
          },
          "qtype" : {
            "default" : null,
            "description" : "qtype",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_question_get_random_question_summaries_200_response" : {
        "properties" : {
          "questions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_question_get_random_question_summaries_200_response_questions_inner"
            },
            "type" : "array"
          },
          "totalcount" : {
            "default" : null,
            "description" : "total number of questions in result set",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "questions", "totalcount" ]
      },
      "core_question_submit_tags_form_request" : {
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The editing context id",
            "type" : "integer",
            "nullable" : true
          },
          "formdata" : {
            "default" : null,
            "description" : "The data from the tag form",
            "type" : "string",
            "nullable" : true
          },
          "questionid" : {
            "default" : null,
            "description" : "The question id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "contextid", "formdata", "questionid" ]
      },
      "core_question_submit_tags_form_200_response" : {
        "properties" : {
          "status" : {
            "description" : "status: true if success",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "status" ]
      },
      "core_question_update_flag_request" : {
        "properties" : {
          "checksum" : {
            "default" : null,
            "description" : "computed checksum with the last three arguments and\n                             the users username",
            "type" : "string",
            "nullable" : true
          },
          "newstate" : {
            "default" : null,
            "description" : "the new state of the flag. true = flagged",
            "type" : "boolean",
            "nullable" : true
          },
          "qaid" : {
            "default" : null,
            "description" : "the question_attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "qubaid" : {
            "default" : null,
            "description" : "the question usage id.",
            "type" : "integer",
            "nullable" : true
          },
          "questionid" : {
            "default" : null,
            "description" : "the question id",
            "type" : "integer",
            "nullable" : true
          },
          "slot" : {
            "default" : null,
            "description" : "the slot number within the usage",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "checksum", "newstate", "qaid", "qubaid", "questionid", "slot" ]
      },
      "core_rating_add_rating_request" : {
        "properties" : {
          "aggregation" : {
            "default" : 0,
            "description" : "agreggation method",
            "type" : "integer",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "context level: course, module, user, etc...",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "the instance id of item associated with the context level",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "description" : "associated id",
            "type" : "integer",
            "nullable" : true
          },
          "rateduserid" : {
            "default" : null,
            "description" : "rated user id",
            "type" : "integer",
            "nullable" : true
          },
          "rating" : {
            "default" : null,
            "description" : "user rating",
            "type" : "integer",
            "nullable" : true
          },
          "ratingarea" : {
            "default" : null,
            "description" : "rating area",
            "type" : "string",
            "nullable" : true
          },
          "scaleid" : {
            "default" : null,
            "description" : "scale id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextlevel", "instanceid", "itemid", "rateduserid", "rating", "ratingarea", "scaleid" ]
      },
      "core_rating_add_rating_200_response" : {
        "properties" : {
          "aggregate" : {
            "default" : null,
            "description" : "New aggregate",
            "type" : "string",
            "nullable" : true
          },
          "count" : {
            "default" : null,
            "description" : "Ratings count",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "Rating item id",
            "type" : "integer",
            "nullable" : true
          },
          "success" : {
            "default" : null,
            "description" : "Whether the rate was successfully created",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "success" ]
      },
      "core_rating_get_item_ratings_request" : {
        "properties" : {
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "contextlevel" : {
            "description" : "context level: course, module, user, etc...",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "description" : "the instance id of item associated with the context level",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "description" : "associated id",
            "type" : "integer",
            "nullable" : true
          },
          "ratingarea" : {
            "description" : "rating area",
            "type" : "string",
            "nullable" : true
          },
          "scaleid" : {
            "description" : "scale id",
            "type" : "integer",
            "nullable" : true
          },
          "sort" : {
            "default" : null,
            "description" : "sort order (firstname, rating or timemodified)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "contextlevel", "instanceid", "itemid", "ratingarea", "scaleid", "sort" ]
      },
      "core_rating_get_item_ratings_200_response_ratings_inner" : {
        "default" : null,
        "description" : "Rating",
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "rating id",
            "type" : "integer",
            "nullable" : true
          },
          "rating" : {
            "default" : null,
            "description" : "rating on scale",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "time modified (timestamp)",
            "type" : "integer",
            "nullable" : true
          },
          "userfullname" : {
            "default" : null,
            "description" : "user fullname",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "userpictureurl" : {
            "default" : null,
            "description" : "URL user picture",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_rating_get_item_ratings_200_response" : {
        "properties" : {
          "ratings" : {
            "items" : {
              "$ref" : "#/components/schemas/core_rating_get_item_ratings_200_response_ratings_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "ratings" ]
      },
      "core_reportbuilder_audiences_delete_request" : {
        "properties" : {
          "instanceid" : {
            "default" : null,
            "description" : "Audience instance id",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "default" : null,
            "description" : "Report id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "instanceid", "reportid" ]
      },
      "core_reportbuilder_can_view_system_report_request_parameters_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_can_view_system_report_request" : {
        "properties" : {
          "area" : {
            "default" : "",
            "description" : "Report area",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "default" : "",
            "description" : "Report component",
            "type" : "string",
            "nullable" : true
          },
          "context" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "itemid" : {
            "default" : 0,
            "description" : "Report item ID",
            "type" : "integer",
            "nullable" : true
          },
          "parameters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_can_view_system_report_request_parameters_inner"
            },
            "type" : "array"
          },
          "source" : {
            "default" : null,
            "description" : "Report class path",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "context", "source" ]
      },
      "core_reportbuilder_columns_add_request" : {
        "properties" : {
          "reportid" : {
            "default" : null,
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          },
          "uniqueidentifier" : {
            "default" : null,
            "description" : "Unique identifier of the column",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "reportid", "uniqueidentifier" ]
      },
      "core_reportbuilder_columns_add_200_response_sortablecolumns_inner_sorticon" : {
        "properties" : {
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "key" : {
            "description" : "key",
            "type" : "string",
            "nullable" : false
          },
          "title" : {
            "default" : null,
            "description" : "title",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "component", "key", "title" ]
      },
      "core_reportbuilder_columns_add_200_response_sortablecolumns_inner" : {
        "default" : null,
        "properties" : {
          "heading" : {
            "default" : null,
            "description" : "heading",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "movetitle" : {
            "default" : null,
            "description" : "movetitle",
            "type" : "string",
            "nullable" : false
          },
          "sortdirection" : {
            "default" : null,
            "description" : "sortdirection",
            "type" : "integer",
            "nullable" : false
          },
          "sortenabled" : {
            "default" : null,
            "description" : "sortenabled",
            "type" : "boolean",
            "nullable" : false
          },
          "sortenabledtitle" : {
            "default" : null,
            "description" : "sortenabledtitle",
            "type" : "string",
            "nullable" : false
          },
          "sorticon" : {
            "$ref" : "#/components/schemas/core_reportbuilder_columns_add_200_response_sortablecolumns_inner_sorticon"
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "title" : {
            "description" : "title",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_columns_add_200_response" : {
        "properties" : {
          "hassortablecolumns" : {
            "default" : null,
            "description" : "hassortablecolumns",
            "type" : "boolean",
            "nullable" : false
          },
          "helpicon" : {
            "default" : null,
            "description" : "helpicon",
            "type" : "string",
            "nullable" : false
          },
          "sortablecolumns" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_columns_add_200_response_sortablecolumns_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "hassortablecolumns", "helpicon", "sortablecolumns" ]
      },
      "core_reportbuilder_columns_delete_request" : {
        "properties" : {
          "columnid" : {
            "default" : null,
            "description" : "Column ID",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "columnid", "reportid" ]
      },
      "core_reportbuilder_columns_delete_200_response_sortablecolumns_inner_sorticon" : {
        "properties" : {
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "key" : {
            "description" : "key",
            "type" : "string",
            "nullable" : false
          },
          "title" : {
            "description" : "title",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "component", "key", "title" ]
      },
      "core_reportbuilder_columns_delete_200_response_sortablecolumns_inner" : {
        "default" : null,
        "properties" : {
          "heading" : {
            "description" : "heading",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "movetitle" : {
            "description" : "movetitle",
            "type" : "string",
            "nullable" : false
          },
          "sortdirection" : {
            "description" : "sortdirection",
            "type" : "integer",
            "nullable" : false
          },
          "sortenabled" : {
            "description" : "sortenabled",
            "type" : "boolean",
            "nullable" : false
          },
          "sortenabledtitle" : {
            "description" : "sortenabledtitle",
            "type" : "string",
            "nullable" : false
          },
          "sorticon" : {
            "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_200_response_sortablecolumns_inner_sorticon"
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "title" : {
            "description" : "title",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_columns_delete_200_response" : {
        "properties" : {
          "hassortablecolumns" : {
            "description" : "hassortablecolumns",
            "type" : "boolean",
            "nullable" : false
          },
          "helpicon" : {
            "description" : "helpicon",
            "type" : "string",
            "nullable" : false
          },
          "sortablecolumns" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_200_response_sortablecolumns_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "hassortablecolumns", "helpicon", "sortablecolumns" ]
      },
      "core_reportbuilder_columns_reorder_request" : {
        "properties" : {
          "columnid" : {
            "description" : "Column ID",
            "type" : "integer",
            "nullable" : true
          },
          "position" : {
            "default" : null,
            "description" : "New column position",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "columnid", "position", "reportid" ]
      },
      "core_reportbuilder_columns_sort_get_request" : {
        "properties" : {
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "reportid" ]
      },
      "core_reportbuilder_columns_sort_reorder_request" : {
        "properties" : {
          "columnid" : {
            "description" : "Column ID",
            "type" : "integer",
            "nullable" : true
          },
          "position" : {
            "default" : null,
            "description" : "New column sort position",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "columnid", "position", "reportid" ]
      },
      "core_reportbuilder_columns_sort_toggle_request" : {
        "properties" : {
          "columnid" : {
            "description" : "Column ID",
            "type" : "integer",
            "nullable" : true
          },
          "direction" : {
            "default" : 4,
            "description" : "Sort direction",
            "type" : "integer",
            "nullable" : true
          },
          "enabled" : {
            "default" : null,
            "description" : "Sort enabled",
            "type" : "boolean",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "columnid", "enabled", "reportid" ]
      },
      "core_reportbuilder_conditions_add_request" : {
        "properties" : {
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          },
          "uniqueidentifier" : {
            "default" : null,
            "description" : "Unique identifier of the condition",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "reportid", "uniqueidentifier" ]
      },
      "core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup_values_inner" : {
        "default" : null,
        "properties" : {
          "value" : {
            "default" : null,
            "description" : "value",
            "type" : "string",
            "nullable" : false
          },
          "visiblename" : {
            "default" : null,
            "description" : "visiblename",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup" : {
        "properties" : {
          "text" : {
            "default" : null,
            "description" : "text",
            "type" : "string",
            "nullable" : false
          },
          "values" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup_values_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "text", "values" ]
      },
      "core_reportbuilder_conditions_add_200_response_availableconditions_inner" : {
        "default" : null,
        "properties" : {
          "optiongroup" : {
            "$ref" : "#/components/schemas/core_reportbuilder_conditions_add_200_response_availableconditions_inner_optiongroup"
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_conditions_add_200_response" : {
        "properties" : {
          "activeconditionsform" : {
            "default" : null,
            "description" : "activeconditionsform",
            "type" : "string",
            "nullable" : false
          },
          "availableconditions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_conditions_add_200_response_availableconditions_inner"
            },
            "type" : "array"
          },
          "hasactiveconditions" : {
            "default" : null,
            "description" : "hasactiveconditions",
            "type" : "boolean",
            "nullable" : false
          },
          "hasavailableconditions" : {
            "default" : null,
            "description" : "hasavailableconditions",
            "type" : "boolean",
            "nullable" : false
          },
          "helpicon" : {
            "description" : "helpicon",
            "type" : "string",
            "nullable" : false
          },
          "javascript" : {
            "default" : null,
            "description" : "javascript",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "activeconditionsform", "availableconditions", "hasactiveconditions", "hasavailableconditions", "helpicon" ]
      },
      "core_reportbuilder_conditions_delete_request" : {
        "properties" : {
          "conditionid" : {
            "default" : null,
            "description" : "Condition ID",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conditionid", "reportid" ]
      },
      "core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup_values_inner" : {
        "properties" : {
          "value" : {
            "description" : "value",
            "type" : "string",
            "nullable" : false
          },
          "visiblename" : {
            "description" : "visiblename",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup" : {
        "properties" : {
          "text" : {
            "description" : "text",
            "type" : "string",
            "nullable" : false
          },
          "values" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup_values_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "text", "values" ]
      },
      "core_reportbuilder_conditions_delete_200_response_availableconditions_inner" : {
        "properties" : {
          "optiongroup" : {
            "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response_availableconditions_inner_optiongroup"
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_conditions_delete_200_response" : {
        "properties" : {
          "activeconditionsform" : {
            "description" : "activeconditionsform",
            "type" : "string",
            "nullable" : false
          },
          "availableconditions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response_availableconditions_inner"
            },
            "type" : "array"
          },
          "hasactiveconditions" : {
            "description" : "hasactiveconditions",
            "type" : "boolean",
            "nullable" : false
          },
          "hasavailableconditions" : {
            "description" : "hasavailableconditions",
            "type" : "boolean",
            "nullable" : false
          },
          "helpicon" : {
            "description" : "helpicon",
            "type" : "string",
            "nullable" : false
          },
          "javascript" : {
            "description" : "javascript",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "activeconditionsform", "availableconditions", "hasactiveconditions", "hasavailableconditions", "helpicon" ]
      },
      "core_reportbuilder_conditions_reorder_request" : {
        "properties" : {
          "conditionid" : {
            "description" : "Condition ID",
            "type" : "integer",
            "nullable" : true
          },
          "position" : {
            "default" : null,
            "description" : "New condition position",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "conditionid", "position", "reportid" ]
      },
      "core_reportbuilder_filters_add_request" : {
        "properties" : {
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          },
          "uniqueidentifier" : {
            "default" : null,
            "description" : "Unique identifier of the filter",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "reportid", "uniqueidentifier" ]
      },
      "core_reportbuilder_filters_add_200_response_activefilters_inner" : {
        "default" : null,
        "properties" : {
          "entityname" : {
            "default" : null,
            "description" : "entityname",
            "type" : "string",
            "nullable" : false
          },
          "heading" : {
            "description" : "heading",
            "type" : "string",
            "nullable" : false
          },
          "headingeditable" : {
            "default" : null,
            "description" : "headingeditable",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "movetitle" : {
            "description" : "movetitle",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_filters_add_200_response" : {
        "properties" : {
          "activefilters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_filters_add_200_response_activefilters_inner"
            },
            "type" : "array"
          },
          "availablefilters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response_availableconditions_inner"
            },
            "type" : "array"
          },
          "hasactivefilters" : {
            "default" : null,
            "description" : "hasactivefilters",
            "type" : "boolean",
            "nullable" : false
          },
          "hasavailablefilters" : {
            "default" : null,
            "description" : "hasavailablefilters",
            "type" : "boolean",
            "nullable" : false
          },
          "helpicon" : {
            "description" : "helpicon",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "activefilters", "availablefilters", "hasactivefilters", "hasavailablefilters", "helpicon" ]
      },
      "core_reportbuilder_filters_delete_request" : {
        "properties" : {
          "filterid" : {
            "default" : null,
            "description" : "Filter ID",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "filterid", "reportid" ]
      },
      "core_reportbuilder_filters_delete_200_response_activefilters_inner" : {
        "default" : null,
        "properties" : {
          "entityname" : {
            "description" : "entityname",
            "type" : "string",
            "nullable" : false
          },
          "heading" : {
            "description" : "heading",
            "type" : "string",
            "nullable" : false
          },
          "headingeditable" : {
            "description" : "headingeditable",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "movetitle" : {
            "description" : "movetitle",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_filters_delete_200_response" : {
        "properties" : {
          "activefilters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_filters_delete_200_response_activefilters_inner"
            },
            "type" : "array"
          },
          "availablefilters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response_availableconditions_inner"
            },
            "type" : "array"
          },
          "hasactivefilters" : {
            "description" : "hasactivefilters",
            "type" : "boolean",
            "nullable" : false
          },
          "hasavailablefilters" : {
            "description" : "hasavailablefilters",
            "type" : "boolean",
            "nullable" : false
          },
          "helpicon" : {
            "description" : "helpicon",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "activefilters", "availablefilters", "hasactivefilters", "hasavailablefilters", "helpicon" ]
      },
      "core_reportbuilder_filters_reorder_request" : {
        "properties" : {
          "filterid" : {
            "description" : "Filter ID",
            "type" : "integer",
            "nullable" : true
          },
          "position" : {
            "default" : null,
            "description" : "New filter position",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "filterid", "position", "reportid" ]
      },
      "core_reportbuilder_filters_reset_request" : {
        "properties" : {
          "parameters" : {
            "default" : "",
            "description" : "JSON encoded report parameters",
            "type" : "string",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "reportid" ]
      },
      "core_reportbuilder_list_reports_request" : {
        "properties" : {
          "page" : {
            "default" : 0,
            "description" : "Page number",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 10,
            "description" : "Reports per page",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_reportbuilder_list_reports_200_response_reports_inner" : {
        "default" : null,
        "properties" : {
          "area" : {
            "default" : "",
            "description" : "area",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "default" : "",
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "conditiondata" : {
            "default" : null,
            "description" : "conditiondata",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : { },
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "itemid" : {
            "default" : 0,
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "modifiedby" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "settingsdata" : {
            "default" : null,
            "description" : "settingsdata",
            "type" : "string",
            "nullable" : true
          },
          "source" : {
            "default" : null,
            "description" : "source",
            "type" : "string",
            "nullable" : false
          },
          "sourcename" : {
            "default" : null,
            "description" : "sourcename",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "type" : {
            "default" : null,
            "description" : "type",
            "type" : "integer",
            "nullable" : false
          },
          "uniquerows" : {
            "default" : false,
            "description" : "uniquerows",
            "type" : "boolean",
            "nullable" : false
          },
          "usercreated" : {
            "default" : { },
            "description" : "usercreated",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_list_reports_200_response" : {
        "properties" : {
          "reports" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_list_reports_200_response_reports_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "reports" ]
      },
      "core_reportbuilder_reports_get_request" : {
        "properties" : {
          "editmode" : {
            "default" : 0,
            "description" : "Whether editing mode is enabled",
            "type" : "boolean",
            "nullable" : true
          },
          "pagesize" : {
            "default" : 0,
            "description" : "Page size",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "reportid" ]
      },
      "core_reportbuilder_reports_get_200_response_attributes_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "value" : {
            "description" : "value",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_reports_get_200_response_cardview" : {
        "properties" : {
          "form" : {
            "default" : null,
            "description" : "form",
            "type" : "string",
            "nullable" : false
          },
          "helpicon" : {
            "description" : "helpicon",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "form", "helpicon" ]
      },
      "core_reportbuilder_reports_get_200_response_sidebarmenucards_menucards_inner_items_inner" : {
        "default" : null,
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "action",
            "type" : "string",
            "nullable" : false
          },
          "disabled" : {
            "default" : false,
            "description" : "disabled",
            "type" : "boolean",
            "nullable" : false
          },
          "identifier" : {
            "default" : null,
            "description" : "identifier",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "title" : {
            "description" : "title",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_reports_get_200_response_sidebarmenucards_menucards_inner" : {
        "default" : null,
        "properties" : {
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_reports_get_200_response_sidebarmenucards_menucards_inner_items_inner"
            },
            "type" : "array"
          },
          "key" : {
            "description" : "key",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_reports_get_200_response_sidebarmenucards" : {
        "properties" : {
          "menucards" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_reports_get_200_response_sidebarmenucards_menucards_inner"
            },
            "type" : "array"
          }
        }
      },
      "core_reportbuilder_reports_get_200_response" : {
        "properties" : {
          "area" : {
            "default" : "",
            "description" : "area",
            "type" : "string",
            "nullable" : false
          },
          "attributes" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_reports_get_200_response_attributes_inner"
            },
            "type" : "array"
          },
          "cardview" : {
            "$ref" : "#/components/schemas/core_reportbuilder_reports_get_200_response_cardview"
          },
          "classes" : {
            "default" : null,
            "description" : "classes",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "default" : "",
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "conditiondata" : {
            "description" : "conditiondata",
            "type" : "string",
            "nullable" : true
          },
          "conditions" : {
            "$ref" : "#/components/schemas/core_reportbuilder_conditions_delete_200_response"
          },
          "contextid" : {
            "default" : { },
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "editmode" : {
            "default" : null,
            "description" : "editmode",
            "type" : "boolean",
            "nullable" : false
          },
          "filters" : {
            "$ref" : "#/components/schemas/core_reportbuilder_filters_delete_200_response"
          },
          "filtersapplied" : {
            "default" : null,
            "description" : "filtersapplied",
            "type" : "integer",
            "nullable" : false
          },
          "filtersform" : {
            "default" : null,
            "description" : "filtersform",
            "type" : "string",
            "nullable" : false
          },
          "filterspresent" : {
            "default" : null,
            "description" : "filterspresent",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "itemid" : {
            "default" : 0,
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "javascript" : {
            "description" : "javascript",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "settingsdata" : {
            "description" : "settingsdata",
            "type" : "string",
            "nullable" : true
          },
          "sidebarmenucards" : {
            "$ref" : "#/components/schemas/core_reportbuilder_reports_get_200_response_sidebarmenucards"
          },
          "sorting" : {
            "$ref" : "#/components/schemas/core_reportbuilder_columns_delete_200_response"
          },
          "source" : {
            "description" : "source",
            "type" : "string",
            "nullable" : false
          },
          "table" : {
            "default" : null,
            "description" : "table",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "type" : {
            "description" : "type",
            "type" : "integer",
            "nullable" : false
          },
          "uniquerows" : {
            "default" : false,
            "description" : "uniquerows",
            "type" : "boolean",
            "nullable" : false
          },
          "usercreated" : {
            "default" : { },
            "description" : "usercreated",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "area", "attributes", "classes", "component", "conditiondata", "contextid", "editmode", "filtersapplied", "filtersform", "filterspresent", "id", "itemid", "javascript", "name", "settingsdata", "source", "table", "timecreated", "timemodified", "type", "uniquerows", "usercreated", "usermodified" ]
      },
      "core_reportbuilder_retrieve_report_request" : {
        "properties" : {
          "page" : {
            "default" : 0,
            "description" : "Page number",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 10,
            "description" : "Reports per page",
            "type" : "integer",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "reportid" ]
      },
      "core_reportbuilder_retrieve_report_200_response_data_rows_inner" : {
        "default" : null,
        "properties" : {
          "columns" : {
            "items" : {
              "default" : null,
              "description" : "columns",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_retrieve_report_200_response_data" : {
        "properties" : {
          "headers" : {
            "items" : {
              "default" : null,
              "description" : "headers",
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          },
          "rows" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_retrieve_report_200_response_data_rows_inner"
            },
            "type" : "array"
          },
          "totalrowcount" : {
            "default" : null,
            "description" : "totalrowcount",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "headers", "rows", "totalrowcount" ]
      },
      "core_reportbuilder_retrieve_report_200_response_details" : {
        "properties" : {
          "area" : {
            "default" : "",
            "description" : "area",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "default" : "",
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "conditiondata" : {
            "description" : "conditiondata",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : { },
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "itemid" : {
            "default" : 0,
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "modifiedby" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "settingsdata" : {
            "description" : "settingsdata",
            "type" : "string",
            "nullable" : true
          },
          "source" : {
            "description" : "source",
            "type" : "string",
            "nullable" : false
          },
          "sourcename" : {
            "description" : "sourcename",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "type" : {
            "description" : "type",
            "type" : "integer",
            "nullable" : false
          },
          "uniquerows" : {
            "default" : false,
            "description" : "uniquerows",
            "type" : "boolean",
            "nullable" : false
          },
          "usercreated" : {
            "default" : { },
            "description" : "usercreated",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "area", "component", "conditiondata", "contextid", "id", "itemid", "modifiedby", "name", "settingsdata", "source", "sourcename", "timecreated", "timemodified", "type", "uniquerows", "usercreated", "usermodified" ]
      },
      "core_reportbuilder_retrieve_report_200_response" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/core_reportbuilder_retrieve_report_200_response_data"
          },
          "details" : {
            "$ref" : "#/components/schemas/core_reportbuilder_retrieve_report_200_response_details"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "data", "details" ]
      },
      "core_reportbuilder_retrieve_system_report_request" : {
        "properties" : {
          "area" : {
            "default" : "",
            "description" : "Report area",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "default" : "",
            "description" : "Report component",
            "type" : "string",
            "nullable" : true
          },
          "context" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "itemid" : {
            "default" : 0,
            "description" : "Report item ID",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "Page number",
            "type" : "integer",
            "nullable" : true
          },
          "parameters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_can_view_system_report_request_parameters_inner"
            },
            "type" : "array"
          },
          "perpage" : {
            "default" : 10,
            "description" : "Reports per page",
            "type" : "integer",
            "nullable" : true
          },
          "source" : {
            "description" : "Report class path",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "context", "source" ]
      },
      "core_reportbuilder_retrieve_system_report_200_response_data_rows_inner" : {
        "properties" : {
          "columns" : {
            "items" : {
              "description" : "columns",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_reportbuilder_retrieve_system_report_200_response_data" : {
        "properties" : {
          "headers" : {
            "items" : {
              "description" : "headers",
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          },
          "rows" : {
            "items" : {
              "$ref" : "#/components/schemas/core_reportbuilder_retrieve_system_report_200_response_data_rows_inner"
            },
            "type" : "array"
          },
          "totalrowcount" : {
            "description" : "totalrowcount",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "headers", "rows", "totalrowcount" ]
      },
      "core_reportbuilder_retrieve_system_report_200_response" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/core_reportbuilder_retrieve_system_report_200_response_data"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ]
      },
      "core_reportbuilder_schedules_delete_request" : {
        "properties" : {
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          },
          "scheduleid" : {
            "default" : null,
            "description" : "Schedule ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "reportid", "scheduleid" ]
      },
      "core_reportbuilder_schedules_send_request" : {
        "properties" : {
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          },
          "scheduleid" : {
            "description" : "Schedule ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "reportid", "scheduleid" ]
      },
      "core_reportbuilder_schedules_toggle_request" : {
        "properties" : {
          "enabled" : {
            "default" : null,
            "description" : "Schedule enabled",
            "type" : "boolean",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          },
          "scheduleid" : {
            "description" : "Schedule ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "enabled", "reportid", "scheduleid" ]
      },
      "core_reportbuilder_set_filters_request" : {
        "properties" : {
          "parameters" : {
            "default" : "",
            "description" : "JSON encoded report parameters",
            "type" : "string",
            "nullable" : true
          },
          "reportid" : {
            "description" : "Report ID",
            "type" : "integer",
            "nullable" : true
          },
          "values" : {
            "default" : null,
            "description" : "JSON encoded filter values",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "reportid", "values" ]
      },
      "core_reportbuilder_view_report_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "Success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_role_assign_roles_request_assignments_inner" : {
        "default" : null,
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The context to assign the user role in",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The context level to assign the user role in\n                                    (block, course, coursecat, system, user, module)",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "The Instance id of item where the role needs to be assigned",
            "type" : "integer",
            "nullable" : true
          },
          "roleid" : {
            "description" : "Role to assign to the user",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user that is going to be assigned",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_role_assign_roles_request" : {
        "properties" : {
          "assignments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_role_assign_roles_request_assignments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assignments" ]
      },
      "core_role_unassign_roles_request_unassignments_inner" : {
        "default" : null,
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The context to unassign the user role from",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The context level to unassign the user role in\n+                                    (block, course, coursecat, system, user, module)",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "The Instance id of item where the role needs to be unassigned",
            "type" : "integer",
            "nullable" : true
          },
          "roleid" : {
            "description" : "Role to assign to the user",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user that is going to be assigned",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_role_unassign_roles_request" : {
        "properties" : {
          "unassignments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_role_unassign_roles_request_unassignments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "unassignments" ]
      },
      "core_search_get_relevant_users_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "Course id (0 if none)",
            "type" : "integer",
            "nullable" : true
          },
          "query" : {
            "default" : null,
            "description" : "Query string (full or partial user full name or other details)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "query" ]
      },
      "core_search_get_results_request_filters" : {
        "properties" : {
          "areaids" : {
            "items" : {
              "default" : null,
              "description" : "areaid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "cat" : {
            "default" : "",
            "description" : "category to filter areas",
            "type" : "string",
            "nullable" : true
          },
          "contextids" : {
            "items" : {
              "default" : null,
              "description" : "contextid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "courseids" : {
            "items" : {
              "default" : null,
              "description" : "courseid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "groupids" : {
            "items" : {
              "default" : null,
              "description" : "groupid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "mycoursesonly" : {
            "default" : false,
            "description" : "only results from my courses",
            "type" : "boolean",
            "nullable" : true
          },
          "order" : {
            "default" : "",
            "description" : "how to order",
            "type" : "string",
            "nullable" : true
          },
          "timeend" : {
            "default" : 0,
            "description" : "docs modified before this date",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : 0,
            "description" : "docs modified after this date",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "result title",
            "type" : "string",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "default" : null,
              "description" : "userid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "core_search_get_results_request" : {
        "properties" : {
          "filters" : {
            "$ref" : "#/components/schemas/core_search_get_results_request_filters"
          },
          "page" : {
            "default" : 0,
            "description" : "results page number starting from 0, defaults to the first page",
            "type" : "integer",
            "nullable" : true
          },
          "query" : {
            "default" : null,
            "description" : "the search query",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "query" ]
      },
      "core_search_get_results_200_response_results_inner" : {
        "default" : null,
        "properties" : {
          "areaname" : {
            "default" : null,
            "description" : "search area name",
            "type" : "string",
            "nullable" : false
          },
          "componentname" : {
            "default" : null,
            "description" : "component name",
            "type" : "string",
            "nullable" : false
          },
          "content" : {
            "default" : "",
            "description" : "result contents",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "result context id",
            "type" : "integer",
            "nullable" : false
          },
          "contexturl" : {
            "default" : null,
            "description" : "result context url",
            "type" : "string",
            "nullable" : false
          },
          "coursefullname" : {
            "default" : null,
            "description" : "result course fullname",
            "type" : "string",
            "nullable" : false
          },
          "courseurl" : {
            "default" : null,
            "description" : "result course url",
            "type" : "string",
            "nullable" : false
          },
          "description1" : {
            "default" : "",
            "description" : "extra result contents, depends on the search area",
            "type" : "string",
            "nullable" : true
          },
          "description2" : {
            "default" : "",
            "description" : "extra result contents, depends on the search area",
            "type" : "string",
            "nullable" : true
          },
          "docurl" : {
            "default" : null,
            "description" : "result url",
            "type" : "string",
            "nullable" : false
          },
          "filename" : {
            "default" : null,
            "description" : "result file name if present",
            "type" : "string",
            "nullable" : false
          },
          "filenames" : {
            "default" : null,
            "description" : "result file names if present",
            "type" : "string",
            "nullable" : false
          },
          "iconurl" : {
            "default" : "",
            "description" : "icon url",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "unique id in the search area scope",
            "type" : "integer",
            "nullable" : false
          },
          "multiplefiles" : {
            "default" : null,
            "description" : "whether multiple files are returned or not",
            "type" : "integer",
            "nullable" : false
          },
          "textformat" : {
            "default" : null,
            "description" : "text fields format, it is the same for all of them",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "result modified time",
            "type" : "integer",
            "nullable" : false
          },
          "title" : {
            "default" : null,
            "description" : "result title",
            "type" : "string",
            "nullable" : false
          },
          "userfullname" : {
            "default" : null,
            "description" : "user fullname",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "default" : null,
            "description" : "user id",
            "type" : "integer",
            "nullable" : false
          },
          "userurl" : {
            "default" : null,
            "description" : "user url",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_search_get_results_200_response" : {
        "properties" : {
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/core_search_get_results_200_response_results_inner"
            },
            "type" : "array"
          },
          "totalcount" : {
            "default" : null,
            "description" : "Total number of results",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "results", "totalcount" ]
      },
      "core_search_get_search_areas_list_request" : {
        "properties" : {
          "cat" : {
            "default" : "",
            "description" : "category to filter areas",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "core_search_get_search_areas_list_200_response_areas_inner" : {
        "default" : null,
        "description" : "Search area",
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "category id",
            "type" : "string",
            "nullable" : true
          },
          "categoryname" : {
            "description" : "category name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "search area id",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "search area name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_search_get_search_areas_list_200_response" : {
        "properties" : {
          "areas" : {
            "items" : {
              "$ref" : "#/components/schemas/core_search_get_search_areas_list_200_response_areas_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "areas" ]
      },
      "core_search_get_top_results_request_filters" : {
        "properties" : {
          "areaids" : {
            "items" : {
              "description" : "areaid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "cat" : {
            "default" : "",
            "description" : "category to filter areas",
            "type" : "string",
            "nullable" : true
          },
          "contextids" : {
            "items" : {
              "description" : "contextid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "courseids" : {
            "items" : {
              "description" : "courseid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "groupids" : {
            "items" : {
              "description" : "groupid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "mycoursesonly" : {
            "default" : false,
            "description" : "only results from my courses",
            "type" : "boolean",
            "nullable" : true
          },
          "order" : {
            "default" : "",
            "description" : "how to order",
            "type" : "string",
            "nullable" : true
          },
          "timeend" : {
            "default" : 0,
            "description" : "docs modified before this date",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : 0,
            "description" : "docs modified after this date",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "description" : "result title",
            "type" : "string",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "description" : "userid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "core_search_get_top_results_request" : {
        "properties" : {
          "filters" : {
            "$ref" : "#/components/schemas/core_search_get_top_results_request_filters"
          },
          "query" : {
            "description" : "the search query",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "query" ]
      },
      "core_search_get_top_results_200_response_results_inner" : {
        "properties" : {
          "areaname" : {
            "description" : "search area name",
            "type" : "string",
            "nullable" : false
          },
          "componentname" : {
            "description" : "component name",
            "type" : "string",
            "nullable" : false
          },
          "content" : {
            "default" : "",
            "description" : "result contents",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "description" : "result context id",
            "type" : "integer",
            "nullable" : false
          },
          "contexturl" : {
            "description" : "result context url",
            "type" : "string",
            "nullable" : false
          },
          "coursefullname" : {
            "description" : "result course fullname",
            "type" : "string",
            "nullable" : false
          },
          "courseurl" : {
            "description" : "result course url",
            "type" : "string",
            "nullable" : false
          },
          "description1" : {
            "default" : "",
            "description" : "extra result contents, depends on the search area",
            "type" : "string",
            "nullable" : true
          },
          "description2" : {
            "default" : "",
            "description" : "extra result contents, depends on the search area",
            "type" : "string",
            "nullable" : true
          },
          "docurl" : {
            "description" : "result url",
            "type" : "string",
            "nullable" : false
          },
          "filename" : {
            "description" : "result file name if present",
            "type" : "string",
            "nullable" : false
          },
          "filenames" : {
            "description" : "result file names if present",
            "type" : "string",
            "nullable" : false
          },
          "iconurl" : {
            "default" : "",
            "description" : "icon url",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "unique id in the search area scope",
            "type" : "integer",
            "nullable" : false
          },
          "multiplefiles" : {
            "description" : "whether multiple files are returned or not",
            "type" : "integer",
            "nullable" : false
          },
          "textformat" : {
            "description" : "text fields format, it is the same for all of them",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "result modified time",
            "type" : "integer",
            "nullable" : false
          },
          "title" : {
            "description" : "result title",
            "type" : "string",
            "nullable" : false
          },
          "userfullname" : {
            "description" : "user fullname",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : false
          },
          "userurl" : {
            "description" : "user url",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_search_get_top_results_200_response" : {
        "properties" : {
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/core_search_get_top_results_200_response_results_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "results" ]
      },
      "core_search_view_results_request_filters" : {
        "properties" : {
          "areaids" : {
            "items" : {
              "description" : "areaid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "courseids" : {
            "items" : {
              "description" : "courseid",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "timeend" : {
            "default" : 0,
            "description" : "docs modified before this date",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : 0,
            "description" : "docs modified after this date",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "description" : "result title",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "core_search_view_results_request" : {
        "properties" : {
          "filters" : {
            "$ref" : "#/components/schemas/core_search_view_results_request_filters"
          },
          "page" : {
            "default" : 0,
            "description" : "results page number starting from 0, defaults to the first page",
            "type" : "integer",
            "nullable" : true
          },
          "query" : {
            "description" : "the search query",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "query" ]
      },
      "core_session_time_remaining_200_response" : {
        "properties" : {
          "timeremaining" : {
            "default" : null,
            "description" : "The number of seconds remaining in this session.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The current user id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "timeremaining", "userid" ]
      },
      "core_table_get_dynamic_table_content_request_filters_inner_filteroptions_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Name of the filter option",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Value of the filter option",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_table_get_dynamic_table_content_request_filters_inner" : {
        "default" : null,
        "properties" : {
          "filteroptions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_table_get_dynamic_table_content_request_filters_inner_filteroptions_inner"
            },
            "type" : "array"
          },
          "jointype" : {
            "default" : null,
            "description" : "Type of join for filter values",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Name of the filter",
            "type" : "string",
            "nullable" : true
          },
          "values" : {
            "items" : {
              "default" : null,
              "description" : "Filter value",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "core_table_get_dynamic_table_content_request_sortdata_inner" : {
        "default" : null,
        "properties" : {
          "sortby" : {
            "default" : null,
            "description" : "The name of a sortable column",
            "type" : "string",
            "nullable" : true
          },
          "sortorder" : {
            "default" : null,
            "description" : "The direction that this column should be sorted by",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_table_get_dynamic_table_content_request" : {
        "properties" : {
          "component" : {
            "description" : "Component",
            "type" : "string",
            "nullable" : true
          },
          "filters" : {
            "items" : {
              "$ref" : "#/components/schemas/core_table_get_dynamic_table_content_request_filters_inner"
            },
            "type" : "array"
          },
          "firstinitial" : {
            "default" : null,
            "description" : "The first initial to sort filter on",
            "type" : "string",
            "nullable" : true
          },
          "handler" : {
            "default" : null,
            "description" : "Handler",
            "type" : "string",
            "nullable" : true
          },
          "hiddencolumns" : {
            "items" : {
              "default" : null,
              "description" : "Name of column",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "jointype" : {
            "default" : null,
            "description" : "Type of join to join all filters together",
            "type" : "integer",
            "nullable" : true
          },
          "lastinitial" : {
            "default" : null,
            "description" : "The last initial to sort filter on",
            "type" : "string",
            "nullable" : true
          },
          "pagenumber" : {
            "default" : null,
            "description" : "The page number",
            "type" : "integer",
            "nullable" : true
          },
          "pagesize" : {
            "default" : null,
            "description" : "The number of records per page",
            "type" : "integer",
            "nullable" : true
          },
          "resetpreferences" : {
            "default" : null,
            "description" : "Whether the table preferences should be reset",
            "type" : "boolean",
            "nullable" : true
          },
          "sortdata" : {
            "items" : {
              "$ref" : "#/components/schemas/core_table_get_dynamic_table_content_request_sortdata_inner"
            },
            "type" : "array"
          },
          "uniqueid" : {
            "default" : null,
            "description" : "Unique ID for the container",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "firstinitial", "handler", "hiddencolumns", "jointype", "lastinitial", "pagenumber", "pagesize", "resetpreferences", "uniqueid" ]
      },
      "core_table_get_dynamic_table_content_200_response" : {
        "properties" : {
          "html" : {
            "default" : null,
            "description" : "The raw html of the requested table.",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "html" ]
      },
      "core_tag_get_tag_areas_200_response_areas_inner" : {
        "default" : null,
        "properties" : {
          "callback" : {
            "default" : null,
            "description" : "Component callback for processing tags.",
            "type" : "string",
            "nullable" : true
          },
          "callbackfile" : {
            "default" : null,
            "description" : "Component callback file.",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "Component the area is related to.",
            "type" : "string",
            "nullable" : false
          },
          "enabled" : {
            "default" : true,
            "description" : "Whether this area is enabled.",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Area id.",
            "type" : "integer",
            "nullable" : false
          },
          "itemtype" : {
            "default" : null,
            "description" : "Type of item in the component.",
            "type" : "string",
            "nullable" : false
          },
          "locked" : {
            "default" : false,
            "description" : "Whether the area is locked.",
            "type" : "boolean",
            "nullable" : true
          },
          "multiplecontexts" : {
            "default" : false,
            "description" : "Whether the tag area allows tag instances to be created in multiple contexts. ",
            "type" : "boolean",
            "nullable" : false
          },
          "showstandard" : {
            "default" : 0,
            "description" : "Return whether to display only standard, only non-standard or both tags.",
            "type" : "integer",
            "nullable" : false
          },
          "tagcollid" : {
            "default" : null,
            "description" : "The tag collection this are belongs to.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_tag_get_tag_areas_200_response" : {
        "properties" : {
          "areas" : {
            "items" : {
              "$ref" : "#/components/schemas/core_tag_get_tag_areas_200_response_areas_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "areas" ]
      },
      "core_tag_get_tag_cloud_request" : {
        "properties" : {
          "ctx" : {
            "default" : 0,
            "description" : "Only retrieve tag instances in this context.",
            "type" : "integer",
            "nullable" : true
          },
          "fromctx" : {
            "default" : 0,
            "description" : "Context id where this tag cloud is displayed.",
            "type" : "integer",
            "nullable" : true
          },
          "isstandard" : {
            "default" : false,
            "description" : "Whether to return only standard tags.",
            "type" : "boolean",
            "nullable" : true
          },
          "limit" : {
            "default" : 150,
            "description" : "Maximum number of tags to retrieve.",
            "type" : "integer",
            "nullable" : true
          },
          "rec" : {
            "default" : 1,
            "description" : "Retrieve tag instances in the $ctx context and it's children.",
            "type" : "integer",
            "nullable" : true
          },
          "search" : {
            "default" : "",
            "description" : "Search string.",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "default" : "name",
            "description" : "Sort order for display\n                    (id, name, rawname, count, flag, isstandard, tagcollid).",
            "type" : "string",
            "nullable" : true
          },
          "tagcollid" : {
            "default" : 0,
            "description" : "Tag collection id.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_tag_get_tag_cloud_200_response_tags_inner" : {
        "default" : null,
        "description" : "Tags.",
        "properties" : {
          "count" : {
            "default" : null,
            "description" : "Number of tag instances.",
            "type" : "integer",
            "nullable" : true
          },
          "flag" : {
            "default" : null,
            "description" : "Whether the tag is flagged as inappropriate.",
            "type" : "boolean",
            "nullable" : true
          },
          "isstandard" : {
            "default" : null,
            "description" : "Whether is a standard tag or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Tag name.",
            "type" : "string",
            "nullable" : true
          },
          "size" : {
            "default" : null,
            "description" : "Proportional size to display the tag.",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "default" : null,
            "description" : "URL to view the tag index.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_tag_get_tag_cloud_200_response" : {
        "properties" : {
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/core_tag_get_tag_cloud_200_response_tags_inner"
            },
            "type" : "array"
          },
          "tagscount" : {
            "default" : null,
            "description" : "Number of tags returned.",
            "type" : "integer",
            "nullable" : true
          },
          "totalcount" : {
            "default" : null,
            "description" : "Total count of tags.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "tags", "tagscount", "totalcount" ]
      },
      "core_tag_get_tag_collections_200_response_collections_inner" : {
        "default" : null,
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "Component the collection is related to.",
            "type" : "string",
            "nullable" : true
          },
          "customurl" : {
            "default" : null,
            "description" : "Custom URL for the tag page instead of /tag/index.php.",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Collection id.",
            "type" : "integer",
            "nullable" : false
          },
          "isdefault" : {
            "default" : false,
            "description" : "Whether is the default collection.",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Collection name.",
            "type" : "string",
            "nullable" : true
          },
          "searchable" : {
            "default" : true,
            "description" : "Whether the tag collection is searchable.",
            "type" : "boolean",
            "nullable" : false
          },
          "sortorder" : {
            "default" : null,
            "description" : "Collection ordering in the list.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "core_tag_get_tag_collections_200_response" : {
        "properties" : {
          "collections" : {
            "items" : {
              "$ref" : "#/components/schemas/core_tag_get_tag_collections_200_response_collections_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "collections" ]
      },
      "core_tag_get_tagindex_request_tagindex" : {
        "properties" : {
          "ctx" : {
            "default" : 0,
            "description" : "context id where to search for items",
            "type" : "integer",
            "nullable" : true
          },
          "excl" : {
            "default" : 0,
            "description" : "exlusive mode for this tag area",
            "type" : "boolean",
            "nullable" : true
          },
          "from" : {
            "default" : 0,
            "description" : "context id where the link was displayed",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "page number (0-based)",
            "type" : "integer",
            "nullable" : true
          },
          "rec" : {
            "default" : 1,
            "description" : "search in the context recursive",
            "type" : "integer",
            "nullable" : true
          },
          "ta" : {
            "default" : null,
            "description" : "tag area id",
            "type" : "integer",
            "nullable" : true
          },
          "tag" : {
            "default" : null,
            "description" : "tag name",
            "type" : "string",
            "nullable" : true
          },
          "tc" : {
            "default" : null,
            "description" : "tag collection id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "ta", "tag", "tc" ]
      },
      "core_tag_get_tagindex_request" : {
        "properties" : {
          "tagindex" : {
            "$ref" : "#/components/schemas/core_tag_get_tagindex_request_tagindex"
          }
        },
        "required" : [ "tagindex" ]
      },
      "core_tag_get_tagindex_200_response" : {
        "properties" : {
          "anchor" : {
            "default" : null,
            "description" : "name of anchor",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : true
          },
          "content" : {
            "default" : null,
            "description" : "title",
            "type" : "string",
            "nullable" : true
          },
          "exclusivetext" : {
            "default" : null,
            "description" : "text for exclusive link",
            "type" : "string",
            "nullable" : true
          },
          "exclusiveurl" : {
            "default" : null,
            "description" : "URL for exclusive link",
            "type" : "string",
            "nullable" : true
          },
          "hascontent" : {
            "default" : null,
            "description" : "whether the content is present",
            "type" : "integer",
            "nullable" : true
          },
          "itemtype" : {
            "default" : null,
            "description" : "itemtype",
            "type" : "string",
            "nullable" : true
          },
          "nextpageurl" : {
            "default" : null,
            "description" : "URL for the next page",
            "type" : "string",
            "nullable" : true
          },
          "prevpageurl" : {
            "description" : "URL for the next page",
            "type" : "string",
            "nullable" : true
          },
          "ta" : {
            "description" : "tag area id",
            "type" : "integer",
            "nullable" : true
          },
          "tagid" : {
            "default" : null,
            "description" : "tag id",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "description" : "title",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "content", "hascontent", "itemtype", "ta", "tagid", "title" ]
      },
      "core_tag_get_tagindex_per_area_request_tagindex" : {
        "properties" : {
          "ctx" : {
            "default" : 0,
            "description" : "context id where to search for items",
            "type" : "integer",
            "nullable" : true
          },
          "excl" : {
            "default" : 0,
            "description" : "exlusive mode for this tag area",
            "type" : "boolean",
            "nullable" : true
          },
          "from" : {
            "default" : 0,
            "description" : "context id where the link was displayed",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : 0,
            "description" : "tag id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "page number (0-based)",
            "type" : "integer",
            "nullable" : true
          },
          "rec" : {
            "default" : 1,
            "description" : "search in the context recursive",
            "type" : "integer",
            "nullable" : true
          },
          "ta" : {
            "default" : 0,
            "description" : "tag area id",
            "type" : "integer",
            "nullable" : true
          },
          "tag" : {
            "default" : "",
            "description" : "tag name",
            "type" : "string",
            "nullable" : true
          },
          "tc" : {
            "default" : 0,
            "description" : "tag collection id",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_tag_get_tagindex_per_area_request" : {
        "properties" : {
          "tagindex" : {
            "$ref" : "#/components/schemas/core_tag_get_tagindex_per_area_request_tagindex"
          }
        },
        "required" : [ "tagindex" ]
      },
      "core_tag_get_tags_request_tags_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "tag id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_tag_get_tags_request" : {
        "properties" : {
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/core_tag_get_tags_request_tags_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "tags" ]
      },
      "core_tag_get_tags_200_response_tags_inner" : {
        "default" : null,
        "description" : "information about one tag",
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "tag description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "flag" : {
            "default" : null,
            "description" : "flag",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "tag id",
            "type" : "integer",
            "nullable" : true
          },
          "isstandard" : {
            "default" : null,
            "description" : "whether this flag is standard",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "official" : {
            "default" : null,
            "description" : "whether this flag is standard (deprecated, use isstandard)",
            "type" : "integer",
            "nullable" : true
          },
          "rawname" : {
            "default" : null,
            "description" : "tag raw name (may contain capital letters)",
            "type" : "string",
            "nullable" : true
          },
          "tagcollid" : {
            "description" : "tag collection id",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "default" : null,
            "description" : "URL to view",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_tag_get_tags_200_response" : {
        "properties" : {
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/core_tag_get_tags_200_response_tags_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "tags" ]
      },
      "core_tag_update_tags_request_tags_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "tag description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : null,
            "description" : "tag description format",
            "type" : "integer",
            "nullable" : true
          },
          "flag" : {
            "description" : "flag",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "tag id",
            "type" : "integer",
            "nullable" : true
          },
          "isstandard" : {
            "description" : "whether this flag is standard",
            "type" : "integer",
            "nullable" : true
          },
          "official" : {
            "default" : null,
            "description" : "(deprecated, use isstandard) whether this flag is standard",
            "type" : "integer",
            "nullable" : true
          },
          "rawname" : {
            "description" : "tag raw name (may contain capital letters)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_tag_update_tags_request" : {
        "properties" : {
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/core_tag_update_tags_request_tags_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "tags" ]
      },
      "core_update_inplace_editable_request" : {
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "component responsible for the update",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "identifier of the updated item",
            "type" : "string",
            "nullable" : true
          },
          "itemtype" : {
            "default" : null,
            "description" : "type of the updated item inside the component",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "new value",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "itemid", "itemtype", "value" ]
      },
      "core_update_inplace_editable_200_response_editicon" : {
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "Edit icon component",
            "type" : "string",
            "nullable" : true
          },
          "key" : {
            "default" : null,
            "description" : "Edit icon key",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Edit icon title",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "core_update_inplace_editable_200_response" : {
        "properties" : {
          "component" : {
            "description" : "component responsible for the update",
            "type" : "string",
            "nullable" : true
          },
          "displayvalue" : {
            "default" : null,
            "description" : "display value (may contain link or other html tags)",
            "type" : "string",
            "nullable" : true
          },
          "edithint" : {
            "default" : null,
            "description" : "hint for editing element",
            "type" : "string",
            "nullable" : true
          },
          "editicon" : {
            "$ref" : "#/components/schemas/core_update_inplace_editable_200_response_editicon"
          },
          "editlabel" : {
            "default" : null,
            "description" : "label for editing element",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "identifier of the updated item",
            "type" : "string",
            "nullable" : true
          },
          "itemtype" : {
            "description" : "itemtype",
            "type" : "string",
            "nullable" : true
          },
          "linkeverything" : {
            "default" : null,
            "description" : "Should everything be wrapped in the edit link or link displayed separately",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "default" : null,
            "description" : "options of the element, format depends on type",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "type of the element (text, toggle, select)",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "value of the item as it is stored",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "displayvalue" ]
      },
      "core_user_add_user_device_request" : {
        "properties" : {
          "appid" : {
            "default" : null,
            "description" : "the app id, usually something like com.moodle.moodlemobile",
            "type" : "string",
            "nullable" : true
          },
          "model" : {
            "default" : null,
            "description" : "the device model 'Nexus4' or 'iPad1,1' etc.",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "the device name, 'occam' or 'iPhone' etc.",
            "type" : "string",
            "nullable" : true
          },
          "platform" : {
            "default" : null,
            "description" : "the device platform 'iOS' or 'Android' etc.",
            "type" : "string",
            "nullable" : true
          },
          "publickey" : {
            "default" : null,
            "description" : "the app generated public key",
            "type" : "string",
            "nullable" : true
          },
          "pushid" : {
            "default" : null,
            "description" : "the device PUSH token/key/identifier/registration id",
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "default" : null,
            "description" : "the device UUID",
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "default" : null,
            "description" : "the device version '6.1.2' or '4.2.2' etc.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "appid", "model", "name", "platform", "pushid", "uuid", "version" ]
      },
      "core_user_add_user_private_files_request" : {
        "properties" : {
          "draftid" : {
            "default" : null,
            "description" : "draft area id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "draftid" ]
      },
      "core_user_agree_site_policy_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "Status: true only if we set the policyagreed to 1 for the user",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_user_create_users_request_users_inner_customfields_inner" : {
        "default" : null,
        "properties" : {
          "type" : {
            "description" : "The name of the custom field",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the custom field",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_create_users_request_users_inner_preferences_inner" : {
        "default" : null,
        "properties" : {
          "type" : {
            "default" : null,
            "description" : "The name of the preference",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the preference",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_create_users_request_users_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "description" : "Postal address",
            "type" : "string",
            "nullable" : true
          },
          "alternatename" : {
            "default" : null,
            "description" : "The alternate name of the user",
            "type" : "string",
            "nullable" : true
          },
          "auth" : {
            "default" : "manual",
            "description" : "Auth plugins include manual, ldap, etc",
            "type" : "string",
            "nullable" : false
          },
          "calendartype" : {
            "default" : "gregorian",
            "description" : "Calendar type such as \"gregorian\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "description" : "Home city of the user",
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "description" : "Home country code of the user, such as AU or CZ",
            "type" : "string",
            "nullable" : true
          },
          "createpassword" : {
            "default" : null,
            "description" : "True if password should be created and mailed to user.",
            "type" : "boolean",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_create_users_request_users_inner_customfields_inner"
            },
            "type" : "array"
          },
          "department" : {
            "description" : "department",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "default" : null,
            "description" : "User profile description, no HTML",
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "description" : "A valid and unique email address",
            "type" : "string",
            "nullable" : true
          },
          "firstname" : {
            "description" : "The first name(s) of the user",
            "type" : "string",
            "nullable" : true
          },
          "firstnamephonetic" : {
            "default" : null,
            "description" : "The first name(s) phonetically of the user",
            "type" : "string",
            "nullable" : true
          },
          "idnumber" : {
            "default" : "",
            "description" : "An arbitrary ID code number perhaps from the institution",
            "type" : "string",
            "nullable" : true
          },
          "institution" : {
            "description" : "institution",
            "type" : "string",
            "nullable" : true
          },
          "interests" : {
            "default" : null,
            "description" : "User interests (separated by commas)",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "default" : "en",
            "description" : "Language code such as \"en\", must exist on server",
            "type" : "string",
            "nullable" : false
          },
          "lastname" : {
            "description" : "The family name of the user",
            "type" : "string",
            "nullable" : true
          },
          "lastnamephonetic" : {
            "default" : null,
            "description" : "The family name phonetically of the user",
            "type" : "string",
            "nullable" : true
          },
          "maildisplay" : {
            "default" : null,
            "description" : "Email visibility",
            "type" : "integer",
            "nullable" : true
          },
          "mailformat" : {
            "description" : "Mail format code is 0 for plain text, 1 for HTML etc",
            "type" : "integer",
            "nullable" : true
          },
          "middlename" : {
            "default" : null,
            "description" : "The middle name of the user",
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "default" : null,
            "description" : "Plain text password consisting of any characters",
            "type" : "string",
            "nullable" : true
          },
          "phone1" : {
            "description" : "Phone 1",
            "type" : "string",
            "nullable" : true
          },
          "phone2" : {
            "description" : "Phone 2",
            "type" : "string",
            "nullable" : true
          },
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_create_users_request_users_inner_preferences_inner"
            },
            "type" : "array"
          },
          "theme" : {
            "description" : "Theme name such as \"standard\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "description" : "Timezone code such as Australia/Perth, or 99 for default",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : null,
            "description" : "Username policy is defined in Moodle security config.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_create_users_request" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_create_users_request_users_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_user_delete_users_request" : {
        "properties" : {
          "userids" : {
            "items" : {
              "default" : null,
              "description" : "user ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "userids" ]
      },
      "core_user_get_course_user_profiles_request_userlist_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "courseid",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_get_course_user_profiles_request" : {
        "properties" : {
          "userlist" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_get_course_user_profiles_request_userlist_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "userlist" ]
      },
      "core_user_get_private_files_info_request" : {
        "properties" : {
          "userid" : {
            "default" : 0,
            "description" : "Id of the user, default to current user.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_user_get_private_files_info_200_response" : {
        "properties" : {
          "filecount" : {
            "default" : null,
            "description" : "Number of files in the area.",
            "type" : "integer",
            "nullable" : true
          },
          "filesize" : {
            "default" : null,
            "description" : "Total size of the files in the area.",
            "type" : "integer",
            "nullable" : true
          },
          "filesizewithoutreferences" : {
            "default" : null,
            "description" : "Total size of the area excluding file references",
            "type" : "integer",
            "nullable" : true
          },
          "foldercount" : {
            "default" : null,
            "description" : "Number of folders in the area.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "filecount", "filesize", "filesizewithoutreferences", "foldercount" ]
      },
      "core_user_get_user_preferences_request" : {
        "properties" : {
          "name" : {
            "default" : "",
            "description" : "preference name, empty for all",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "id of the user, default to current user",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_user_get_user_preferences_200_response_preferences_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "The name of the preference",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the preference",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_get_user_preferences_200_response" : {
        "properties" : {
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_get_user_preferences_200_response_preferences_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "preferences" ]
      },
      "core_user_get_users_request_criteria_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "the user column to search, expected keys (value format) are:\n                                \"id\" (int) matching user id,\n                                \"lastname\" (string) user last name (Note: you can use % for searching but it may be considerably slower!),\n                                \"firstname\" (string) user first name (Note: you can use % for searching but it may be considerably slower!),\n                                \"idnumber\" (string) matching user idnumber,\n                                \"username\" (string) matching user username,\n                                \"email\" (string) user email (Note: you can use % for searching but it may be considerably slower!),\n                                \"auth\" (string) matching user auth plugin",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "the value to search",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_get_users_request" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_get_users_request_criteria_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "criteria" ]
      },
      "core_user_get_users_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/block_iomad_company_admin_get_companies_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_user_get_users_by_field_request" : {
        "properties" : {
          "field" : {
            "default" : null,
            "description" : "the search field can be\n                    'id' or 'idnumber' or 'username' or 'email'",
            "type" : "string",
            "nullable" : true
          },
          "values" : {
            "items" : {
              "default" : null,
              "description" : "the value to match",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "field", "values" ]
      },
      "core_user_remove_user_device_request" : {
        "properties" : {
          "appid" : {
            "default" : "",
            "description" : "the app id, if empty devices matching the UUID for the user will be removed",
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "description" : "the device UUID",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "uuid" ]
      },
      "core_user_remove_user_device_200_response" : {
        "properties" : {
          "removed" : {
            "default" : null,
            "description" : "True if removed, false if not removed because it doesn't exists",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "removed" ]
      },
      "core_user_search_identity_request" : {
        "properties" : {
          "query" : {
            "default" : null,
            "description" : "The search query",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "query" ]
      },
      "core_user_search_identity_200_response_list_inner_extrafields_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Name of the extrafield.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Value of the extrafield.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_search_identity_200_response_list_inner" : {
        "default" : null,
        "properties" : {
          "extrafields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_search_identity_200_response_list_inner_extrafields_inner"
            },
            "type" : "array"
          },
          "fullname" : {
            "description" : "The fullname of the user",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_search_identity_200_response" : {
        "properties" : {
          "list" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_search_identity_200_response_list_inner"
            },
            "type" : "array"
          },
          "maxusersperpage" : {
            "default" : null,
            "description" : "Configured maximum users per page.",
            "type" : "integer",
            "nullable" : true
          },
          "overflow" : {
            "default" : null,
            "description" : "Were there more records than maxusersperpage found?",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "list", "maxusersperpage", "overflow" ]
      },
      "core_user_set_user_preferences_request_preferences_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "The name of the preference",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "Id of the user to set the preference (default to current user)",
            "type" : "integer",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the preference",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_set_user_preferences_request" : {
        "properties" : {
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_set_user_preferences_request_preferences_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "preferences" ]
      },
      "core_user_set_user_preferences_200_response_saved_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "The name of the preference",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user the preference was set for",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_set_user_preferences_200_response" : {
        "properties" : {
          "saved" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_set_user_preferences_200_response_saved_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "saved" ]
      },
      "core_user_update_picture_request" : {
        "properties" : {
          "delete" : {
            "default" : false,
            "description" : "If we should delete the user picture",
            "type" : "boolean",
            "nullable" : true
          },
          "draftitemid" : {
            "default" : null,
            "description" : "Id of the user draft file to use as image",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "Id of the user, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "draftitemid" ]
      },
      "core_user_update_picture_200_response" : {
        "properties" : {
          "profileimageurl" : {
            "default" : null,
            "description" : "New profile user image url",
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "default" : null,
            "description" : "True if the image was updated, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "success" ]
      },
      "core_user_update_user_device_public_key_request" : {
        "properties" : {
          "appid" : {
            "default" : null,
            "description" : "The app id, something like com.moodle.moodlemobile",
            "type" : "string",
            "nullable" : true
          },
          "publickey" : {
            "description" : "the app generated public key",
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "description" : "the device UUID",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "appid", "publickey", "uuid" ]
      },
      "core_user_update_user_device_public_key_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "Whether the request was successful",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "core_user_update_user_preferences_request_preferences_inner" : {
        "default" : null,
        "properties" : {
          "type" : {
            "description" : "The name of the preference",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the preference, do not set this field if you\n                                want to remove (unset) the current value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_update_user_preferences_request" : {
        "properties" : {
          "emailstop" : {
            "default" : null,
            "description" : "Enable or disable notifications for this user",
            "type" : "integer",
            "nullable" : true
          },
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_update_user_preferences_request_preferences_inner"
            },
            "type" : "array"
          },
          "userid" : {
            "default" : 0,
            "description" : "id of the user, default to current user",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "core_user_update_users_request_users_inner_preferences_inner" : {
        "default" : null,
        "properties" : {
          "type" : {
            "description" : "The name of the preference",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the preference",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_update_users_request_users_inner" : {
        "default" : null,
        "properties" : {
          "address" : {
            "description" : "Postal address",
            "type" : "string",
            "nullable" : true
          },
          "alternatename" : {
            "description" : "The alternate name of the user",
            "type" : "string",
            "nullable" : true
          },
          "auth" : {
            "default" : "",
            "description" : "Auth plugins include manual, ldap, etc",
            "type" : "string",
            "nullable" : false
          },
          "calendartype" : {
            "default" : "",
            "description" : "Calendar type such as \"gregorian\", must exist on server",
            "type" : "string",
            "nullable" : false
          },
          "city" : {
            "description" : "Home city of the user",
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "description" : "Home country code of the user, such as AU or CZ",
            "type" : "string",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_create_users_request_users_inner_customfields_inner"
            },
            "type" : "array"
          },
          "department" : {
            "default" : null,
            "description" : "Department",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "description" : "User profile description, no HTML",
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "default" : "",
            "description" : "A valid and unique email address",
            "type" : "string",
            "nullable" : false
          },
          "firstname" : {
            "default" : "",
            "description" : "The first name(s) of the user",
            "type" : "string",
            "nullable" : false
          },
          "firstnamephonetic" : {
            "description" : "The first name(s) phonetically of the user",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "An arbitrary ID code number perhaps from the institution",
            "type" : "string",
            "nullable" : true
          },
          "institution" : {
            "default" : null,
            "description" : "Institution",
            "type" : "string",
            "nullable" : true
          },
          "interests" : {
            "description" : "User interests (separated by commas)",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "default" : "",
            "description" : "Language code such as \"en\", must exist on server",
            "type" : "string",
            "nullable" : false
          },
          "lastname" : {
            "description" : "The family name of the user",
            "type" : "string",
            "nullable" : true
          },
          "lastnamephonetic" : {
            "description" : "The family name phonetically of the user",
            "type" : "string",
            "nullable" : true
          },
          "maildisplay" : {
            "description" : "Email visibility",
            "type" : "integer",
            "nullable" : true
          },
          "mailformat" : {
            "description" : "Mail format code is 0 for plain text, 1 for HTML etc",
            "type" : "integer",
            "nullable" : true
          },
          "middlename" : {
            "description" : "The middle name of the user",
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "Plain text password consisting of any characters",
            "type" : "string",
            "nullable" : false
          },
          "phone1" : {
            "default" : null,
            "description" : "Phone",
            "type" : "string",
            "nullable" : true
          },
          "phone2" : {
            "default" : null,
            "description" : "Mobile phone",
            "type" : "string",
            "nullable" : true
          },
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_update_users_request_users_inner_preferences_inner"
            },
            "type" : "array"
          },
          "suspended" : {
            "description" : "Suspend user account, either false to enable user login or true to disable it",
            "type" : "boolean",
            "nullable" : true
          },
          "theme" : {
            "description" : "Theme name such as \"standard\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "description" : "Timezone code such as Australia/Perth, or 99 for default",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "default" : "",
            "description" : "Username policy is defined in Moodle security config.",
            "type" : "string",
            "nullable" : false
          },
          "userpicture" : {
            "default" : null,
            "description" : "The itemid where the new user picture has been uploaded to, 0 to delete",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_user_update_users_request" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/core_user_update_users_request_users_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "core_user_view_user_list_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "id of the course, 0 for site",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "core_user_view_user_profile_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "id of the course, default site course",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "id of the user, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "core_webservice_get_site_info_request" : {
        "properties" : {
          "serviceshortnames" : {
            "items" : {
              "default" : null,
              "description" : "service shortname",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "core_webservice_get_site_info_200_response_advancedfeatures_inner" : {
        "default" : null,
        "description" : "Advanced features availability",
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "feature name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "feature value. Usually 1 means enabled.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_webservice_get_site_info_200_response_functions_inner" : {
        "default" : null,
        "description" : "functions that are available",
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "function name",
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "default" : null,
            "description" : "The version number of the component to which the function belongs",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "core_webservice_get_site_info_200_response" : {
        "properties" : {
          "advancedfeatures" : {
            "items" : {
              "$ref" : "#/components/schemas/core_webservice_get_site_info_200_response_advancedfeatures_inner"
            },
            "type" : "array"
          },
          "downloadfiles" : {
            "default" : null,
            "description" : "1 if users are allowed to download files, 0 if not",
            "type" : "integer",
            "nullable" : true
          },
          "firstname" : {
            "default" : null,
            "description" : "first name",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "user full name",
            "type" : "string",
            "nullable" : true
          },
          "functions" : {
            "items" : {
              "$ref" : "#/components/schemas/core_webservice_get_site_info_200_response_functions_inner"
            },
            "type" : "array"
          },
          "lang" : {
            "default" : null,
            "description" : "Current language.",
            "type" : "string",
            "nullable" : true
          },
          "lastname" : {
            "default" : null,
            "description" : "last name",
            "type" : "string",
            "nullable" : true
          },
          "limitconcurrentlogins" : {
            "default" : null,
            "description" : "Number of concurrent sessions allowed",
            "type" : "integer",
            "nullable" : true
          },
          "mobilecssurl" : {
            "default" : null,
            "description" : "Mobile custom CSS theme",
            "type" : "string",
            "nullable" : true
          },
          "release" : {
            "default" : null,
            "description" : "Moodle release number",
            "type" : "string",
            "nullable" : true
          },
          "sitecalendartype" : {
            "default" : null,
            "description" : "Calendar type set in the site.",
            "type" : "string",
            "nullable" : true
          },
          "siteid" : {
            "default" : null,
            "description" : "Site course ID",
            "type" : "integer",
            "nullable" : true
          },
          "sitename" : {
            "default" : null,
            "description" : "site name",
            "type" : "string",
            "nullable" : true
          },
          "siteurl" : {
            "default" : null,
            "description" : "site url",
            "type" : "string",
            "nullable" : true
          },
          "theme" : {
            "default" : null,
            "description" : "Current theme for the user.",
            "type" : "string",
            "nullable" : true
          },
          "uploadfiles" : {
            "default" : null,
            "description" : "1 if users are allowed to upload files, 0 if not",
            "type" : "integer",
            "nullable" : true
          },
          "usercalendartype" : {
            "default" : null,
            "description" : "Calendar typed used by the user.",
            "type" : "string",
            "nullable" : true
          },
          "usercanmanageownfiles" : {
            "default" : null,
            "description" : "true if the user can manage his own files",
            "type" : "boolean",
            "nullable" : true
          },
          "userhomepage" : {
            "default" : null,
            "description" : "the default home page for the user: 0 for the site home, 1 for dashboard",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "userissiteadmin" : {
            "default" : null,
            "description" : "Whether the user is a site admin or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "usermaxuploadfilesize" : {
            "default" : null,
            "description" : "user max upload file size (bytes). -1 means the user can ignore the upload file size",
            "type" : "integer",
            "nullable" : true
          },
          "username" : {
            "default" : null,
            "description" : "username",
            "type" : "string",
            "nullable" : true
          },
          "userpictureurl" : {
            "default" : null,
            "description" : "the user profile picture.\n                    Warning: this url is the public URL that only works when forcelogin is set to NO and guestaccess is set to YES.\n                    In order to retrieve user profile pictures independently of the Moodle config, replace \"pluginfile.php\" by\n                    \"webservice/pluginfile.php?token=WSTOKEN&file=\"\n                    Of course the user can only see profile picture depending\n                    on his/her permissions. Moreover it is recommended to use HTTPS too.",
            "type" : "string",
            "nullable" : true
          },
          "userprivateaccesskey" : {
            "default" : null,
            "description" : "Private user access key for fetching files.",
            "type" : "string",
            "nullable" : true
          },
          "userquota" : {
            "default" : null,
            "description" : "user quota (bytes). 0 means user can ignore the quota",
            "type" : "integer",
            "nullable" : true
          },
          "usersessionscount" : {
            "default" : null,
            "description" : "Number of active sessions for current user.\n                    Only returned when limitconcurrentlogins is used.",
            "type" : "integer",
            "nullable" : true
          },
          "version" : {
            "default" : null,
            "description" : "Moodle version number",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "firstname", "fullname", "functions", "lang", "lastname", "sitename", "siteurl", "userid", "username", "userpictureurl" ]
      },
      "core_xapi_delete_state_request" : {
        "properties" : {
          "activityId" : {
            "default" : null,
            "description" : "xAPI activity ID IRI",
            "type" : "string",
            "nullable" : true
          },
          "agent" : {
            "default" : null,
            "description" : "The xAPI agent json",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "Component name",
            "type" : "string",
            "nullable" : true
          },
          "registration" : {
            "default" : null,
            "description" : "The xAPI registration UUID",
            "type" : "string",
            "nullable" : true
          },
          "stateId" : {
            "default" : null,
            "description" : "The xAPI state ID",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "activityId", "agent", "component", "stateId" ]
      },
      "core_xapi_delete_states_request" : {
        "properties" : {
          "activityId" : {
            "description" : "xAPI activity ID IRI",
            "type" : "string",
            "nullable" : true
          },
          "agent" : {
            "description" : "The xAPI agent json",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "Component name",
            "type" : "string",
            "nullable" : true
          },
          "registration" : {
            "description" : "The xAPI registration UUID",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "activityId", "agent", "component" ]
      },
      "core_xapi_get_state_request" : {
        "properties" : {
          "activityId" : {
            "description" : "xAPI activity ID IRI",
            "type" : "string",
            "nullable" : true
          },
          "agent" : {
            "description" : "The xAPI agent json",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "Component name",
            "type" : "string",
            "nullable" : true
          },
          "registration" : {
            "description" : "The xAPI registration UUID",
            "type" : "string",
            "nullable" : true
          },
          "stateId" : {
            "description" : "The xAPI state ID",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "activityId", "agent", "component", "stateId" ]
      },
      "core_xapi_get_states_request" : {
        "properties" : {
          "activityId" : {
            "description" : "xAPI activity ID IRI",
            "type" : "string",
            "nullable" : true
          },
          "agent" : {
            "description" : "The xAPI agent json",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "Component name",
            "type" : "string",
            "nullable" : true
          },
          "registration" : {
            "description" : "The xAPI registration UUID",
            "type" : "string",
            "nullable" : true
          },
          "since" : {
            "default" : null,
            "description" : "Filter ids stored since the timestamp (exclusive)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "activityId", "agent", "component" ]
      },
      "core_xapi_post_state_request" : {
        "properties" : {
          "activityId" : {
            "description" : "xAPI activity ID IRI",
            "type" : "string",
            "nullable" : true
          },
          "agent" : {
            "description" : "The xAPI agent json",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "description" : "Component name",
            "type" : "string",
            "nullable" : true
          },
          "registration" : {
            "description" : "The xAPI registration UUID",
            "type" : "string",
            "nullable" : true
          },
          "stateData" : {
            "default" : null,
            "description" : "JSON object with the state data",
            "type" : "string",
            "nullable" : true
          },
          "stateId" : {
            "description" : "The xAPI state ID",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "activityId", "agent", "component", "stateData", "stateId" ]
      },
      "core_xapi_statement_post_request" : {
        "properties" : {
          "component" : {
            "description" : "Component name",
            "type" : "string",
            "nullable" : true
          },
          "requestjson" : {
            "default" : null,
            "description" : "json object with all the statements to post",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "requestjson" ]
      },
      "enrol_guest_get_instance_info_request" : {
        "properties" : {
          "instanceid" : {
            "default" : null,
            "description" : "Instance id of guest enrolment plugin.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "instanceid" ]
      },
      "enrol_guest_get_instance_info_200_response_instanceinfo" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "Id of course",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Id of course enrolment instance",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Name of enrolment plugin",
            "type" : "string",
            "nullable" : true
          },
          "passwordrequired" : {
            "default" : null,
            "description" : "Is a password required?",
            "type" : "boolean",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "Is the enrolment enabled?",
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Type of enrolment plugin",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "id", "name", "passwordrequired", "status", "type" ]
      },
      "enrol_guest_get_instance_info_200_response" : {
        "properties" : {
          "instanceinfo" : {
            "$ref" : "#/components/schemas/enrol_guest_get_instance_info_200_response_instanceinfo"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "instanceinfo" ]
      },
      "enrol_guest_validate_password_request" : {
        "properties" : {
          "instanceid" : {
            "default" : null,
            "description" : "instance id of guest enrolment plugin",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : null,
            "description" : "the course password",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "instanceid", "password" ]
      },
      "enrol_guest_validate_password_200_response" : {
        "properties" : {
          "hint" : {
            "default" : null,
            "description" : "Password hint (if enabled)",
            "type" : "string",
            "nullable" : true
          },
          "validated" : {
            "default" : null,
            "description" : "Whether the password was successfully validated",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "validated" ]
      },
      "enrol_license_enrol_user_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "Id of the course",
            "type" : "integer",
            "nullable" : true
          },
          "instanceid" : {
            "default" : 0,
            "description" : "Instance id oflicenseenrolment plugin.",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "Enrolment key",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "enrol_license_enrol_user_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "status: true if the user is enrolled, false otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "enrol_license_get_instance_info_request" : {
        "properties" : {
          "instanceid" : {
            "default" : null,
            "description" : "instance id of license enrolment plugin.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "instanceid" ]
      },
      "enrol_license_get_instance_info_200_response" : {
        "properties" : {
          "courseid" : {
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          },
          "enrolpassword" : {
            "default" : null,
            "description" : "password required for enrolment",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "id of course enrolment instance",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "name of enrolment plugin",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "status of enrolment plugin",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "type of enrolment plugin",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "id", "name", "status", "type" ]
      },
      "enrol_manual_enrol_users_request_enrolments_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "The course to enrol the user role in",
            "type" : "integer",
            "nullable" : true
          },
          "roleid" : {
            "description" : "Role to assign to the user",
            "type" : "integer",
            "nullable" : true
          },
          "suspend" : {
            "description" : "set to 1 to suspend the enrolment",
            "type" : "integer",
            "nullable" : true
          },
          "timeend" : {
            "description" : "Timestamp when the enrolment end",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "description" : "Timestamp when the enrolment start",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user that is going to be enrolled",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "enrol_manual_enrol_users_request" : {
        "properties" : {
          "enrolments" : {
            "items" : {
              "$ref" : "#/components/schemas/enrol_manual_enrol_users_request_enrolments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "enrolments" ]
      },
      "enrol_manual_unenrol_users_request_enrolments_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "The course to unenrol the user from",
            "type" : "integer",
            "nullable" : true
          },
          "roleid" : {
            "default" : null,
            "description" : "The user role",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user that is going to be unenrolled",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "enrol_manual_unenrol_users_request" : {
        "properties" : {
          "enrolments" : {
            "items" : {
              "$ref" : "#/components/schemas/enrol_manual_unenrol_users_request_enrolments_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "enrolments" ]
      },
      "enrol_meta_add_instances_request_instances_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "ID of the course where meta enrolment is linked to.",
            "type" : "string",
            "nullable" : true
          },
          "creategroup" : {
            "default" : false,
            "description" : "Creates group in meta course named after linked course and puts all enrolled users in this group",
            "type" : "boolean",
            "nullable" : true
          },
          "metacourseid" : {
            "default" : null,
            "description" : "ID of the course where meta enrolment is added.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "enrol_meta_add_instances_request" : {
        "properties" : {
          "instances" : {
            "items" : {
              "$ref" : "#/components/schemas/enrol_meta_add_instances_request_instances_inner"
            },
            "type" : "array"
          }
        }
      },
      "enrol_meta_delete_instances_request_instances_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "ID of the course where meta enrolment is linked to.",
            "type" : "string",
            "nullable" : true
          },
          "metacourseid" : {
            "default" : null,
            "description" : "ID of the course with meta enrolment.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "enrol_meta_delete_instances_request" : {
        "properties" : {
          "instances" : {
            "items" : {
              "$ref" : "#/components/schemas/enrol_meta_delete_instances_request_instances_inner"
            },
            "type" : "array"
          }
        }
      },
      "enrol_self_enrol_user_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Id of the course",
            "type" : "integer",
            "nullable" : true
          },
          "instanceid" : {
            "default" : 0,
            "description" : "Instance id of self enrolment plugin.",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "Enrolment key",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "enrol_self_enrol_user_200_response" : {
        "properties" : {
          "status" : {
            "description" : "status: true if the user is enrolled, false otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "enrol_self_get_instance_info_request" : {
        "properties" : {
          "instanceid" : {
            "default" : null,
            "description" : "instance id of self enrolment plugin.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "instanceid" ]
      },
      "enrol_self_get_instance_info_200_response" : {
        "properties" : {
          "courseid" : {
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          },
          "enrolpassword" : {
            "description" : "password required for enrolment",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "id of course enrolment instance",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "name of enrolment plugin",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "description" : "status of enrolment plugin",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "type of enrolment plugin",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "id", "name", "status", "type" ]
      },
      "gradereport_overview_get_course_grades_request" : {
        "properties" : {
          "userid" : {
            "default" : 0,
            "description" : "Get grades for this user (optional, default current)",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "gradereport_overview_get_course_grades_200_response_grades_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Grade formatted",
            "type" : "string",
            "nullable" : true
          },
          "rank" : {
            "default" : null,
            "description" : "Your rank in the course",
            "type" : "integer",
            "nullable" : true
          },
          "rawgrade" : {
            "default" : null,
            "description" : "Raw grade, not formatted",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradereport_overview_get_course_grades_200_response" : {
        "properties" : {
          "grades" : {
            "items" : {
              "$ref" : "#/components/schemas/gradereport_overview_get_course_grades_200_response_grades_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grades" ]
      },
      "gradereport_overview_view_grade_report_request" : {
        "properties" : {
          "courseid" : {
            "description" : "id of the course",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "id of the user, 0 means current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "gradereport_singleview_get_grade_items_for_search_widget_200_response_gradeitems_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "ID of the grade item",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "The full name of the grade item",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradereport_singleview_get_grade_items_for_search_widget_200_response" : {
        "properties" : {
          "gradeitems" : {
            "items" : {
              "$ref" : "#/components/schemas/gradereport_singleview_get_grade_items_for_search_widget_200_response_gradeitems_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "gradeitems" ]
      },
      "gradereport_user_get_access_information_request" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "Course to check.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "gradereport_user_get_access_information_200_response" : {
        "properties" : {
          "canviewallgrades" : {
            "default" : null,
            "description" : "Whether the user can view all users grades in the course.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewmygrades" : {
            "default" : null,
            "description" : "Whether the user can view his grades in the course.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewusergradereport" : {
            "default" : null,
            "description" : "Whether the user can view the user grade report.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "canviewallgrades", "canviewmygrades", "canviewusergradereport" ]
      },
      "gradereport_user_get_grade_items_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course Id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Get users from this group only",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "Return grades only for this user (optional)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "gradereport_user_get_grade_items_200_response_usergrades_inner_gradeitems_inner" : {
        "default" : null,
        "description" : "Grade items",
        "properties" : {
          "averageformatted" : {
            "default" : null,
            "description" : "Grade average",
            "type" : "string",
            "nullable" : true
          },
          "categoryid" : {
            "default" : null,
            "description" : "Grade item category id",
            "type" : "integer",
            "nullable" : true
          },
          "cmid" : {
            "default" : null,
            "description" : "Course module id (if type mod)",
            "type" : "integer",
            "nullable" : true
          },
          "feedback" : {
            "default" : null,
            "description" : "Grade feedback",
            "type" : "string",
            "nullable" : true
          },
          "feedbackformat" : {
            "description" : "feedback format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "gradedategraded" : {
            "default" : null,
            "description" : "Grade graded date",
            "type" : "integer",
            "nullable" : true
          },
          "gradedatesubmitted" : {
            "default" : null,
            "description" : "Grade submit date",
            "type" : "integer",
            "nullable" : true
          },
          "gradeformatted" : {
            "default" : null,
            "description" : "The grade formatted",
            "type" : "string",
            "nullable" : true
          },
          "gradehiddenbydate" : {
            "default" : null,
            "description" : "Grade hidden by date?",
            "type" : "boolean",
            "nullable" : true
          },
          "gradeishidden" : {
            "default" : null,
            "description" : "Grade is hidden?",
            "type" : "boolean",
            "nullable" : true
          },
          "gradeislocked" : {
            "default" : null,
            "description" : "Grade is locked?",
            "type" : "boolean",
            "nullable" : true
          },
          "gradeisoverridden" : {
            "default" : null,
            "description" : "Grade overridden?",
            "type" : "boolean",
            "nullable" : true
          },
          "grademax" : {
            "default" : null,
            "description" : "Grade max",
            "type" : "number",
            "nullable" : true
          },
          "grademin" : {
            "default" : null,
            "description" : "Grade min",
            "type" : "number",
            "nullable" : true
          },
          "gradeneedsupdate" : {
            "default" : null,
            "description" : "Grade needs update?",
            "type" : "boolean",
            "nullable" : true
          },
          "graderaw" : {
            "default" : null,
            "description" : "Grade raw",
            "type" : "number",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Grade item id",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "default" : null,
            "description" : "Grade item idnumber",
            "type" : "string",
            "nullable" : true
          },
          "iteminstance" : {
            "default" : null,
            "description" : "Grade item instance",
            "type" : "integer",
            "nullable" : true
          },
          "itemmodule" : {
            "default" : null,
            "description" : "Grade item module",
            "type" : "string",
            "nullable" : true
          },
          "itemname" : {
            "default" : null,
            "description" : "Grade item name",
            "type" : "string",
            "nullable" : true
          },
          "itemnumber" : {
            "default" : null,
            "description" : "Grade item item number",
            "type" : "integer",
            "nullable" : true
          },
          "itemtype" : {
            "default" : null,
            "description" : "Grade item type",
            "type" : "string",
            "nullable" : true
          },
          "lettergradeformatted" : {
            "default" : null,
            "description" : "Letter grade",
            "type" : "string",
            "nullable" : true
          },
          "locked" : {
            "default" : null,
            "description" : "Grade item for user locked?",
            "type" : "boolean",
            "nullable" : true
          },
          "numusers" : {
            "default" : null,
            "description" : "Num users in course",
            "type" : "integer",
            "nullable" : true
          },
          "outcomeid" : {
            "default" : null,
            "description" : "Outcome id",
            "type" : "integer",
            "nullable" : true
          },
          "percentageformatted" : {
            "default" : null,
            "description" : "Percentage",
            "type" : "string",
            "nullable" : true
          },
          "rangeformatted" : {
            "default" : null,
            "description" : "Range formatted",
            "type" : "string",
            "nullable" : true
          },
          "rank" : {
            "default" : null,
            "description" : "Rank in the course",
            "type" : "integer",
            "nullable" : true
          },
          "scaleid" : {
            "default" : null,
            "description" : "Scale id",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "Status",
            "type" : "string",
            "nullable" : true
          },
          "weightformatted" : {
            "default" : null,
            "description" : "Weight",
            "type" : "string",
            "nullable" : true
          },
          "weightraw" : {
            "default" : null,
            "description" : "Weight raw",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradereport_user_get_grade_items_200_response_usergrades_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "courseidnumber" : {
            "default" : null,
            "description" : "course idnumber",
            "type" : "string",
            "nullable" : true
          },
          "gradeitems" : {
            "items" : {
              "$ref" : "#/components/schemas/gradereport_user_get_grade_items_200_response_usergrades_inner_gradeitems_inner"
            },
            "type" : "array"
          },
          "maxdepth" : {
            "default" : null,
            "description" : "table max depth (needed for printing it)",
            "type" : "integer",
            "nullable" : true
          },
          "userfullname" : {
            "description" : "user fullname",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "useridnumber" : {
            "default" : null,
            "description" : "user idnumber",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradereport_user_get_grade_items_200_response" : {
        "properties" : {
          "usergrades" : {
            "items" : {
              "$ref" : "#/components/schemas/gradereport_user_get_grade_items_200_response_usergrades_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "usergrades" ]
      },
      "gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_average" : {
        "properties" : {
          "class" : {
            "default" : null,
            "description" : "class",
            "type" : "string",
            "nullable" : true
          },
          "content" : {
            "default" : null,
            "description" : "cell content",
            "type" : "string",
            "nullable" : true
          },
          "headers" : {
            "default" : null,
            "description" : "headers",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "class", "content", "headers" ]
      },
      "gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal" : {
        "properties" : {
          "class" : {
            "description" : "class",
            "type" : "string",
            "nullable" : true
          },
          "content" : {
            "description" : "cell content",
            "type" : "string",
            "nullable" : true
          },
          "headers" : {
            "description" : "headers",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "class", "content", "headers" ]
      },
      "gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_itemname" : {
        "properties" : {
          "class" : {
            "description" : "class",
            "type" : "string",
            "nullable" : true
          },
          "colspan" : {
            "default" : null,
            "description" : "col span",
            "type" : "integer",
            "nullable" : true
          },
          "content" : {
            "description" : "cell content",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "id",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "class", "colspan", "content", "id" ]
      },
      "gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_leader" : {
        "properties" : {
          "class" : {
            "description" : "class",
            "type" : "string",
            "nullable" : true
          },
          "rowspan" : {
            "default" : null,
            "description" : "row span",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "class", "rowspan" ]
      },
      "gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner" : {
        "default" : null,
        "description" : "table",
        "properties" : {
          "average" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_average"
          },
          "contributiontocoursetotal" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          },
          "feedback" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          },
          "grade" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          },
          "itemname" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_itemname"
          },
          "leader" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_leader"
          },
          "lettergrade" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          },
          "parentcategories" : {
            "items" : {
              "default" : null,
              "description" : "Parent grade category ID.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "percentage" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          },
          "range" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          },
          "rank" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          },
          "weight" : {
            "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner_contributiontocoursetotal"
          }
        },
        "nullable" : false
      },
      "gradereport_user_get_grades_table_200_response_tables_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "maxdepth" : {
            "description" : "table max depth (needed for printing it)",
            "type" : "integer",
            "nullable" : true
          },
          "tabledata" : {
            "items" : {
              "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner"
            },
            "type" : "array"
          },
          "userfullname" : {
            "description" : "user fullname",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradereport_user_get_grades_table_200_response" : {
        "properties" : {
          "tables" : {
            "items" : {
              "$ref" : "#/components/schemas/gradereport_user_get_grades_table_200_response_tables_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "tables" ]
      },
      "gradingform_guide_grader_gradingpanel_fetch_200_response_grade_comments_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "The comment value",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Comment id",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "default" : null,
            "description" : "The sortorder of this comment",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_guide_grader_gradingpanel_fetch_200_response_grade_criterion_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "The description of the criterion",
            "type" : "string",
            "nullable" : true
          },
          "descriptionmarkers" : {
            "default" : null,
            "description" : "The description of the criterion for markers",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The id of the criterion",
            "type" : "integer",
            "nullable" : true
          },
          "maxscore" : {
            "default" : null,
            "description" : "The maximum score for this criterion",
            "type" : "number",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The name of the criterion",
            "type" : "string",
            "nullable" : true
          },
          "remark" : {
            "default" : null,
            "description" : "Any remarks for this criterion for the user being assessed",
            "type" : "string",
            "nullable" : true
          },
          "score" : {
            "default" : null,
            "description" : "The current score for user being assessed",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_guide_grader_gradingpanel_fetch_200_response_grade" : {
        "properties" : {
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_fetch_200_response_grade_comments_inner"
            },
            "type" : "array"
          },
          "criterion" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_fetch_200_response_grade_criterion_inner"
            },
            "type" : "array"
          },
          "gradedby" : {
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "hascomments" : {
            "default" : null,
            "description" : "Whether there are any frequently-used comments",
            "type" : "boolean",
            "nullable" : true
          },
          "instanceid" : {
            "default" : null,
            "description" : "The id of the current grading instance",
            "type" : "integer",
            "nullable" : true
          },
          "maxgrade" : {
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "comments", "criterion", "gradedby", "hascomments", "instanceid", "maxgrade", "timecreated", "timemodified", "usergrade" ]
      },
      "gradingform_guide_grader_gradingpanel_fetch_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_fetch_200_response_grade"
          },
          "hasgrade" : {
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "gradingform_guide_grader_gradingpanel_store_200_response_grade_comments_inner" : {
        "properties" : {
          "description" : {
            "description" : "The comment value",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Comment id",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "description" : "The sortorder of this comment",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_guide_grader_gradingpanel_store_200_response_grade_criterion_inner" : {
        "properties" : {
          "description" : {
            "description" : "The description of the criterion",
            "type" : "string",
            "nullable" : true
          },
          "descriptionmarkers" : {
            "description" : "The description of the criterion for markers",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "The id of the criterion",
            "type" : "integer",
            "nullable" : true
          },
          "maxscore" : {
            "description" : "The maximum score for this criterion",
            "type" : "number",
            "nullable" : true
          },
          "name" : {
            "description" : "The name of the criterion",
            "type" : "string",
            "nullable" : true
          },
          "remark" : {
            "description" : "Any remarks for this criterion for the user being assessed",
            "type" : "string",
            "nullable" : true
          },
          "score" : {
            "description" : "The current score for user being assessed",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_guide_grader_gradingpanel_store_200_response_grade" : {
        "properties" : {
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_store_200_response_grade_comments_inner"
            },
            "type" : "array"
          },
          "criterion" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_store_200_response_grade_criterion_inner"
            },
            "type" : "array"
          },
          "gradedby" : {
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "hascomments" : {
            "description" : "Whether there are any frequently-used comments",
            "type" : "boolean",
            "nullable" : true
          },
          "instanceid" : {
            "description" : "The id of the current grading instance",
            "type" : "integer",
            "nullable" : true
          },
          "maxgrade" : {
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "comments", "criterion", "gradedby", "hascomments", "instanceid", "maxgrade", "timecreated", "timemodified", "usergrade" ]
      },
      "gradingform_guide_grader_gradingpanel_store_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/gradingform_guide_grader_gradingpanel_store_200_response_grade"
          },
          "hasgrade" : {
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "gradingform_rubric_grader_gradingpanel_fetch_200_response_grade_criteria_inner_levels_inner" : {
        "default" : null,
        "properties" : {
          "checked" : {
            "default" : null,
            "description" : "Selected flag",
            "type" : "boolean",
            "nullable" : true
          },
          "criterionid" : {
            "default" : null,
            "description" : "ID of the criterion this matches to",
            "type" : "integer",
            "nullable" : true
          },
          "definition" : {
            "default" : null,
            "description" : "Definition of the level",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of level",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "default" : null,
            "description" : "What this level is worth",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_rubric_grader_gradingpanel_fetch_200_response_grade_criteria_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "Description of the Criteria",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of the Criteria",
            "type" : "integer",
            "nullable" : true
          },
          "levels" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_fetch_200_response_grade_criteria_inner_levels_inner"
            },
            "type" : "array"
          },
          "remark" : {
            "description" : "Any remarks for this criterion for the user being assessed",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_rubric_grader_gradingpanel_fetch_200_response_grade" : {
        "properties" : {
          "canedit" : {
            "default" : null,
            "description" : "Can the user edit this",
            "type" : "boolean",
            "nullable" : true
          },
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_fetch_200_response_grade_criteria_inner"
            },
            "type" : "array"
          },
          "gradedby" : {
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "description" : "The id of the current grading instance",
            "type" : "integer",
            "nullable" : true
          },
          "maxgrade" : {
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "rubricmode" : {
            "default" : null,
            "description" : "The mode i.e. evaluate editable",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "canedit", "criteria", "gradedby", "instanceid", "maxgrade", "rubricmode", "timecreated", "timemodified", "usergrade" ]
      },
      "gradingform_rubric_grader_gradingpanel_fetch_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_fetch_200_response_grade"
          },
          "hasgrade" : {
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "gradingform_rubric_grader_gradingpanel_store_200_response_grade_criteria_inner_levels_inner" : {
        "properties" : {
          "checked" : {
            "description" : "Selected flag",
            "type" : "boolean",
            "nullable" : true
          },
          "criterionid" : {
            "description" : "ID of the criterion this matches to",
            "type" : "integer",
            "nullable" : true
          },
          "definition" : {
            "description" : "Definition of the level",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of level",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "description" : "What this level is worth",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_rubric_grader_gradingpanel_store_200_response_grade_criteria_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "Description of the Criteria",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the Criteria",
            "type" : "integer",
            "nullable" : true
          },
          "levels" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_store_200_response_grade_criteria_inner_levels_inner"
            },
            "type" : "array"
          },
          "remark" : {
            "description" : "Any remarks for this criterion for the user being assessed",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "gradingform_rubric_grader_gradingpanel_store_200_response_grade" : {
        "properties" : {
          "canedit" : {
            "description" : "Can the user edit this",
            "type" : "boolean",
            "nullable" : true
          },
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_store_200_response_grade_criteria_inner"
            },
            "type" : "array"
          },
          "gradedby" : {
            "description" : "The assumed grader of this grading instance",
            "type" : "string",
            "nullable" : true
          },
          "instanceid" : {
            "description" : "The id of the current grading instance",
            "type" : "integer",
            "nullable" : true
          },
          "maxgrade" : {
            "description" : "Max possible grade",
            "type" : "string",
            "nullable" : true
          },
          "rubricmode" : {
            "description" : "The mode i.e. evaluate editable",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "The time that the grade was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "The time that the grade was last updated",
            "type" : "integer",
            "nullable" : true
          },
          "usergrade" : {
            "description" : "Current user grade",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "canedit", "criteria", "gradedby", "instanceid", "maxgrade", "rubricmode", "timecreated", "timemodified", "usergrade" ]
      },
      "gradingform_rubric_grader_gradingpanel_store_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/gradingform_rubric_grader_gradingpanel_store_200_response_grade"
          },
          "hasgrade" : {
            "description" : "Does the user have a grade?",
            "type" : "boolean",
            "nullable" : true
          },
          "templatename" : {
            "description" : "The template to use when rendering this data",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade", "hasgrade", "templatename" ]
      },
      "local_iomad_learningpath_activate_request" : {
        "properties" : {
          "pathid" : {
            "default" : null,
            "description" : "ID of Learning Path",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "Active (1) / deactivate (0)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pathid", "state" ]
      },
      "local_iomad_learningpath_addcourses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "default" : null,
              "description" : "Course ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "groupid" : {
            "default" : 0,
            "description" : "ID of group. If 0 just add to lowest numbered group",
            "type" : "integer",
            "nullable" : true
          },
          "pathid" : {
            "default" : null,
            "description" : "ID of Iomad Learning Path",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseids", "pathid" ]
      },
      "local_iomad_learningpath_addusers_request" : {
        "properties" : {
          "pathid" : {
            "description" : "ID of Iomad Learning Path",
            "type" : "integer",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "description" : "User ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "pathid", "userids" ]
      },
      "local_iomad_learningpath_copypath_request" : {
        "properties" : {
          "pathid" : {
            "description" : "ID of Iomad Learning Path",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pathid" ]
      },
      "local_iomad_learningpath_getcourses_request" : {
        "properties" : {
          "groupid" : {
            "default" : 0,
            "description" : "ID of Iomad Learning Path group (0 = return all)",
            "type" : "integer",
            "nullable" : true
          },
          "pathid" : {
            "description" : "ID of Iomad Learning Path",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pathid" ]
      },
      "local_iomad_learningpath_getprospectivecourses_request" : {
        "properties" : {
          "category" : {
            "default" : 0,
            "description" : "Show only courses in this category (and children)",
            "type" : "integer",
            "nullable" : true
          },
          "filter" : {
            "default" : "",
            "description" : "Filter course list returned",
            "type" : "string",
            "nullable" : true
          },
          "pathid" : {
            "default" : null,
            "description" : "ID of (target) learning path",
            "type" : "integer",
            "nullable" : true
          },
          "program" : {
            "default" : 0,
            "description" : "Show only courses assigned to this program license",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pathid" ]
      },
      "local_iomad_learningpath_getprospectiveusers_request" : {
        "properties" : {
          "companyid" : {
            "default" : null,
            "description" : "ID of Iomad Company",
            "type" : "integer",
            "nullable" : true
          },
          "filter" : {
            "default" : "",
            "description" : "Filter user list returned",
            "type" : "string",
            "nullable" : true
          },
          "pathid" : {
            "default" : null,
            "description" : "ID learning path",
            "type" : "integer",
            "nullable" : true
          },
          "profilefieldid" : {
            "default" : 0,
            "description" : "Filter by user profilefield",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "companyid", "pathid" ]
      },
      "local_iomad_learningpath_getusers_request" : {
        "properties" : {
          "companyid" : {
            "description" : "ID of Iomad Company",
            "type" : "integer",
            "nullable" : true
          },
          "pathid" : {
            "description" : "ID learning path",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "companyid", "pathid" ]
      },
      "local_iomad_learningpath_ordercourses_request_courses_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "id of course",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "id of group",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "local_iomad_learningpath_ordercourses_request" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/local_iomad_learningpath_ordercourses_request_courses_inner"
            },
            "type" : "array"
          },
          "pathid" : {
            "description" : "ID of Iomad Learning Path",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courses", "pathid" ]
      },
      "local_iomad_learningpath_removecourses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "description" : "Course ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "pathid" : {
            "description" : "ID of Iomad Learning Path",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseids", "pathid" ]
      },
      "local_iomad_learningpath_removeusers_request" : {
        "properties" : {
          "pathid" : {
            "description" : "ID of Iomad Learning Path",
            "type" : "integer",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "default" : null,
              "description" : "User IDs",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "pathid", "userids" ]
      },
      "media_videojs_get_language_request" : {
        "properties" : {
          "lang" : {
            "default" : null,
            "description" : "language",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "lang" ]
      },
      "message_airnotifier_are_notification_preferences_configured_request" : {
        "properties" : {
          "userids" : {
            "items" : {
              "description" : "user ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "userids" ]
      },
      "message_airnotifier_are_notification_preferences_configured_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "configured" : {
            "default" : null,
            "description" : "1 if the user preferences have been configured and 0 if not",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "userid id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "message_airnotifier_are_notification_preferences_configured_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/message_airnotifier_are_notification_preferences_configured_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "message_airnotifier_enable_device_request" : {
        "properties" : {
          "deviceid" : {
            "default" : null,
            "description" : "The device id",
            "type" : "integer",
            "nullable" : true
          },
          "enable" : {
            "default" : null,
            "description" : "True for enable the device, false otherwise",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "deviceid", "enable" ]
      },
      "message_airnotifier_enable_device_200_response" : {
        "properties" : {
          "success" : {
            "default" : null,
            "description" : "True if success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "success" ]
      },
      "message_airnotifier_get_user_devices_request" : {
        "properties" : {
          "appid" : {
            "default" : null,
            "description" : "App unique id (usually a reversed domain)",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "User id, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "appid" ]
      },
      "message_airnotifier_get_user_devices_200_response_devices_inner" : {
        "default" : null,
        "properties" : {
          "appid" : {
            "description" : "The app id, something like com.moodle.moodlemobile",
            "type" : "string",
            "nullable" : true
          },
          "enable" : {
            "default" : null,
            "description" : "Whether the device is enabled or not",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Device id (in the message_airnotifier table)",
            "type" : "integer",
            "nullable" : true
          },
          "model" : {
            "default" : null,
            "description" : "The device model 'Nexus4' or 'iPad1,1' etc.",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The device name, 'occam' or 'iPhone' etc.",
            "type" : "string",
            "nullable" : true
          },
          "platform" : {
            "default" : null,
            "description" : "The device platform 'iOS' or 'Android' etc.",
            "type" : "string",
            "nullable" : true
          },
          "pushid" : {
            "default" : null,
            "description" : "The device PUSH token/key/identifier/registration id",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "uuid" : {
            "default" : null,
            "description" : "The device UUID",
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "default" : null,
            "description" : "The device version '6.1.2' or '4.2.2' etc.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "message_airnotifier_get_user_devices_200_response" : {
        "properties" : {
          "devices" : {
            "items" : {
              "$ref" : "#/components/schemas/message_airnotifier_get_user_devices_200_response_devices_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "devices" ]
      },
      "message_popup_get_popup_notifications_request" : {
        "properties" : {
          "limit" : {
            "default" : 0,
            "description" : "the number of results to return",
            "type" : "integer",
            "nullable" : true
          },
          "newestfirst" : {
            "default" : true,
            "description" : "true for ordering by newest first, false for oldest first",
            "type" : "boolean",
            "nullable" : true
          },
          "offset" : {
            "default" : 0,
            "description" : "offset the result set by a given amount",
            "type" : "integer",
            "nullable" : true
          },
          "useridto" : {
            "default" : null,
            "description" : "the user id who received the message, 0 for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "useridto" ]
      },
      "message_popup_get_popup_notifications_200_response_notifications_inner" : {
        "default" : null,
        "description" : "message",
        "properties" : {
          "component" : {
            "description" : "The component that generated the notification",
            "type" : "string",
            "nullable" : true
          },
          "contexturl" : {
            "description" : "Context URL",
            "type" : "string",
            "nullable" : true
          },
          "contexturlname" : {
            "description" : "Context URL link name",
            "type" : "string",
            "nullable" : true
          },
          "customdata" : {
            "description" : "Custom data to be passed to the message processor.\n                                The data here is serialised using json_encode().",
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "default" : null,
            "description" : "notification deletion status",
            "type" : "boolean",
            "nullable" : true
          },
          "eventtype" : {
            "description" : "The type of notification",
            "type" : "string",
            "nullable" : true
          },
          "fullmessage" : {
            "description" : "The message",
            "type" : "string",
            "nullable" : true
          },
          "fullmessageformat" : {
            "description" : "fullmessage format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "fullmessagehtml" : {
            "description" : "The message in html",
            "type" : "string",
            "nullable" : true
          },
          "iconurl" : {
            "default" : null,
            "description" : "URL for notification icon",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Notification id (this is not guaranteed to be unique\n                                within this result set)",
            "type" : "integer",
            "nullable" : true
          },
          "read" : {
            "default" : null,
            "description" : "notification read status",
            "type" : "boolean",
            "nullable" : true
          },
          "shortenedsubject" : {
            "default" : null,
            "description" : "The notification subject shortened\n                                with ellipsis",
            "type" : "string",
            "nullable" : true
          },
          "smallmessage" : {
            "description" : "The shorten message",
            "type" : "string",
            "nullable" : true
          },
          "subject" : {
            "default" : null,
            "description" : "The notification subject",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "description" : "The message text formated",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timecreatedpretty" : {
            "default" : null,
            "description" : "Time created in a pretty format",
            "type" : "string",
            "nullable" : true
          },
          "timeread" : {
            "description" : "Time read",
            "type" : "integer",
            "nullable" : true
          },
          "useridfrom" : {
            "description" : "User from id",
            "type" : "integer",
            "nullable" : true
          },
          "useridto" : {
            "description" : "User to id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "message_popup_get_popup_notifications_200_response" : {
        "properties" : {
          "notifications" : {
            "items" : {
              "$ref" : "#/components/schemas/message_popup_get_popup_notifications_200_response_notifications_inner"
            },
            "type" : "array"
          },
          "unreadcount" : {
            "default" : null,
            "description" : "the number of unread message for the given user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "notifications", "unreadcount" ]
      },
      "mod_assign_copy_previous_attempt_request" : {
        "properties" : {
          "assignmentid" : {
            "default" : null,
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignmentid" ]
      },
      "mod_assign_get_assignments_request" : {
        "properties" : {
          "capabilities" : {
            "items" : {
              "default" : null,
              "description" : "capability",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "courseids" : {
            "items" : {
              "default" : null,
              "description" : "course id, empty for retrieving all the courses where the user is enroled in",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "includenotenrolledcourses" : {
            "default" : false,
            "description" : "whether to return courses that the user can see\n                                                                    even if is not enroled in. This requires the parameter courseids\n                                                                    to not be empty.",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_assign_get_assignments_200_response_courses_inner_assignments_inner_configs_inner" : {
        "default" : null,
        "description" : "assignment configuration object",
        "properties" : {
          "assignment" : {
            "default" : null,
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "assign_plugin_config id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : true
          },
          "plugin" : {
            "default" : null,
            "description" : "plugin",
            "type" : "string",
            "nullable" : true
          },
          "subtype" : {
            "default" : null,
            "description" : "subtype",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_assignments_200_response_courses_inner_assignments_inner" : {
        "default" : null,
        "description" : "assignment information object",
        "properties" : {
          "activity" : {
            "default" : null,
            "description" : "Description of activity",
            "type" : "string",
            "nullable" : true
          },
          "activityattachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "activityformat" : {
            "default" : null,
            "description" : "activity format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "allowsubmissionsfromdate" : {
            "default" : null,
            "description" : "allow submissions from date",
            "type" : "integer",
            "nullable" : true
          },
          "attemptreopenmethod" : {
            "default" : null,
            "description" : "method used to control opening new attempts",
            "type" : "string",
            "nullable" : true
          },
          "blindmarking" : {
            "default" : null,
            "description" : "if enabled, hide identities until reveal identities actioned",
            "type" : "integer",
            "nullable" : true
          },
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "completionsubmit" : {
            "default" : null,
            "description" : "if enabled, set activity as complete following submission",
            "type" : "integer",
            "nullable" : true
          },
          "configs" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_assignments_200_response_courses_inner_assignments_inner_configs_inner"
            },
            "type" : "array"
          },
          "course" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "cutoffdate" : {
            "default" : null,
            "description" : "date after which submission is not accepted without an extension",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : null,
            "description" : "assignment due date",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "grade type",
            "type" : "integer",
            "nullable" : true
          },
          "gradingduedate" : {
            "default" : null,
            "description" : "the expected date for marking the submissions",
            "type" : "integer",
            "nullable" : true
          },
          "hidegrader" : {
            "default" : null,
            "description" : "If enabled, hide grader to student",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "default" : null,
            "description" : "assignment intro, not allways returned because it deppends on the activity configuration",
            "type" : "string",
            "nullable" : true
          },
          "introattachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "default" : null,
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "markingallocation" : {
            "default" : null,
            "description" : "enable marking allocation",
            "type" : "integer",
            "nullable" : true
          },
          "markingworkflow" : {
            "default" : null,
            "description" : "enable marking workflow",
            "type" : "integer",
            "nullable" : true
          },
          "maxattempts" : {
            "default" : null,
            "description" : "maximum number of attempts allowed",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "assignment name",
            "type" : "string",
            "nullable" : true
          },
          "nosubmissions" : {
            "default" : null,
            "description" : "no submissions",
            "type" : "integer",
            "nullable" : true
          },
          "preventsubmissionnotingroup" : {
            "default" : null,
            "description" : "Prevent submission not in group",
            "type" : "integer",
            "nullable" : true
          },
          "requireallteammemberssubmit" : {
            "default" : null,
            "description" : "if enabled, all team members must submit",
            "type" : "integer",
            "nullable" : true
          },
          "requiresubmissionstatement" : {
            "default" : null,
            "description" : "student must accept submission statement",
            "type" : "integer",
            "nullable" : true
          },
          "revealidentities" : {
            "default" : null,
            "description" : "show identities for a blind marking assignment",
            "type" : "integer",
            "nullable" : true
          },
          "sendlatenotifications" : {
            "default" : null,
            "description" : "send notifications",
            "type" : "integer",
            "nullable" : true
          },
          "sendnotifications" : {
            "description" : "send notifications",
            "type" : "integer",
            "nullable" : true
          },
          "sendstudentnotifications" : {
            "default" : null,
            "description" : "send student notifications (default)",
            "type" : "integer",
            "nullable" : true
          },
          "submissionattachments" : {
            "default" : null,
            "description" : "Flag to only show files during submission",
            "type" : "integer",
            "nullable" : true
          },
          "submissiondrafts" : {
            "default" : null,
            "description" : "submissions drafts",
            "type" : "integer",
            "nullable" : true
          },
          "submissionstatement" : {
            "default" : null,
            "description" : "Submission statement formatted.",
            "type" : "string",
            "nullable" : true
          },
          "submissionstatementformat" : {
            "default" : null,
            "description" : "submissionstatement format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "teamsubmission" : {
            "default" : null,
            "description" : "if enabled, students submit as a team",
            "type" : "integer",
            "nullable" : true
          },
          "teamsubmissiongroupingid" : {
            "default" : null,
            "description" : "the grouping id for the team submission groups",
            "type" : "integer",
            "nullable" : true
          },
          "timelimit" : {
            "default" : null,
            "description" : "Time limit to complete assigment",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "last time assignment was modified",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_assignments_200_response_courses_inner" : {
        "default" : null,
        "description" : "course information object",
        "properties" : {
          "assignments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_assignments_200_response_courses_inner_assignments_inner"
            },
            "type" : "array"
          },
          "fullname" : {
            "description" : "course full name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "shortname" : {
            "description" : "course short name",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "last time modified",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_assignments_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "default" : null,
            "description" : "item can be 'course' (errorcode 1 or 2) or 'module' (errorcode 1)",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "When item is a course then itemid is a course id. When the item is a module then itemid is a module id",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "default" : null,
            "description" : "errorcode can be 1 (no access rights) or 2 (not enrolled or no permissions)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_assignments_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_assignments_200_response_courses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_assignments_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "mod_assign_get_grades_request" : {
        "properties" : {
          "assignmentids" : {
            "items" : {
              "default" : null,
              "description" : "assignment id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "since" : {
            "default" : 0,
            "description" : "timestamp, only return records where timemodified >= since",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignmentids" ]
      },
      "mod_assign_get_grades_200_response_assignments_inner_grades_inner" : {
        "default" : null,
        "description" : "grade information",
        "properties" : {
          "assignment" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "attemptnumber" : {
            "default" : null,
            "description" : "attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "grade",
            "type" : "string",
            "nullable" : true
          },
          "gradefordisplay" : {
            "default" : null,
            "description" : "grade rendered into a format suitable for display",
            "type" : "string",
            "nullable" : true
          },
          "grader" : {
            "default" : null,
            "description" : "grader, -1 if grader is hidden",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "grade id",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "grade creation time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "grade last modified time",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_grades_200_response_assignments_inner" : {
        "default" : null,
        "properties" : {
          "assignmentid" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "grades" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_grades_200_response_assignments_inner_grades_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_assign_get_grades_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "default" : null,
            "description" : "item is always 'assignment'",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "when errorcode is 3 then itemid is an assignment id. When errorcode is 1, itemid is a course module id",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "default" : null,
            "description" : "errorcode can be 3 (no grades found) or 1 (no permission to get grades)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_grades_200_response" : {
        "properties" : {
          "assignments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_grades_200_response_assignments_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_grades_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assignments" ]
      },
      "mod_assign_get_participant_request" : {
        "properties" : {
          "assignid" : {
            "default" : null,
            "description" : "assign instance id",
            "type" : "integer",
            "nullable" : true
          },
          "embeduser" : {
            "default" : false,
            "description" : "user id",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignid", "userid" ]
      },
      "mod_assign_get_participant_200_response_user" : {
        "properties" : {
          "address" : {
            "description" : "Postal address",
            "type" : "string",
            "nullable" : true
          },
          "auth" : {
            "description" : "Auth plugins include manual, ldap, etc",
            "type" : "string",
            "nullable" : true
          },
          "calendartype" : {
            "description" : "Calendar type such as \"gregorian\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "description" : "Home city of the user",
            "type" : "string",
            "nullable" : true
          },
          "confirmed" : {
            "description" : "Active user: 1 if confirmed, 0 otherwise",
            "type" : "boolean",
            "nullable" : true
          },
          "country" : {
            "description" : "Home country code of the user, such as AU or CZ",
            "type" : "string",
            "nullable" : true
          },
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response_users_inner_customfields_inner"
            },
            "type" : "array"
          },
          "department" : {
            "description" : "department",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "description" : "User profile description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "int format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "email" : {
            "description" : "An email address - allow email as root@localhost",
            "type" : "string",
            "nullable" : true
          },
          "firstaccess" : {
            "description" : "first access to the site (0 if never)",
            "type" : "integer",
            "nullable" : true
          },
          "firstname" : {
            "description" : "The first name(s) of the user",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "description" : "The fullname of the user",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "An arbitrary ID code number perhaps from the institution",
            "type" : "string",
            "nullable" : true
          },
          "institution" : {
            "description" : "institution",
            "type" : "string",
            "nullable" : true
          },
          "interests" : {
            "description" : "user interests (separated by commas)",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "description" : "Language code such as \"en\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "lastaccess" : {
            "description" : "last access to the site (0 if never)",
            "type" : "integer",
            "nullable" : true
          },
          "lastname" : {
            "description" : "The family name of the user",
            "type" : "string",
            "nullable" : true
          },
          "mailformat" : {
            "description" : "Mail format code is 0 for plain text, 1 for HTML etc",
            "type" : "integer",
            "nullable" : true
          },
          "phone1" : {
            "description" : "Phone 1",
            "type" : "string",
            "nullable" : true
          },
          "phone2" : {
            "description" : "Phone 2",
            "type" : "string",
            "nullable" : true
          },
          "preferences" : {
            "items" : {
              "$ref" : "#/components/schemas/core_grades_get_gradable_users_200_response_users_inner_preferences_inner"
            },
            "type" : "array"
          },
          "profileimageurl" : {
            "description" : "User image profile URL - big version",
            "type" : "string",
            "nullable" : true
          },
          "profileimageurlsmall" : {
            "description" : "User image profile URL - small version",
            "type" : "string",
            "nullable" : true
          },
          "suspended" : {
            "description" : "Suspend user account, either false to enable user login or true to disable it",
            "type" : "boolean",
            "nullable" : true
          },
          "theme" : {
            "description" : "Theme name such as \"standard\", must exist on server",
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "description" : "Timezone code such as Australia/Perth, or 99 for default",
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "description" : "The username",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "fullname", "id", "profileimageurl", "profileimageurlsmall" ]
      },
      "mod_assign_get_participant_200_response" : {
        "properties" : {
          "allowsubmissionsfromdate" : {
            "default" : null,
            "description" : "allowsubmissionsfromdate for the user",
            "type" : "integer",
            "nullable" : true
          },
          "blindmarking" : {
            "default" : null,
            "description" : "is blind marking enabled for this assignment",
            "type" : "boolean",
            "nullable" : true
          },
          "cutoffdate" : {
            "default" : null,
            "description" : "cutoffdate for the user",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : null,
            "description" : "duedate for the user",
            "type" : "integer",
            "nullable" : true
          },
          "duedatestr" : {
            "default" : null,
            "description" : "duedate for the user",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "description" : "The fullname of the user",
            "type" : "string",
            "nullable" : true
          },
          "grantedextension" : {
            "default" : null,
            "description" : "have they been granted an extension",
            "type" : "boolean",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "for group assignments this is the group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupname" : {
            "default" : null,
            "description" : "for group assignments this is the group name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          },
          "requiregrading" : {
            "default" : null,
            "description" : "is their submission waiting for grading",
            "type" : "boolean",
            "nullable" : true
          },
          "submissionstatus" : {
            "default" : null,
            "description" : "The submission status (new, draft, reopened or submitted).\n                Empty when not submitted.",
            "type" : "string",
            "nullable" : true
          },
          "submitted" : {
            "default" : null,
            "description" : "have they submitted their assignment",
            "type" : "boolean",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/mod_assign_get_participant_200_response_user"
          }
        },
        "required" : [ "allowsubmissionsfromdate", "blindmarking", "cutoffdate", "duedate", "duedatestr", "fullname", "grantedextension", "id", "requiregrading", "submitted" ]
      },
      "mod_assign_get_submission_status_request" : {
        "properties" : {
          "assignid" : {
            "default" : null,
            "description" : "assignment instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "filter by users in group (used for generating the grading summary).\n                    0 for all groups information, any other empty value will calculate currrent group.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "user id (empty for current user)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignid" ]
      },
      "mod_assign_get_submission_status_200_response_assignmentdata_attachments" : {
        "properties" : {
          "activity" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "intro" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_assign_get_submission_status_200_response_assignmentdata" : {
        "properties" : {
          "activity" : {
            "default" : null,
            "description" : "Text of activity",
            "type" : "string",
            "nullable" : true
          },
          "activityformat" : {
            "description" : "activity format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "attachments" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_assignmentdata_attachments"
          }
        }
      },
      "mod_assign_get_submission_status_200_response_feedback_grade" : {
        "properties" : {
          "assignment" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "attemptnumber" : {
            "description" : "attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "grade",
            "type" : "string",
            "nullable" : true
          },
          "gradefordisplay" : {
            "description" : "grade rendered into a format suitable for display",
            "type" : "string",
            "nullable" : true
          },
          "grader" : {
            "description" : "grader, -1 if grader is hidden",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "grade id",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "grade creation time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "grade last modified time",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attemptnumber", "grade", "grader", "id", "timecreated", "timemodified", "userid" ]
      },
      "mod_assign_get_submission_status_200_response_feedback_plugins_inner_editorfields_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "default" : null,
            "description" : "field description",
            "type" : "string",
            "nullable" : true
          },
          "format" : {
            "description" : "text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "field name",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "field value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submission_status_200_response_feedback_plugins_inner_fileareas_inner" : {
        "default" : null,
        "properties" : {
          "area" : {
            "description" : "file area",
            "type" : "string",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submission_status_200_response_feedback_plugins_inner" : {
        "default" : null,
        "properties" : {
          "editorfields" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_feedback_plugins_inner_editorfields_inner"
            },
            "type" : "array"
          },
          "fileareas" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_feedback_plugins_inner_fileareas_inner"
            },
            "type" : "array"
          },
          "name" : {
            "default" : null,
            "description" : "submission plugin name",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "submission plugin type",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submission_status_200_response_feedback" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_feedback_grade"
          },
          "gradeddate" : {
            "default" : null,
            "description" : "The date the user was graded.",
            "type" : "integer",
            "nullable" : true
          },
          "gradefordisplay" : {
            "default" : null,
            "description" : "Grade rendered into a format suitable for display.",
            "type" : "string",
            "nullable" : true
          },
          "plugins" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_feedback_plugins_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "gradeddate", "gradefordisplay" ]
      },
      "mod_assign_get_submission_status_200_response_gradingsummary" : {
        "properties" : {
          "participantcount" : {
            "default" : null,
            "description" : "Number of users who can submit.",
            "type" : "integer",
            "nullable" : true
          },
          "submissiondraftscount" : {
            "default" : null,
            "description" : "Number of submissions in draft status.",
            "type" : "integer",
            "nullable" : true
          },
          "submissionsenabled" : {
            "default" : null,
            "description" : "Whether submissions are enabled or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "submissionsneedgradingcount" : {
            "default" : null,
            "description" : "Number of submissions that need grading.",
            "type" : "integer",
            "nullable" : true
          },
          "submissionssubmittedcount" : {
            "default" : null,
            "description" : "Number of submissions in submitted status.",
            "type" : "integer",
            "nullable" : true
          },
          "warnofungroupedusers" : {
            "default" : null,
            "description" : "Whether we need to warn people that there\n                                                                        are users without groups ('warningrequired'), warn\n                                                                        people there are users who will submit in the default\n                                                                        group ('warningoptional') or no warning ('').",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "participantcount", "submissiondraftscount", "submissionsenabled", "submissionsneedgradingcount", "submissionssubmittedcount", "warnofungroupedusers" ]
      },
      "mod_assign_get_submission_status_200_response_lastattempt_submission_plugins_inner_editorfields_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "field description",
            "type" : "string",
            "nullable" : true
          },
          "format" : {
            "description" : "text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "field name",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "description" : "field value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submission_status_200_response_lastattempt_submission_plugins_inner" : {
        "default" : null,
        "properties" : {
          "editorfields" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_submission_plugins_inner_editorfields_inner"
            },
            "type" : "array"
          },
          "fileareas" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_feedback_plugins_inner_fileareas_inner"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "submission plugin name",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "submission plugin type",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submission_status_200_response_lastattempt_submission" : {
        "properties" : {
          "assignment" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "attemptnumber" : {
            "description" : "attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "gradingstatus" : {
            "description" : "Grading status.",
            "type" : "string",
            "nullable" : true
          },
          "groupid" : {
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "submission id",
            "type" : "integer",
            "nullable" : true
          },
          "latest" : {
            "default" : null,
            "description" : "latest attempt",
            "type" : "integer",
            "nullable" : true
          },
          "plugins" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_submission_plugins_inner"
            },
            "type" : "array"
          },
          "status" : {
            "default" : null,
            "description" : "submission status",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "submission creation time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "submission last modified time",
            "type" : "integer",
            "nullable" : true
          },
          "timestarted" : {
            "default" : null,
            "description" : "submission start time",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attemptnumber", "groupid", "id", "status", "timecreated", "timemodified", "userid" ]
      },
      "mod_assign_get_submission_status_200_response_lastattempt_teamsubmission" : {
        "properties" : {
          "assignment" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "attemptnumber" : {
            "description" : "attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "gradingstatus" : {
            "description" : "Grading status.",
            "type" : "string",
            "nullable" : true
          },
          "groupid" : {
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "submission id",
            "type" : "integer",
            "nullable" : true
          },
          "latest" : {
            "description" : "latest attempt",
            "type" : "integer",
            "nullable" : true
          },
          "plugins" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_submission_plugins_inner"
            },
            "type" : "array"
          },
          "status" : {
            "description" : "submission status",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "submission creation time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "submission last modified time",
            "type" : "integer",
            "nullable" : true
          },
          "timestarted" : {
            "description" : "submission start time",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attemptnumber", "groupid", "id", "status", "timecreated", "timemodified", "userid" ]
      },
      "mod_assign_get_submission_status_200_response_lastattempt" : {
        "properties" : {
          "blindmarking" : {
            "default" : null,
            "description" : "Whether blind marking is enabled.",
            "type" : "boolean",
            "nullable" : true
          },
          "canedit" : {
            "default" : null,
            "description" : "Whether the user can edit the current submission.",
            "type" : "boolean",
            "nullable" : true
          },
          "caneditowner" : {
            "default" : null,
            "description" : "Whether the owner of the submission can edit it.",
            "type" : "boolean",
            "nullable" : true
          },
          "cansubmit" : {
            "default" : null,
            "description" : "Whether the user can submit.",
            "type" : "boolean",
            "nullable" : true
          },
          "extensionduedate" : {
            "default" : null,
            "description" : "Extension due date.",
            "type" : "integer",
            "nullable" : true
          },
          "graded" : {
            "default" : null,
            "description" : "Whether the submission is graded.",
            "type" : "boolean",
            "nullable" : true
          },
          "gradingstatus" : {
            "default" : null,
            "description" : "Grading status.",
            "type" : "string",
            "nullable" : true
          },
          "locked" : {
            "default" : null,
            "description" : "Whether new submissions are locked.",
            "type" : "boolean",
            "nullable" : true
          },
          "submission" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_submission"
          },
          "submissiongroup" : {
            "default" : null,
            "description" : "The submission group id (for group submissions only).",
            "type" : "integer",
            "nullable" : true
          },
          "submissiongroupmemberswhoneedtosubmit" : {
            "items" : {
              "default" : null,
              "description" : "USER id.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "submissionsenabled" : {
            "description" : "Whether submissions are enabled or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "teamsubmission" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_teamsubmission"
          },
          "timelimit" : {
            "default" : null,
            "description" : "Time limit for submission.",
            "type" : "integer",
            "nullable" : true
          },
          "usergroups" : {
            "items" : {
              "default" : null,
              "description" : "Group id.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "blindmarking", "canedit", "caneditowner", "cansubmit", "extensionduedate", "graded", "gradingstatus", "locked", "submissionsenabled", "usergroups" ]
      },
      "mod_assign_get_submission_status_200_response_previousattempts_inner" : {
        "default" : null,
        "properties" : {
          "attemptnumber" : {
            "default" : null,
            "description" : "Attempt number.",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackplugins" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_submission_plugins_inner"
            },
            "type" : "array"
          },
          "grade" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_feedback_grade"
          },
          "submission" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_teamsubmission"
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submission_status_200_response" : {
        "properties" : {
          "assignmentdata" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_assignmentdata"
          },
          "feedback" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_feedback"
          },
          "gradingsummary" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_gradingsummary"
          },
          "lastattempt" : {
            "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt"
          },
          "previousattempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_previousattempts_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_assign_get_submissions_request" : {
        "properties" : {
          "assignmentids" : {
            "items" : {
              "description" : "assignment id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "before" : {
            "default" : 0,
            "description" : "submitted before",
            "type" : "integer",
            "nullable" : true
          },
          "since" : {
            "default" : 0,
            "description" : "submitted since",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : "",
            "description" : "status",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "assignmentids" ]
      },
      "mod_assign_get_submissions_200_response_assignments_inner_submissions_inner" : {
        "default" : null,
        "description" : "submission info",
        "properties" : {
          "assignment" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "attemptnumber" : {
            "description" : "attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "gradingstatus" : {
            "description" : "Grading status.",
            "type" : "string",
            "nullable" : true
          },
          "groupid" : {
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "submission id",
            "type" : "integer",
            "nullable" : true
          },
          "latest" : {
            "description" : "latest attempt",
            "type" : "integer",
            "nullable" : true
          },
          "plugins" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submission_status_200_response_lastattempt_submission_plugins_inner"
            },
            "type" : "array"
          },
          "status" : {
            "description" : "submission status",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "submission creation time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "submission last modified time",
            "type" : "integer",
            "nullable" : true
          },
          "timestarted" : {
            "description" : "submission start time",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submissions_200_response_assignments_inner" : {
        "default" : null,
        "properties" : {
          "assignmentid" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "submissions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submissions_200_response_assignments_inner_submissions_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_assign_get_submissions_200_response" : {
        "properties" : {
          "assignments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_submissions_200_response_assignments_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assignments" ]
      },
      "mod_assign_get_user_flags_request" : {
        "properties" : {
          "assignmentids" : {
            "items" : {
              "description" : "assignment id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "assignmentids" ]
      },
      "mod_assign_get_user_flags_200_response_assignments_inner_userflags_inner" : {
        "default" : null,
        "properties" : {
          "allocatedmarker" : {
            "default" : null,
            "description" : "allocated marker",
            "type" : "integer",
            "nullable" : true
          },
          "extensionduedate" : {
            "default" : null,
            "description" : "extension due date",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "user flag id",
            "type" : "integer",
            "nullable" : true
          },
          "locked" : {
            "default" : null,
            "description" : "locked",
            "type" : "integer",
            "nullable" : true
          },
          "mailed" : {
            "default" : null,
            "description" : "mailed",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          },
          "workflowstate" : {
            "default" : null,
            "description" : "marking workflow state",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_user_flags_200_response_assignments_inner" : {
        "default" : null,
        "properties" : {
          "assignmentid" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "userflags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_user_flags_200_response_assignments_inner_userflags_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_assign_get_user_flags_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "description" : "item is always 'assignment'",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "when errorcode is 3 then itemid is an assignment id. When errorcode is 1, itemid is a course module id",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "default" : null,
            "description" : "errorcode can be 3 (no user flags found) or 1 (no permission to get user flags)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_user_flags_200_response" : {
        "properties" : {
          "assignments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_user_flags_200_response_assignments_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_user_flags_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assignments" ]
      },
      "mod_assign_get_user_mappings_200_response_assignments_inner_mappings_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "user mapping id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_user_mappings_200_response_assignments_inner" : {
        "default" : null,
        "properties" : {
          "assignmentid" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "mappings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_user_mappings_200_response_assignments_inner_mappings_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_assign_get_user_mappings_200_response_warnings_inner" : {
        "default" : null,
        "description" : "warning",
        "properties" : {
          "item" : {
            "description" : "item is always 'assignment'",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "when errorcode is 3 then itemid is an assignment id. When errorcode is 1, itemid is a course module id",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "warningcode" : {
            "default" : null,
            "description" : "errorcode can be 3 (no user mappings found) or 1 (no permission to get user mappings)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_get_user_mappings_200_response" : {
        "properties" : {
          "assignments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_user_mappings_200_response_assignments_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_get_user_mappings_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assignments" ]
      },
      "mod_assign_list_participants_request" : {
        "properties" : {
          "assignid" : {
            "description" : "assign instance id",
            "type" : "integer",
            "nullable" : true
          },
          "filter" : {
            "default" : null,
            "description" : "search string to filter the results",
            "type" : "string",
            "nullable" : true
          },
          "groupid" : {
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "includeenrolments" : {
            "default" : true,
            "description" : "Do return courses where the user is enrolled",
            "type" : "boolean",
            "nullable" : true
          },
          "limit" : {
            "default" : 0,
            "description" : "maximum number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "onlyids" : {
            "default" : false,
            "description" : "Do not return all user fields",
            "type" : "boolean",
            "nullable" : true
          },
          "skip" : {
            "default" : 0,
            "description" : "number of records to skip",
            "type" : "integer",
            "nullable" : true
          },
          "tablesort" : {
            "default" : false,
            "description" : "Apply current user table sorting preferences.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "assignid", "filter", "groupid" ]
      },
      "mod_assign_lock_submissions_request" : {
        "properties" : {
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "default" : null,
              "description" : "user id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "assignmentid", "userids" ]
      },
      "mod_assign_reveal_identities_request" : {
        "properties" : {
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignmentid" ]
      },
      "mod_assign_revert_submissions_to_draft_request" : {
        "properties" : {
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "description" : "user id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "assignmentid", "userids" ]
      },
      "mod_assign_save_grade_request_advancedgradingdata_guide_criteria_inner_fillings_inner" : {
        "default" : null,
        "properties" : {
          "criterionid" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "levelid" : {
            "description" : "level id",
            "type" : "integer",
            "nullable" : true
          },
          "remark" : {
            "description" : "remark",
            "type" : "string",
            "nullable" : true
          },
          "remarkformat" : {
            "description" : "remark format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "description" : "maximum score",
            "type" : "number",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_save_grade_request_advancedgradingdata_guide_criteria_inner" : {
        "default" : null,
        "properties" : {
          "criterionid" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "fillings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata_guide_criteria_inner_fillings_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_assign_save_grade_request_advancedgradingdata_guide" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata_guide_criteria_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "criteria" ]
      },
      "mod_assign_save_grade_request_advancedgradingdata_rubric_criteria_inner_fillings_inner" : {
        "default" : null,
        "properties" : {
          "criterionid" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "levelid" : {
            "description" : "level id",
            "type" : "integer",
            "nullable" : true
          },
          "remark" : {
            "description" : "remark",
            "type" : "string",
            "nullable" : true
          },
          "remarkformat" : {
            "description" : "remark format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_save_grade_request_advancedgradingdata_rubric_criteria_inner" : {
        "default" : null,
        "properties" : {
          "criterionid" : {
            "description" : "criterion id",
            "type" : "integer",
            "nullable" : true
          },
          "fillings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata_rubric_criteria_inner_fillings_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_assign_save_grade_request_advancedgradingdata_rubric" : {
        "properties" : {
          "criteria" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata_rubric_criteria_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "criteria" ]
      },
      "mod_assign_save_grade_request_advancedgradingdata" : {
        "properties" : {
          "guide" : {
            "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata_guide"
          },
          "rubric" : {
            "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata_rubric"
          }
        }
      },
      "mod_assign_save_grade_request_plugindata_assignfeedbackcomments_editor" : {
        "properties" : {
          "format" : {
            "default" : null,
            "description" : "The format for this feedback",
            "type" : "integer",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "The text for this feedback.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "format", "text" ]
      },
      "mod_assign_save_grade_request_plugindata" : {
        "properties" : {
          "assignfeedbackcomments_editor" : {
            "$ref" : "#/components/schemas/mod_assign_save_grade_request_plugindata_assignfeedbackcomments_editor"
          },
          "files_filemanager" : {
            "default" : null,
            "description" : "The id of a draft area containing files for this feedback.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "mod_assign_save_grade_request" : {
        "properties" : {
          "addattempt" : {
            "default" : null,
            "description" : "Allow another attempt if the attempt reopen method is manual",
            "type" : "boolean",
            "nullable" : true
          },
          "advancedgradingdata" : {
            "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata"
          },
          "applytoall" : {
            "default" : null,
            "description" : "If true, this grade will be applied to all members of the group (for group assignments).",
            "type" : "boolean",
            "nullable" : true
          },
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "attemptnumber" : {
            "default" : null,
            "description" : "The attempt number (-1 means latest attempt)",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "The new grade for this user. Ignored if advanced grading used",
            "type" : "number",
            "nullable" : true
          },
          "plugindata" : {
            "$ref" : "#/components/schemas/mod_assign_save_grade_request_plugindata"
          },
          "userid" : {
            "default" : null,
            "description" : "The student id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "workflowstate" : {
            "default" : null,
            "description" : "The next marking workflow state",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "addattempt", "applytoall", "assignmentid", "attemptnumber", "grade", "userid", "workflowstate" ]
      },
      "mod_assign_save_grades_request_grades_inner_plugindata_assignfeedbackcomments_editor" : {
        "properties" : {
          "format" : {
            "description" : "The format for this feedback",
            "type" : "integer",
            "nullable" : true
          },
          "text" : {
            "description" : "The text for this feedback.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "format", "text" ]
      },
      "mod_assign_save_grades_request_grades_inner_plugindata" : {
        "properties" : {
          "assignfeedbackcomments_editor" : {
            "$ref" : "#/components/schemas/mod_assign_save_grades_request_grades_inner_plugindata_assignfeedbackcomments_editor"
          },
          "files_filemanager" : {
            "description" : "The id of a draft area containing files for this feedback.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "mod_assign_save_grades_request_grades_inner" : {
        "default" : null,
        "properties" : {
          "addattempt" : {
            "default" : null,
            "description" : "Allow another attempt if manual attempt reopen method",
            "type" : "boolean",
            "nullable" : true
          },
          "advancedgradingdata" : {
            "$ref" : "#/components/schemas/mod_assign_save_grade_request_advancedgradingdata"
          },
          "attemptnumber" : {
            "description" : "The attempt number (-1 means latest attempt)",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "The new grade for this user. Ignored if advanced grading used",
            "type" : "number",
            "nullable" : true
          },
          "plugindata" : {
            "$ref" : "#/components/schemas/mod_assign_save_grades_request_grades_inner_plugindata"
          },
          "userid" : {
            "description" : "The student id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "workflowstate" : {
            "description" : "The next marking workflow state",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_save_grades_request" : {
        "properties" : {
          "applytoall" : {
            "description" : "If true, this grade will be applied to all members of the group (for group assignments).",
            "type" : "boolean",
            "nullable" : true
          },
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "grades" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_save_grades_request_grades_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "applytoall", "assignmentid", "grades" ]
      },
      "mod_assign_save_submission_request_plugindata_onlinetext_editor" : {
        "properties" : {
          "format" : {
            "default" : null,
            "description" : "The format for this submission",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "The draft area id for files attached to the submission",
            "type" : "integer",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "The text for this submission.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "format", "itemid", "text" ]
      },
      "mod_assign_save_submission_request_plugindata" : {
        "properties" : {
          "files_filemanager" : {
            "default" : null,
            "description" : "The id of a draft area containing files for this submission.",
            "type" : "integer",
            "nullable" : true
          },
          "onlinetext_editor" : {
            "$ref" : "#/components/schemas/mod_assign_save_submission_request_plugindata_onlinetext_editor"
          }
        }
      },
      "mod_assign_save_submission_request" : {
        "properties" : {
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "plugindata" : {
            "$ref" : "#/components/schemas/mod_assign_save_submission_request_plugindata"
          }
        },
        "required" : [ "assignmentid", "plugindata" ]
      },
      "mod_assign_save_user_extensions_request" : {
        "properties" : {
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "dates" : {
            "items" : {
              "default" : null,
              "description" : "dates",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "userids" : {
            "items" : {
              "description" : "user id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "assignmentid", "dates", "userids" ]
      },
      "mod_assign_set_user_flags_request_userflags_inner" : {
        "default" : null,
        "properties" : {
          "allocatedmarker" : {
            "description" : "allocated marker",
            "type" : "integer",
            "nullable" : true
          },
          "extensionduedate" : {
            "description" : "extension due date",
            "type" : "integer",
            "nullable" : true
          },
          "locked" : {
            "description" : "locked",
            "type" : "integer",
            "nullable" : true
          },
          "mailed" : {
            "description" : "mailed",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "student id",
            "type" : "integer",
            "nullable" : true
          },
          "workflowstate" : {
            "description" : "marking workflow state",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_assign_set_user_flags_request" : {
        "properties" : {
          "assignmentid" : {
            "description" : "assignment id",
            "type" : "integer",
            "nullable" : true
          },
          "userflags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_assign_set_user_flags_request_userflags_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assignmentid", "userflags" ]
      },
      "mod_assign_start_submission_request" : {
        "properties" : {
          "assignid" : {
            "default" : null,
            "description" : "Assignment instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignid" ]
      },
      "mod_assign_start_submission_200_response" : {
        "properties" : {
          "submissionid" : {
            "default" : null,
            "description" : "New submission ID.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "submissionid" ]
      },
      "mod_assign_submit_for_grading_request" : {
        "properties" : {
          "acceptsubmissionstatement" : {
            "default" : null,
            "description" : "Accept the assignment submission statement",
            "type" : "boolean",
            "nullable" : true
          },
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "acceptsubmissionstatement", "assignmentid" ]
      },
      "mod_assign_submit_grading_form_request" : {
        "properties" : {
          "assignmentid" : {
            "description" : "The assignment id to operate on",
            "type" : "integer",
            "nullable" : true
          },
          "jsonformdata" : {
            "default" : null,
            "description" : "The data from the grading form, encoded as a json array",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id the submission belongs to",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignmentid", "jsonformdata", "userid" ]
      },
      "mod_assign_view_assign_request" : {
        "properties" : {
          "assignid" : {
            "description" : "assign instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assignid" ]
      },
      "mod_bigbluebuttonbn_can_join_request" : {
        "properties" : {
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "bigbluebuttonbn group id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "mod_bigbluebuttonbn_can_join_200_response" : {
        "properties" : {
          "can_join" : {
            "default" : null,
            "description" : "Can join session",
            "type" : "boolean",
            "nullable" : true
          },
          "cmid" : {
            "description" : "course module id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "can_join", "cmid" ]
      },
      "mod_bigbluebuttonbn_completion_validate_request" : {
        "properties" : {
          "bigbluebuttonbnid" : {
            "default" : null,
            "description" : "bigbluebuttonbn instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "bigbluebuttonbnid" ]
      },
      "mod_bigbluebuttonbn_end_meeting_request" : {
        "properties" : {
          "bigbluebuttonbnid" : {
            "description" : "bigbluebuttonbn instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "bigbluebuttonbn group id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "bigbluebuttonbnid" ]
      },
      "mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "description" : "Course id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_200_response_bigbluebuttonbns_inner" : {
        "default" : null,
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "default" : null,
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "default" : null,
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "default" : null,
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "default" : null,
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "meetingid" : {
            "default" : null,
            "description" : "Meeting id",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "default" : null,
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time the instance was modified",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "default" : null,
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_200_response" : {
        "properties" : {
          "bigbluebuttonbns" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_bigbluebuttonbns_by_courses_200_response_bigbluebuttonbns_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "bigbluebuttonbns" ]
      },
      "mod_bigbluebuttonbn_get_join_url_200_response" : {
        "properties" : {
          "join_url" : {
            "default" : null,
            "description" : "Can join session",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_bigbluebuttonbn_get_recordings_request" : {
        "properties" : {
          "bigbluebuttonbnid" : {
            "description" : "bigbluebuttonbn instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "Group ID",
            "type" : "integer",
            "nullable" : true
          },
          "tools" : {
            "default" : "protect,unprotect,publish,unpublish,delete",
            "description" : "a set of enabled tools",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "bigbluebuttonbnid" ]
      },
      "mod_bigbluebuttonbn_get_recordings_200_response_tabledata_columns_inner" : {
        "default" : null,
        "properties" : {
          "allowHTML" : {
            "default" : false,
            "description" : "Whether this column contains HTML",
            "type" : "boolean",
            "nullable" : true
          },
          "formatter" : {
            "default" : null,
            "description" : "Formatter name",
            "type" : "string",
            "nullable" : true
          },
          "key" : {
            "type" : "string",
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "sortable" : {
            "default" : false,
            "description" : "Whether this column is sortable",
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Column type",
            "type" : "string",
            "nullable" : true
          },
          "width" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_bigbluebuttonbn_get_recordings_200_response_tabledata" : {
        "properties" : {
          "activity" : {
            "type" : "string",
            "nullable" : true
          },
          "columns" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_200_response_tabledata_columns_inner"
            },
            "type" : "array"
          },
          "data" : {
            "type" : "string",
            "nullable" : true
          },
          "locale" : {
            "type" : "string",
            "nullable" : true
          },
          "ping_interval" : {
            "type" : "integer",
            "nullable" : true
          },
          "profile_features" : {
            "items" : {
              "default" : null,
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "activity", "columns", "data", "locale", "ping_interval", "profile_features" ]
      },
      "mod_bigbluebuttonbn_get_recordings_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "Whether the fetch was successful",
            "type" : "boolean",
            "nullable" : true
          },
          "tabledata" : {
            "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_200_response_tabledata"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_bigbluebuttonbn_get_recordings_to_import_request" : {
        "properties" : {
          "destinationinstanceid" : {
            "default" : null,
            "description" : "Id of the other BBB we target for importing recordings into.\n                The idea here is to remove already imported recordings.",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "description" : "Group ID",
            "type" : "integer",
            "nullable" : true
          },
          "sourcebigbluebuttonbnid" : {
            "default" : 0,
            "description" : "bigbluebuttonbn instance id",
            "type" : "integer",
            "nullable" : true
          },
          "sourcecourseid" : {
            "default" : 0,
            "description" : "source courseid to filter by",
            "type" : "integer",
            "nullable" : true
          },
          "tools" : {
            "default" : "protect,unprotect,publish,unpublish,delete",
            "description" : "a set of enabled tools",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "destinationinstanceid" ]
      },
      "mod_bigbluebuttonbn_get_recordings_to_import_200_response_tabledata_columns_inner" : {
        "default" : null,
        "properties" : {
          "allowHTML" : {
            "default" : false,
            "description" : "Whether this column contains HTML",
            "type" : "boolean",
            "nullable" : true
          },
          "key" : {
            "type" : "string",
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "sortable" : {
            "default" : false,
            "description" : "Whether this column is sortable",
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "description" : "Column type",
            "type" : "string",
            "nullable" : true
          },
          "width" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_bigbluebuttonbn_get_recordings_to_import_200_response_tabledata" : {
        "properties" : {
          "activity" : {
            "type" : "string",
            "nullable" : true
          },
          "columns" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_to_import_200_response_tabledata_columns_inner"
            },
            "type" : "array"
          },
          "data" : {
            "type" : "string",
            "nullable" : true
          },
          "locale" : {
            "type" : "string",
            "nullable" : true
          },
          "ping_interval" : {
            "type" : "integer",
            "nullable" : true
          },
          "profile_features" : {
            "items" : {
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "activity", "columns", "data", "locale", "ping_interval", "profile_features" ]
      },
      "mod_bigbluebuttonbn_get_recordings_to_import_200_response" : {
        "properties" : {
          "status" : {
            "description" : "Whether the fetch was successful",
            "type" : "boolean",
            "nullable" : true
          },
          "tabledata" : {
            "$ref" : "#/components/schemas/mod_bigbluebuttonbn_get_recordings_to_import_200_response_tabledata"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_bigbluebuttonbn_meeting_info_request" : {
        "properties" : {
          "bigbluebuttonbnid" : {
            "description" : "bigbluebuttonbn instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "bigbluebuttonbn group id",
            "type" : "integer",
            "nullable" : true
          },
          "updatecache" : {
            "default" : false,
            "description" : "update cache ?",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "bigbluebuttonbnid" ]
      },
      "mod_bigbluebuttonbn_meeting_info_200_response_features_inner" : {
        "default" : null,
        "properties" : {
          "isenabled" : {
            "default" : null,
            "description" : "Whether the feature is enabled.",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Feature name.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_bigbluebuttonbn_meeting_info_200_response_presentations_inner" : {
        "default" : null,
        "properties" : {
          "icondesc" : {
            "default" : null,
            "description" : "icon text",
            "type" : "string",
            "nullable" : true
          },
          "iconname" : {
            "default" : null,
            "description" : "icon name",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "presentation name",
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "default" : null,
            "description" : "presentation URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_bigbluebuttonbn_meeting_info_200_response" : {
        "properties" : {
          "bigbluebuttonbnid" : {
            "default" : null,
            "description" : "bigbluebuttonbn instance id",
            "type" : "string",
            "nullable" : true
          },
          "canjoin" : {
            "default" : null,
            "description" : "Can join",
            "type" : "boolean",
            "nullable" : true
          },
          "closingtime" : {
            "default" : null,
            "description" : "Closing time",
            "type" : "integer",
            "nullable" : true
          },
          "cmid" : {
            "default" : null,
            "description" : "CM id",
            "type" : "integer",
            "nullable" : true
          },
          "features" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_bigbluebuttonbn_meeting_info_200_response_features_inner"
            },
            "type" : "array"
          },
          "groupid" : {
            "default" : 0,
            "description" : "bigbluebuttonbn group id",
            "type" : "integer",
            "nullable" : true
          },
          "guestaccessenabled" : {
            "default" : null,
            "description" : "Guest access enabled",
            "type" : "boolean",
            "nullable" : true
          },
          "guestjoinurl" : {
            "default" : null,
            "description" : "Guest URL",
            "type" : "string",
            "nullable" : true
          },
          "guestpassword" : {
            "default" : null,
            "description" : "Guest join password",
            "type" : "string",
            "nullable" : true
          },
          "ismoderator" : {
            "default" : null,
            "description" : "Is moderator",
            "type" : "boolean",
            "nullable" : true
          },
          "joinurl" : {
            "default" : null,
            "description" : "Join URL",
            "type" : "string",
            "nullable" : true
          },
          "meetingid" : {
            "description" : "Meeting id",
            "type" : "string",
            "nullable" : true
          },
          "moderatorcount" : {
            "default" : null,
            "description" : "Moderator count",
            "type" : "integer",
            "nullable" : true
          },
          "moderatorplural" : {
            "default" : null,
            "description" : "Several moderators ?",
            "type" : "boolean",
            "nullable" : true
          },
          "openingtime" : {
            "default" : null,
            "description" : "Opening time",
            "type" : "integer",
            "nullable" : true
          },
          "participantcount" : {
            "default" : null,
            "description" : "Participant count",
            "type" : "integer",
            "nullable" : true
          },
          "participantplural" : {
            "default" : null,
            "description" : "Several participants ?",
            "type" : "boolean",
            "nullable" : true
          },
          "presentations" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_bigbluebuttonbn_meeting_info_200_response_presentations_inner"
            },
            "type" : "array"
          },
          "startedat" : {
            "default" : null,
            "description" : "Started at",
            "type" : "integer",
            "nullable" : true
          },
          "statusclosed" : {
            "default" : null,
            "description" : "Status closed",
            "type" : "boolean",
            "nullable" : true
          },
          "statusmessage" : {
            "default" : null,
            "description" : "Status message",
            "type" : "string",
            "nullable" : true
          },
          "statusopen" : {
            "default" : null,
            "description" : "Status open",
            "type" : "boolean",
            "nullable" : true
          },
          "statusrunning" : {
            "default" : null,
            "description" : "Status running",
            "type" : "boolean",
            "nullable" : true
          },
          "userlimit" : {
            "default" : null,
            "description" : "User limit",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "bigbluebuttonbnid", "canjoin", "cmid", "ismoderator", "joinurl", "meetingid", "presentations", "userlimit" ]
      },
      "mod_bigbluebuttonbn_update_recording_request" : {
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "The action to perform",
            "type" : "string",
            "nullable" : true
          },
          "additionaloptions" : {
            "default" : null,
            "description" : "Additional options",
            "type" : "string",
            "nullable" : true
          },
          "bigbluebuttonbnid" : {
            "default" : null,
            "description" : "bigbluebuttonbn instance id, this might be a different one from the one set in recordingid in case of importing",
            "type" : "integer",
            "nullable" : true
          },
          "recordingid" : {
            "default" : null,
            "description" : "The moodle internal recording ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "action", "additionaloptions", "bigbluebuttonbnid", "recordingid" ]
      },
      "mod_bigbluebuttonbn_view_bigbluebuttonbn_request" : {
        "properties" : {
          "bigbluebuttonbnid" : {
            "description" : "bigbluebuttonbn instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "bigbluebuttonbnid" ]
      },
      "mod_book_get_books_by_courses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "default" : null,
              "description" : "course id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "mod_book_get_books_by_courses_200_response_books_inner" : {
        "default" : null,
        "description" : "Books",
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "customtitles" : {
            "default" : null,
            "description" : "Book custom titles type",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "navstyle" : {
            "default" : null,
            "description" : "Book navigation style configuration",
            "type" : "integer",
            "nullable" : true
          },
          "numbering" : {
            "default" : null,
            "description" : "Book numbering configuration",
            "type" : "integer",
            "nullable" : true
          },
          "revision" : {
            "default" : null,
            "description" : "Book revision",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Time of creation",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time of last modification",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_book_get_books_by_courses_200_response" : {
        "properties" : {
          "books" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_book_get_books_by_courses_200_response_books_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "books" ]
      },
      "mod_book_view_book_request" : {
        "properties" : {
          "bookid" : {
            "default" : null,
            "description" : "book instance id",
            "type" : "integer",
            "nullable" : true
          },
          "chapterid" : {
            "default" : 0,
            "description" : "chapter id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "bookid" ]
      },
      "mod_chat_get_chat_latest_messages_request" : {
        "properties" : {
          "chatlasttime" : {
            "default" : 0,
            "description" : "last time messages were retrieved (epoch time)",
            "type" : "integer",
            "nullable" : true
          },
          "chatsid" : {
            "default" : null,
            "description" : "chat session id (obtained via mod_chat_login_user)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "chatsid" ]
      },
      "mod_chat_get_chat_latest_messages_200_response_messages_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "message id",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "message text",
            "type" : "string",
            "nullable" : true
          },
          "system" : {
            "default" : null,
            "description" : "true if is a system message (like user joined)",
            "type" : "boolean",
            "nullable" : true
          },
          "timestamp" : {
            "default" : null,
            "description" : "timestamp for the message",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_chat_get_chat_latest_messages_200_response" : {
        "properties" : {
          "chatnewlasttime" : {
            "default" : null,
            "description" : "new last time",
            "type" : "integer",
            "nullable" : true
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_chat_get_chat_latest_messages_200_response_messages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "chatnewlasttime", "messages" ]
      },
      "mod_chat_get_chat_users_request" : {
        "properties" : {
          "chatsid" : {
            "description" : "chat session id (obtained via mod_chat_login_user)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "chatsid" ]
      },
      "mod_chat_get_chat_users_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "fullname" : {
            "description" : "user full name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          },
          "profileimageurl" : {
            "default" : null,
            "description" : "user picture URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_chat_get_chat_users_200_response" : {
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_chat_get_chat_users_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "users" ]
      },
      "mod_chat_get_chats_by_courses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "description" : "course id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "mod_chat_get_chats_by_courses_200_response_chats_inner" : {
        "default" : null,
        "description" : "Chats",
        "properties" : {
          "chatmethod" : {
            "default" : null,
            "description" : "chat method (sockets, ajax, header_js)",
            "type" : "string",
            "nullable" : true
          },
          "chattime" : {
            "default" : null,
            "description" : "chat time",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "keepdays" : {
            "default" : null,
            "description" : "keep days",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "default" : null,
            "description" : "schedule type",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "studentlogs" : {
            "default" : null,
            "description" : "student logs visible to everyone",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "time of last modification",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_chat_get_chats_by_courses_200_response" : {
        "properties" : {
          "chats" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_chat_get_chats_by_courses_200_response_chats_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "chats" ]
      },
      "mod_chat_get_session_messages_request" : {
        "properties" : {
          "chatid" : {
            "default" : null,
            "description" : "Chat instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Get messages from users in this group.\n                                                0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          },
          "sessionend" : {
            "default" : null,
            "description" : "The session end time (timestamp).",
            "type" : "integer",
            "nullable" : true
          },
          "sessionstart" : {
            "default" : null,
            "description" : "The session start time (timestamp).",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "chatid", "sessionend", "sessionstart" ]
      },
      "mod_chat_get_session_messages_200_response_messages_inner" : {
        "default" : null,
        "properties" : {
          "chatid" : {
            "default" : 0,
            "description" : "The chat id.",
            "type" : "integer",
            "nullable" : false
          },
          "groupid" : {
            "default" : 0,
            "description" : "The group this message belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "The message record id.",
            "type" : "integer",
            "nullable" : false
          },
          "issystem" : {
            "default" : false,
            "description" : "Whether is a system message or not.",
            "type" : "boolean",
            "nullable" : false
          },
          "message" : {
            "default" : null,
            "description" : "The message text.",
            "type" : "string",
            "nullable" : false
          },
          "timestamp" : {
            "default" : 0,
            "description" : "The message timestamp (indicates when the message was sent).",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "default" : 0,
            "description" : "The user who wrote the message.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_chat_get_session_messages_200_response" : {
        "properties" : {
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_chat_get_session_messages_200_response_messages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "messages" ]
      },
      "mod_chat_get_sessions_request" : {
        "properties" : {
          "chatid" : {
            "description" : "Chat instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Get messages from users in this group.\n                                                0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          },
          "showall" : {
            "default" : false,
            "description" : "Whether to show completed sessions or not.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "chatid" ]
      },
      "mod_chat_get_sessions_200_response_sessions_inner_sessionusers_inner" : {
        "default" : null,
        "properties" : {
          "messagecount" : {
            "default" : null,
            "description" : "Number of messages in the session.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_chat_get_sessions_200_response_sessions_inner" : {
        "default" : null,
        "properties" : {
          "iscomplete" : {
            "default" : null,
            "description" : "Whether the session is completed or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "sessionend" : {
            "default" : null,
            "description" : "Session end time.",
            "type" : "integer",
            "nullable" : true
          },
          "sessionstart" : {
            "default" : null,
            "description" : "Session start time.",
            "type" : "integer",
            "nullable" : true
          },
          "sessionusers" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_chat_get_sessions_200_response_sessions_inner_sessionusers_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_chat_get_sessions_200_response" : {
        "properties" : {
          "sessions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_chat_get_sessions_200_response_sessions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "sessions" ]
      },
      "mod_chat_login_user_request" : {
        "properties" : {
          "chatid" : {
            "default" : null,
            "description" : "chat instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "group id, 0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "chatid" ]
      },
      "mod_chat_login_user_200_response" : {
        "properties" : {
          "chatsid" : {
            "default" : null,
            "description" : "unique chat session id",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "chatsid" ]
      },
      "mod_chat_send_chat_message_request" : {
        "properties" : {
          "beepid" : {
            "default" : "",
            "description" : "the beep id",
            "type" : "string",
            "nullable" : true
          },
          "chatsid" : {
            "description" : "chat session id (obtained via mod_chat_login_user)",
            "type" : "string",
            "nullable" : true
          },
          "messagetext" : {
            "default" : null,
            "description" : "the message text",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "chatsid", "messagetext" ]
      },
      "mod_chat_send_chat_message_200_response" : {
        "properties" : {
          "messageid" : {
            "default" : null,
            "description" : "message sent id",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "messageid" ]
      },
      "mod_chat_view_chat_request" : {
        "properties" : {
          "chatid" : {
            "description" : "chat instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "chatid" ]
      },
      "mod_chat_view_sessions_request" : {
        "properties" : {
          "cmid" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "end" : {
            "default" : 0,
            "description" : "Session end time",
            "type" : "integer",
            "nullable" : true
          },
          "start" : {
            "default" : 0,
            "description" : "Session start time",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid" ]
      },
      "mod_choice_delete_choice_responses_request" : {
        "properties" : {
          "choiceid" : {
            "default" : null,
            "description" : "choice instance id",
            "type" : "integer",
            "nullable" : true
          },
          "responses" : {
            "items" : {
              "default" : null,
              "description" : "response id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "choiceid" ]
      },
      "mod_choice_delete_choice_responses_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "status, true if everything went right",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_choice_get_choice_options_request" : {
        "properties" : {
          "choiceid" : {
            "description" : "choice instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "choiceid" ]
      },
      "mod_choice_get_choice_options_200_response_options_inner" : {
        "default" : null,
        "properties" : {
          "checked" : {
            "default" : null,
            "description" : "we already answered",
            "type" : "boolean",
            "nullable" : true
          },
          "countanswers" : {
            "default" : null,
            "description" : "number of answers",
            "type" : "integer",
            "nullable" : true
          },
          "disabled" : {
            "default" : null,
            "description" : "option disabled",
            "type" : "boolean",
            "nullable" : true
          },
          "displaylayout" : {
            "default" : null,
            "description" : "true for orizontal, otherwise vertical",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "option id",
            "type" : "integer",
            "nullable" : true
          },
          "maxanswers" : {
            "default" : null,
            "description" : "maximum number of answers",
            "type" : "integer",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "text of the choice",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_choice_get_choice_options_200_response" : {
        "properties" : {
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_choice_get_choice_options_200_response_options_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "options" ]
      },
      "mod_choice_get_choice_results_200_response_options_inner_userresponses_inner" : {
        "default" : null,
        "description" : "User responses",
        "properties" : {
          "answerid" : {
            "default" : null,
            "description" : "answer id",
            "type" : "integer",
            "nullable" : true
          },
          "fullname" : {
            "description" : "user full name",
            "type" : "string",
            "nullable" : true
          },
          "profileimageurl" : {
            "default" : null,
            "description" : "profile user image url",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "time of modification",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_choice_get_choice_results_200_response_options_inner" : {
        "default" : null,
        "description" : "Options",
        "properties" : {
          "id" : {
            "description" : "choice instance id",
            "type" : "integer",
            "nullable" : true
          },
          "maxanswer" : {
            "description" : "maximum number of answers",
            "type" : "integer",
            "nullable" : true
          },
          "numberofuser" : {
            "default" : null,
            "description" : "number of users answers",
            "type" : "integer",
            "nullable" : true
          },
          "percentageamount" : {
            "default" : null,
            "description" : "percentage of users answers",
            "type" : "number",
            "nullable" : true
          },
          "text" : {
            "description" : "text of the choice",
            "type" : "string",
            "nullable" : true
          },
          "userresponses" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_choice_get_choice_results_200_response_options_inner_userresponses_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_choice_get_choice_results_200_response" : {
        "properties" : {
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_choice_get_choice_results_200_response_options_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "options" ]
      },
      "mod_choice_get_choices_by_courses_200_response_choices_inner" : {
        "default" : null,
        "description" : "Choices",
        "properties" : {
          "allowmultiple" : {
            "default" : null,
            "description" : "Allow multiple choices",
            "type" : "boolean",
            "nullable" : true
          },
          "allowupdate" : {
            "default" : null,
            "description" : "Allow update",
            "type" : "boolean",
            "nullable" : true
          },
          "completionsubmit" : {
            "default" : null,
            "description" : "Completion on user submission",
            "type" : "boolean",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "default" : null,
            "description" : "Display mode (vertical, horizontal)",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "includeinactive" : {
            "default" : null,
            "description" : "Include inactive users",
            "type" : "boolean",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "limitanswers" : {
            "default" : null,
            "description" : "Limit unswers",
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "publish" : {
            "default" : null,
            "description" : "If choice is published",
            "type" : "boolean",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "showavailable" : {
            "default" : null,
            "description" : "Show available spaces",
            "type" : "boolean",
            "nullable" : true
          },
          "showpreview" : {
            "default" : null,
            "description" : "Show preview before timeopen",
            "type" : "boolean",
            "nullable" : true
          },
          "showresults" : {
            "default" : null,
            "description" : "0 never, 1 after answer, 2 after close, 3 always",
            "type" : "integer",
            "nullable" : true
          },
          "showunanswered" : {
            "default" : null,
            "description" : "Show users who not answered yet",
            "type" : "boolean",
            "nullable" : true
          },
          "timeclose" : {
            "default" : null,
            "description" : "Date of closing validity",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time of last modification",
            "type" : "integer",
            "nullable" : true
          },
          "timeopen" : {
            "default" : null,
            "description" : "Date of opening validity",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_choice_get_choices_by_courses_200_response" : {
        "properties" : {
          "choices" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_choice_get_choices_by_courses_200_response_choices_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "choices" ]
      },
      "mod_choice_submit_choice_response_request" : {
        "properties" : {
          "choiceid" : {
            "description" : "choice instance id",
            "type" : "integer",
            "nullable" : true
          },
          "responses" : {
            "items" : {
              "default" : null,
              "description" : "answer id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "choiceid", "responses" ]
      },
      "mod_choice_submit_choice_response_200_response_answers_inner" : {
        "default" : null,
        "description" : "Answers",
        "properties" : {
          "choiceid" : {
            "default" : null,
            "description" : "choiceid",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "answer id",
            "type" : "integer",
            "nullable" : true
          },
          "optionid" : {
            "default" : null,
            "description" : "optionid",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "time of last modification",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_choice_submit_choice_response_200_response" : {
        "properties" : {
          "answers" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_choice_submit_choice_response_200_response_answers_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "answers" ]
      },
      "mod_data_add_entry_request_data_inner" : {
        "default" : null,
        "properties" : {
          "fieldid" : {
            "default" : null,
            "description" : "The field id.",
            "type" : "integer",
            "nullable" : true
          },
          "subfield" : {
            "default" : "",
            "description" : "The subfield name (if required).",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The contents for the field always JSON encoded.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_add_entry_request" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_add_entry_request_data_inner"
            },
            "type" : "array"
          },
          "databaseid" : {
            "default" : null,
            "description" : "data instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "data", "databaseid" ]
      },
      "mod_data_add_entry_200_response_fieldnotifications_inner" : {
        "default" : null,
        "properties" : {
          "fieldname" : {
            "default" : null,
            "description" : "The field name.",
            "type" : "string",
            "nullable" : true
          },
          "notification" : {
            "default" : null,
            "description" : "The notification for the field.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_add_entry_200_response" : {
        "properties" : {
          "fieldnotifications" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_add_entry_200_response_fieldnotifications_inner"
            },
            "type" : "array"
          },
          "generalnotifications" : {
            "items" : {
              "default" : null,
              "description" : "General notifications",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "newentryid" : {
            "default" : null,
            "description" : "True new created entry id. 0 if the entry was not created.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "fieldnotifications", "generalnotifications", "newentryid" ]
      },
      "mod_data_approve_entry_request" : {
        "properties" : {
          "approve" : {
            "default" : true,
            "description" : "Whether to approve (true) or unapprove the entry.",
            "type" : "boolean",
            "nullable" : true
          },
          "entryid" : {
            "default" : null,
            "description" : "Record entry id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "entryid" ]
      },
      "mod_data_delete_entry_request" : {
        "properties" : {
          "entryid" : {
            "description" : "Record entry id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "entryid" ]
      },
      "mod_data_delete_entry_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "Always true. If we see this field it means that the entry was deleted.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_data_delete_saved_preset_request" : {
        "properties" : {
          "dataid" : {
            "default" : null,
            "description" : "Id of the data activity",
            "type" : "integer",
            "nullable" : true
          },
          "presetnames" : {
            "items" : {
              "default" : null,
              "description" : "The preset name to delete",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "dataid", "presetnames" ]
      },
      "mod_data_get_data_access_information_request" : {
        "properties" : {
          "databaseid" : {
            "default" : null,
            "description" : "Database instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "databaseid" ]
      },
      "mod_data_get_data_access_information_200_response" : {
        "properties" : {
          "canaddentry" : {
            "default" : null,
            "description" : "Whether the user can add entries or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canapprove" : {
            "default" : null,
            "description" : "Whether the user can approve entries or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanageentries" : {
            "default" : null,
            "description" : "Whether the user can manage entries or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "entrieslefttoadd" : {
            "default" : null,
            "description" : "The number of entries left to complete the activity.",
            "type" : "integer",
            "nullable" : true
          },
          "entrieslefttoview" : {
            "default" : null,
            "description" : "The number of entries left to view other users entries.",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "User current group id (calculated)",
            "type" : "integer",
            "nullable" : true
          },
          "inreadonlyperiod" : {
            "default" : null,
            "description" : "Whether the database is in read mode only.",
            "type" : "boolean",
            "nullable" : true
          },
          "numentries" : {
            "default" : null,
            "description" : "The number of entries the current user added.",
            "type" : "integer",
            "nullable" : true
          },
          "timeavailable" : {
            "default" : null,
            "description" : "Whether the database is available or not by time restrictions.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "canaddentry", "canapprove", "canmanageentries", "entrieslefttoadd", "entrieslefttoview", "groupid", "inreadonlyperiod", "numentries", "timeavailable" ]
      },
      "mod_data_get_databases_by_courses_200_response_databases_inner" : {
        "default" : null,
        "properties" : {
          "addtemplate" : {
            "default" : null,
            "description" : "addtemplate field",
            "type" : "string",
            "nullable" : true
          },
          "approval" : {
            "default" : null,
            "description" : "approval field",
            "type" : "boolean",
            "nullable" : false
          },
          "asearchtemplate" : {
            "default" : null,
            "description" : "asearchtemplate field",
            "type" : "string",
            "nullable" : true
          },
          "assessed" : {
            "default" : null,
            "description" : "assessed field",
            "type" : "integer",
            "nullable" : false
          },
          "assesstimefinish" : {
            "default" : null,
            "description" : "assesstimefinish field",
            "type" : "integer",
            "nullable" : false
          },
          "assesstimestart" : {
            "default" : null,
            "description" : "assesstimestart field",
            "type" : "integer",
            "nullable" : false
          },
          "comments" : {
            "default" : null,
            "description" : "comments enabled",
            "type" : "boolean",
            "nullable" : false
          },
          "course" : {
            "default" : null,
            "description" : "Course id",
            "type" : "integer",
            "nullable" : false
          },
          "coursemodule" : {
            "default" : null,
            "description" : "coursemodule",
            "type" : "integer",
            "nullable" : false
          },
          "csstemplate" : {
            "default" : null,
            "description" : "csstemplate field",
            "type" : "string",
            "nullable" : true
          },
          "defaultsort" : {
            "default" : null,
            "description" : "defaultsort field",
            "type" : "integer",
            "nullable" : false
          },
          "defaultsortdir" : {
            "default" : null,
            "description" : "defaultsortdir field",
            "type" : "integer",
            "nullable" : false
          },
          "editany" : {
            "default" : null,
            "description" : "editany field (not used any more)",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Database id",
            "type" : "integer",
            "nullable" : false
          },
          "intro" : {
            "default" : null,
            "description" : "The Database intro",
            "type" : "string",
            "nullable" : false
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "default" : "0",
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "jstemplate" : {
            "default" : null,
            "description" : "jstemplate field",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "listtemplate" : {
            "default" : null,
            "description" : "listtemplate field",
            "type" : "string",
            "nullable" : true
          },
          "listtemplatefooter" : {
            "default" : null,
            "description" : "listtemplatefooter field",
            "type" : "string",
            "nullable" : true
          },
          "listtemplateheader" : {
            "default" : null,
            "description" : "listtemplateheader field",
            "type" : "string",
            "nullable" : true
          },
          "manageapproved" : {
            "default" : null,
            "description" : "manageapproved field",
            "type" : "boolean",
            "nullable" : false
          },
          "maxentries" : {
            "default" : null,
            "description" : "maxentries field",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Database name",
            "type" : "string",
            "nullable" : false
          },
          "notification" : {
            "default" : null,
            "description" : "notification field (not used any more)",
            "type" : "integer",
            "nullable" : false
          },
          "requiredentries" : {
            "default" : null,
            "description" : "requiredentries field",
            "type" : "integer",
            "nullable" : false
          },
          "requiredentriestoview" : {
            "default" : null,
            "description" : "requiredentriestoview field",
            "type" : "integer",
            "nullable" : false
          },
          "rssarticles" : {
            "default" : null,
            "description" : "rssarticles field",
            "type" : "integer",
            "nullable" : false
          },
          "rsstemplate" : {
            "default" : null,
            "description" : "rsstemplate field",
            "type" : "string",
            "nullable" : true
          },
          "rsstitletemplate" : {
            "default" : null,
            "description" : "rsstitletemplate field",
            "type" : "string",
            "nullable" : true
          },
          "scale" : {
            "default" : null,
            "description" : "scale field",
            "type" : "integer",
            "nullable" : false
          },
          "singletemplate" : {
            "default" : null,
            "description" : "singletemplate field",
            "type" : "string",
            "nullable" : true
          },
          "timeavailablefrom" : {
            "default" : null,
            "description" : "timeavailablefrom field",
            "type" : "integer",
            "nullable" : false
          },
          "timeavailableto" : {
            "default" : null,
            "description" : "timeavailableto field",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : false
          },
          "timeviewfrom" : {
            "default" : null,
            "description" : "timeviewfrom field",
            "type" : "integer",
            "nullable" : false
          },
          "timeviewto" : {
            "default" : null,
            "description" : "timeviewto field",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_data_get_databases_by_courses_200_response" : {
        "properties" : {
          "databases" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_databases_by_courses_200_response_databases_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "databases" ]
      },
      "mod_data_get_entries_request" : {
        "properties" : {
          "databaseid" : {
            "description" : "data instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          },
          "order" : {
            "default" : null,
            "description" : "The direction of the sorting: 'ASC' or 'DESC'.\n                                                Empty for using the default database setting.",
            "type" : "string",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "The page of records to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "The number of records to return per page",
            "type" : "integer",
            "nullable" : true
          },
          "returncontents" : {
            "default" : false,
            "description" : "Whether to return contents or not. This will return each entry\n                                                        raw contents and the complete list view (using the template).",
            "type" : "boolean",
            "nullable" : true
          },
          "sort" : {
            "default" : null,
            "description" : "Sort the records by this field id, reserved ids are:\n                                                0: timeadded\n                                                -1: firstname\n                                                -2: lastname\n                                                -3: approved\n                                                -4: timemodified.\n                                                Empty for using the default database setting.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "databaseid" ]
      },
      "mod_data_get_entries_200_response_entries_inner_contents_inner" : {
        "default" : null,
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content1" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content2" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content3" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content4" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "fieldid" : {
            "default" : 0,
            "description" : "The field type of the content.",
            "type" : "integer",
            "nullable" : false
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "id" : {
            "default" : null,
            "description" : "Content id.",
            "type" : "integer",
            "nullable" : false
          },
          "recordid" : {
            "default" : 0,
            "description" : "The record this content belongs to.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_data_get_entries_200_response_entries_inner_tags_inner" : {
        "properties" : {
          "flag" : {
            "default" : 0,
            "description" : "Whether the tag is flagged as inappropriate.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Tag id.",
            "type" : "integer",
            "nullable" : false
          },
          "isstandard" : {
            "default" : false,
            "description" : "Whether this tag is standard.",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "description" : "Id of the record tagged.",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "Tag name.",
            "type" : "string",
            "nullable" : false
          },
          "ordering" : {
            "description" : "Tag ordering.",
            "type" : "integer",
            "nullable" : false
          },
          "rawname" : {
            "description" : "The raw, unnormalised name for the tag as entered by users.",
            "type" : "string",
            "nullable" : false
          },
          "tagcollid" : {
            "description" : "Tag collection id.",
            "type" : "integer",
            "nullable" : false
          },
          "taginstancecontextid" : {
            "description" : "Context the tag instance belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "taginstanceid" : {
            "description" : "Tag instance id.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_data_get_entries_200_response_entries_inner" : {
        "default" : null,
        "properties" : {
          "approved" : {
            "default" : 0,
            "description" : "Whether the entry has been approved (if the database is configured in that way).",
            "type" : "boolean",
            "nullable" : false
          },
          "canmanageentry" : {
            "default" : null,
            "description" : "Whether the current user can manage this entry",
            "type" : "boolean",
            "nullable" : false
          },
          "contents" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_contents_inner"
            },
            "type" : "array"
          },
          "dataid" : {
            "default" : 0,
            "description" : "The database id this record belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "fullname" : {
            "default" : null,
            "description" : "The user who created the entry fullname.",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "default" : 0,
            "description" : "The group id this record belongs to (0 for no groups).",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Record id.",
            "type" : "integer",
            "nullable" : false
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "default" : 0,
            "description" : "Time the record was created.",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "Last time the record was modified.",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "default" : 0,
            "description" : "The id of the user who created the record.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_data_get_entries_200_response" : {
        "properties" : {
          "entries" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner"
            },
            "type" : "array"
          },
          "listviewcontents" : {
            "default" : null,
            "description" : "The list view contents as is rendered in the site.",
            "type" : "string",
            "nullable" : true
          },
          "totalcount" : {
            "default" : null,
            "description" : "Total count of records.",
            "type" : "integer",
            "nullable" : true
          },
          "totalfilesize" : {
            "default" : null,
            "description" : "Total size (bytes) of the files included in the records.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "entries", "totalcount", "totalfilesize" ]
      },
      "mod_data_get_entry_request" : {
        "properties" : {
          "entryid" : {
            "default" : null,
            "description" : "record entry id",
            "type" : "integer",
            "nullable" : true
          },
          "returncontents" : {
            "default" : false,
            "description" : "Whether to return contents or not.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "entryid" ]
      },
      "mod_data_get_entry_200_response_entry_contents_inner" : {
        "default" : null,
        "properties" : {
          "content" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content1" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content2" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content3" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "content4" : {
            "description" : "Contents.",
            "type" : "string",
            "nullable" : true
          },
          "fieldid" : {
            "default" : 0,
            "description" : "The field type of the content.",
            "type" : "integer",
            "nullable" : false
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "Content id.",
            "type" : "integer",
            "nullable" : false
          },
          "recordid" : {
            "default" : 0,
            "description" : "The record this content belongs to.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_data_get_entry_200_response_entry" : {
        "properties" : {
          "approved" : {
            "default" : 0,
            "description" : "Whether the entry has been approved (if the database is configured in that way).",
            "type" : "boolean",
            "nullable" : false
          },
          "canmanageentry" : {
            "description" : "Whether the current user can manage this entry",
            "type" : "boolean",
            "nullable" : false
          },
          "contents" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entry_200_response_entry_contents_inner"
            },
            "type" : "array"
          },
          "dataid" : {
            "default" : 0,
            "description" : "The database id this record belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "fullname" : {
            "description" : "The user who created the entry fullname.",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "default" : 0,
            "description" : "The group id this record belongs to (0 for no groups).",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "Record id.",
            "type" : "integer",
            "nullable" : false
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "default" : 0,
            "description" : "Time the record was created.",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "Last time the record was modified.",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "default" : 0,
            "description" : "The id of the user who created the record.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "approved", "canmanageentry", "dataid", "groupid", "id", "timecreated", "timemodified", "userid" ]
      },
      "mod_data_get_entry_200_response_ratinginfo_ratings_inner" : {
        "default" : null,
        "properties" : {
          "aggregate" : {
            "default" : null,
            "description" : "Aggregated ratings grade.",
            "type" : "number",
            "nullable" : true
          },
          "aggregatelabel" : {
            "default" : null,
            "description" : "The aggregation label.",
            "type" : "string",
            "nullable" : true
          },
          "aggregatestr" : {
            "default" : null,
            "description" : "Aggregated ratings as string.",
            "type" : "string",
            "nullable" : true
          },
          "canrate" : {
            "default" : null,
            "description" : "Whether the user can rate the item.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewaggregate" : {
            "default" : null,
            "description" : "Whether the user can view the aggregated grade.",
            "type" : "boolean",
            "nullable" : true
          },
          "count" : {
            "default" : null,
            "description" : "Ratings count (used when aggregating).",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "Item id.",
            "type" : "integer",
            "nullable" : true
          },
          "rating" : {
            "default" : null,
            "description" : "The rating the user gave.",
            "type" : "integer",
            "nullable" : true
          },
          "scaleid" : {
            "default" : null,
            "description" : "Scale id.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User who rated id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_get_entry_200_response_ratinginfo_scales_inner_items_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Scale name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Scale value/option id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_get_entry_200_response_ratinginfo_scales_inner" : {
        "default" : null,
        "description" : "Scale information",
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "Course id.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Scale id.",
            "type" : "integer",
            "nullable" : true
          },
          "isnumeric" : {
            "default" : null,
            "description" : "Whether is a numeric scale.",
            "type" : "boolean",
            "nullable" : true
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entry_200_response_ratinginfo_scales_inner_items_inner"
            },
            "type" : "array"
          },
          "max" : {
            "default" : null,
            "description" : "Max value for the scale.",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Scale name (when a real scale is used).",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_get_entry_200_response_ratinginfo" : {
        "properties" : {
          "canviewall" : {
            "default" : null,
            "description" : "Whether the user can view all the individual ratings.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewany" : {
            "default" : null,
            "description" : "Whether the user can view aggregate of ratings of others.",
            "type" : "boolean",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "Context name.",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "Context id.",
            "type" : "integer",
            "nullable" : true
          },
          "ratingarea" : {
            "default" : null,
            "description" : "Rating area name.",
            "type" : "string",
            "nullable" : true
          },
          "ratings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entry_200_response_ratinginfo_ratings_inner"
            },
            "type" : "array"
          },
          "scales" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entry_200_response_ratinginfo_scales_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "component", "contextid", "ratingarea" ]
      },
      "mod_data_get_entry_200_response" : {
        "properties" : {
          "entry" : {
            "$ref" : "#/components/schemas/mod_data_get_entry_200_response_entry"
          },
          "entryviewcontents" : {
            "default" : null,
            "description" : "The entry as is rendered in the site.",
            "type" : "string",
            "nullable" : true
          },
          "ratinginfo" : {
            "$ref" : "#/components/schemas/mod_data_get_entry_200_response_ratinginfo"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "entry" ]
      },
      "mod_data_get_fields_request" : {
        "properties" : {
          "databaseid" : {
            "description" : "Database instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "databaseid" ]
      },
      "mod_data_get_fields_200_response_fields_inner" : {
        "default" : null,
        "properties" : {
          "dataid" : {
            "default" : 0,
            "description" : "The field type of the content.",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : null,
            "description" : "The field description.",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Field id.",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "The field name.",
            "type" : "string",
            "nullable" : false
          },
          "param1" : {
            "default" : null,
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param2" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param3" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param4" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param5" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param6" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param7" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param8" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param9" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "param10" : {
            "description" : "Field parameters",
            "type" : "string",
            "nullable" : true
          },
          "required" : {
            "default" : 0,
            "description" : "Whether is a field required or not.",
            "type" : "boolean",
            "nullable" : false
          },
          "type" : {
            "default" : null,
            "description" : "The field type.",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_data_get_fields_200_response" : {
        "properties" : {
          "fields" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_fields_200_response_fields_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "fields" ]
      },
      "mod_data_get_mapping_information_request" : {
        "properties" : {
          "cmid" : {
            "description" : "Id of the data activity",
            "type" : "integer",
            "nullable" : true
          },
          "importedpreset" : {
            "default" : null,
            "description" : "Preset to be imported",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "cmid", "importedpreset" ]
      },
      "mod_data_get_mapping_information_200_response_data" : {
        "properties" : {
          "fieldstocreate" : {
            "default" : null,
            "description" : "List of field names to create",
            "type" : "string",
            "nullable" : true
          },
          "fieldstoremove" : {
            "default" : null,
            "description" : "List of field names to remove",
            "type" : "string",
            "nullable" : true
          },
          "needsmapping" : {
            "default" : null,
            "description" : "Whether the importing needs mapping or not",
            "type" : "boolean",
            "nullable" : true
          },
          "presetname" : {
            "default" : null,
            "description" : "Name of the applied preset",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "fieldstocreate", "fieldstoremove", "needsmapping", "presetname" ]
      },
      "mod_data_get_mapping_information_200_response" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/mod_data_get_mapping_information_200_response_data"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_data_search_entries_request_advsearch_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Field key for search.\n                                                            Use fn or ln for first or last name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "JSON encoded value for search",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_search_entries_request" : {
        "properties" : {
          "advsearch" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_search_entries_request_advsearch_inner"
            },
            "type" : "array"
          },
          "databaseid" : {
            "description" : "data instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          },
          "order" : {
            "description" : "The direction of the sorting: 'ASC' or 'DESC'.\n                                                Empty for using the default database setting.",
            "type" : "string",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "The page of records to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "The number of records to return per page",
            "type" : "integer",
            "nullable" : true
          },
          "returncontents" : {
            "default" : false,
            "description" : "Whether to return contents or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "search" : {
            "default" : "",
            "description" : "search string (empty when using advanced)",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "description" : "Sort the records by this field id, reserved ids are:\n                                                0: timeadded\n                                                -1: firstname\n                                                -2: lastname\n                                                -3: approved\n                                                -4: timemodified.\n                                                Empty for using the default database setting.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "databaseid" ]
      },
      "mod_data_search_entries_200_response_entries_inner" : {
        "default" : null,
        "properties" : {
          "approved" : {
            "default" : 0,
            "description" : "Whether the entry has been approved (if the database is configured in that way).",
            "type" : "boolean",
            "nullable" : false
          },
          "canmanageentry" : {
            "description" : "Whether the current user can manage this entry",
            "type" : "boolean",
            "nullable" : false
          },
          "contents" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entry_200_response_entry_contents_inner"
            },
            "type" : "array"
          },
          "dataid" : {
            "default" : 0,
            "description" : "The database id this record belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "fullname" : {
            "description" : "The user who created the entry fullname.",
            "type" : "string",
            "nullable" : false
          },
          "groupid" : {
            "default" : 0,
            "description" : "The group id this record belongs to (0 for no groups).",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "Record id.",
            "type" : "integer",
            "nullable" : false
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "default" : 0,
            "description" : "Time the record was created.",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "Last time the record was modified.",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "default" : 0,
            "description" : "The id of the user who created the record.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_data_search_entries_200_response" : {
        "properties" : {
          "entries" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_search_entries_200_response_entries_inner"
            },
            "type" : "array"
          },
          "listviewcontents" : {
            "description" : "The list view contents as is rendered in the site.",
            "type" : "string",
            "nullable" : true
          },
          "maxcount" : {
            "default" : null,
            "description" : "Total count of records that the user could see in the database\n                    (if all the search criterias were removed).",
            "type" : "integer",
            "nullable" : true
          },
          "totalcount" : {
            "default" : null,
            "description" : "Total count of records returned by the search.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "entries", "totalcount" ]
      },
      "mod_data_update_entry_request_data_inner" : {
        "default" : null,
        "properties" : {
          "fieldid" : {
            "description" : "The field id.",
            "type" : "integer",
            "nullable" : true
          },
          "subfield" : {
            "default" : null,
            "description" : "The subfield name (if required).",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The new contents for the field always JSON encoded.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_update_entry_request" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_update_entry_request_data_inner"
            },
            "type" : "array"
          },
          "entryid" : {
            "default" : null,
            "description" : "The entry record id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "data", "entryid" ]
      },
      "mod_data_update_entry_200_response_fieldnotifications_inner" : {
        "properties" : {
          "fieldname" : {
            "description" : "The field name.",
            "type" : "string",
            "nullable" : true
          },
          "notification" : {
            "description" : "The notification for the field.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_data_update_entry_200_response" : {
        "properties" : {
          "fieldnotifications" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_update_entry_200_response_fieldnotifications_inner"
            },
            "type" : "array"
          },
          "generalnotifications" : {
            "items" : {
              "description" : "General notifications",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "updated" : {
            "default" : null,
            "description" : "True if the entry was successfully updated, false other wise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "fieldnotifications", "generalnotifications", "updated" ]
      },
      "mod_data_view_database_request" : {
        "properties" : {
          "databaseid" : {
            "description" : "data instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "databaseid" ]
      },
      "mod_feedback_get_analysis_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "default" : null,
            "description" : "Feedback instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid" ]
      },
      "mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner" : {
        "default" : null,
        "properties" : {
          "author" : {
            "description" : "author",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "filearea" : {
            "description" : "filearea",
            "type" : "string",
            "nullable" : false
          },
          "filename" : {
            "description" : "filename",
            "type" : "string",
            "nullable" : false
          },
          "filenameshort" : {
            "description" : "filenameshort",
            "type" : "string",
            "nullable" : false
          },
          "filepath" : {
            "description" : "filepath",
            "type" : "string",
            "nullable" : false
          },
          "filesize" : {
            "description" : "filesize",
            "type" : "integer",
            "nullable" : false
          },
          "filesizeformatted" : {
            "description" : "filesizeformatted",
            "type" : "string",
            "nullable" : false
          },
          "icon" : {
            "description" : "icon",
            "type" : "string",
            "nullable" : false
          },
          "isdir" : {
            "description" : "isdir",
            "type" : "boolean",
            "nullable" : false
          },
          "isimage" : {
            "description" : "isimage",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "license" : {
            "description" : "license",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timecreatedformatted" : {
            "description" : "timecreatedformatted",
            "type" : "string",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timemodifiedformatted" : {
            "description" : "timemodifiedformatted",
            "type" : "string",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_analysis_200_response_itemsdata_inner_item" : {
        "properties" : {
          "dependitem" : {
            "default" : 0,
            "description" : "The item id this item depend on.",
            "type" : "integer",
            "nullable" : false
          },
          "dependvalue" : {
            "default" : null,
            "description" : "The depend value.",
            "type" : "string",
            "nullable" : false
          },
          "feedback" : {
            "default" : 0,
            "description" : "The feedback instance id this records belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "hasvalue" : {
            "default" : 0,
            "description" : "Whether it has a value or not.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "The record id.",
            "type" : "integer",
            "nullable" : false
          },
          "itemfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner"
            },
            "type" : "array"
          },
          "itemnumber" : {
            "default" : null,
            "description" : "The item position number",
            "type" : "integer",
            "nullable" : true
          },
          "label" : {
            "default" : null,
            "description" : "The item label.",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "The item name.",
            "type" : "string",
            "nullable" : false
          },
          "options" : {
            "default" : null,
            "description" : "Different additional settings for the item (question).",
            "type" : "string",
            "nullable" : false
          },
          "otherdata" : {
            "default" : null,
            "description" : "Additional data that may be required by external functions",
            "type" : "string",
            "nullable" : true
          },
          "position" : {
            "default" : 0,
            "description" : "The position in the list of questions.",
            "type" : "integer",
            "nullable" : false
          },
          "presentation" : {
            "default" : null,
            "description" : "The text describing the item or the available possible answers.",
            "type" : "string",
            "nullable" : false
          },
          "required" : {
            "default" : 0,
            "description" : "Whether is a item (question) required or not.",
            "type" : "boolean",
            "nullable" : false
          },
          "template" : {
            "default" : 0,
            "description" : "If it belogns to a template, the template id.",
            "type" : "integer",
            "nullable" : false
          },
          "typ" : {
            "default" : null,
            "description" : "The type of the item.",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "dependitem", "dependvalue", "feedback", "hasvalue", "id", "itemfiles", "itemnumber", "label", "name", "options", "otherdata", "position", "presentation", "required", "template", "typ" ]
      },
      "mod_feedback_get_analysis_200_response_itemsdata_inner" : {
        "default" : null,
        "properties" : {
          "data" : {
            "items" : {
              "default" : null,
              "description" : "The analysis data (can be json encoded)",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "item" : {
            "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item"
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_analysis_200_response" : {
        "properties" : {
          "completedcount" : {
            "default" : null,
            "description" : "Number of completed submissions.",
            "type" : "integer",
            "nullable" : true
          },
          "itemscount" : {
            "default" : null,
            "description" : "Number of items (questions).",
            "type" : "integer",
            "nullable" : true
          },
          "itemsdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "completedcount", "itemscount", "itemsdata" ]
      },
      "mod_feedback_get_current_completed_tmp_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "description" : "Feedback instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid" ]
      },
      "mod_feedback_get_current_completed_tmp_200_response_feedback" : {
        "properties" : {
          "anonymous_response" : {
            "default" : null,
            "description" : "Whether is an anonymous response.",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "default" : null,
            "description" : "The course id where the feedback was completed.",
            "type" : "integer",
            "nullable" : false
          },
          "feedback" : {
            "default" : null,
            "description" : "The feedback instance id this records belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "guestid" : {
            "default" : null,
            "description" : "For guests, this is the session key.",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "The record id.",
            "type" : "integer",
            "nullable" : false
          },
          "random_response" : {
            "default" : null,
            "description" : "The response number (used when shuffling anonymous responses).",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "The last time the feedback was completed.",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "default" : null,
            "description" : "The user who completed the feedback (0 for anonymous).",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "anonymous_response", "courseid", "feedback", "guestid", "id", "random_response", "timemodified", "userid" ]
      },
      "mod_feedback_get_current_completed_tmp_200_response" : {
        "properties" : {
          "feedback" : {
            "$ref" : "#/components/schemas/mod_feedback_get_current_completed_tmp_200_response_feedback"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "feedback" ]
      },
      "mod_feedback_get_feedback_access_information_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "default" : null,
            "description" : "Feedback instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid" ]
      },
      "mod_feedback_get_feedback_access_information_200_response" : {
        "properties" : {
          "cancomplete" : {
            "default" : null,
            "description" : "Whether the user can complete the feedback or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "candeletesubmissions" : {
            "default" : null,
            "description" : "Whether the user can delete submissions or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canedititems" : {
            "default" : null,
            "description" : "Whether the user can edit feedback items or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "cansubmit" : {
            "default" : null,
            "description" : "Whether the user can submit the feedback or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewanalysis" : {
            "default" : null,
            "description" : "Whether the user can view the analysis or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewreports" : {
            "default" : null,
            "description" : "Whether the user can view the feedback reports or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "isalreadysubmitted" : {
            "default" : null,
            "description" : "Whether the feedback is already submitted or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "isanonymous" : {
            "default" : null,
            "description" : "Whether the feedback is anonymous or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "isempty" : {
            "default" : null,
            "description" : "Whether the feedback has questions or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "isopen" : {
            "default" : null,
            "description" : "Whether the feedback has active access time restrictions or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "cancomplete", "candeletesubmissions", "canedititems", "cansubmit", "canviewanalysis", "canviewreports", "isalreadysubmitted", "isanonymous", "isempty", "isopen" ]
      },
      "mod_feedback_get_feedbacks_by_courses_200_response_feedbacks_inner" : {
        "default" : null,
        "properties" : {
          "anonymous" : {
            "default" : null,
            "description" : "Whether the feedback is anonymous.",
            "type" : "integer",
            "nullable" : false
          },
          "autonumbering" : {
            "default" : 1,
            "description" : "Whether questions should be auto-numbered.",
            "type" : "boolean",
            "nullable" : false
          },
          "completionsubmit" : {
            "default" : 0,
            "description" : "If this field is set to 1, then the activity will be automatically marked as complete on submission.",
            "type" : "boolean",
            "nullable" : false
          },
          "course" : {
            "default" : null,
            "description" : "Course id this feedback is part of.",
            "type" : "integer",
            "nullable" : false
          },
          "coursemodule" : {
            "description" : "coursemodule",
            "type" : "integer",
            "nullable" : false
          },
          "email_notification" : {
            "default" : null,
            "description" : "Whether email notifications will be sent to teachers.",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "The primary key of the record.",
            "type" : "integer",
            "nullable" : false
          },
          "intro" : {
            "default" : "",
            "description" : "Feedback introduction text.",
            "type" : "string",
            "nullable" : false
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "default" : "0",
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "multiple_submit" : {
            "default" : 1,
            "description" : "Whether multiple submissions are allowed.",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Feedback name.",
            "type" : "string",
            "nullable" : false
          },
          "page_after_submit" : {
            "default" : null,
            "description" : "Text to display after submission.",
            "type" : "string",
            "nullable" : false
          },
          "page_after_submitformat" : {
            "default" : "0",
            "description" : "page_after_submit format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "pageaftersubmitfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "publish_stats" : {
            "default" : 0,
            "description" : "Whether stats should be published.",
            "type" : "boolean",
            "nullable" : false
          },
          "site_after_submit" : {
            "default" : null,
            "description" : "Link to next page after submission.",
            "type" : "string",
            "nullable" : false
          },
          "timeclose" : {
            "default" : null,
            "description" : "Allow answers until this time.",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "The time this record was modified.",
            "type" : "integer",
            "nullable" : false
          },
          "timeopen" : {
            "default" : null,
            "description" : "Allow answers from this time.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_feedbacks_by_courses_200_response" : {
        "properties" : {
          "feedbacks" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_feedbacks_by_courses_200_response_feedbacks_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "feedbacks" ]
      },
      "mod_feedback_get_finished_responses_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "description" : "Feedback instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid" ]
      },
      "mod_feedback_get_finished_responses_200_response_responses_inner" : {
        "default" : null,
        "properties" : {
          "completed" : {
            "default" : null,
            "description" : "Reference to the feedback_completed table.",
            "type" : "integer",
            "nullable" : false
          },
          "course_id" : {
            "default" : null,
            "description" : "The course id this record belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "The record id.",
            "type" : "integer",
            "nullable" : false
          },
          "item" : {
            "default" : null,
            "description" : "The item id that was responded.",
            "type" : "integer",
            "nullable" : false
          },
          "tmp_completed" : {
            "default" : null,
            "description" : "Old field - not used anymore.",
            "type" : "integer",
            "nullable" : false
          },
          "value" : {
            "default" : null,
            "description" : "The response value.",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_finished_responses_200_response" : {
        "properties" : {
          "responses" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_finished_responses_200_response_responses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "responses" ]
      },
      "mod_feedback_get_items_200_response_items_inner" : {
        "default" : null,
        "properties" : {
          "dependitem" : {
            "default" : 0,
            "description" : "The item id this item depend on.",
            "type" : "integer",
            "nullable" : false
          },
          "dependvalue" : {
            "description" : "The depend value.",
            "type" : "string",
            "nullable" : false
          },
          "feedback" : {
            "default" : 0,
            "description" : "The feedback instance id this records belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "hasvalue" : {
            "default" : 0,
            "description" : "Whether it has a value or not.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "The record id.",
            "type" : "integer",
            "nullable" : false
          },
          "itemfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner"
            },
            "type" : "array"
          },
          "itemnumber" : {
            "description" : "The item position number",
            "type" : "integer",
            "nullable" : true
          },
          "label" : {
            "description" : "The item label.",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "description" : "The item name.",
            "type" : "string",
            "nullable" : false
          },
          "options" : {
            "description" : "Different additional settings for the item (question).",
            "type" : "string",
            "nullable" : false
          },
          "otherdata" : {
            "description" : "Additional data that may be required by external functions",
            "type" : "string",
            "nullable" : true
          },
          "position" : {
            "default" : 0,
            "description" : "The position in the list of questions.",
            "type" : "integer",
            "nullable" : false
          },
          "presentation" : {
            "description" : "The text describing the item or the available possible answers.",
            "type" : "string",
            "nullable" : false
          },
          "required" : {
            "default" : 0,
            "description" : "Whether is a item (question) required or not.",
            "type" : "boolean",
            "nullable" : false
          },
          "template" : {
            "default" : 0,
            "description" : "If it belogns to a template, the template id.",
            "type" : "integer",
            "nullable" : false
          },
          "typ" : {
            "description" : "The type of the item.",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_items_200_response" : {
        "properties" : {
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_items_200_response_items_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "items" ]
      },
      "mod_feedback_get_last_completed_200_response_completed" : {
        "properties" : {
          "anonymous_response" : {
            "description" : "Whether is an anonymous response.",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "The course id where the feedback was completed.",
            "type" : "integer",
            "nullable" : false
          },
          "feedback" : {
            "description" : "The feedback instance id this records belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "The record id.",
            "type" : "integer",
            "nullable" : false
          },
          "random_response" : {
            "description" : "The response number (used when shuffling anonymous responses).",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "The last time the feedback was completed.",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "description" : "The user who completed the feedback (0 for anonymous).",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "anonymous_response", "courseid", "feedback", "id", "random_response", "timemodified", "userid" ]
      },
      "mod_feedback_get_last_completed_200_response" : {
        "properties" : {
          "completed" : {
            "$ref" : "#/components/schemas/mod_feedback_get_last_completed_200_response_completed"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "completed" ]
      },
      "mod_feedback_get_non_respondents_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "description" : "Feedback instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group.",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "The page of records to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "The number of records to return per page.",
            "type" : "integer",
            "nullable" : true
          },
          "sort" : {
            "default" : "lastaccess",
            "description" : "Sort param, must be firstname, lastname or lastaccess (default).",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid" ]
      },
      "mod_feedback_get_non_respondents_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "fullname" : {
            "description" : "User full name",
            "type" : "string",
            "nullable" : true
          },
          "started" : {
            "default" : null,
            "description" : "If the user has started the attempt",
            "type" : "boolean",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_non_respondents_200_response" : {
        "properties" : {
          "total" : {
            "default" : null,
            "description" : "Total number of non respondents",
            "type" : "integer",
            "nullable" : true
          },
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_non_respondents_200_response_users_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "total", "users" ]
      },
      "mod_feedback_get_page_items_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "description" : "Feedback instance id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : null,
            "description" : "The page to get starting by 0",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid", "page" ]
      },
      "mod_feedback_get_page_items_200_response" : {
        "properties" : {
          "hasnextpage" : {
            "default" : null,
            "description" : "Whether there are more pages.",
            "type" : "boolean",
            "nullable" : true
          },
          "hasprevpage" : {
            "default" : null,
            "description" : "Whether is a previous page.",
            "type" : "boolean",
            "nullable" : true
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_items_200_response_items_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "hasnextpage", "hasprevpage", "items" ]
      },
      "mod_feedback_get_responses_analysis_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "description" : "Feedback instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "The page of records to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "The number of records to return per page",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid" ]
      },
      "mod_feedback_get_responses_analysis_200_response_anonattempts_inner_responses_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Response id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Response name",
            "type" : "string",
            "nullable" : true
          },
          "printval" : {
            "default" : null,
            "description" : "Response ready for output",
            "type" : "string",
            "nullable" : true
          },
          "rawval" : {
            "default" : null,
            "description" : "Response raw value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_responses_analysis_200_response_anonattempts_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Completed id",
            "type" : "integer",
            "nullable" : true
          },
          "number" : {
            "default" : null,
            "description" : "Response number",
            "type" : "integer",
            "nullable" : true
          },
          "responses" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_responses_analysis_200_response_anonattempts_inner_responses_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_responses_analysis_200_response_attempts_inner_responses_inner" : {
        "properties" : {
          "id" : {
            "description" : "Response id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Response name",
            "type" : "string",
            "nullable" : true
          },
          "printval" : {
            "description" : "Response ready for output",
            "type" : "string",
            "nullable" : true
          },
          "rawval" : {
            "description" : "Response raw value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_responses_analysis_200_response_attempts_inner" : {
        "default" : null,
        "properties" : {
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "fullname" : {
            "description" : "User full name",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Completed id",
            "type" : "integer",
            "nullable" : true
          },
          "responses" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_responses_analysis_200_response_attempts_inner_responses_inner"
            },
            "type" : "array"
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time modified for the response",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User who responded",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_responses_analysis_200_response" : {
        "properties" : {
          "anonattempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_responses_analysis_200_response_anonattempts_inner"
            },
            "type" : "array"
          },
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_responses_analysis_200_response_attempts_inner"
            },
            "type" : "array"
          },
          "totalanonattempts" : {
            "default" : null,
            "description" : "Total anonymous responses count.",
            "type" : "integer",
            "nullable" : true
          },
          "totalattempts" : {
            "default" : null,
            "description" : "Total responses count.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "anonattempts", "attempts", "totalanonattempts", "totalattempts" ]
      },
      "mod_feedback_get_unfinished_responses_200_response_responses_inner" : {
        "default" : null,
        "properties" : {
          "completed" : {
            "default" : null,
            "description" : "Reference to the feedback_completedtmp table.",
            "type" : "integer",
            "nullable" : false
          },
          "course_id" : {
            "description" : "The course id this record belongs to.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "The record id.",
            "type" : "integer",
            "nullable" : false
          },
          "item" : {
            "description" : "The item id that was responded.",
            "type" : "integer",
            "nullable" : false
          },
          "tmp_completed" : {
            "description" : "Old field - not used anymore.",
            "type" : "integer",
            "nullable" : false
          },
          "value" : {
            "description" : "The response value.",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_feedback_get_unfinished_responses_200_response" : {
        "properties" : {
          "responses" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_unfinished_responses_200_response_responses_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "responses" ]
      },
      "mod_feedback_launch_feedback_200_response" : {
        "properties" : {
          "gopage" : {
            "default" : null,
            "description" : "The next page to go (-1 if we were already in the last page). 0 for first page.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "gopage" ]
      },
      "mod_feedback_process_page_request_responses_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The response name (usually type[index]_id).",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The response value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_feedback_process_page_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "description" : "Feedback instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "goprevious" : {
            "default" : false,
            "description" : "Whether we want to jump to previous page.",
            "type" : "boolean",
            "nullable" : true
          },
          "page" : {
            "default" : null,
            "description" : "The page being processed.",
            "type" : "integer",
            "nullable" : true
          },
          "responses" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_process_page_request_responses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "feedbackid", "page" ]
      },
      "mod_feedback_process_page_200_response" : {
        "properties" : {
          "completed" : {
            "default" : null,
            "description" : "If the user completed the feedback.",
            "type" : "boolean",
            "nullable" : true
          },
          "completionpagecontents" : {
            "default" : null,
            "description" : "The completion page contents.",
            "type" : "string",
            "nullable" : true
          },
          "jumpto" : {
            "default" : null,
            "description" : "The page to jump to.",
            "type" : "integer",
            "nullable" : true
          },
          "siteaftersubmit" : {
            "default" : null,
            "description" : "The link (could be relative) to show after submit.",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "completed", "completionpagecontents", "jumpto", "siteaftersubmit" ]
      },
      "mod_feedback_view_feedback_request" : {
        "properties" : {
          "courseid" : {
            "default" : 0,
            "description" : "Course where user completes the feedback (for site feedbacks only).",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackid" : {
            "description" : "Feedback instance id",
            "type" : "integer",
            "nullable" : true
          },
          "moduleviewed" : {
            "default" : false,
            "description" : "If we need to mark the module as viewed for completion",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "feedbackid" ]
      },
      "mod_folder_get_folders_by_courses_200_response_folders_inner" : {
        "default" : null,
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "default" : null,
            "description" : "Display type of folder contents on a separate page or inline",
            "type" : "integer",
            "nullable" : true
          },
          "forcedownload" : {
            "default" : null,
            "description" : "Whether file download is forced",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "revision" : {
            "default" : null,
            "description" : "Incremented when after each file changes, to avoid cache",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "showdownloadfolder" : {
            "default" : null,
            "description" : "Whether to show the download folder button",
            "type" : "integer",
            "nullable" : true
          },
          "showexpanded" : {
            "default" : null,
            "description" : "1 = expanded, 0 = collapsed for sub-folders",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time the folder was modified",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_folder_get_folders_by_courses_200_response" : {
        "properties" : {
          "folders" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_folder_get_folders_by_courses_200_response_folders_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "folders" ]
      },
      "mod_folder_view_folder_request" : {
        "properties" : {
          "folderid" : {
            "default" : null,
            "description" : "folder instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "folderid" ]
      },
      "mod_forum_add_discussion_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The allowed keys (value format) are:\n                                        discussionsubscribe (bool); subscribe to the discussion?, default to true\n                                        discussionpinned    (bool); is the discussion pinned, default to false\n                                        inlineattachmentsid              (int); the draft file area id for inline attachments\n                                        attachmentsid       (int); the draft file area id for attachments\n                            ",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the option,\n                                                            This param is validated in the external function.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_add_discussion_request" : {
        "properties" : {
          "forumid" : {
            "default" : null,
            "description" : "Forum instance ID",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "The group, default to 0",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "New Discussion message (only html format allowed)",
            "type" : "string",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_add_discussion_request_options_inner"
            },
            "type" : "array"
          },
          "subject" : {
            "default" : null,
            "description" : "New Discussion subject",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "forumid", "message", "subject" ]
      },
      "mod_forum_add_discussion_200_response" : {
        "properties" : {
          "discussionid" : {
            "default" : null,
            "description" : "New Discussion ID",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "discussionid" ]
      },
      "mod_forum_add_discussion_post_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The allowed keys (value format) are:\n                                        discussionsubscribe (bool); subscribe to the discussion?, default to true\n                                        private (bool); make this reply private to the author of the parent post, default to false.\n                                        inlineattachmentsid              (int); the draft file area id for inline attachments\n                                        attachmentsid       (int); the draft file area id for attachments\n                                        topreferredformat (bool); convert the message & messageformat to FORMAT_HTML, defaults to false\n                            ",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "the value of the option,\n                                                            this param is validated in the external function.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_add_discussion_post_request" : {
        "properties" : {
          "message" : {
            "default" : null,
            "description" : "new post message (html assumed if messageformat is not provided)",
            "type" : "string",
            "nullable" : true
          },
          "messageformat" : {
            "default" : "1",
            "description" : "message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_add_discussion_post_request_options_inner"
            },
            "type" : "array"
          },
          "postid" : {
            "default" : null,
            "description" : "the post id we are going to reply to\n                                                (can be the initial discussion post",
            "type" : "integer",
            "nullable" : true
          },
          "subject" : {
            "default" : null,
            "description" : "new post subject",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "message", "postid", "subject" ]
      },
      "mod_forum_add_discussion_post_200_response_messages_inner" : {
        "default" : null,
        "description" : "Messages",
        "properties" : {
          "message" : {
            "description" : "untranslated english message to explain the warning",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "The classification to be used in the client side",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_add_discussion_post_200_response_post_attachments_inner_html" : {
        "properties" : {
          "plagiarism" : {
            "default" : null,
            "description" : "The HTML source for the Plagiarism Response",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_add_discussion_post_200_response_post_attachments_inner_urls" : {
        "properties" : {
          "export" : {
            "default" : null,
            "description" : "The URL used to export the attachment",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_add_discussion_post_200_response_post_attachments_inner" : {
        "default" : null,
        "properties" : {
          "author" : {
            "description" : "author",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "filearea" : {
            "description" : "filearea",
            "type" : "string",
            "nullable" : false
          },
          "filename" : {
            "description" : "filename",
            "type" : "string",
            "nullable" : false
          },
          "filenameshort" : {
            "description" : "filenameshort",
            "type" : "string",
            "nullable" : false
          },
          "filepath" : {
            "description" : "filepath",
            "type" : "string",
            "nullable" : false
          },
          "filesize" : {
            "description" : "filesize",
            "type" : "integer",
            "nullable" : false
          },
          "filesizeformatted" : {
            "description" : "filesizeformatted",
            "type" : "string",
            "nullable" : false
          },
          "html" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_attachments_inner_html"
          },
          "icon" : {
            "description" : "icon",
            "type" : "string",
            "nullable" : false
          },
          "isdir" : {
            "description" : "isdir",
            "type" : "boolean",
            "nullable" : false
          },
          "isimage" : {
            "description" : "isimage",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "license" : {
            "description" : "license",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timecreatedformatted" : {
            "description" : "timecreatedformatted",
            "type" : "string",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timemodifiedformatted" : {
            "description" : "timemodifiedformatted",
            "type" : "string",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_attachments_inner_urls"
          }
        },
        "nullable" : false
      },
      "mod_forum_add_discussion_post_200_response_post_author_groups_inner_urls" : {
        "properties" : {
          "image" : {
            "default" : null,
            "description" : "image",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_add_discussion_post_200_response_post_author_groups_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_author_groups_inner_urls"
          }
        },
        "nullable" : false
      },
      "mod_forum_add_discussion_post_200_response_post_author_urls" : {
        "properties" : {
          "profile" : {
            "default" : null,
            "description" : "The URL for the use profile page",
            "type" : "string",
            "nullable" : true
          },
          "profileimage" : {
            "default" : null,
            "description" : "The URL for the use profile image",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_add_discussion_post_200_response_post_author" : {
        "properties" : {
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : true
          },
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_author_groups_inner"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : true
          },
          "isdeleted" : {
            "default" : null,
            "description" : "isdeleted",
            "type" : "boolean",
            "nullable" : true
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_author_urls"
          }
        },
        "required" : [ "urls" ]
      },
      "mod_forum_add_discussion_post_200_response_post_capabilities" : {
        "properties" : {
          "canreplyprivately" : {
            "default" : null,
            "description" : "Whether the user can post a private reply",
            "type" : "boolean",
            "nullable" : true
          },
          "controlreadstatus" : {
            "default" : null,
            "description" : "Whether the user can control the read status of the post",
            "type" : "boolean",
            "nullable" : true
          },
          "delete" : {
            "default" : null,
            "description" : "Whether the user can delete the post",
            "type" : "boolean",
            "nullable" : true
          },
          "edit" : {
            "default" : null,
            "description" : "Whether the user can edit the post",
            "type" : "boolean",
            "nullable" : true
          },
          "export" : {
            "default" : null,
            "description" : "Whether the user can export the post",
            "type" : "boolean",
            "nullable" : true
          },
          "reply" : {
            "default" : null,
            "description" : "Whether the user can reply to the post",
            "type" : "boolean",
            "nullable" : true
          },
          "selfenrol" : {
            "default" : null,
            "description" : "Whether the user can self enrol into the course",
            "type" : "boolean",
            "nullable" : true
          },
          "split" : {
            "default" : null,
            "description" : "Whether the user can split the post",
            "type" : "boolean",
            "nullable" : true
          },
          "view" : {
            "default" : null,
            "description" : "Whether the user can view the post",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "canreplyprivately", "controlreadstatus", "delete", "edit", "export", "reply", "selfenrol", "split", "view" ]
      },
      "mod_forum_add_discussion_post_200_response_post_html" : {
        "properties" : {
          "authorsubheading" : {
            "default" : null,
            "description" : "The HTML source to view the author details",
            "type" : "string",
            "nullable" : true
          },
          "rating" : {
            "default" : null,
            "description" : "The HTML source to rate the post",
            "type" : "string",
            "nullable" : true
          },
          "taglist" : {
            "default" : null,
            "description" : "The HTML source to view the list of tags",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_add_discussion_post_200_response_post_tags_inner_urls" : {
        "properties" : {
          "view" : {
            "default" : null,
            "description" : "The URL to view the tag",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "view" ]
      },
      "mod_forum_add_discussion_post_200_response_post_tags_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "default" : null,
            "description" : "The display name of the tag",
            "type" : "string",
            "nullable" : false
          },
          "flag" : {
            "default" : null,
            "description" : "Wehther this tag is flagged",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "The ID of the Tag",
            "type" : "integer",
            "nullable" : false
          },
          "isstandard" : {
            "default" : null,
            "description" : "Whether this is a standard tag",
            "type" : "boolean",
            "nullable" : false
          },
          "tagid" : {
            "default" : null,
            "description" : "The tagid",
            "type" : "integer",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_tags_inner_urls"
          }
        },
        "nullable" : false
      },
      "mod_forum_add_discussion_post_200_response_post_urls" : {
        "properties" : {
          "delete" : {
            "default" : null,
            "description" : "The URL used to delete the post",
            "type" : "string",
            "nullable" : true
          },
          "discuss" : {
            "default" : null,
            "description" : "discuss",
            "type" : "string",
            "nullable" : true
          },
          "edit" : {
            "default" : null,
            "description" : "The URL used to edit the post",
            "type" : "string",
            "nullable" : true
          },
          "export" : {
            "default" : null,
            "description" : "The URL used to export the post",
            "type" : "string",
            "nullable" : true
          },
          "markasread" : {
            "default" : null,
            "description" : "The URL used to mark the post as read",
            "type" : "string",
            "nullable" : true
          },
          "markasunread" : {
            "default" : null,
            "description" : "The URL used to mark the post as unread",
            "type" : "string",
            "nullable" : true
          },
          "reply" : {
            "default" : null,
            "description" : "The URL used to reply to the post",
            "type" : "string",
            "nullable" : true
          },
          "split" : {
            "default" : null,
            "description" : "The URL used to split the discussion with the selected post being the first post in the new discussion",
            "type" : "string",
            "nullable" : true
          },
          "view" : {
            "default" : null,
            "description" : "The URL used to view the post",
            "type" : "string",
            "nullable" : true
          },
          "viewisolated" : {
            "default" : null,
            "description" : "The URL used to view the post in isolation",
            "type" : "string",
            "nullable" : true
          },
          "viewparent" : {
            "default" : null,
            "description" : "The URL used to view the parent of the post",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_add_discussion_post_200_response_post" : {
        "properties" : {
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_attachments_inner"
            },
            "type" : "array"
          },
          "author" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_author"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_capabilities"
          },
          "charcount" : {
            "default" : null,
            "description" : "charcount",
            "type" : "integer",
            "nullable" : true
          },
          "discussionid" : {
            "default" : null,
            "description" : "discussionid",
            "type" : "integer",
            "nullable" : false
          },
          "hasparent" : {
            "default" : null,
            "description" : "hasparent",
            "type" : "boolean",
            "nullable" : false
          },
          "haswordcount" : {
            "default" : null,
            "description" : "haswordcount",
            "type" : "boolean",
            "nullable" : false
          },
          "html" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_html"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "isdeleted" : {
            "default" : null,
            "description" : "isdeleted",
            "type" : "boolean",
            "nullable" : false
          },
          "isprivatereply" : {
            "default" : null,
            "description" : "isprivatereply",
            "type" : "boolean",
            "nullable" : false
          },
          "message" : {
            "default" : null,
            "description" : "message",
            "type" : "string",
            "nullable" : false
          },
          "messageformat" : {
            "default" : null,
            "description" : "message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "messageinlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner"
            },
            "type" : "array"
          },
          "parentid" : {
            "default" : null,
            "description" : "parentid",
            "type" : "integer",
            "nullable" : true
          },
          "replysubject" : {
            "default" : null,
            "description" : "replysubject",
            "type" : "string",
            "nullable" : false
          },
          "subject" : {
            "default" : null,
            "description" : "subject",
            "type" : "string",
            "nullable" : false
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_tags_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "default" : null,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : true
          },
          "unread" : {
            "default" : null,
            "description" : "unread",
            "type" : "boolean",
            "nullable" : true
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post_urls"
          },
          "wordcount" : {
            "default" : null,
            "description" : "wordcount",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attachments", "author", "capabilities", "discussionid", "hasparent", "haswordcount", "id", "isdeleted", "isprivatereply", "message", "messageformat", "replysubject", "subject", "timecreated", "timemodified" ]
      },
      "mod_forum_add_discussion_post_200_response" : {
        "properties" : {
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_messages_inner"
            },
            "type" : "array"
          },
          "post" : {
            "$ref" : "#/components/schemas/mod_forum_add_discussion_post_200_response_post"
          },
          "postid" : {
            "default" : null,
            "description" : "new post id",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "post", "postid" ]
      },
      "mod_forum_can_add_discussion_request" : {
        "properties" : {
          "forumid" : {
            "description" : "Forum instance ID",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "The group to check, default to active group.\n                                                Use -1 to check if the user can post in all the groups.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "forumid" ]
      },
      "mod_forum_can_add_discussion_200_response" : {
        "properties" : {
          "cancreateattachment" : {
            "default" : null,
            "description" : "True if the user can add attachments, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "canpindiscussions" : {
            "default" : null,
            "description" : "True if the user can pin discussions, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "True if the user can add discussions, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_forum_delete_post_request" : {
        "properties" : {
          "postid" : {
            "default" : null,
            "description" : "Post to be deleted. It can be a discussion topic post.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "postid" ]
      },
      "mod_forum_delete_post_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the post/discussion was deleted, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_forum_get_discussion_post_request" : {
        "properties" : {
          "postid" : {
            "default" : null,
            "description" : "Post to fetch.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "postid" ]
      },
      "mod_forum_get_discussion_post_200_response_post_attachments_inner_html" : {
        "properties" : {
          "plagiarism" : {
            "description" : "The HTML source for the Plagiarism Response",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_get_discussion_post_200_response_post_attachments_inner_urls" : {
        "properties" : {
          "export" : {
            "description" : "The URL used to export the attachment",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_get_discussion_post_200_response_post_attachments_inner" : {
        "default" : null,
        "properties" : {
          "author" : {
            "description" : "author",
            "type" : "string",
            "nullable" : false
          },
          "component" : {
            "description" : "component",
            "type" : "string",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "filearea" : {
            "description" : "filearea",
            "type" : "string",
            "nullable" : false
          },
          "filename" : {
            "description" : "filename",
            "type" : "string",
            "nullable" : false
          },
          "filenameshort" : {
            "description" : "filenameshort",
            "type" : "string",
            "nullable" : false
          },
          "filepath" : {
            "description" : "filepath",
            "type" : "string",
            "nullable" : false
          },
          "filesize" : {
            "description" : "filesize",
            "type" : "integer",
            "nullable" : false
          },
          "filesizeformatted" : {
            "description" : "filesizeformatted",
            "type" : "string",
            "nullable" : false
          },
          "html" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_attachments_inner_html"
          },
          "icon" : {
            "description" : "icon",
            "type" : "string",
            "nullable" : false
          },
          "isdir" : {
            "description" : "isdir",
            "type" : "boolean",
            "nullable" : false
          },
          "isimage" : {
            "description" : "isimage",
            "type" : "boolean",
            "nullable" : false
          },
          "itemid" : {
            "description" : "itemid",
            "type" : "integer",
            "nullable" : false
          },
          "license" : {
            "description" : "license",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timecreatedformatted" : {
            "description" : "timecreatedformatted",
            "type" : "string",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "timemodifiedformatted" : {
            "description" : "timemodifiedformatted",
            "type" : "string",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_attachments_inner_urls"
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_post_200_response_post_author_groups_inner_urls" : {
        "properties" : {
          "image" : {
            "description" : "image",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_get_discussion_post_200_response_post_author_groups_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_author_groups_inner_urls"
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_post_200_response_post_author_urls" : {
        "properties" : {
          "profile" : {
            "description" : "The URL for the use profile page",
            "type" : "string",
            "nullable" : true
          },
          "profileimage" : {
            "description" : "The URL for the use profile image",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_get_discussion_post_200_response_post_author" : {
        "properties" : {
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : true
          },
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_author_groups_inner"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : true
          },
          "isdeleted" : {
            "description" : "isdeleted",
            "type" : "boolean",
            "nullable" : true
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_author_urls"
          }
        },
        "required" : [ "urls" ]
      },
      "mod_forum_get_discussion_post_200_response_post_capabilities" : {
        "properties" : {
          "canreplyprivately" : {
            "description" : "Whether the user can post a private reply",
            "type" : "boolean",
            "nullable" : true
          },
          "controlreadstatus" : {
            "description" : "Whether the user can control the read status of the post",
            "type" : "boolean",
            "nullable" : true
          },
          "delete" : {
            "description" : "Whether the user can delete the post",
            "type" : "boolean",
            "nullable" : true
          },
          "edit" : {
            "description" : "Whether the user can edit the post",
            "type" : "boolean",
            "nullable" : true
          },
          "export" : {
            "description" : "Whether the user can export the post",
            "type" : "boolean",
            "nullable" : true
          },
          "reply" : {
            "description" : "Whether the user can reply to the post",
            "type" : "boolean",
            "nullable" : true
          },
          "selfenrol" : {
            "description" : "Whether the user can self enrol into the course",
            "type" : "boolean",
            "nullable" : true
          },
          "split" : {
            "description" : "Whether the user can split the post",
            "type" : "boolean",
            "nullable" : true
          },
          "view" : {
            "description" : "Whether the user can view the post",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "canreplyprivately", "controlreadstatus", "delete", "edit", "export", "reply", "selfenrol", "split", "view" ]
      },
      "mod_forum_get_discussion_post_200_response_post_html" : {
        "properties" : {
          "authorsubheading" : {
            "description" : "The HTML source to view the author details",
            "type" : "string",
            "nullable" : true
          },
          "rating" : {
            "description" : "The HTML source to rate the post",
            "type" : "string",
            "nullable" : true
          },
          "taglist" : {
            "description" : "The HTML source to view the list of tags",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_get_discussion_post_200_response_post_tags_inner_urls" : {
        "properties" : {
          "view" : {
            "description" : "The URL to view the tag",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "view" ]
      },
      "mod_forum_get_discussion_post_200_response_post_tags_inner" : {
        "properties" : {
          "displayname" : {
            "description" : "The display name of the tag",
            "type" : "string",
            "nullable" : false
          },
          "flag" : {
            "description" : "Wehther this tag is flagged",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "description" : "The ID of the Tag",
            "type" : "integer",
            "nullable" : false
          },
          "isstandard" : {
            "description" : "Whether this is a standard tag",
            "type" : "boolean",
            "nullable" : false
          },
          "tagid" : {
            "description" : "The tagid",
            "type" : "integer",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_tags_inner_urls"
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_post_200_response_post_urls" : {
        "properties" : {
          "delete" : {
            "description" : "The URL used to delete the post",
            "type" : "string",
            "nullable" : true
          },
          "discuss" : {
            "description" : "discuss",
            "type" : "string",
            "nullable" : true
          },
          "edit" : {
            "description" : "The URL used to edit the post",
            "type" : "string",
            "nullable" : true
          },
          "export" : {
            "description" : "The URL used to export the post",
            "type" : "string",
            "nullable" : true
          },
          "markasread" : {
            "description" : "The URL used to mark the post as read",
            "type" : "string",
            "nullable" : true
          },
          "markasunread" : {
            "description" : "The URL used to mark the post as unread",
            "type" : "string",
            "nullable" : true
          },
          "reply" : {
            "description" : "The URL used to reply to the post",
            "type" : "string",
            "nullable" : true
          },
          "split" : {
            "description" : "The URL used to split the discussion with the selected post being the first post in the new discussion",
            "type" : "string",
            "nullable" : true
          },
          "view" : {
            "description" : "The URL used to view the post",
            "type" : "string",
            "nullable" : true
          },
          "viewisolated" : {
            "description" : "The URL used to view the post in isolation",
            "type" : "string",
            "nullable" : true
          },
          "viewparent" : {
            "description" : "The URL used to view the parent of the post",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_forum_get_discussion_post_200_response_post" : {
        "properties" : {
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_attachments_inner"
            },
            "type" : "array"
          },
          "author" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_author"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_capabilities"
          },
          "charcount" : {
            "description" : "charcount",
            "type" : "integer",
            "nullable" : true
          },
          "discussionid" : {
            "description" : "discussionid",
            "type" : "integer",
            "nullable" : false
          },
          "hasparent" : {
            "description" : "hasparent",
            "type" : "boolean",
            "nullable" : false
          },
          "haswordcount" : {
            "description" : "haswordcount",
            "type" : "boolean",
            "nullable" : false
          },
          "html" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_html"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "isdeleted" : {
            "description" : "isdeleted",
            "type" : "boolean",
            "nullable" : false
          },
          "isprivatereply" : {
            "description" : "isprivatereply",
            "type" : "boolean",
            "nullable" : false
          },
          "message" : {
            "description" : "message",
            "type" : "string",
            "nullable" : false
          },
          "messageformat" : {
            "description" : "message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "messageinlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner"
            },
            "type" : "array"
          },
          "parentid" : {
            "description" : "parentid",
            "type" : "integer",
            "nullable" : true
          },
          "replysubject" : {
            "description" : "replysubject",
            "type" : "string",
            "nullable" : false
          },
          "subject" : {
            "description" : "subject",
            "type" : "string",
            "nullable" : false
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_tags_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : true
          },
          "unread" : {
            "description" : "unread",
            "type" : "boolean",
            "nullable" : true
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_urls"
          },
          "wordcount" : {
            "description" : "wordcount",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attachments", "author", "capabilities", "discussionid", "hasparent", "haswordcount", "id", "isdeleted", "isprivatereply", "message", "messageformat", "replysubject", "subject", "timecreated", "timemodified" ]
      },
      "mod_forum_get_discussion_post_200_response" : {
        "properties" : {
          "post" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "post" ]
      },
      "mod_forum_get_discussion_posts_request" : {
        "properties" : {
          "discussionid" : {
            "default" : null,
            "description" : "The ID of the discussion from which to fetch posts.",
            "type" : "integer",
            "nullable" : true
          },
          "includeinlineattachments" : {
            "default" : false,
            "description" : "Whether inline attachments should be included or not",
            "type" : "boolean",
            "nullable" : true
          },
          "sortby" : {
            "default" : "created",
            "description" : "Sort by this element: id, created or modified",
            "type" : "string",
            "nullable" : true
          },
          "sortdirection" : {
            "default" : "DESC",
            "description" : "Sort direction: ASC or DESC",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "discussionid" ]
      },
      "mod_forum_get_discussion_posts_200_response_posts_inner" : {
        "default" : null,
        "properties" : {
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_attachments_inner"
            },
            "type" : "array"
          },
          "author" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_author"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_capabilities"
          },
          "charcount" : {
            "description" : "charcount",
            "type" : "integer",
            "nullable" : true
          },
          "discussionid" : {
            "description" : "discussionid",
            "type" : "integer",
            "nullable" : false
          },
          "hasparent" : {
            "description" : "hasparent",
            "type" : "boolean",
            "nullable" : false
          },
          "haswordcount" : {
            "description" : "haswordcount",
            "type" : "boolean",
            "nullable" : false
          },
          "html" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_html"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "isdeleted" : {
            "description" : "isdeleted",
            "type" : "boolean",
            "nullable" : false
          },
          "isprivatereply" : {
            "description" : "isprivatereply",
            "type" : "boolean",
            "nullable" : false
          },
          "message" : {
            "description" : "message",
            "type" : "string",
            "nullable" : false
          },
          "messageformat" : {
            "description" : "message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "messageinlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner"
            },
            "type" : "array"
          },
          "parentid" : {
            "description" : "parentid",
            "type" : "integer",
            "nullable" : true
          },
          "replysubject" : {
            "description" : "replysubject",
            "type" : "string",
            "nullable" : false
          },
          "subject" : {
            "description" : "subject",
            "type" : "string",
            "nullable" : false
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_tags_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : true
          },
          "unread" : {
            "description" : "unread",
            "type" : "boolean",
            "nullable" : true
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_post_200_response_post_urls"
          },
          "wordcount" : {
            "description" : "wordcount",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_posts_200_response_ratinginfo_ratings_inner" : {
        "properties" : {
          "aggregate" : {
            "description" : "Aggregated ratings grade.",
            "type" : "number",
            "nullable" : true
          },
          "aggregatelabel" : {
            "description" : "The aggregation label.",
            "type" : "string",
            "nullable" : true
          },
          "aggregatestr" : {
            "description" : "Aggregated ratings as string.",
            "type" : "string",
            "nullable" : true
          },
          "canrate" : {
            "description" : "Whether the user can rate the item.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewaggregate" : {
            "description" : "Whether the user can view the aggregated grade.",
            "type" : "boolean",
            "nullable" : true
          },
          "count" : {
            "description" : "Ratings count (used when aggregating).",
            "type" : "integer",
            "nullable" : true
          },
          "itemid" : {
            "description" : "Item id.",
            "type" : "integer",
            "nullable" : true
          },
          "rating" : {
            "description" : "The rating the user gave.",
            "type" : "integer",
            "nullable" : true
          },
          "scaleid" : {
            "description" : "Scale id.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User who rated id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_posts_200_response_ratinginfo_scales_inner_items_inner" : {
        "properties" : {
          "name" : {
            "description" : "Scale name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "Scale value/option id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_posts_200_response_ratinginfo_scales_inner" : {
        "default" : null,
        "description" : "Scale information",
        "properties" : {
          "courseid" : {
            "description" : "Course id.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Scale id.",
            "type" : "integer",
            "nullable" : true
          },
          "isnumeric" : {
            "description" : "Whether is a numeric scale.",
            "type" : "boolean",
            "nullable" : true
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo_scales_inner_items_inner"
            },
            "type" : "array"
          },
          "max" : {
            "description" : "Max value for the scale.",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Scale name (when a real scale is used).",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_posts_200_response_ratinginfo" : {
        "properties" : {
          "canviewall" : {
            "description" : "Whether the user can view all the individual ratings.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewany" : {
            "description" : "Whether the user can view aggregate of ratings of others.",
            "type" : "boolean",
            "nullable" : true
          },
          "component" : {
            "description" : "Context name.",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "description" : "Context id.",
            "type" : "integer",
            "nullable" : true
          },
          "ratingarea" : {
            "description" : "Rating area name.",
            "type" : "string",
            "nullable" : true
          },
          "ratings" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo_ratings_inner"
            },
            "type" : "array"
          },
          "scales" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo_scales_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "component", "contextid", "ratingarea" ]
      },
      "mod_forum_get_discussion_posts_200_response" : {
        "properties" : {
          "courseid" : {
            "default" : null,
            "description" : "The forum course id",
            "type" : "integer",
            "nullable" : true
          },
          "forumid" : {
            "default" : null,
            "description" : "The forum id",
            "type" : "integer",
            "nullable" : true
          },
          "posts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_posts_inner"
            },
            "type" : "array"
          },
          "ratinginfo" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courseid", "forumid", "posts" ]
      },
      "mod_forum_get_discussion_posts_by_userid_request" : {
        "properties" : {
          "cmid" : {
            "default" : null,
            "description" : "The ID of the module of which to fetch items.",
            "type" : "integer",
            "nullable" : true
          },
          "sortby" : {
            "default" : "created",
            "description" : "Sort by this element: id, created or modified",
            "type" : "string",
            "nullable" : true
          },
          "sortdirection" : {
            "default" : "DESC",
            "description" : "Sort direction: ASC or DESC",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The ID of the user of whom to fetch posts.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid", "userid" ]
      },
      "mod_forum_get_discussion_posts_by_userid_200_response_discussions_inner_posts" : {
        "properties" : {
          "parentposts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_posts_inner"
            },
            "type" : "array"
          },
          "userposts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_posts_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "parentposts", "userposts" ]
      },
      "mod_forum_get_discussion_posts_by_userid_200_response_discussions_inner" : {
        "default" : null,
        "properties" : {
          "authorfullname" : {
            "default" : null,
            "description" : "Full name of the user that started the discussion",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of the discussion",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Name of the discussion",
            "type" : "string",
            "nullable" : true
          },
          "posts" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_by_userid_200_response_discussions_inner_posts"
          },
          "timecreated" : {
            "default" : null,
            "description" : "Timestamp of the discussion start",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_get_discussion_posts_by_userid_200_response" : {
        "properties" : {
          "discussions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_by_userid_200_response_discussions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "discussions" ]
      },
      "mod_forum_get_forum_access_information_request" : {
        "properties" : {
          "forumid" : {
            "default" : null,
            "description" : "Forum instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "forumid" ]
      },
      "mod_forum_get_forum_access_information_200_response" : {
        "properties" : {
          "canaddinstance" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:addinstance allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canaddnews" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:addnews allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canaddquestion" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:addquestion allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canallowforcesubscribe" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:allowforcesubscribe allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cancanmailnow" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:canmailnow allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cancanoverridecutoff" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:canoverridecutoff allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cancanoverridediscussionlock" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:canoverridediscussionlock allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cancanposttomygroups" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:canposttomygroups allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cancantogglefavourite" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:cantogglefavourite allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cancreateattachment" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:createattachment allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "candeleteanypost" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:deleteanypost allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "candeleteownpost" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:deleteownpost allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "caneditanypost" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:editanypost allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canexportdiscussion" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:exportdiscussion allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canexportforum" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:exportforum allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canexportownpost" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:exportownpost allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canexportpost" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:exportpost allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cangrade" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:grade allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanagesubscriptions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:managesubscriptions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmovediscussions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:movediscussions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canpindiscussions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:pindiscussions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canpostprivatereply" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:postprivatereply allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canpostwithoutthrottling" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:postwithoutthrottling allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canrate" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:rate allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canreadprivatereplies" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:readprivatereplies allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canreplynews" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:replynews allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canreplypost" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:replypost allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cansplitdiscussions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:splitdiscussions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canstartdiscussion" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:startdiscussion allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewallratings" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:viewallratings allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewanyrating" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:viewanyrating allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewdiscussion" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:viewdiscussion allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewhiddentimedposts" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:viewhiddentimedposts allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewqandawithoutposting" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:viewqandawithoutposting allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewrating" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:viewrating allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewsubscribers" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/forum:viewsubscribers allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_forum_get_forum_discussions_request" : {
        "properties" : {
          "forumid" : {
            "default" : null,
            "description" : "forum instance id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : 0,
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : -1,
            "description" : "current page",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "items per page",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "default" : -1,
            "description" : "sort by this element: numreplies, , created or timemodified",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "forumid" ]
      },
      "mod_forum_get_forum_discussions_200_response_discussions_inner" : {
        "default" : null,
        "description" : "post",
        "properties" : {
          "attachment" : {
            "default" : null,
            "description" : "Has attachments?",
            "type" : "string",
            "nullable" : true
          },
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "canfavourite" : {
            "default" : null,
            "description" : "Can the user star the discussion",
            "type" : "boolean",
            "nullable" : true
          },
          "canlock" : {
            "default" : null,
            "description" : "Can the user lock the discussion",
            "type" : "boolean",
            "nullable" : true
          },
          "canreply" : {
            "default" : null,
            "description" : "Can the user reply to the discussion",
            "type" : "boolean",
            "nullable" : true
          },
          "created" : {
            "default" : null,
            "description" : "Creation time",
            "type" : "integer",
            "nullable" : true
          },
          "discussion" : {
            "default" : null,
            "description" : "Discussion id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Post id",
            "type" : "integer",
            "nullable" : true
          },
          "locked" : {
            "default" : null,
            "description" : "Is the discussion locked",
            "type" : "boolean",
            "nullable" : true
          },
          "mailed" : {
            "default" : null,
            "description" : "Mailed?",
            "type" : "integer",
            "nullable" : true
          },
          "mailnow" : {
            "default" : null,
            "description" : "Mail now?",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "The post message",
            "type" : "string",
            "nullable" : true
          },
          "messageformat" : {
            "description" : "message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "messageinlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "messagetrust" : {
            "default" : null,
            "description" : "Can we trust?",
            "type" : "integer",
            "nullable" : true
          },
          "modified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Discussion name",
            "type" : "string",
            "nullable" : true
          },
          "numreplies" : {
            "default" : null,
            "description" : "The number of replies in the discussion",
            "type" : "integer",
            "nullable" : true
          },
          "numunread" : {
            "default" : null,
            "description" : "The number of unread discussions.",
            "type" : "integer",
            "nullable" : true
          },
          "parent" : {
            "default" : null,
            "description" : "Parent id",
            "type" : "integer",
            "nullable" : true
          },
          "pinned" : {
            "default" : null,
            "description" : "Is the discussion pinned",
            "type" : "boolean",
            "nullable" : true
          },
          "starred" : {
            "default" : null,
            "description" : "Is the discussion starred",
            "type" : "boolean",
            "nullable" : true
          },
          "subject" : {
            "default" : null,
            "description" : "The post subject",
            "type" : "string",
            "nullable" : true
          },
          "timeend" : {
            "default" : null,
            "description" : "Time discussion ends",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : null,
            "description" : "Time discussion can start",
            "type" : "integer",
            "nullable" : true
          },
          "totalscore" : {
            "default" : null,
            "description" : "The post message total score",
            "type" : "integer",
            "nullable" : true
          },
          "userfullname" : {
            "default" : null,
            "description" : "Post author full name",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User who started the discussion id",
            "type" : "integer",
            "nullable" : true
          },
          "usermodified" : {
            "default" : null,
            "description" : "The id of the user who last modified",
            "type" : "integer",
            "nullable" : true
          },
          "usermodifiedfullname" : {
            "default" : null,
            "description" : "Post modifier full name",
            "type" : "string",
            "nullable" : true
          },
          "usermodifiedpictureurl" : {
            "default" : null,
            "description" : "Post modifier picture.",
            "type" : "string",
            "nullable" : true
          },
          "userpictureurl" : {
            "default" : null,
            "description" : "Post author picture.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_get_forum_discussions_200_response" : {
        "properties" : {
          "discussions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_forum_discussions_200_response_discussions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "discussions" ]
      },
      "mod_forum_get_forum_discussions_paginated_request" : {
        "properties" : {
          "forumid" : {
            "description" : "forum instance id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : -1,
            "description" : "current page",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "items per page",
            "type" : "integer",
            "nullable" : true
          },
          "sortby" : {
            "default" : "timemodified",
            "description" : "sort by this element: id, timemodified, timestart or timeend",
            "type" : "string",
            "nullable" : true
          },
          "sortdirection" : {
            "default" : "DESC",
            "description" : "sort direction: ASC or DESC",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "forumid" ]
      },
      "mod_forum_get_forum_discussions_paginated_200_response_discussions_inner" : {
        "default" : null,
        "description" : "post",
        "properties" : {
          "attachment" : {
            "description" : "Has attachments?",
            "type" : "string",
            "nullable" : true
          },
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "canlock" : {
            "description" : "Can the user lock the discussion",
            "type" : "boolean",
            "nullable" : true
          },
          "canreply" : {
            "description" : "Can the user reply to the discussion",
            "type" : "boolean",
            "nullable" : true
          },
          "created" : {
            "description" : "Creation time",
            "type" : "integer",
            "nullable" : true
          },
          "discussion" : {
            "description" : "Discussion id",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Post id",
            "type" : "integer",
            "nullable" : true
          },
          "locked" : {
            "description" : "Is the discussion locked",
            "type" : "boolean",
            "nullable" : true
          },
          "mailed" : {
            "description" : "Mailed?",
            "type" : "integer",
            "nullable" : true
          },
          "mailnow" : {
            "description" : "Mail now?",
            "type" : "integer",
            "nullable" : true
          },
          "message" : {
            "description" : "The post message",
            "type" : "string",
            "nullable" : true
          },
          "messageformat" : {
            "description" : "message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "messageinlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "messagetrust" : {
            "description" : "Can we trust?",
            "type" : "integer",
            "nullable" : true
          },
          "modified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Discussion name",
            "type" : "string",
            "nullable" : true
          },
          "numreplies" : {
            "description" : "The number of replies in the discussion",
            "type" : "integer",
            "nullable" : true
          },
          "numunread" : {
            "description" : "The number of unread discussions.",
            "type" : "integer",
            "nullable" : true
          },
          "parent" : {
            "description" : "Parent id",
            "type" : "integer",
            "nullable" : true
          },
          "pinned" : {
            "description" : "Is the discussion pinned",
            "type" : "boolean",
            "nullable" : true
          },
          "subject" : {
            "description" : "The post subject",
            "type" : "string",
            "nullable" : true
          },
          "timeend" : {
            "description" : "Time discussion ends",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "description" : "Time discussion can start",
            "type" : "integer",
            "nullable" : true
          },
          "totalscore" : {
            "description" : "The post message total score",
            "type" : "integer",
            "nullable" : true
          },
          "userfullname" : {
            "description" : "Post author full name",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "User who started the discussion id",
            "type" : "integer",
            "nullable" : true
          },
          "usermodified" : {
            "description" : "The id of the user who last modified",
            "type" : "integer",
            "nullable" : true
          },
          "usermodifiedfullname" : {
            "description" : "Post modifier full name",
            "type" : "string",
            "nullable" : true
          },
          "usermodifiedpictureurl" : {
            "description" : "Post modifier picture.",
            "type" : "string",
            "nullable" : true
          },
          "userpictureurl" : {
            "description" : "Post author picture.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_get_forum_discussions_paginated_200_response" : {
        "properties" : {
          "discussions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_get_forum_discussions_paginated_200_response_discussions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "discussions" ]
      },
      "mod_forum_get_forums_by_courses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "default" : "",
              "description" : "course ID",
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          }
        }
      },
      "mod_forum_prepare_draft_area_for_post_request_filestokeep_inner" : {
        "default" : null,
        "properties" : {
          "filename" : {
            "description" : "File name.",
            "type" : "string",
            "nullable" : true
          },
          "filepath" : {
            "description" : "File path.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_prepare_draft_area_for_post_request" : {
        "properties" : {
          "area" : {
            "default" : null,
            "description" : "Area to prepare: attachment or post.",
            "type" : "string",
            "nullable" : true
          },
          "draftitemid" : {
            "default" : 0,
            "description" : "The draft item id to use. 0 to generate one.",
            "type" : "integer",
            "nullable" : true
          },
          "filestokeep" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_prepare_draft_area_for_post_request_filestokeep_inner"
            },
            "type" : "array"
          },
          "postid" : {
            "default" : null,
            "description" : "Post to prepare the draft area for.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "area", "postid" ]
      },
      "mod_forum_prepare_draft_area_for_post_200_response_areaoptions_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Name of option.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Value of option.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_prepare_draft_area_for_post_200_response" : {
        "properties" : {
          "areaoptions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_prepare_draft_area_for_post_200_response_areaoptions_inner"
            },
            "type" : "array"
          },
          "draftitemid" : {
            "default" : null,
            "description" : "Draft item id for the file area.",
            "type" : "integer",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "messagetext" : {
            "default" : null,
            "description" : "Message text with URLs rewritten.",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "areaoptions", "draftitemid", "messagetext" ]
      },
      "mod_forum_set_lock_state_request" : {
        "properties" : {
          "discussionid" : {
            "default" : null,
            "description" : "The discussion to lock / unlock",
            "type" : "integer",
            "nullable" : true
          },
          "forumid" : {
            "default" : null,
            "description" : "Forum that the discussion is in",
            "type" : "integer",
            "nullable" : true
          },
          "targetstate" : {
            "default" : null,
            "description" : "The timestamp for the lock state",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "discussionid", "forumid", "targetstate" ]
      },
      "mod_forum_set_lock_state_200_response_times" : {
        "properties" : {
          "locked" : {
            "default" : null,
            "description" : "The locked time of the discussion.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "locked" ]
      },
      "mod_forum_set_lock_state_200_response" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The discussion we are locking.",
            "type" : "integer",
            "nullable" : true
          },
          "locked" : {
            "default" : null,
            "description" : "The locked state of the discussion.",
            "type" : "boolean",
            "nullable" : true
          },
          "times" : {
            "$ref" : "#/components/schemas/mod_forum_set_lock_state_200_response_times"
          }
        },
        "required" : [ "id", "locked", "times" ]
      },
      "mod_forum_set_pin_state_request" : {
        "properties" : {
          "discussionid" : {
            "default" : null,
            "description" : "The discussion to pin or unpin",
            "type" : "integer",
            "nullable" : false
          },
          "targetstate" : {
            "default" : null,
            "description" : "The target state",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "discussionid", "targetstate" ]
      },
      "mod_forum_set_pin_state_200_response_capabilities" : {
        "properties" : {
          "favourite" : {
            "default" : null,
            "description" : "favourite",
            "type" : "boolean",
            "nullable" : false
          },
          "manage" : {
            "default" : null,
            "description" : "manage",
            "type" : "boolean",
            "nullable" : false
          },
          "move" : {
            "default" : null,
            "description" : "move",
            "type" : "boolean",
            "nullable" : false
          },
          "pin" : {
            "default" : null,
            "description" : "pin",
            "type" : "boolean",
            "nullable" : false
          },
          "post" : {
            "default" : null,
            "description" : "post",
            "type" : "boolean",
            "nullable" : false
          },
          "subscribe" : {
            "default" : null,
            "description" : "subscribe",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "favourite", "manage", "move", "pin", "post", "subscribe" ]
      },
      "mod_forum_set_pin_state_200_response_group_urls" : {
        "properties" : {
          "picture" : {
            "default" : null,
            "description" : "picture",
            "type" : "string",
            "nullable" : false
          },
          "userlist" : {
            "default" : null,
            "description" : "userlist",
            "type" : "string",
            "nullable" : false
          }
        }
      },
      "mod_forum_set_pin_state_200_response_group" : {
        "properties" : {
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response_group_urls"
          }
        },
        "required" : [ "name", "urls" ]
      },
      "mod_forum_set_pin_state_200_response_timed" : {
        "properties" : {
          "istimed" : {
            "default" : null,
            "description" : "istimed",
            "type" : "boolean",
            "nullable" : true
          },
          "visible" : {
            "default" : null,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_forum_set_pin_state_200_response_times" : {
        "properties" : {
          "end" : {
            "default" : null,
            "description" : "end",
            "type" : "integer",
            "nullable" : false
          },
          "locked" : {
            "default" : null,
            "description" : "locked",
            "type" : "integer",
            "nullable" : false
          },
          "modified" : {
            "default" : null,
            "description" : "modified",
            "type" : "integer",
            "nullable" : false
          },
          "start" : {
            "default" : null,
            "description" : "start",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "end", "locked", "modified", "start" ]
      },
      "mod_forum_set_pin_state_200_response_urls" : {
        "properties" : {
          "markasread" : {
            "default" : null,
            "description" : "markasread",
            "type" : "string",
            "nullable" : false
          },
          "pin" : {
            "default" : null,
            "description" : "pin",
            "type" : "string",
            "nullable" : false
          },
          "subscribe" : {
            "default" : null,
            "description" : "subscribe",
            "type" : "string",
            "nullable" : false
          },
          "view" : {
            "description" : "view",
            "type" : "string",
            "nullable" : false
          },
          "viewfirstunread" : {
            "default" : null,
            "description" : "viewfirstunread",
            "type" : "string",
            "nullable" : false
          },
          "viewlatest" : {
            "default" : null,
            "description" : "viewlatest",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "markasread", "subscribe", "view" ]
      },
      "mod_forum_set_pin_state_200_response_userstate" : {
        "properties" : {
          "favourited" : {
            "default" : null,
            "description" : "favourited",
            "type" : "boolean",
            "nullable" : false
          },
          "subscribed" : {
            "default" : null,
            "description" : "subscribed",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "favourited", "subscribed" ]
      },
      "mod_forum_set_pin_state_200_response" : {
        "properties" : {
          "capabilities" : {
            "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response_capabilities"
          },
          "firstpostid" : {
            "default" : null,
            "description" : "firstpostid",
            "type" : "integer",
            "nullable" : false
          },
          "forumid" : {
            "default" : null,
            "description" : "forumid",
            "type" : "integer",
            "nullable" : false
          },
          "group" : {
            "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response_group"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "istimelocked" : {
            "default" : null,
            "description" : "istimelocked",
            "type" : "boolean",
            "nullable" : false
          },
          "locked" : {
            "default" : null,
            "description" : "locked",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "pinned" : {
            "default" : null,
            "description" : "pinned",
            "type" : "boolean",
            "nullable" : false
          },
          "timed" : {
            "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response_timed"
          },
          "times" : {
            "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response_times"
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response_urls"
          },
          "userstate" : {
            "$ref" : "#/components/schemas/mod_forum_set_pin_state_200_response_userstate"
          }
        },
        "required" : [ "capabilities", "firstpostid", "forumid", "id", "istimelocked", "locked", "name", "pinned", "timed", "times", "urls", "userstate" ]
      },
      "mod_forum_set_subscription_state_request" : {
        "properties" : {
          "discussionid" : {
            "default" : null,
            "description" : "The discussion to subscribe or unsubscribe",
            "type" : "integer",
            "nullable" : true
          },
          "forumid" : {
            "description" : "Forum that the discussion is in",
            "type" : "integer",
            "nullable" : true
          },
          "targetstate" : {
            "default" : null,
            "description" : "The target state",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "discussionid", "forumid", "targetstate" ]
      },
      "mod_forum_set_subscription_state_200_response_capabilities" : {
        "properties" : {
          "favourite" : {
            "description" : "favourite",
            "type" : "boolean",
            "nullable" : false
          },
          "manage" : {
            "description" : "manage",
            "type" : "boolean",
            "nullable" : false
          },
          "move" : {
            "description" : "move",
            "type" : "boolean",
            "nullable" : false
          },
          "pin" : {
            "description" : "pin",
            "type" : "boolean",
            "nullable" : false
          },
          "post" : {
            "description" : "post",
            "type" : "boolean",
            "nullable" : false
          },
          "subscribe" : {
            "description" : "subscribe",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "favourite", "manage", "move", "pin", "post", "subscribe" ]
      },
      "mod_forum_set_subscription_state_200_response_group_urls" : {
        "properties" : {
          "picture" : {
            "description" : "picture",
            "type" : "string",
            "nullable" : false
          },
          "userlist" : {
            "description" : "userlist",
            "type" : "string",
            "nullable" : false
          }
        }
      },
      "mod_forum_set_subscription_state_200_response_group" : {
        "properties" : {
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response_group_urls"
          }
        },
        "required" : [ "name", "urls" ]
      },
      "mod_forum_set_subscription_state_200_response_timed" : {
        "properties" : {
          "istimed" : {
            "description" : "istimed",
            "type" : "boolean",
            "nullable" : true
          },
          "visible" : {
            "description" : "visible",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_forum_set_subscription_state_200_response_times" : {
        "properties" : {
          "end" : {
            "description" : "end",
            "type" : "integer",
            "nullable" : false
          },
          "locked" : {
            "description" : "locked",
            "type" : "integer",
            "nullable" : false
          },
          "modified" : {
            "description" : "modified",
            "type" : "integer",
            "nullable" : false
          },
          "start" : {
            "description" : "start",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "end", "locked", "modified", "start" ]
      },
      "mod_forum_set_subscription_state_200_response_urls" : {
        "properties" : {
          "markasread" : {
            "description" : "markasread",
            "type" : "string",
            "nullable" : false
          },
          "pin" : {
            "description" : "pin",
            "type" : "string",
            "nullable" : false
          },
          "subscribe" : {
            "description" : "subscribe",
            "type" : "string",
            "nullable" : false
          },
          "view" : {
            "description" : "view",
            "type" : "string",
            "nullable" : false
          },
          "viewfirstunread" : {
            "description" : "viewfirstunread",
            "type" : "string",
            "nullable" : false
          },
          "viewlatest" : {
            "description" : "viewlatest",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "markasread", "subscribe", "view" ]
      },
      "mod_forum_set_subscription_state_200_response_userstate" : {
        "properties" : {
          "favourited" : {
            "description" : "favourited",
            "type" : "boolean",
            "nullable" : false
          },
          "subscribed" : {
            "description" : "subscribed",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "favourited", "subscribed" ]
      },
      "mod_forum_set_subscription_state_200_response" : {
        "properties" : {
          "capabilities" : {
            "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response_capabilities"
          },
          "firstpostid" : {
            "description" : "firstpostid",
            "type" : "integer",
            "nullable" : false
          },
          "forumid" : {
            "description" : "forumid",
            "type" : "integer",
            "nullable" : false
          },
          "group" : {
            "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response_group"
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "istimelocked" : {
            "description" : "istimelocked",
            "type" : "boolean",
            "nullable" : false
          },
          "locked" : {
            "description" : "locked",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "pinned" : {
            "description" : "pinned",
            "type" : "boolean",
            "nullable" : false
          },
          "timed" : {
            "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response_timed"
          },
          "times" : {
            "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response_times"
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response_urls"
          },
          "userstate" : {
            "$ref" : "#/components/schemas/mod_forum_set_subscription_state_200_response_userstate"
          }
        },
        "required" : [ "capabilities", "firstpostid", "forumid", "id", "istimelocked", "locked", "name", "pinned", "timed", "times", "urls", "userstate" ]
      },
      "mod_forum_toggle_favourite_state_request" : {
        "properties" : {
          "discussionid" : {
            "description" : "The discussion to subscribe or unsubscribe",
            "type" : "integer",
            "nullable" : true
          },
          "targetstate" : {
            "description" : "The target state",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "discussionid", "targetstate" ]
      },
      "mod_forum_update_discussion_post_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The allowed keys (value format) are:\n                                pinned (bool); (only for discussions) whether to pin this discussion or not\n                                discussionsubscribe (bool); whether to subscribe to the post or not\n                                inlineattachmentsid (int); the draft file area id for inline attachments in the text\n                                attachmentsid (int); the draft file area id for attachments",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the option.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_forum_update_discussion_post_request" : {
        "properties" : {
          "message" : {
            "default" : "",
            "description" : "Updated post message (HTML assumed if messageformat is not provided)",
            "type" : "string",
            "nullable" : true
          },
          "messageformat" : {
            "default" : "1",
            "description" : "message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_forum_update_discussion_post_request_options_inner"
            },
            "type" : "array"
          },
          "postid" : {
            "default" : null,
            "description" : "Post to be updated. It can be a discussion topic post.",
            "type" : "integer",
            "nullable" : true
          },
          "subject" : {
            "default" : "",
            "description" : "Updated post subject",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "postid" ]
      },
      "mod_forum_update_discussion_post_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the post/discussion was updated, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_forum_view_forum_request" : {
        "properties" : {
          "forumid" : {
            "description" : "forum instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "forumid" ]
      },
      "mod_forum_view_forum_discussion_request" : {
        "properties" : {
          "discussionid" : {
            "default" : null,
            "description" : "discussion id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "discussionid" ]
      },
      "mod_glossary_add_entry_request_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The allowed keys (value format) are:\n                            inlineattachmentsid (int); the draft file area id for inline attachments\n                            attachmentsid (int); the draft file area id for attachments\n                            categories (comma separated int); comma separated category ids\n                            aliases (comma separated str); comma separated aliases\n                            usedynalink (bool); whether the entry should be automatically linked.\n                            casesensitive (bool); whether the entry is case sensitive.\n                            fullmatch (bool); whether to match whole words only.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "the value of the option (validated inside the function)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_add_entry_request" : {
        "properties" : {
          "concept" : {
            "default" : null,
            "description" : "Glossary concept",
            "type" : "string",
            "nullable" : true
          },
          "definition" : {
            "default" : null,
            "description" : "Glossary concept definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "glossaryid" : {
            "default" : null,
            "description" : "Glossary id",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_add_entry_request_options_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "concept", "definition", "definitionformat", "glossaryid" ]
      },
      "mod_glossary_add_entry_200_response" : {
        "properties" : {
          "entryid" : {
            "default" : null,
            "description" : "New glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "entryid" ]
      },
      "mod_glossary_delete_entry_request" : {
        "properties" : {
          "entryid" : {
            "default" : null,
            "description" : "Glossary entry id to delete",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "entryid" ]
      },
      "mod_glossary_get_authors_request_options" : {
        "properties" : {
          "includenotapproved" : {
            "default" : 0,
            "description" : "When false, includes self even if all of their entries require approval. When true, also includes authors only having entries pending approval.",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_glossary_get_authors_request" : {
        "properties" : {
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_authors_request_options"
          }
        },
        "required" : [ "id" ]
      },
      "mod_glossary_get_authors_200_response_authors_inner" : {
        "default" : null,
        "properties" : {
          "fullname" : {
            "default" : null,
            "description" : "The fullname",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "The user ID",
            "type" : "integer",
            "nullable" : true
          },
          "pictureurl" : {
            "default" : null,
            "description" : "The picture URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_get_authors_200_response" : {
        "properties" : {
          "authors" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_get_authors_200_response_authors_inner"
            },
            "type" : "array"
          },
          "count" : {
            "default" : null,
            "description" : "The total number of records.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "authors", "count" ]
      },
      "mod_glossary_get_categories_request" : {
        "properties" : {
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "mod_glossary_get_categories_200_response_categories_inner" : {
        "default" : null,
        "properties" : {
          "glossaryid" : {
            "description" : "The glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The category ID",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The name of the category",
            "type" : "string",
            "nullable" : true
          },
          "usedynalink" : {
            "default" : null,
            "description" : "Whether the category is automatically linked",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_get_categories_200_response" : {
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_get_categories_200_response_categories_inner"
            },
            "type" : "array"
          },
          "count" : {
            "description" : "The total number of records.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "categories", "count" ]
      },
      "mod_glossary_get_entries_by_author_request_options" : {
        "properties" : {
          "includenotapproved" : {
            "default" : 0,
            "description" : "When false, includes the non-approved entries created by the user. When true, also includes the ones that the user has the permission to approve.",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_glossary_get_entries_by_author_request" : {
        "properties" : {
          "field" : {
            "default" : "LASTNAME",
            "description" : "Search and order using: 'FIRSTNAME' or 'LASTNAME'",
            "type" : "string",
            "nullable" : true
          },
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "letter" : {
            "default" : null,
            "description" : "First letter of firstname or lastname, or either keywords: 'ALL' or 'SPECIAL'.",
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request_options"
          },
          "sort" : {
            "default" : "ASC",
            "description" : "The direction of the order: 'ASC' or 'DESC'",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "id", "letter" ]
      },
      "mod_glossary_get_entries_by_author_200_response_entries_inner" : {
        "default" : null,
        "properties" : {
          "approved" : {
            "default" : null,
            "description" : "Whether the entry was approved",
            "type" : "boolean",
            "nullable" : true
          },
          "attachment" : {
            "default" : null,
            "description" : "Whether or not the entry has attachments",
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "casesensitive" : {
            "default" : null,
            "description" : "When true, the matching is case sensitive",
            "type" : "boolean",
            "nullable" : true
          },
          "concept" : {
            "default" : null,
            "description" : "The concept",
            "type" : "string",
            "nullable" : true
          },
          "definition" : {
            "default" : null,
            "description" : "The definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "definitioninlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "definitiontrust" : {
            "default" : null,
            "description" : "The definition trust flag",
            "type" : "boolean",
            "nullable" : true
          },
          "fullmatch" : {
            "default" : null,
            "description" : "When true, the matching is done on full words only",
            "type" : "boolean",
            "nullable" : true
          },
          "glossaryid" : {
            "description" : "The glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "sourceglossaryid" : {
            "default" : null,
            "description" : "The source glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "teacherentry" : {
            "default" : null,
            "description" : "The entry was created by a teacher, or equivalent.",
            "type" : "boolean",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "usedynalink" : {
            "default" : null,
            "description" : "Whether the concept should be automatically linked",
            "type" : "boolean",
            "nullable" : true
          },
          "userfullname" : {
            "default" : null,
            "description" : "Author full name",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "Author ID",
            "type" : "integer",
            "nullable" : true
          },
          "userpictureurl" : {
            "default" : null,
            "description" : "Author picture",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_get_entries_by_author_200_response" : {
        "properties" : {
          "count" : {
            "default" : null,
            "description" : "The total number of records matching the request.",
            "type" : "integer",
            "nullable" : true
          },
          "entries" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_200_response_entries_inner"
            },
            "type" : "array"
          },
          "ratinginfo" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "count", "entries" ]
      },
      "mod_glossary_get_entries_by_author_id_request" : {
        "properties" : {
          "authorid" : {
            "default" : null,
            "description" : "The author ID",
            "type" : "integer",
            "nullable" : true
          },
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request_options"
          },
          "order" : {
            "default" : "CONCEPT",
            "description" : "Order by: 'CONCEPT', 'CREATION' or 'UPDATE'",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "default" : "ASC",
            "description" : "The direction of the order: 'ASC' or 'DESC'",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "authorid", "id" ]
      },
      "mod_glossary_get_entries_by_author_id_200_response_entries_inner" : {
        "default" : null,
        "properties" : {
          "approved" : {
            "description" : "Whether the entry was approved",
            "type" : "boolean",
            "nullable" : true
          },
          "attachment" : {
            "description" : "Whether or not the entry has attachments",
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "casesensitive" : {
            "description" : "When true, the matching is case sensitive",
            "type" : "boolean",
            "nullable" : true
          },
          "concept" : {
            "description" : "The concept",
            "type" : "string",
            "nullable" : true
          },
          "definition" : {
            "description" : "The definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "definitioninlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "definitiontrust" : {
            "description" : "The definition trust flag",
            "type" : "boolean",
            "nullable" : true
          },
          "fullmatch" : {
            "description" : "When true, the matching is done on full words only",
            "type" : "boolean",
            "nullable" : true
          },
          "glossaryid" : {
            "description" : "The glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "sourceglossaryid" : {
            "description" : "The source glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "teacherentry" : {
            "description" : "The entry was created by a teacher, or equivalent.",
            "type" : "boolean",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "usedynalink" : {
            "description" : "Whether the concept should be automatically linked",
            "type" : "boolean",
            "nullable" : true
          },
          "userfullname" : {
            "description" : "Author full name",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "Author ID",
            "type" : "integer",
            "nullable" : true
          },
          "userpictureurl" : {
            "description" : "Author picture",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_get_entries_by_author_id_200_response" : {
        "properties" : {
          "count" : {
            "description" : "The total number of records matching the request.",
            "type" : "integer",
            "nullable" : true
          },
          "entries" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_id_200_response_entries_inner"
            },
            "type" : "array"
          },
          "ratinginfo" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "count", "entries" ]
      },
      "mod_glossary_get_entries_by_category_request" : {
        "properties" : {
          "categoryid" : {
            "default" : null,
            "description" : "The category ID. Use '0' for all categories, or '-1' for uncategorised entries.",
            "type" : "integer",
            "nullable" : true
          },
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The glossary ID.",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request_options"
          }
        },
        "required" : [ "categoryid", "id" ]
      },
      "mod_glossary_get_entries_by_category_200_response_entries_inner" : {
        "default" : null,
        "properties" : {
          "approved" : {
            "description" : "Whether the entry was approved",
            "type" : "boolean",
            "nullable" : true
          },
          "attachment" : {
            "description" : "Whether or not the entry has attachments",
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "casesensitive" : {
            "description" : "When true, the matching is case sensitive",
            "type" : "boolean",
            "nullable" : true
          },
          "categoryid" : {
            "default" : -1,
            "description" : "The category ID. This may be '-1' when the entry is not categorised",
            "type" : "integer",
            "nullable" : true
          },
          "categoryname" : {
            "default" : "",
            "description" : "The category name. May be empty when the entry is not categorised, or the request was limited to one category.",
            "type" : "string",
            "nullable" : true
          },
          "concept" : {
            "description" : "The concept",
            "type" : "string",
            "nullable" : true
          },
          "definition" : {
            "description" : "The definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "definitioninlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "definitiontrust" : {
            "description" : "The definition trust flag",
            "type" : "boolean",
            "nullable" : true
          },
          "fullmatch" : {
            "description" : "When true, the matching is done on full words only",
            "type" : "boolean",
            "nullable" : true
          },
          "glossaryid" : {
            "description" : "The glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "sourceglossaryid" : {
            "description" : "The source glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "teacherentry" : {
            "description" : "The entry was created by a teacher, or equivalent.",
            "type" : "boolean",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "usedynalink" : {
            "description" : "Whether the concept should be automatically linked",
            "type" : "boolean",
            "nullable" : true
          },
          "userfullname" : {
            "description" : "Author full name",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "Author ID",
            "type" : "integer",
            "nullable" : true
          },
          "userpictureurl" : {
            "description" : "Author picture",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_get_entries_by_category_200_response" : {
        "properties" : {
          "count" : {
            "description" : "The total number of records matching the request.",
            "type" : "integer",
            "nullable" : true
          },
          "entries" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_get_entries_by_category_200_response_entries_inner"
            },
            "type" : "array"
          },
          "ratinginfo" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "count", "entries" ]
      },
      "mod_glossary_get_entries_by_date_request" : {
        "properties" : {
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request_options"
          },
          "order" : {
            "default" : "UPDATE",
            "description" : "Order the records by: 'CREATION' or 'UPDATE'.",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "default" : "DESC",
            "description" : "The direction of the order: 'ASC' or 'DESC'",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "mod_glossary_get_entries_by_letter_request" : {
        "properties" : {
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "letter" : {
            "default" : null,
            "description" : "A letter, or either keywords: 'ALL' or 'SPECIAL'.",
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request_options"
          }
        },
        "required" : [ "id", "letter" ]
      },
      "mod_glossary_get_entries_by_search_request" : {
        "properties" : {
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "fullsearch" : {
            "default" : 1,
            "description" : "The query",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request_options"
          },
          "order" : {
            "default" : "CONCEPT",
            "description" : "Order by: 'CONCEPT', 'CREATION' or 'UPDATE'",
            "type" : "string",
            "nullable" : true
          },
          "query" : {
            "default" : null,
            "description" : "The query string",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "default" : "ASC",
            "description" : "The direction of the order: 'ASC' or 'DESC'",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "id", "query" ]
      },
      "mod_glossary_get_entries_by_term_request" : {
        "properties" : {
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entries_by_author_request_options"
          },
          "term" : {
            "default" : null,
            "description" : "The entry concept, or alias",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "id", "term" ]
      },
      "mod_glossary_get_entries_to_approve_request" : {
        "properties" : {
          "from" : {
            "default" : 0,
            "description" : "Start returning records from here",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "letter" : {
            "description" : "A letter, or either keywords: 'ALL' or 'SPECIAL'.",
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "default" : 20,
            "description" : "Number of records to return",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "type" : "object"
          },
          "order" : {
            "default" : "CONCEPT",
            "description" : "Order by: 'CONCEPT', 'CREATION' or 'UPDATE'",
            "type" : "string",
            "nullable" : true
          },
          "sort" : {
            "default" : "ASC",
            "description" : "The direction of the order: 'ASC' or 'DESC'",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "id", "letter" ]
      },
      "mod_glossary_get_entry_by_id_request" : {
        "properties" : {
          "id" : {
            "description" : "Glossary entry ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "mod_glossary_get_entry_by_id_200_response_entry" : {
        "properties" : {
          "approved" : {
            "description" : "Whether the entry was approved",
            "type" : "boolean",
            "nullable" : true
          },
          "attachment" : {
            "description" : "Whether or not the entry has attachments",
            "type" : "boolean",
            "nullable" : true
          },
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "casesensitive" : {
            "description" : "When true, the matching is case sensitive",
            "type" : "boolean",
            "nullable" : true
          },
          "concept" : {
            "description" : "The concept",
            "type" : "string",
            "nullable" : true
          },
          "definition" : {
            "description" : "The definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "definitioninlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "definitiontrust" : {
            "description" : "The definition trust flag",
            "type" : "boolean",
            "nullable" : true
          },
          "fullmatch" : {
            "description" : "When true, the matching is done on full words only",
            "type" : "boolean",
            "nullable" : true
          },
          "glossaryid" : {
            "description" : "The glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The entry ID",
            "type" : "integer",
            "nullable" : true
          },
          "sourceglossaryid" : {
            "description" : "The source glossary ID",
            "type" : "integer",
            "nullable" : true
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "teacherentry" : {
            "description" : "The entry was created by a teacher, or equivalent.",
            "type" : "boolean",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "usedynalink" : {
            "description" : "Whether the concept should be automatically linked",
            "type" : "boolean",
            "nullable" : true
          },
          "userfullname" : {
            "description" : "Author full name",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "Author ID",
            "type" : "integer",
            "nullable" : true
          },
          "userpictureurl" : {
            "description" : "Author picture",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "approved", "attachment", "casesensitive", "concept", "definition", "definitionformat", "definitiontrust", "fullmatch", "glossaryid", "id", "sourceglossaryid", "teacherentry", "timecreated", "timemodified", "usedynalink", "userfullname", "userid", "userpictureurl" ]
      },
      "mod_glossary_get_entry_by_id_200_response_permissions" : {
        "properties" : {
          "candelete" : {
            "default" : null,
            "description" : "Whether the user can delete the entry.",
            "type" : "boolean",
            "nullable" : true
          },
          "canupdate" : {
            "default" : null,
            "description" : "Whether the user can update the entry.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "candelete", "canupdate" ]
      },
      "mod_glossary_get_entry_by_id_200_response" : {
        "properties" : {
          "entry" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entry_by_id_200_response_entry"
          },
          "permissions" : {
            "$ref" : "#/components/schemas/mod_glossary_get_entry_by_id_200_response_permissions"
          },
          "ratinginfo" : {
            "$ref" : "#/components/schemas/mod_forum_get_discussion_posts_200_response_ratinginfo"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "entry" ]
      },
      "mod_glossary_get_glossaries_by_courses_200_response_glossaries_inner" : {
        "default" : null,
        "description" : "Glossaries",
        "properties" : {
          "allowcomments" : {
            "default" : null,
            "description" : "If enabled, all participants with permission to create comments will be able to add comments to glossary entries",
            "type" : "integer",
            "nullable" : true
          },
          "allowduplicatedentries" : {
            "default" : null,
            "description" : "If enabled, multiple entries can have the same concept name",
            "type" : "integer",
            "nullable" : true
          },
          "allowprintview" : {
            "default" : null,
            "description" : "If enabled, students are provided with a link to a printer-friendly version of the glossary. The link is always available to teachers",
            "type" : "integer",
            "nullable" : true
          },
          "approvaldisplayformat" : {
            "default" : null,
            "description" : "When approving glossary items you may wish to use a different display format",
            "type" : "string",
            "nullable" : true
          },
          "assessed" : {
            "default" : null,
            "description" : "Aggregate type",
            "type" : "integer",
            "nullable" : true
          },
          "assesstimefinish" : {
            "default" : null,
            "description" : "Restrict rating to items created before this",
            "type" : "integer",
            "nullable" : true
          },
          "assesstimestart" : {
            "default" : null,
            "description" : "Restrict rating to items created after this",
            "type" : "integer",
            "nullable" : true
          },
          "browsemodes" : {
            "items" : {
              "default" : null,
              "description" : "Modes of browsing allowed",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "canaddentry" : {
            "default" : null,
            "description" : "Whether the user can add a new entry",
            "type" : "integer",
            "nullable" : true
          },
          "completionentries" : {
            "default" : null,
            "description" : "Number of entries to complete",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "defaultapproval" : {
            "default" : null,
            "description" : "If set to no, entries require approving by a teacher before they are viewable by everyone.",
            "type" : "integer",
            "nullable" : true
          },
          "displayformat" : {
            "default" : null,
            "description" : "Display format type",
            "type" : "string",
            "nullable" : true
          },
          "editalways" : {
            "default" : null,
            "description" : "Always allow editing",
            "type" : "integer",
            "nullable" : true
          },
          "entbypage" : {
            "default" : null,
            "description" : "Entries shown per page",
            "type" : "integer",
            "nullable" : true
          },
          "globalglossary" : {
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "mainglossary" : {
            "default" : null,
            "description" : "If enabled this glossary is a main glossary.",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "rssarticles" : {
            "default" : null,
            "description" : "This setting specifies the number of glossary entry concepts to include in the RSS feed. Between 5 and 20 generally acceptable",
            "type" : "integer",
            "nullable" : true
          },
          "rsstype" : {
            "default" : null,
            "description" : "To enable the RSS feed for this activity, select either concepts with author or concepts without author to be included in the feed",
            "type" : "integer",
            "nullable" : true
          },
          "scale" : {
            "default" : null,
            "description" : "Scale ID",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "showall" : {
            "default" : null,
            "description" : "If enabled, participants can browse all entries at once",
            "type" : "integer",
            "nullable" : true
          },
          "showalphabet" : {
            "default" : null,
            "description" : "If enabled, participants can browse the glossary by letters of the alphabet",
            "type" : "integer",
            "nullable" : true
          },
          "showspecial" : {
            "default" : null,
            "description" : "If enabled, participants can browse the glossary by special characters, such as @ and #",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "usedynalink" : {
            "default" : null,
            "description" : "If site-wide glossary auto-linking has been enabled by an administrator and this checkbox is ticked, the entry will be automatically linked wherever the concept words and phrases appear throughout the rest of the course.",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_get_glossaries_by_courses_200_response" : {
        "properties" : {
          "glossaries" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_get_glossaries_by_courses_200_response_glossaries_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "glossaries" ]
      },
      "mod_glossary_prepare_entry_for_edition_request" : {
        "properties" : {
          "entryid" : {
            "default" : null,
            "description" : "Glossary entry id to update",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "entryid" ]
      },
      "mod_glossary_prepare_entry_for_edition_200_response_areas_inner_options_inner" : {
        "properties" : {
          "name" : {
            "description" : "Name of option.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "Value of option.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_prepare_entry_for_edition_200_response_areas_inner" : {
        "default" : null,
        "properties" : {
          "area" : {
            "description" : "File area name.",
            "type" : "string",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_prepare_entry_for_edition_200_response_areas_inner_options_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_glossary_prepare_entry_for_edition_200_response" : {
        "properties" : {
          "aliases" : {
            "items" : {
              "default" : null,
              "description" : "Alias name.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "areas" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_prepare_entry_for_edition_200_response_areas_inner"
            },
            "type" : "array"
          },
          "attachmentsid" : {
            "default" : null,
            "description" : "Draft item id for the file manager.",
            "type" : "integer",
            "nullable" : true
          },
          "categories" : {
            "items" : {
              "default" : null,
              "description" : "Category id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "inlineattachmentsid" : {
            "default" : null,
            "description" : "Draft item id for the text editor.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "aliases", "areas", "attachmentsid", "categories", "inlineattachmentsid" ]
      },
      "mod_glossary_update_entry_request_options_inner" : {
        "properties" : {
          "name" : {
            "description" : "The allowed keys (value format) are:\n                            inlineattachmentsid (int); the draft file area id for inline attachments\n                            attachmentsid (int); the draft file area id for attachments\n                            categories (comma separated int); comma separated category ids\n                            aliases (comma separated str); comma separated aliases\n                            usedynalink (bool); whether the entry should be automatically linked.\n                            casesensitive (bool); whether the entry is case sensitive.\n                            fullmatch (bool); whether to match whole words only.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "the value of the option (validated inside the function)",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_glossary_update_entry_request" : {
        "properties" : {
          "concept" : {
            "description" : "Glossary concept",
            "type" : "string",
            "nullable" : true
          },
          "definition" : {
            "description" : "Glossary concept definition",
            "type" : "string",
            "nullable" : true
          },
          "definitionformat" : {
            "description" : "definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "entryid" : {
            "description" : "Glossary entry id to update",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_glossary_update_entry_request_options_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "concept", "definition", "definitionformat", "entryid" ]
      },
      "mod_glossary_update_entry_200_response" : {
        "properties" : {
          "result" : {
            "default" : null,
            "description" : "The update result",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "mod_glossary_view_entry_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True on success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_glossary_view_glossary_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Glossary instance ID",
            "type" : "integer",
            "nullable" : true
          },
          "mode" : {
            "default" : null,
            "description" : "The mode in which the glossary is viewed",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "id", "mode" ]
      },
      "mod_glossary_view_glossary_200_response" : {
        "properties" : {
          "status" : {
            "description" : "True on success",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_h5pactivity_get_attempts_request" : {
        "properties" : {
          "h5pactivityid" : {
            "default" : null,
            "description" : "h5p activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userids" : {
            "items" : {
              "default" : null,
              "description" : "The user ids to get attempts (null means only current user)",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "h5pactivityid" ]
      },
      "mod_h5pactivity_get_attempts_200_response_usersattempts_inner_attempts_inner" : {
        "default" : null,
        "properties" : {
          "attempt" : {
            "default" : null,
            "description" : "Attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "completion" : {
            "default" : null,
            "description" : "Attempt completion",
            "type" : "integer",
            "nullable" : true
          },
          "duration" : {
            "default" : null,
            "description" : "Attempt duration in seconds",
            "type" : "integer",
            "nullable" : true
          },
          "h5pactivityid" : {
            "default" : null,
            "description" : "ID of the H5P activity",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of the context",
            "type" : "integer",
            "nullable" : true
          },
          "maxscore" : {
            "default" : null,
            "description" : "Attempt max score",
            "type" : "integer",
            "nullable" : true
          },
          "rawscore" : {
            "default" : null,
            "description" : "Attempt score value",
            "type" : "integer",
            "nullable" : true
          },
          "scaled" : {
            "default" : null,
            "description" : "Attempt scaled",
            "type" : "number",
            "nullable" : true
          },
          "success" : {
            "default" : null,
            "description" : "Attempt success",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Attempt creation",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Attempt modified",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_attempts_200_response_usersattempts_inner_scored_attempts_inner" : {
        "default" : null,
        "properties" : {
          "attempt" : {
            "description" : "Attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "completion" : {
            "description" : "Attempt completion",
            "type" : "integer",
            "nullable" : true
          },
          "duration" : {
            "description" : "Attempt duration in seconds",
            "type" : "integer",
            "nullable" : true
          },
          "h5pactivityid" : {
            "description" : "ID of the H5P activity",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the context",
            "type" : "integer",
            "nullable" : true
          },
          "maxscore" : {
            "description" : "Attempt max score",
            "type" : "integer",
            "nullable" : true
          },
          "rawscore" : {
            "description" : "Attempt score value",
            "type" : "integer",
            "nullable" : true
          },
          "scaled" : {
            "description" : "Attempt scaled",
            "type" : "number",
            "nullable" : true
          },
          "success" : {
            "description" : "Attempt success",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Attempt creation",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Attempt modified",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_attempts_200_response_usersattempts_inner_scored" : {
        "properties" : {
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_200_response_usersattempts_inner_scored_attempts_inner"
            },
            "type" : "array"
          },
          "grademethod" : {
            "default" : null,
            "description" : "Scored attempts title",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "description" : "Scored attempts title",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "attempts", "grademethod", "title" ]
      },
      "mod_h5pactivity_get_attempts_200_response_usersattempts_inner" : {
        "default" : null,
        "properties" : {
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_200_response_usersattempts_inner_attempts_inner"
            },
            "type" : "array"
          },
          "scored" : {
            "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_200_response_usersattempts_inner_scored"
          },
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_attempts_200_response" : {
        "properties" : {
          "activityid" : {
            "default" : null,
            "description" : "Activity course module ID",
            "type" : "integer",
            "nullable" : true
          },
          "usersattempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_200_response_usersattempts_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "activityid", "usersattempts" ]
      },
      "mod_h5pactivity_get_h5pactivities_by_courses_200_response_h5pactivities_inner_deployedfile" : {
        "properties" : {
          "filename" : {
            "description" : "File name.",
            "type" : "string",
            "nullable" : false
          },
          "filepath" : {
            "description" : "File path.",
            "type" : "string",
            "nullable" : false
          },
          "filesize" : {
            "description" : "File size.",
            "type" : "integer",
            "nullable" : false
          },
          "fileurl" : {
            "description" : "Downloadable file url.",
            "type" : "string",
            "nullable" : false
          },
          "mimetype" : {
            "description" : "File mime type.",
            "type" : "string",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "Time modified.",
            "type" : "integer",
            "nullable" : false
          }
        }
      },
      "mod_h5pactivity_get_h5pactivities_by_courses_200_response_h5pactivities_inner" : {
        "default" : null,
        "properties" : {
          "contenthash" : {
            "default" : null,
            "description" : "Sha1 hash of file content.",
            "type" : "string",
            "nullable" : false
          },
          "context" : {
            "default" : null,
            "description" : "context",
            "type" : "integer",
            "nullable" : false
          },
          "course" : {
            "default" : null,
            "description" : "Course id this h5p activity is part of.",
            "type" : "integer",
            "nullable" : false
          },
          "coursemodule" : {
            "description" : "coursemodule",
            "type" : "integer",
            "nullable" : false
          },
          "deployedfile" : {
            "$ref" : "#/components/schemas/mod_h5pactivity_get_h5pactivities_by_courses_200_response_h5pactivities_inner_deployedfile"
          },
          "displayoptions" : {
            "default" : 0,
            "description" : "H5P Button display options.",
            "type" : "integer",
            "nullable" : false
          },
          "enabletracking" : {
            "default" : 1,
            "description" : "Enable xAPI tracking.",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "default" : 0,
            "description" : "The maximum grade for submission.",
            "type" : "integer",
            "nullable" : false
          },
          "grademethod" : {
            "default" : 1,
            "description" : "Which H5P attempt is used for grading.",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "The primary key of the record.",
            "type" : "integer",
            "nullable" : false
          },
          "intro" : {
            "default" : "",
            "description" : "H5P activity description.",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "default" : "0",
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The name of the activity module instance.",
            "type" : "string",
            "nullable" : false
          },
          "package" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "default" : null,
            "description" : "Timestamp of when the instance was added to the course.",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "Timestamp of when the instance was last modified.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_h5pactivities_by_courses_200_response_h5pglobalsettings" : {
        "properties" : {
          "enablesavestate" : {
            "default" : null,
            "description" : "Whether saving state is enabled.",
            "type" : "boolean",
            "nullable" : true
          },
          "savestatefreq" : {
            "default" : null,
            "description" : "How often (in seconds) state is saved.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "enablesavestate" ]
      },
      "mod_h5pactivity_get_h5pactivities_by_courses_200_response" : {
        "properties" : {
          "h5pactivities" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_h5pactivities_by_courses_200_response_h5pactivities_inner"
            },
            "type" : "array"
          },
          "h5pglobalsettings" : {
            "$ref" : "#/components/schemas/mod_h5pactivity_get_h5pactivities_by_courses_200_response_h5pglobalsettings"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "h5pactivities" ]
      },
      "mod_h5pactivity_get_h5pactivity_access_information_request" : {
        "properties" : {
          "h5pactivityid" : {
            "description" : "h5p activity instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "h5pactivityid" ]
      },
      "mod_h5pactivity_get_h5pactivity_access_information_200_response" : {
        "properties" : {
          "canaddinstance" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/h5pactivity:addinstance allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canreviewattempts" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/h5pactivity:reviewattempts allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cansubmit" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/h5pactivity:submit allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canview" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/h5pactivity:view allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_h5pactivity_get_results_request" : {
        "properties" : {
          "attemptids" : {
            "items" : {
              "default" : null,
              "description" : "The attempt id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "h5pactivityid" : {
            "description" : "h5p activity instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "h5pactivityid" ]
      },
      "mod_h5pactivity_get_results_200_response_attempts_inner_results_inner_options_inner_correctanswer" : {
        "properties" : {
          "answer" : {
            "default" : null,
            "description" : "Option text value",
            "type" : "string",
            "nullable" : true
          },
          "checked" : {
            "default" : null,
            "description" : "If has to be displayed as a checked option",
            "type" : "boolean",
            "nullable" : true
          },
          "correct" : {
            "default" : null,
            "description" : "If has to be displayed as correct",
            "type" : "boolean",
            "nullable" : true
          },
          "fail" : {
            "default" : null,
            "description" : "If has to be displayed as failed",
            "type" : "boolean",
            "nullable" : true
          },
          "incorrect" : {
            "default" : null,
            "description" : "If has to be displayed as incorrect",
            "type" : "boolean",
            "nullable" : true
          },
          "pass" : {
            "default" : null,
            "description" : "If has to be displayed as passed",
            "type" : "boolean",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "If has to be displayed as simple text",
            "type" : "boolean",
            "nullable" : true
          },
          "unchecked" : {
            "default" : null,
            "description" : "If has to be displayed as a unchecked option",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_h5pactivity_get_results_200_response_attempts_inner_results_inner_options_inner_useranswer" : {
        "properties" : {
          "answer" : {
            "description" : "Option text value",
            "type" : "string",
            "nullable" : true
          },
          "checked" : {
            "description" : "If has to be displayed as a checked option",
            "type" : "boolean",
            "nullable" : true
          },
          "correct" : {
            "description" : "If has to be displayed as correct",
            "type" : "boolean",
            "nullable" : true
          },
          "fail" : {
            "description" : "If has to be displayed as failed",
            "type" : "boolean",
            "nullable" : true
          },
          "incorrect" : {
            "description" : "If has to be displayed as incorrect",
            "type" : "boolean",
            "nullable" : true
          },
          "pass" : {
            "description" : "If has to be displayed as passed",
            "type" : "boolean",
            "nullable" : true
          },
          "text" : {
            "description" : "If has to be displayed as simple text",
            "type" : "boolean",
            "nullable" : true
          },
          "unchecked" : {
            "description" : "If has to be displayed as a unchecked option",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_h5pactivity_get_results_200_response_attempts_inner_results_inner_options_inner" : {
        "default" : null,
        "properties" : {
          "correctanswer" : {
            "$ref" : "#/components/schemas/mod_h5pactivity_get_results_200_response_attempts_inner_results_inner_options_inner_correctanswer"
          },
          "description" : {
            "default" : null,
            "description" : "Option description",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Option string identifier",
            "type" : "string",
            "nullable" : true
          },
          "useranswer" : {
            "$ref" : "#/components/schemas/mod_h5pactivity_get_results_200_response_attempts_inner_results_inner_options_inner_useranswer"
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_results_200_response_attempts_inner_results_inner" : {
        "default" : null,
        "description" : "A single result statement tracking information",
        "properties" : {
          "answerlabel" : {
            "default" : null,
            "description" : "Label used for user answers",
            "type" : "string",
            "nullable" : true
          },
          "attemptid" : {
            "default" : null,
            "description" : "ID of the H5P attempt",
            "type" : "integer",
            "nullable" : true
          },
          "completion" : {
            "default" : null,
            "description" : "Result completion",
            "type" : "integer",
            "nullable" : true
          },
          "content" : {
            "default" : null,
            "description" : "Result extra content",
            "type" : "string",
            "nullable" : true
          },
          "correctlabel" : {
            "default" : null,
            "description" : "Label used for correct answers",
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "default" : null,
            "description" : "Result description",
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "default" : 0,
            "description" : "Result duration in seconds",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the context",
            "type" : "integer",
            "nullable" : true
          },
          "interactiontype" : {
            "default" : null,
            "description" : "Interaction type",
            "type" : "string",
            "nullable" : true
          },
          "maxscore" : {
            "default" : null,
            "description" : "Result max score",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_results_200_response_attempts_inner_results_inner_options_inner"
            },
            "type" : "array"
          },
          "optionslabel" : {
            "default" : null,
            "description" : "Label used for result options",
            "type" : "string",
            "nullable" : true
          },
          "rawscore" : {
            "default" : null,
            "description" : "Result score value",
            "type" : "integer",
            "nullable" : true
          },
          "subcontent" : {
            "default" : null,
            "description" : "Subcontent identifier",
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "default" : null,
            "description" : "Result success",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Result creation",
            "type" : "integer",
            "nullable" : true
          },
          "track" : {
            "default" : null,
            "description" : "If the result has valid track information",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_results_200_response_attempts_inner" : {
        "default" : null,
        "description" : "The attempt general information",
        "properties" : {
          "attempt" : {
            "description" : "Attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "completion" : {
            "description" : "Attempt completion",
            "type" : "integer",
            "nullable" : true
          },
          "duration" : {
            "description" : "Attempt duration in seconds",
            "type" : "integer",
            "nullable" : true
          },
          "h5pactivityid" : {
            "description" : "ID of the H5P activity",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the context",
            "type" : "integer",
            "nullable" : true
          },
          "maxscore" : {
            "description" : "Attempt max score",
            "type" : "integer",
            "nullable" : true
          },
          "rawscore" : {
            "description" : "Attempt score value",
            "type" : "integer",
            "nullable" : true
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_results_200_response_attempts_inner_results_inner"
            },
            "type" : "array"
          },
          "scaled" : {
            "description" : "Attempt scaled",
            "type" : "number",
            "nullable" : true
          },
          "success" : {
            "description" : "Attempt success",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Attempt creation",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Attempt modified",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "ID of the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_results_200_response" : {
        "properties" : {
          "activityid" : {
            "description" : "Activity course module ID",
            "type" : "integer",
            "nullable" : true
          },
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_results_200_response_attempts_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "activityid", "attempts" ]
      },
      "mod_h5pactivity_get_user_attempts_request" : {
        "properties" : {
          "firstinitial" : {
            "default" : "",
            "description" : "Users whose first name starts with $firstinitial",
            "type" : "string",
            "nullable" : true
          },
          "h5pactivityid" : {
            "description" : "h5p activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "lastinitial" : {
            "default" : "",
            "description" : "Users whose last name starts with $lastinitial",
            "type" : "string",
            "nullable" : true
          },
          "page" : {
            "default" : -1,
            "description" : "current page",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "items per page",
            "type" : "integer",
            "nullable" : true
          },
          "sortorder" : {
            "default" : "id ASC",
            "description" : "sort by either user id, firstname or lastname (with optional asc/desc)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "h5pactivityid" ]
      },
      "mod_h5pactivity_get_user_attempts_200_response_usersattempts_inner_scored" : {
        "properties" : {
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_200_response_usersattempts_inner_scored_attempts_inner"
            },
            "type" : "array"
          },
          "grademethod" : {
            "description" : "Grading method",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "description" : "Scored attempts title",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "attempts", "grademethod", "title" ]
      },
      "mod_h5pactivity_get_user_attempts_200_response_usersattempts_inner" : {
        "default" : null,
        "properties" : {
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_attempts_200_response_usersattempts_inner_scored_attempts_inner"
            },
            "type" : "array"
          },
          "scored" : {
            "$ref" : "#/components/schemas/mod_h5pactivity_get_user_attempts_200_response_usersattempts_inner_scored"
          },
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_h5pactivity_get_user_attempts_200_response" : {
        "properties" : {
          "activityid" : {
            "description" : "Activity course module ID",
            "type" : "integer",
            "nullable" : true
          },
          "usersattempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_h5pactivity_get_user_attempts_200_response_usersattempts_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "activityid", "usersattempts" ]
      },
      "mod_h5pactivity_log_report_viewed_request" : {
        "properties" : {
          "attemptid" : {
            "default" : null,
            "description" : "The attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "h5pactivityid" : {
            "description" : "h5p activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id to log attempt (null means only current user)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "h5pactivityid" ]
      },
      "mod_h5pactivity_view_h5pactivity_request" : {
        "properties" : {
          "h5pactivityid" : {
            "default" : null,
            "description" : "H5P activity instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "h5pactivityid" ]
      },
      "mod_imscp_get_imscps_by_courses_200_response_imscps_inner" : {
        "default" : null,
        "description" : "IMS content packages",
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "keepold" : {
            "default" : null,
            "description" : "Number of old IMSCP to keep",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "revision" : {
            "default" : null,
            "description" : "Revision",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "structure" : {
            "default" : null,
            "description" : "IMSCP structure",
            "type" : "string",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time of last modification",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_imscp_get_imscps_by_courses_200_response" : {
        "properties" : {
          "imscps" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_imscp_get_imscps_by_courses_200_response_imscps_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "imscps" ]
      },
      "mod_imscp_view_imscp_request" : {
        "properties" : {
          "imscpid" : {
            "default" : null,
            "description" : "imscp instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "imscpid" ]
      },
      "mod_iomadcertificate_get_iomadcertificates_by_courses_200_response_iomadcertificates_inner" : {
        "default" : null,
        "description" : "Tool",
        "properties" : {
          "bordercolor" : {
            "default" : null,
            "description" : "Border color",
            "type" : "string",
            "nullable" : true
          },
          "borderstyle" : {
            "default" : null,
            "description" : "Border style",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "customtext" : {
            "default" : null,
            "description" : "Custom text",
            "type" : "string",
            "nullable" : true
          },
          "datefmt" : {
            "default" : null,
            "description" : "Date format",
            "type" : "integer",
            "nullable" : true
          },
          "delivery" : {
            "default" : null,
            "description" : "Delivery options",
            "type" : "integer",
            "nullable" : true
          },
          "emailothers" : {
            "default" : null,
            "description" : "Email others?",
            "type" : "string",
            "nullable" : true
          },
          "emailteachers" : {
            "default" : null,
            "description" : "Email teachers?",
            "type" : "integer",
            "nullable" : true
          },
          "gradefmt" : {
            "default" : null,
            "description" : "Grade format",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "default" : null,
            "description" : "group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Certificate id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "default" : null,
            "description" : "The Certificate intro",
            "type" : "string",
            "nullable" : true
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "iomadcertificatetype" : {
            "default" : null,
            "description" : "Type",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Certificate name",
            "type" : "string",
            "nullable" : true
          },
          "orientation" : {
            "default" : null,
            "description" : "Orientation",
            "type" : "string",
            "nullable" : true
          },
          "printdate" : {
            "default" : null,
            "description" : "Print date?",
            "type" : "string",
            "nullable" : true
          },
          "printgrade" : {
            "default" : null,
            "description" : "Print grade?",
            "type" : "integer",
            "nullable" : true
          },
          "printhours" : {
            "default" : null,
            "description" : "Print hours?",
            "type" : "string",
            "nullable" : true
          },
          "printnumber" : {
            "default" : null,
            "description" : "Print number?",
            "type" : "integer",
            "nullable" : true
          },
          "printoutcome" : {
            "default" : null,
            "description" : "Print outcome?",
            "type" : "integer",
            "nullable" : true
          },
          "printseal" : {
            "default" : null,
            "description" : "Print seal?",
            "type" : "string",
            "nullable" : true
          },
          "printsignature" : {
            "default" : null,
            "description" : "Print signature?",
            "type" : "string",
            "nullable" : true
          },
          "printteacher" : {
            "default" : null,
            "description" : "Print teacher?",
            "type" : "integer",
            "nullable" : true
          },
          "printwmark" : {
            "default" : null,
            "description" : "Print water mark?",
            "type" : "string",
            "nullable" : true
          },
          "reportcert" : {
            "default" : null,
            "description" : "Report iomadcertificate?",
            "type" : "integer",
            "nullable" : true
          },
          "requiredtime" : {
            "default" : null,
            "description" : "Required time",
            "type" : "integer",
            "nullable" : true
          },
          "requiredtimenotmet" : {
            "default" : null,
            "description" : "Whether the time req is met",
            "type" : "integer",
            "nullable" : true
          },
          "savecert" : {
            "default" : null,
            "description" : "Save iomadcertificate?",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time modified",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "visible",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_iomadcertificate_get_iomadcertificates_by_courses_200_response" : {
        "properties" : {
          "iomadcertificates" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_iomadcertificate_get_iomadcertificates_by_courses_200_response_iomadcertificates_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "iomadcertificates" ]
      },
      "mod_iomadcertificate_get_issued_iomadcertificates_request" : {
        "properties" : {
          "iomadcertificateid" : {
            "default" : null,
            "description" : "iomadcertificate instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "iomadcertificateid" ]
      },
      "mod_iomadcertificate_get_issued_iomadcertificates_200_response_issues_inner" : {
        "default" : null,
        "properties" : {
          "code" : {
            "default" : null,
            "description" : "Certificate code",
            "type" : "string",
            "nullable" : true
          },
          "filename" : {
            "default" : null,
            "description" : "Time created",
            "type" : "string",
            "nullable" : true
          },
          "fileurl" : {
            "description" : "Time created",
            "type" : "string",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Certificate grade",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Issue id",
            "type" : "integer",
            "nullable" : true
          },
          "iomadcertificateid" : {
            "description" : "Certificate id",
            "type" : "integer",
            "nullable" : true
          },
          "mimetype" : {
            "default" : null,
            "description" : "mime type",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_iomadcertificate_get_issued_iomadcertificates_200_response" : {
        "properties" : {
          "issues" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_iomadcertificate_get_issued_iomadcertificates_200_response_issues_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "issues" ]
      },
      "mod_iomadcertificate_issue_iomadcertificate_request" : {
        "properties" : {
          "iomadcertificateid" : {
            "description" : "iomadcertificate instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "iomadcertificateid" ]
      },
      "mod_iomadcertificate_issue_iomadcertificate_200_response_issue" : {
        "properties" : {
          "code" : {
            "description" : "Certificate code",
            "type" : "string",
            "nullable" : true
          },
          "filename" : {
            "description" : "Time created",
            "type" : "string",
            "nullable" : true
          },
          "fileurl" : {
            "description" : "Time created",
            "type" : "string",
            "nullable" : true
          },
          "grade" : {
            "description" : "Certificate grade",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Issue id",
            "type" : "integer",
            "nullable" : true
          },
          "iomadcertificateid" : {
            "description" : "Certificate id",
            "type" : "integer",
            "nullable" : true
          },
          "mimetype" : {
            "description" : "mime type",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time created",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "code", "filename", "fileurl", "id", "iomadcertificateid", "mimetype", "timecreated", "userid" ]
      },
      "mod_iomadcertificate_issue_iomadcertificate_200_response" : {
        "properties" : {
          "issue" : {
            "$ref" : "#/components/schemas/mod_iomadcertificate_issue_iomadcertificate_200_response_issue"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "issue" ]
      },
      "mod_label_get_labels_by_courses_200_response_labels_inner" : {
        "default" : null,
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time the label was modified",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_label_get_labels_by_courses_200_response" : {
        "properties" : {
          "labels" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_label_get_labels_by_courses_200_response_labels_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "labels" ]
      },
      "mod_lesson_finish_attempt_request" : {
        "properties" : {
          "lessonid" : {
            "default" : null,
            "description" : "Lesson instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "outoftime" : {
            "default" : false,
            "description" : "If the user run out of time.",
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "Optional password (the lesson may be protected).",
            "type" : "string",
            "nullable" : true
          },
          "review" : {
            "default" : false,
            "description" : "If we want to review just after finishing (1 hour margin).",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "lessonid" ]
      },
      "mod_lesson_finish_attempt_200_response_data_inner" : {
        "default" : null,
        "properties" : {
          "message" : {
            "default" : null,
            "description" : "Data message (translated string).",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Data name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Data value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_finish_attempt_200_response_messages_inner" : {
        "default" : null,
        "description" : "The lesson generated messages",
        "properties" : {
          "message" : {
            "default" : null,
            "description" : "Message.",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Message type: usually a CSS identifier like:\n                                success, info, warning, error, notifyproblem, notifyerror, notifytiny, notifysuccess",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_finish_attempt_200_response" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_finish_attempt_200_response_data_inner"
            },
            "type" : "array"
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_finish_attempt_200_response_messages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "data", "messages" ]
      },
      "mod_lesson_get_attempts_overview_request" : {
        "properties" : {
          "groupid" : {
            "default" : 0,
            "description" : "group id, 0 means that the function will determine the user group",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "default" : null,
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "lessonid" ]
      },
      "mod_lesson_get_attempts_overview_200_response_data_students_inner_attempts_inner" : {
        "default" : null,
        "properties" : {
          "end" : {
            "default" : null,
            "description" : "Attempt time ended.",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Attempt grade.",
            "type" : "number",
            "nullable" : true
          },
          "timeend" : {
            "default" : null,
            "description" : "Attempt last time continued.",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : null,
            "description" : "Attempt time started.",
            "type" : "integer",
            "nullable" : true
          },
          "try" : {
            "description" : "Attempt number.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_attempts_overview_200_response_data_students_inner" : {
        "default" : null,
        "properties" : {
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_attempts_overview_200_response_data_students_inner_attempts_inner"
            },
            "type" : "array"
          },
          "bestgrade" : {
            "default" : null,
            "description" : "Best grade.",
            "type" : "number",
            "nullable" : true
          },
          "fullname" : {
            "default" : null,
            "description" : "User full name.",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "User id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_attempts_overview_200_response_data" : {
        "properties" : {
          "avescore" : {
            "default" : null,
            "description" : "Average score.",
            "type" : "number",
            "nullable" : true
          },
          "avetime" : {
            "default" : null,
            "description" : "Average time (spent in taking the lesson).",
            "type" : "integer",
            "nullable" : true
          },
          "highscore" : {
            "default" : null,
            "description" : "High score.",
            "type" : "number",
            "nullable" : true
          },
          "hightime" : {
            "default" : null,
            "description" : "High time.",
            "type" : "integer",
            "nullable" : true
          },
          "lessonscored" : {
            "default" : null,
            "description" : "True if the lesson was scored.",
            "type" : "boolean",
            "nullable" : true
          },
          "lowscore" : {
            "default" : null,
            "description" : "Low score.",
            "type" : "number",
            "nullable" : true
          },
          "lowtime" : {
            "default" : null,
            "description" : "Low time.",
            "type" : "integer",
            "nullable" : true
          },
          "numofattempts" : {
            "default" : null,
            "description" : "Number of attempts.",
            "type" : "integer",
            "nullable" : true
          },
          "students" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_attempts_overview_200_response_data_students_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "avescore", "avetime", "highscore", "hightime", "lessonscored", "lowscore", "lowtime", "numofattempts" ]
      },
      "mod_lesson_get_attempts_overview_200_response" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/mod_lesson_get_attempts_overview_200_response_data"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_lesson_get_content_pages_viewed_request" : {
        "properties" : {
          "lessonattempt" : {
            "default" : null,
            "description" : "lesson attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "the user id (empty for current user)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "lessonattempt", "lessonid" ]
      },
      "mod_lesson_get_content_pages_viewed_200_response_pages_inner" : {
        "default" : null,
        "description" : "The content pages viewed.",
        "properties" : {
          "flag" : {
            "default" : null,
            "description" : "1 if the next page was calculated randomly.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The attempt id.",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "default" : null,
            "description" : "The lesson id.",
            "type" : "integer",
            "nullable" : true
          },
          "nextpageid" : {
            "default" : null,
            "description" : "The next page chosen id.",
            "type" : "integer",
            "nullable" : true
          },
          "pageid" : {
            "default" : null,
            "description" : "The page id.",
            "type" : "integer",
            "nullable" : true
          },
          "retry" : {
            "default" : null,
            "description" : "The lesson attempt number.",
            "type" : "integer",
            "nullable" : true
          },
          "timeseen" : {
            "default" : null,
            "description" : "The time the page was seen.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user who viewed the page.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_content_pages_viewed_200_response" : {
        "properties" : {
          "pages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_content_pages_viewed_200_response_pages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "pages" ]
      },
      "mod_lesson_get_lesson_request" : {
        "properties" : {
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "lesson password",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "lessonid" ]
      },
      "mod_lesson_get_lesson_200_response_lesson" : {
        "properties" : {
          "activitylink" : {
            "default" : null,
            "description" : "Id of the next activity to be linked once the lesson is completed",
            "type" : "integer",
            "nullable" : false
          },
          "allowofflineattempts" : {
            "default" : null,
            "description" : "Whether to allow the lesson to be attempted offline in the mobile app",
            "type" : "boolean",
            "nullable" : false
          },
          "available" : {
            "default" : null,
            "description" : "Available from",
            "type" : "integer",
            "nullable" : false
          },
          "bgcolor" : {
            "default" : null,
            "description" : "Slideshow bgcolor",
            "type" : "string",
            "nullable" : false
          },
          "completionendreached" : {
            "default" : null,
            "description" : "Require end reached for completion?",
            "type" : "integer",
            "nullable" : false
          },
          "completiontimespent" : {
            "default" : null,
            "description" : "Student must do this activity at least for",
            "type" : "integer",
            "nullable" : false
          },
          "conditions" : {
            "default" : null,
            "description" : "Conditions to enable the lesson",
            "type" : "string",
            "nullable" : false
          },
          "course" : {
            "default" : null,
            "description" : "Foreign key reference to the course this lesson is part of.",
            "type" : "integer",
            "nullable" : false
          },
          "coursemodule" : {
            "default" : null,
            "description" : "Course module id.",
            "type" : "integer",
            "nullable" : false
          },
          "custom" : {
            "default" : null,
            "description" : "Custom scoring?",
            "type" : "boolean",
            "nullable" : false
          },
          "deadline" : {
            "default" : null,
            "description" : "Available until",
            "type" : "integer",
            "nullable" : false
          },
          "dependency" : {
            "default" : null,
            "description" : "Dependent on (another lesson id)",
            "type" : "integer",
            "nullable" : false
          },
          "displayleft" : {
            "default" : null,
            "description" : "Display left pages menu?",
            "type" : "boolean",
            "nullable" : false
          },
          "displayleftif" : {
            "default" : null,
            "description" : "Minimum grade to display menu",
            "type" : "integer",
            "nullable" : false
          },
          "feedback" : {
            "default" : null,
            "description" : "Display default feedback",
            "type" : "boolean",
            "nullable" : false
          },
          "grade" : {
            "default" : null,
            "description" : "The total that the grade is scaled to be out of",
            "type" : "integer",
            "nullable" : false
          },
          "height" : {
            "default" : null,
            "description" : "Slideshow height",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : null,
            "description" : "Standard Moodle primary key.",
            "type" : "integer",
            "nullable" : false
          },
          "intro" : {
            "default" : null,
            "description" : "Lesson introduction text.",
            "type" : "string",
            "nullable" : false
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "default" : "0",
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "maxanswers" : {
            "default" : null,
            "description" : "Maximum answers per page",
            "type" : "integer",
            "nullable" : false
          },
          "maxattempts" : {
            "default" : null,
            "description" : "Maximum attempts",
            "type" : "integer",
            "nullable" : false
          },
          "maxpages" : {
            "default" : null,
            "description" : "Number of pages to show",
            "type" : "integer",
            "nullable" : false
          },
          "mediaclose" : {
            "default" : null,
            "description" : "Display a close button in the popup?",
            "type" : "integer",
            "nullable" : false
          },
          "mediafile" : {
            "default" : null,
            "description" : "Local file path or full external URL",
            "type" : "string",
            "nullable" : false
          },
          "mediafiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "mediaheight" : {
            "default" : null,
            "description" : "Popup for media file height",
            "type" : "integer",
            "nullable" : false
          },
          "mediawidth" : {
            "default" : null,
            "description" : "Popup for media with",
            "type" : "integer",
            "nullable" : false
          },
          "minquestions" : {
            "default" : null,
            "description" : "Minimum number of questions",
            "type" : "integer",
            "nullable" : false
          },
          "modattempts" : {
            "default" : null,
            "description" : "Allow student review?",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Lesson name.",
            "type" : "string",
            "nullable" : false
          },
          "nextpagedefault" : {
            "default" : null,
            "description" : "Action for a correct answer",
            "type" : "integer",
            "nullable" : false
          },
          "ongoing" : {
            "default" : null,
            "description" : "Display ongoing score?",
            "type" : "boolean",
            "nullable" : false
          },
          "password" : {
            "default" : null,
            "description" : "Password",
            "type" : "string",
            "nullable" : false
          },
          "practice" : {
            "default" : null,
            "description" : "Practice lesson?",
            "type" : "boolean",
            "nullable" : false
          },
          "progressbar" : {
            "default" : null,
            "description" : "Display progress bar?",
            "type" : "boolean",
            "nullable" : false
          },
          "retake" : {
            "default" : null,
            "description" : "Re-takes allowed",
            "type" : "boolean",
            "nullable" : false
          },
          "review" : {
            "default" : null,
            "description" : "Provide option to try a question again",
            "type" : "boolean",
            "nullable" : false
          },
          "slideshow" : {
            "default" : null,
            "description" : "Display lesson as slideshow",
            "type" : "boolean",
            "nullable" : false
          },
          "timelimit" : {
            "default" : null,
            "description" : "Time limit",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time settings were updated",
            "type" : "integer",
            "nullable" : false
          },
          "usemaxgrade" : {
            "default" : null,
            "description" : "How to calculate the final grade",
            "type" : "integer",
            "nullable" : false
          },
          "usepassword" : {
            "default" : null,
            "description" : "Password protected lesson?",
            "type" : "boolean",
            "nullable" : false
          },
          "width" : {
            "default" : null,
            "description" : "Slideshow width",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "allowofflineattempts", "course", "coursemodule", "id", "lang", "name" ]
      },
      "mod_lesson_get_lesson_200_response" : {
        "properties" : {
          "lesson" : {
            "$ref" : "#/components/schemas/mod_lesson_get_lesson_200_response_lesson"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "lesson" ]
      },
      "mod_lesson_get_lesson_access_information_request" : {
        "properties" : {
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "lessonid" ]
      },
      "mod_lesson_get_lesson_access_information_200_response_preventaccessreasons_inner" : {
        "default" : null,
        "description" : "The reasons why the user cannot attempt the lesson",
        "properties" : {
          "data" : {
            "default" : null,
            "description" : "Additional data",
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "Complete html message",
            "type" : "string",
            "nullable" : true
          },
          "reason" : {
            "default" : null,
            "description" : "Reason lang string code",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_lesson_access_information_200_response" : {
        "properties" : {
          "attemptscount" : {
            "default" : null,
            "description" : "The number of attempts done by the user.",
            "type" : "integer",
            "nullable" : true
          },
          "cangrade" : {
            "default" : null,
            "description" : "Whether the user can grade the lesson or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanage" : {
            "default" : null,
            "description" : "Whether the user can manage the lesson or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewreports" : {
            "default" : null,
            "description" : "Whether the user can view the lesson reports or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "firstpageid" : {
            "default" : null,
            "description" : "The lesson first page id.",
            "type" : "integer",
            "nullable" : true
          },
          "lastpageseen" : {
            "default" : null,
            "description" : "The last page seen id.",
            "type" : "integer",
            "nullable" : true
          },
          "leftduringtimedsession" : {
            "default" : null,
            "description" : "Whether the user left during a timed session.",
            "type" : "boolean",
            "nullable" : true
          },
          "preventaccessreasons" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_lesson_access_information_200_response_preventaccessreasons_inner"
            },
            "type" : "array"
          },
          "reviewmode" : {
            "default" : null,
            "description" : "Whether the lesson is in review mode for the current user.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attemptscount", "cangrade", "canmanage", "canviewreports", "firstpageid", "lastpageseen", "leftduringtimedsession", "preventaccessreasons", "reviewmode" ]
      },
      "mod_lesson_get_lessons_by_courses_200_response_lessons_inner" : {
        "default" : null,
        "properties" : {
          "activitylink" : {
            "description" : "Id of the next activity to be linked once the lesson is completed",
            "type" : "integer",
            "nullable" : false
          },
          "allowofflineattempts" : {
            "description" : "Whether to allow the lesson to be attempted offline in the mobile app",
            "type" : "boolean",
            "nullable" : false
          },
          "available" : {
            "description" : "Available from",
            "type" : "integer",
            "nullable" : false
          },
          "bgcolor" : {
            "description" : "Slideshow bgcolor",
            "type" : "string",
            "nullable" : false
          },
          "completionendreached" : {
            "description" : "Require end reached for completion?",
            "type" : "integer",
            "nullable" : false
          },
          "completiontimespent" : {
            "description" : "Student must do this activity at least for",
            "type" : "integer",
            "nullable" : false
          },
          "conditions" : {
            "description" : "Conditions to enable the lesson",
            "type" : "string",
            "nullable" : false
          },
          "course" : {
            "description" : "Foreign key reference to the course this lesson is part of.",
            "type" : "integer",
            "nullable" : false
          },
          "coursemodule" : {
            "description" : "Course module id.",
            "type" : "integer",
            "nullable" : false
          },
          "custom" : {
            "description" : "Custom scoring?",
            "type" : "boolean",
            "nullable" : false
          },
          "deadline" : {
            "description" : "Available until",
            "type" : "integer",
            "nullable" : false
          },
          "dependency" : {
            "description" : "Dependent on (another lesson id)",
            "type" : "integer",
            "nullable" : false
          },
          "displayleft" : {
            "description" : "Display left pages menu?",
            "type" : "boolean",
            "nullable" : false
          },
          "displayleftif" : {
            "description" : "Minimum grade to display menu",
            "type" : "integer",
            "nullable" : false
          },
          "feedback" : {
            "description" : "Display default feedback",
            "type" : "boolean",
            "nullable" : false
          },
          "grade" : {
            "description" : "The total that the grade is scaled to be out of",
            "type" : "integer",
            "nullable" : false
          },
          "height" : {
            "description" : "Slideshow height",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "description" : "Standard Moodle primary key.",
            "type" : "integer",
            "nullable" : false
          },
          "intro" : {
            "description" : "Lesson introduction text.",
            "type" : "string",
            "nullable" : false
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "default" : "0",
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "maxanswers" : {
            "description" : "Maximum answers per page",
            "type" : "integer",
            "nullable" : false
          },
          "maxattempts" : {
            "description" : "Maximum attempts",
            "type" : "integer",
            "nullable" : false
          },
          "maxpages" : {
            "description" : "Number of pages to show",
            "type" : "integer",
            "nullable" : false
          },
          "mediaclose" : {
            "description" : "Display a close button in the popup?",
            "type" : "integer",
            "nullable" : false
          },
          "mediafile" : {
            "description" : "Local file path or full external URL",
            "type" : "string",
            "nullable" : false
          },
          "mediafiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "mediaheight" : {
            "description" : "Popup for media file height",
            "type" : "integer",
            "nullable" : false
          },
          "mediawidth" : {
            "description" : "Popup for media with",
            "type" : "integer",
            "nullable" : false
          },
          "minquestions" : {
            "description" : "Minimum number of questions",
            "type" : "integer",
            "nullable" : false
          },
          "modattempts" : {
            "description" : "Allow student review?",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "Lesson name.",
            "type" : "string",
            "nullable" : false
          },
          "nextpagedefault" : {
            "description" : "Action for a correct answer",
            "type" : "integer",
            "nullable" : false
          },
          "ongoing" : {
            "description" : "Display ongoing score?",
            "type" : "boolean",
            "nullable" : false
          },
          "password" : {
            "description" : "Password",
            "type" : "string",
            "nullable" : false
          },
          "practice" : {
            "description" : "Practice lesson?",
            "type" : "boolean",
            "nullable" : false
          },
          "progressbar" : {
            "description" : "Display progress bar?",
            "type" : "boolean",
            "nullable" : false
          },
          "retake" : {
            "description" : "Re-takes allowed",
            "type" : "boolean",
            "nullable" : false
          },
          "review" : {
            "description" : "Provide option to try a question again",
            "type" : "boolean",
            "nullable" : false
          },
          "slideshow" : {
            "description" : "Display lesson as slideshow",
            "type" : "boolean",
            "nullable" : false
          },
          "timelimit" : {
            "description" : "Time limit",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "description" : "Last time settings were updated",
            "type" : "integer",
            "nullable" : false
          },
          "usemaxgrade" : {
            "description" : "How to calculate the final grade",
            "type" : "integer",
            "nullable" : false
          },
          "usepassword" : {
            "description" : "Password protected lesson?",
            "type" : "boolean",
            "nullable" : false
          },
          "width" : {
            "description" : "Slideshow width",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_lessons_by_courses_200_response" : {
        "properties" : {
          "lessons" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_lessons_by_courses_200_response_lessons_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "lessons" ]
      },
      "mod_lesson_get_page_data_request" : {
        "properties" : {
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "pageid" : {
            "default" : null,
            "description" : "the page id",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "optional password (the lesson may be protected)",
            "type" : "string",
            "nullable" : true
          },
          "returncontents" : {
            "default" : false,
            "description" : "if we must return the complete page contents once rendered",
            "type" : "boolean",
            "nullable" : true
          },
          "review" : {
            "default" : false,
            "description" : "if we want to review just after finishing (1 hour margin)",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "lessonid", "pageid" ]
      },
      "mod_lesson_get_page_data_200_response_answers_inner" : {
        "default" : null,
        "description" : "The page answers",
        "properties" : {
          "answer" : {
            "default" : null,
            "description" : "Possible answer text",
            "type" : "string",
            "nullable" : true
          },
          "answerfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "answerformat" : {
            "default" : null,
            "description" : "answer format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "flags" : {
            "default" : null,
            "description" : "Used to store options for the answer",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "The grade this answer is worth",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The ID of this answer in the database",
            "type" : "integer",
            "nullable" : true
          },
          "jumpto" : {
            "default" : null,
            "description" : "Identifies where the user goes upon completing a page with this answer",
            "type" : "integer",
            "nullable" : true
          },
          "response" : {
            "default" : null,
            "description" : "Response text for the answer",
            "type" : "string",
            "nullable" : true
          },
          "responsefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "responseformat" : {
            "default" : null,
            "description" : "response format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "default" : null,
            "description" : "The score this answer will give",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "A timestamp of when the answer was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "A timestamp of when the answer was modified",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_page_data_200_response_messages_inner" : {
        "description" : "The lesson generated messages",
        "properties" : {
          "message" : {
            "description" : "Message.",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "Message type: usually a CSS identifier like:\n                                success, info, warning, error, notifyproblem, notifyerror, notifytiny, notifysuccess",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_page_data_200_response_page" : {
        "properties" : {
          "contents" : {
            "default" : null,
            "description" : "The contents of this page",
            "type" : "string",
            "nullable" : true
          },
          "contentsformat" : {
            "default" : null,
            "description" : "contents format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "default" : null,
            "description" : "Used to record page specific display selections",
            "type" : "integer",
            "nullable" : true
          },
          "displayinmenublock" : {
            "default" : null,
            "description" : "Toggles display in the left menu block",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "The id of this lesson page",
            "type" : "integer",
            "nullable" : true
          },
          "layout" : {
            "default" : null,
            "description" : "Used to record page specific layout selections",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "default" : null,
            "description" : "The id of the lesson this page belongs to",
            "type" : "integer",
            "nullable" : true
          },
          "nextpageid" : {
            "default" : null,
            "description" : "The id of the next page in the page sequence",
            "type" : "integer",
            "nullable" : true
          },
          "prevpageid" : {
            "default" : null,
            "description" : "The id of the page before this one",
            "type" : "integer",
            "nullable" : true
          },
          "qoption" : {
            "default" : null,
            "description" : "Used to record page type specific options",
            "type" : "integer",
            "nullable" : true
          },
          "qtype" : {
            "default" : null,
            "description" : "Identifies the page type of this page",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Timestamp for when the page was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Timestamp for when the page was last modified",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "The title of this page",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "The type of the page [question | structure]",
            "type" : "integer",
            "nullable" : true
          },
          "typeid" : {
            "default" : null,
            "description" : "The unique identifier for the page type",
            "type" : "integer",
            "nullable" : true
          },
          "typestring" : {
            "default" : null,
            "description" : "The string that describes this page type",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "display", "displayinmenublock", "id", "layout", "lessonid", "nextpageid", "prevpageid", "qoption", "qtype", "timecreated", "timemodified", "type", "typeid", "typestring" ]
      },
      "mod_lesson_get_page_data_200_response" : {
        "properties" : {
          "answers" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_page_data_200_response_answers_inner"
            },
            "type" : "array"
          },
          "contentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "displaymenu" : {
            "default" : null,
            "description" : "Whether we should display the menu or not in this page.",
            "type" : "boolean",
            "nullable" : true
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_page_data_200_response_messages_inner"
            },
            "type" : "array"
          },
          "newpageid" : {
            "default" : null,
            "description" : "New page id (if a jump was made)",
            "type" : "integer",
            "nullable" : true
          },
          "ongoingscore" : {
            "default" : null,
            "description" : "The ongoing score message",
            "type" : "string",
            "nullable" : true
          },
          "page" : {
            "$ref" : "#/components/schemas/mod_lesson_get_page_data_200_response_page"
          },
          "pagecontent" : {
            "default" : null,
            "description" : "Page html content",
            "type" : "string",
            "nullable" : true
          },
          "progress" : {
            "default" : null,
            "description" : "Progress percentage in the lesson",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "answers", "contentfiles", "displaymenu", "messages", "newpageid", "ongoingscore", "progress" ]
      },
      "mod_lesson_get_pages_request" : {
        "properties" : {
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "optional password (the lesson may be protected)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "lessonid" ]
      },
      "mod_lesson_get_pages_200_response_pages_inner_page" : {
        "properties" : {
          "contents" : {
            "description" : "The contents of this page",
            "type" : "string",
            "nullable" : true
          },
          "contentsformat" : {
            "description" : "contents format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "description" : "Used to record page specific display selections",
            "type" : "integer",
            "nullable" : true
          },
          "displayinmenublock" : {
            "description" : "Toggles display in the left menu block",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "description" : "The id of this lesson page",
            "type" : "integer",
            "nullable" : true
          },
          "layout" : {
            "description" : "Used to record page specific layout selections",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "description" : "The id of the lesson this page belongs to",
            "type" : "integer",
            "nullable" : true
          },
          "nextpageid" : {
            "description" : "The id of the next page in the page sequence",
            "type" : "integer",
            "nullable" : true
          },
          "prevpageid" : {
            "description" : "The id of the page before this one",
            "type" : "integer",
            "nullable" : true
          },
          "qoption" : {
            "description" : "Used to record page type specific options",
            "type" : "integer",
            "nullable" : true
          },
          "qtype" : {
            "description" : "Identifies the page type of this page",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Timestamp for when the page was created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Timestamp for when the page was last modified",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "description" : "The title of this page",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "The type of the page [question | structure]",
            "type" : "integer",
            "nullable" : true
          },
          "typeid" : {
            "description" : "The unique identifier for the page type",
            "type" : "integer",
            "nullable" : true
          },
          "typestring" : {
            "description" : "The string that describes this page type",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "display", "displayinmenublock", "id", "layout", "lessonid", "nextpageid", "prevpageid", "qoption", "qtype", "timecreated", "timemodified", "type", "typeid", "typestring" ]
      },
      "mod_lesson_get_pages_200_response_pages_inner" : {
        "default" : null,
        "description" : "The lesson pages",
        "properties" : {
          "answerids" : {
            "items" : {
              "default" : null,
              "description" : "Answer id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "filescount" : {
            "default" : null,
            "description" : "The total number of files attached to the page",
            "type" : "integer",
            "nullable" : true
          },
          "filessizetotal" : {
            "default" : null,
            "description" : "The total size of the files",
            "type" : "integer",
            "nullable" : true
          },
          "jumps" : {
            "items" : {
              "default" : null,
              "description" : "Page to jump id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "page" : {
            "$ref" : "#/components/schemas/mod_lesson_get_pages_200_response_pages_inner_page"
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_pages_200_response" : {
        "properties" : {
          "pages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_pages_200_response_pages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "pages" ]
      },
      "mod_lesson_get_pages_possible_jumps_200_response_jumps_inner" : {
        "default" : null,
        "description" : "Jump for a page answer",
        "properties" : {
          "answerid" : {
            "default" : null,
            "description" : "The answer id",
            "type" : "integer",
            "nullable" : true
          },
          "calculatedjump" : {
            "default" : null,
            "description" : "The real page id (or EOL) to jump",
            "type" : "integer",
            "nullable" : true
          },
          "jumpto" : {
            "default" : null,
            "description" : "The jump (page id or type of jump)",
            "type" : "integer",
            "nullable" : true
          },
          "pageid" : {
            "default" : null,
            "description" : "The page id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_pages_possible_jumps_200_response" : {
        "properties" : {
          "jumps" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_pages_possible_jumps_200_response_jumps_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "jumps" ]
      },
      "mod_lesson_get_questions_attempts_request" : {
        "properties" : {
          "attempt" : {
            "description" : "lesson attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "correct" : {
            "default" : false,
            "description" : "only fetch correct attempts",
            "type" : "boolean",
            "nullable" : true
          },
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "pageid" : {
            "default" : null,
            "description" : "only fetch attempts at the given page",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "only fetch attempts of the given user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attempt", "lessonid" ]
      },
      "mod_lesson_get_questions_attempts_200_response_attempts_inner" : {
        "default" : null,
        "description" : "The question page attempts",
        "properties" : {
          "answerid" : {
            "default" : null,
            "description" : "The attempt answerid",
            "type" : "integer",
            "nullable" : true
          },
          "correct" : {
            "default" : null,
            "description" : "If it was the correct answer",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "default" : null,
            "description" : "The attempt lessonid",
            "type" : "integer",
            "nullable" : true
          },
          "pageid" : {
            "default" : null,
            "description" : "The attempt pageid",
            "type" : "integer",
            "nullable" : true
          },
          "retry" : {
            "default" : null,
            "description" : "The lesson attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "timeseen" : {
            "default" : null,
            "description" : "The time the question was seen",
            "type" : "integer",
            "nullable" : true
          },
          "useranswer" : {
            "default" : null,
            "description" : "The complete user answer",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user who did the attempt",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_questions_attempts_200_response" : {
        "properties" : {
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_questions_attempts_200_response_attempts_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attempts" ]
      },
      "mod_lesson_get_user_attempt_request" : {
        "properties" : {
          "lessonattempt" : {
            "default" : null,
            "description" : "The attempt number.",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "description" : "Lesson instance id.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user id. 0 for current user.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "lessonattempt", "lessonid", "userid" ]
      },
      "mod_lesson_get_user_attempt_200_response_answerpages_inner_answerdata" : {
        "properties" : {
          "answers" : {
            "items" : {
              "default" : null,
              "type" : "object",
              "nullable" : false
            },
            "type" : "array"
          },
          "response" : {
            "default" : null,
            "description" : "The response text.",
            "type" : "string",
            "nullable" : true
          },
          "responseformat" : {
            "default" : null,
            "description" : "response. format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "score" : {
            "default" : null,
            "description" : "The score (text version).",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "response", "responseformat", "score" ]
      },
      "mod_lesson_get_user_attempt_200_response_answerpages_inner" : {
        "default" : null,
        "properties" : {
          "answerdata" : {
            "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_200_response_answerpages_inner_answerdata"
          },
          "contents" : {
            "default" : null,
            "description" : "Page contents.",
            "type" : "string",
            "nullable" : true
          },
          "grayout" : {
            "default" : null,
            "description" : "If is required to apply a grayout.",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "$ref" : "#/components/schemas/mod_lesson_get_pages_200_response_pages_inner_page"
          },
          "qtype" : {
            "default" : null,
            "description" : "Identifies the page type of this page.",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Page title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_user_attempt_200_response_userstats_gradeinfo" : {
        "properties" : {
          "attempts" : {
            "default" : null,
            "description" : "Number of question attempts",
            "type" : "integer",
            "nullable" : true
          },
          "earned" : {
            "default" : null,
            "description" : "Points earned by student",
            "type" : "number",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Calculated percentage grade",
            "type" : "number",
            "nullable" : true
          },
          "manualpoints" : {
            "default" : null,
            "description" : "Point value for manually graded questions",
            "type" : "number",
            "nullable" : true
          },
          "nmanual" : {
            "default" : null,
            "description" : "Number of manually graded questions",
            "type" : "integer",
            "nullable" : true
          },
          "nquestions" : {
            "default" : null,
            "description" : "Number of questions answered",
            "type" : "integer",
            "nullable" : true
          },
          "total" : {
            "default" : null,
            "description" : "Max points possible",
            "type" : "number",
            "nullable" : true
          }
        },
        "required" : [ "attempts", "earned", "grade", "manualpoints", "nmanual", "nquestions", "total" ]
      },
      "mod_lesson_get_user_attempt_200_response_userstats" : {
        "properties" : {
          "completed" : {
            "default" : null,
            "description" : "Time completed.",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Attempt final grade.",
            "type" : "number",
            "nullable" : true
          },
          "gradeinfo" : {
            "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_200_response_userstats_gradeinfo"
          },
          "timetotake" : {
            "default" : null,
            "description" : "Time taken.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "completed", "grade", "timetotake" ]
      },
      "mod_lesson_get_user_attempt_200_response" : {
        "properties" : {
          "answerpages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_200_response_answerpages_inner"
            },
            "type" : "array"
          },
          "userstats" : {
            "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_200_response_userstats"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "answerpages", "userstats" ]
      },
      "mod_lesson_get_user_attempt_grade_request" : {
        "properties" : {
          "lessonattempt" : {
            "description" : "lesson attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "the user id (empty for current user)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "lessonattempt", "lessonid" ]
      },
      "mod_lesson_get_user_attempt_grade_200_response_grade" : {
        "properties" : {
          "attempts" : {
            "description" : "Number of question attempts",
            "type" : "integer",
            "nullable" : true
          },
          "earned" : {
            "description" : "Points earned by student",
            "type" : "number",
            "nullable" : true
          },
          "grade" : {
            "description" : "Calculated percentage grade",
            "type" : "number",
            "nullable" : true
          },
          "manualpoints" : {
            "description" : "Point value for manually graded questions",
            "type" : "number",
            "nullable" : true
          },
          "nmanual" : {
            "description" : "Number of manually graded questions",
            "type" : "integer",
            "nullable" : true
          },
          "nquestions" : {
            "description" : "Number of questions answered",
            "type" : "integer",
            "nullable" : true
          },
          "total" : {
            "description" : "Max points possible",
            "type" : "number",
            "nullable" : true
          }
        },
        "required" : [ "attempts", "earned", "grade", "manualpoints", "nmanual", "nquestions", "total" ]
      },
      "mod_lesson_get_user_attempt_grade_200_response" : {
        "properties" : {
          "grade" : {
            "$ref" : "#/components/schemas/mod_lesson_get_user_attempt_grade_200_response_grade"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "grade" ]
      },
      "mod_lesson_get_user_grade_request" : {
        "properties" : {
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "the user id (empty for current user)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "lessonid" ]
      },
      "mod_lesson_get_user_grade_200_response" : {
        "properties" : {
          "formattedgrade" : {
            "default" : null,
            "description" : "The lesson final grade formatted",
            "type" : "string",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "The lesson final raw grade",
            "type" : "number",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "formattedgrade", "grade" ]
      },
      "mod_lesson_get_user_timers_200_response_timers_inner" : {
        "default" : null,
        "description" : "The timers",
        "properties" : {
          "completed" : {
            "default" : null,
            "description" : "If the lesson for this timer was completed",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "lessonid" : {
            "default" : null,
            "description" : "The lesson id",
            "type" : "integer",
            "nullable" : true
          },
          "lessontime" : {
            "default" : null,
            "description" : "Last access time to the lesson during the timer session",
            "type" : "integer",
            "nullable" : true
          },
          "starttime" : {
            "default" : null,
            "description" : "First access time for a new timer session",
            "type" : "integer",
            "nullable" : true
          },
          "timemodifiedoffline" : {
            "default" : null,
            "description" : "Last modified time via webservices.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_get_user_timers_200_response" : {
        "properties" : {
          "timers" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_user_timers_200_response_timers_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "timers" ]
      },
      "mod_lesson_launch_attempt_request" : {
        "properties" : {
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "pageid" : {
            "default" : 0,
            "description" : "page id to continue from (only when continuing an attempt)",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "optional password (the lesson may be protected)",
            "type" : "string",
            "nullable" : true
          },
          "review" : {
            "default" : false,
            "description" : "if we want to review just after finishing",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "lessonid" ]
      },
      "mod_lesson_launch_attempt_200_response" : {
        "properties" : {
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_page_data_200_response_messages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "messages" ]
      },
      "mod_lesson_process_page_request_data_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "data name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "data value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lesson_process_page_request" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_process_page_request_data_inner"
            },
            "type" : "array"
          },
          "lessonid" : {
            "description" : "lesson instance id",
            "type" : "integer",
            "nullable" : true
          },
          "pageid" : {
            "description" : "the page id",
            "type" : "integer",
            "nullable" : true
          },
          "password" : {
            "default" : "",
            "description" : "optional password (the lesson may be protected)",
            "type" : "string",
            "nullable" : true
          },
          "review" : {
            "default" : false,
            "description" : "if we want to review just after finishing (1 hour margin)",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "data", "lessonid", "pageid" ]
      },
      "mod_lesson_process_page_200_response" : {
        "properties" : {
          "attemptsremaining" : {
            "default" : null,
            "description" : "Number of attempts remaining.",
            "type" : "integer",
            "nullable" : true
          },
          "correctanswer" : {
            "default" : null,
            "description" : "Whether the answer is correct.",
            "type" : "boolean",
            "nullable" : true
          },
          "displaymenu" : {
            "description" : "Whether we should display the menu or not in this page.",
            "type" : "boolean",
            "nullable" : true
          },
          "feedback" : {
            "default" : null,
            "description" : "The response feedback.",
            "type" : "string",
            "nullable" : true
          },
          "inmediatejump" : {
            "default" : null,
            "description" : "Whether the page processing redirect directly to anoter page.",
            "type" : "boolean",
            "nullable" : true
          },
          "isessayquestion" : {
            "default" : null,
            "description" : "Whether is a essay question.",
            "type" : "boolean",
            "nullable" : true
          },
          "maxattemptsreached" : {
            "default" : null,
            "description" : "Whether we reachered the max number of attempts.",
            "type" : "boolean",
            "nullable" : true
          },
          "messages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lesson_get_page_data_200_response_messages_inner"
            },
            "type" : "array"
          },
          "newpageid" : {
            "default" : null,
            "description" : "New page id (if a jump was made).",
            "type" : "integer",
            "nullable" : true
          },
          "noanswer" : {
            "default" : null,
            "description" : "Whether there aren't answers.",
            "type" : "boolean",
            "nullable" : true
          },
          "nodefaultresponse" : {
            "default" : null,
            "description" : "Whether there is not a default response.",
            "type" : "boolean",
            "nullable" : true
          },
          "ongoingscore" : {
            "default" : null,
            "description" : "The ongoing message.",
            "type" : "string",
            "nullable" : true
          },
          "progress" : {
            "default" : null,
            "description" : "Progress percentage in the lesson.",
            "type" : "integer",
            "nullable" : true
          },
          "response" : {
            "default" : null,
            "description" : "The response.",
            "type" : "string",
            "nullable" : true
          },
          "reviewmode" : {
            "default" : null,
            "description" : "Whether the user is reviewing.",
            "type" : "boolean",
            "nullable" : true
          },
          "studentanswer" : {
            "default" : null,
            "description" : "The student answer.",
            "type" : "string",
            "nullable" : true
          },
          "userresponse" : {
            "default" : null,
            "description" : "The user response.",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attemptsremaining", "correctanswer", "displaymenu", "feedback", "inmediatejump", "isessayquestion", "maxattemptsreached", "messages", "newpageid", "noanswer", "nodefaultresponse", "ongoingscore", "progress", "response", "reviewmode", "studentanswer", "userresponse" ]
      },
      "mod_lti_create_tool_proxy_request" : {
        "properties" : {
          "capabilityoffered" : {
            "items" : {
              "default" : null,
              "description" : "Tool proxy capabilities offered",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "name" : {
            "default" : "",
            "description" : "Tool proxy name",
            "type" : "string",
            "nullable" : true
          },
          "regurl" : {
            "default" : null,
            "description" : "Tool proxy registration URL",
            "type" : "string",
            "nullable" : true
          },
          "serviceoffered" : {
            "items" : {
              "default" : null,
              "description" : "Tool proxy services offered",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "regurl" ]
      },
      "mod_lti_create_tool_proxy_200_response" : {
        "properties" : {
          "capabilityoffered" : {
            "default" : null,
            "description" : "Tool proxy capabilities offered",
            "type" : "string",
            "nullable" : true
          },
          "guid" : {
            "default" : null,
            "description" : "Tool proxy globally unique identifier",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Tool proxy id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Tool proxy name",
            "type" : "string",
            "nullable" : true
          },
          "regurl" : {
            "description" : "Tool proxy registration URL",
            "type" : "string",
            "nullable" : true
          },
          "secret" : {
            "default" : null,
            "description" : "Tool proxy shared secret",
            "type" : "string",
            "nullable" : true
          },
          "serviceoffered" : {
            "default" : null,
            "description" : "Tool proxy services offered",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "Tool proxy state",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Tool proxy time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Tool proxy modified",
            "type" : "integer",
            "nullable" : true
          },
          "toolproxy" : {
            "default" : null,
            "description" : "Tool proxy",
            "type" : "string",
            "nullable" : true
          },
          "vendorcode" : {
            "default" : null,
            "description" : "Tool proxy consumer code",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "capabilityoffered", "guid", "id", "name", "regurl", "secret", "serviceoffered", "state", "timecreated", "timemodified", "toolproxy", "vendorcode" ]
      },
      "mod_lti_create_tool_type_request" : {
        "properties" : {
          "cartridgeurl" : {
            "default" : "",
            "description" : "URL to cardridge to load tool information",
            "type" : "string",
            "nullable" : true
          },
          "key" : {
            "default" : "",
            "description" : "Consumer key",
            "type" : "string",
            "nullable" : true
          },
          "secret" : {
            "default" : "",
            "description" : "Shared secret",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_lti_create_tool_type_200_response_state" : {
        "properties" : {
          "configured" : {
            "default" : null,
            "description" : "Is the state configured",
            "type" : "boolean",
            "nullable" : true
          },
          "pending" : {
            "default" : null,
            "description" : "Is the state pending",
            "type" : "boolean",
            "nullable" : true
          },
          "rejected" : {
            "default" : null,
            "description" : "Is the state rejected",
            "type" : "boolean",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "Tool type state name string",
            "type" : "string",
            "nullable" : true
          },
          "unknown" : {
            "default" : null,
            "description" : "Is the state unknown",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "configured", "pending", "rejected", "text", "unknown" ]
      },
      "mod_lti_create_tool_type_200_response_urls" : {
        "properties" : {
          "accesstoken" : {
            "default" : null,
            "description" : "Access Token URL",
            "type" : "string",
            "nullable" : true
          },
          "authrequest" : {
            "default" : null,
            "description" : "Authorisation Request URL",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "default" : null,
            "description" : "Tool type edit URL",
            "type" : "string",
            "nullable" : true
          },
          "edit" : {
            "description" : "Tool type edit URL",
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "default" : null,
            "description" : "Tool type icon URL",
            "type" : "string",
            "nullable" : true
          },
          "publickeyset" : {
            "default" : null,
            "description" : "Public Keyset URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "accesstoken", "authrequest", "edit", "icon", "publickeyset" ]
      },
      "mod_lti_create_tool_type_200_response" : {
        "properties" : {
          "capabilitygroups" : {
            "items" : {
              "default" : null,
              "description" : "Tool type capability groups enabled",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "clientid" : {
            "default" : null,
            "description" : "Client ID",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "default" : 0,
            "description" : "Tool type course",
            "type" : "integer",
            "nullable" : true
          },
          "deploymentid" : {
            "default" : null,
            "description" : "Deployment ID",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "default" : null,
            "description" : "Tool type description",
            "type" : "string",
            "nullable" : true
          },
          "hascapabilitygroups" : {
            "default" : null,
            "description" : "Indicate if capabilitygroups is populated",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Tool type id",
            "type" : "integer",
            "nullable" : true
          },
          "instancecount" : {
            "default" : null,
            "description" : "The number of times this tool is being used",
            "type" : "integer",
            "nullable" : true
          },
          "instanceids" : {
            "items" : {
              "default" : null,
              "description" : "LTI instance ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "name" : {
            "default" : null,
            "description" : "Tool type name",
            "type" : "string",
            "nullable" : true
          },
          "platformid" : {
            "default" : null,
            "description" : "Platform ID",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/mod_lti_create_tool_type_200_response_state"
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_lti_create_tool_type_200_response_urls"
          }
        },
        "required" : [ "clientid", "deploymentid", "description", "hascapabilitygroups", "id", "instancecount", "name", "platformid", "state", "urls" ]
      },
      "mod_lti_delete_course_tool_type_request" : {
        "properties" : {
          "tooltypeid" : {
            "default" : null,
            "description" : "Tool type ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "tooltypeid" ]
      },
      "mod_lti_delete_tool_proxy_request" : {
        "properties" : {
          "id" : {
            "description" : "Tool proxy id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "mod_lti_delete_tool_proxy_200_response" : {
        "properties" : {
          "capabilityoffered" : {
            "description" : "Tool proxy capabilities offered",
            "type" : "string",
            "nullable" : true
          },
          "guid" : {
            "description" : "Tool proxy globally unique identifier",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Tool proxy id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Tool proxy name",
            "type" : "string",
            "nullable" : true
          },
          "regurl" : {
            "description" : "Tool proxy registration URL",
            "type" : "string",
            "nullable" : true
          },
          "secret" : {
            "description" : "Tool proxy shared secret",
            "type" : "string",
            "nullable" : true
          },
          "serviceoffered" : {
            "description" : "Tool proxy services offered",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "description" : "Tool proxy state",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Tool proxy time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Tool proxy modified",
            "type" : "integer",
            "nullable" : true
          },
          "toolproxy" : {
            "description" : "Tool proxy",
            "type" : "string",
            "nullable" : true
          },
          "vendorcode" : {
            "description" : "Tool proxy consumer code",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "capabilityoffered", "guid", "id", "name", "regurl", "secret", "serviceoffered", "state", "timecreated", "timemodified", "toolproxy", "vendorcode" ]
      },
      "mod_lti_delete_tool_type_request" : {
        "properties" : {
          "id" : {
            "description" : "Tool type id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "mod_lti_get_ltis_by_courses_200_response_ltis_inner" : {
        "default" : null,
        "description" : "Tool",
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "debuglaunch" : {
            "default" : null,
            "description" : "Debug launch",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Enable grades",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "icon" : {
            "default" : null,
            "description" : "Alternative icon URL",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "instructorchoiceacceptgrades" : {
            "default" : null,
            "description" : "instructor choice accept grades",
            "type" : "integer",
            "nullable" : true
          },
          "instructorchoiceallowroster" : {
            "default" : null,
            "description" : "Instructor choice allow roster",
            "type" : "integer",
            "nullable" : true
          },
          "instructorchoiceallowsetting" : {
            "default" : null,
            "description" : "Instructor choice allow setting",
            "type" : "integer",
            "nullable" : true
          },
          "instructorchoicesendemailaddr" : {
            "default" : null,
            "description" : "instructor choice send mail address",
            "type" : "integer",
            "nullable" : true
          },
          "instructorchoicesendname" : {
            "default" : null,
            "description" : "Instructor choice send name",
            "type" : "string",
            "nullable" : true
          },
          "instructorcustomparameters" : {
            "default" : null,
            "description" : "instructor custom parameters",
            "type" : "string",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "launchcontainer" : {
            "default" : null,
            "description" : "Launch container mode",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "default" : null,
            "description" : "Shared secret",
            "type" : "string",
            "nullable" : true
          },
          "resourcekey" : {
            "default" : null,
            "description" : "Resource key",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "secureicon" : {
            "default" : null,
            "description" : "Secure icon URL",
            "type" : "string",
            "nullable" : true
          },
          "securetoolurl" : {
            "default" : null,
            "description" : "Secure tool url",
            "type" : "string",
            "nullable" : true
          },
          "servicesalt" : {
            "default" : null,
            "description" : "Service salt",
            "type" : "string",
            "nullable" : true
          },
          "showdescriptionlaunch" : {
            "default" : null,
            "description" : "Show description launch",
            "type" : "integer",
            "nullable" : true
          },
          "showtitlelaunch" : {
            "default" : null,
            "description" : "Show title launch",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time of creation",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time of last modification",
            "type" : "integer",
            "nullable" : true
          },
          "toolurl" : {
            "default" : null,
            "description" : "Tool url",
            "type" : "string",
            "nullable" : true
          },
          "typeid" : {
            "default" : null,
            "description" : "Type id",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lti_get_ltis_by_courses_200_response" : {
        "properties" : {
          "ltis" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lti_get_ltis_by_courses_200_response_ltis_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "ltis" ]
      },
      "mod_lti_get_tool_launch_data_request" : {
        "properties" : {
          "toolid" : {
            "default" : null,
            "description" : "external tool instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "toolid" ]
      },
      "mod_lti_get_tool_launch_data_200_response_parameters_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Parameter name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Parameter value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lti_get_tool_launch_data_200_response" : {
        "properties" : {
          "endpoint" : {
            "default" : null,
            "description" : "Endpoint URL",
            "type" : "string",
            "nullable" : true
          },
          "parameters" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lti_get_tool_launch_data_200_response_parameters_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "endpoint", "parameters" ]
      },
      "mod_lti_get_tool_proxies_request" : {
        "properties" : {
          "orphanedonly" : {
            "default" : 0,
            "description" : "Orphaned tool types only",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "mod_lti_get_tool_proxy_registration_request_200_response" : {
        "properties" : {
          "launch_presentation_return_url" : {
            "default" : null,
            "description" : "URL to redirect on registration completion",
            "type" : "string",
            "nullable" : true
          },
          "lti_message_type" : {
            "default" : null,
            "description" : "LTI message type",
            "type" : "string",
            "nullable" : true
          },
          "lti_version" : {
            "default" : null,
            "description" : "LTI version",
            "type" : "string",
            "nullable" : true
          },
          "reg_key" : {
            "default" : null,
            "description" : "Tool proxy registration key",
            "type" : "string",
            "nullable" : true
          },
          "reg_password" : {
            "default" : null,
            "description" : "Tool proxy registration password",
            "type" : "string",
            "nullable" : true
          },
          "reg_url" : {
            "default" : null,
            "description" : "Tool proxy registration url",
            "type" : "string",
            "nullable" : true
          },
          "tc_profile_url" : {
            "default" : null,
            "description" : "Tool consumers profile URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "launch_presentation_return_url", "lti_message_type", "lti_version", "reg_key", "reg_password", "reg_url", "tc_profile_url" ]
      },
      "mod_lti_get_tool_types_request" : {
        "properties" : {
          "toolproxyid" : {
            "default" : 0,
            "description" : "Tool proxy id",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "mod_lti_get_tool_types_and_proxies_request" : {
        "properties" : {
          "limit" : {
            "default" : 60,
            "description" : "How many tool types displayed per page",
            "type" : "integer",
            "nullable" : false
          },
          "offset" : {
            "default" : 0,
            "description" : "Current offset of tool elements",
            "type" : "integer",
            "nullable" : false
          },
          "orphanedonly" : {
            "default" : 0,
            "description" : "Orphaned tool types only",
            "type" : "boolean",
            "nullable" : true
          },
          "toolproxyid" : {
            "default" : 0,
            "description" : "Tool proxy id",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "mod_lti_get_tool_types_and_proxies_200_response_proxies_inner" : {
        "default" : null,
        "properties" : {
          "capabilityoffered" : {
            "description" : "Tool proxy capabilities offered",
            "type" : "string",
            "nullable" : true
          },
          "guid" : {
            "description" : "Tool proxy globally unique identifier",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Tool proxy id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Tool proxy name",
            "type" : "string",
            "nullable" : true
          },
          "regurl" : {
            "description" : "Tool proxy registration URL",
            "type" : "string",
            "nullable" : true
          },
          "secret" : {
            "description" : "Tool proxy shared secret",
            "type" : "string",
            "nullable" : true
          },
          "serviceoffered" : {
            "description" : "Tool proxy services offered",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "description" : "Tool proxy state",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Tool proxy time created",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Tool proxy modified",
            "type" : "integer",
            "nullable" : true
          },
          "toolproxy" : {
            "description" : "Tool proxy",
            "type" : "string",
            "nullable" : true
          },
          "vendorcode" : {
            "description" : "Tool proxy consumer code",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_lti_get_tool_types_and_proxies_200_response_types_inner_state" : {
        "properties" : {
          "configured" : {
            "description" : "Is the state configured",
            "type" : "boolean",
            "nullable" : true
          },
          "pending" : {
            "description" : "Is the state pending",
            "type" : "boolean",
            "nullable" : true
          },
          "rejected" : {
            "description" : "Is the state rejected",
            "type" : "boolean",
            "nullable" : true
          },
          "text" : {
            "description" : "Tool type state name string",
            "type" : "string",
            "nullable" : true
          },
          "unknown" : {
            "description" : "Is the state unknown",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "configured", "pending", "rejected", "text", "unknown" ]
      },
      "mod_lti_get_tool_types_and_proxies_200_response_types_inner_urls" : {
        "properties" : {
          "accesstoken" : {
            "description" : "Access Token URL",
            "type" : "string",
            "nullable" : true
          },
          "authrequest" : {
            "description" : "Authorisation Request URL",
            "type" : "string",
            "nullable" : true
          },
          "course" : {
            "description" : "Tool type edit URL",
            "type" : "string",
            "nullable" : true
          },
          "edit" : {
            "description" : "Tool type edit URL",
            "type" : "string",
            "nullable" : true
          },
          "icon" : {
            "description" : "Tool type icon URL",
            "type" : "string",
            "nullable" : true
          },
          "publickeyset" : {
            "description" : "Public Keyset URL",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "accesstoken", "authrequest", "edit", "icon", "publickeyset" ]
      },
      "mod_lti_get_tool_types_and_proxies_200_response_types_inner" : {
        "default" : null,
        "description" : "Tool",
        "properties" : {
          "capabilitygroups" : {
            "items" : {
              "description" : "Tool type capability groups enabled",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "clientid" : {
            "description" : "Client ID",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "default" : 0,
            "description" : "Tool type course",
            "type" : "integer",
            "nullable" : true
          },
          "deploymentid" : {
            "description" : "Deployment ID",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "Tool type description",
            "type" : "string",
            "nullable" : true
          },
          "hascapabilitygroups" : {
            "description" : "Indicate if capabilitygroups is populated",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "description" : "Tool type id",
            "type" : "integer",
            "nullable" : true
          },
          "instancecount" : {
            "description" : "The number of times this tool is being used",
            "type" : "integer",
            "nullable" : true
          },
          "instanceids" : {
            "items" : {
              "description" : "LTI instance ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Tool type name",
            "type" : "string",
            "nullable" : true
          },
          "platformid" : {
            "description" : "Platform ID",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_200_response_types_inner_state"
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_200_response_types_inner_urls"
          }
        },
        "nullable" : false
      },
      "mod_lti_get_tool_types_and_proxies_200_response" : {
        "properties" : {
          "limit" : {
            "default" : null,
            "description" : "Limit of how many tool types to show",
            "type" : "integer",
            "nullable" : true
          },
          "offset" : {
            "default" : null,
            "description" : "Offset of tool types",
            "type" : "integer",
            "nullable" : true
          },
          "proxies" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_200_response_proxies_inner"
            },
            "type" : "array"
          },
          "types" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_200_response_types_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "proxies", "types" ]
      },
      "mod_lti_get_tool_types_and_proxies_count_request" : {
        "properties" : {
          "orphanedonly" : {
            "default" : 0,
            "description" : "Orphaned tool types only",
            "type" : "boolean",
            "nullable" : true
          },
          "toolproxyid" : {
            "default" : 0,
            "description" : "Tool proxy id",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "mod_lti_get_tool_types_and_proxies_count_200_response" : {
        "properties" : {
          "count" : {
            "default" : null,
            "description" : "Total number of tool types and proxies",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "count" ]
      },
      "mod_lti_is_cartridge_request" : {
        "properties" : {
          "url" : {
            "description" : "Tool url",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "url" ]
      },
      "mod_lti_is_cartridge_200_response" : {
        "properties" : {
          "iscartridge" : {
            "default" : null,
            "description" : "True if the URL is a cartridge",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "iscartridge" ]
      },
      "mod_lti_toggle_showinactivitychooser_request" : {
        "properties" : {
          "courseid" : {
            "description" : "Course ID",
            "type" : "integer",
            "nullable" : true
          },
          "showinactivitychooser" : {
            "default" : null,
            "description" : "Show in activity chooser",
            "type" : "boolean",
            "nullable" : true
          },
          "tooltypeid" : {
            "description" : "Tool type ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "showinactivitychooser", "tooltypeid" ]
      },
      "mod_lti_update_tool_type_request" : {
        "properties" : {
          "description" : {
            "description" : "Tool type description",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "description" : "Tool type id",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Tool type name",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "Tool type state",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "mod_lti_update_tool_type_200_response" : {
        "properties" : {
          "capabilitygroups" : {
            "items" : {
              "description" : "Tool type capability groups enabled",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "clientid" : {
            "description" : "Client ID",
            "type" : "string",
            "nullable" : true
          },
          "courseid" : {
            "default" : 0,
            "description" : "Tool type course",
            "type" : "integer",
            "nullable" : true
          },
          "deploymentid" : {
            "description" : "Deployment ID",
            "type" : "integer",
            "nullable" : true
          },
          "description" : {
            "description" : "Tool type description",
            "type" : "string",
            "nullable" : true
          },
          "hascapabilitygroups" : {
            "description" : "Indicate if capabilitygroups is populated",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "description" : "Tool type id",
            "type" : "integer",
            "nullable" : true
          },
          "instancecount" : {
            "description" : "The number of times this tool is being used",
            "type" : "integer",
            "nullable" : true
          },
          "instanceids" : {
            "items" : {
              "description" : "LTI instance ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Tool type name",
            "type" : "string",
            "nullable" : true
          },
          "platformid" : {
            "description" : "Platform ID",
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_200_response_types_inner_state"
          },
          "urls" : {
            "$ref" : "#/components/schemas/mod_lti_get_tool_types_and_proxies_200_response_types_inner_urls"
          }
        },
        "required" : [ "clientid", "deploymentid", "description", "hascapabilitygroups", "id", "instancecount", "name", "platformid", "state", "urls" ]
      },
      "mod_lti_view_lti_request" : {
        "properties" : {
          "ltiid" : {
            "default" : null,
            "description" : "lti instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "ltiid" ]
      },
      "mod_page_get_pages_by_courses_200_response_pages_inner" : {
        "default" : null,
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "Page content",
            "type" : "string",
            "nullable" : true
          },
          "contentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "contentformat" : {
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "default" : null,
            "description" : "How to display the page",
            "type" : "integer",
            "nullable" : true
          },
          "displayoptions" : {
            "default" : null,
            "description" : "Display options (width, height)",
            "type" : "string",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "legacyfiles" : {
            "default" : null,
            "description" : "Legacy files flag",
            "type" : "integer",
            "nullable" : true
          },
          "legacyfileslast" : {
            "default" : null,
            "description" : "Legacy files last control flag",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "revision" : {
            "description" : "Incremented when after each file changes, to avoid cache",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time the page was modified",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_page_get_pages_by_courses_200_response" : {
        "properties" : {
          "pages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_page_get_pages_by_courses_200_response_pages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "pages" ]
      },
      "mod_page_view_page_request" : {
        "properties" : {
          "pageid" : {
            "default" : null,
            "description" : "page instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pageid" ]
      },
      "mod_quiz_add_random_questions_request" : {
        "properties" : {
          "addonpage" : {
            "default" : null,
            "description" : "The page where random questions will be added to",
            "type" : "integer",
            "nullable" : true
          },
          "cmid" : {
            "default" : null,
            "description" : "The cmid of the quiz",
            "type" : "integer",
            "nullable" : true
          },
          "filtercondition" : {
            "default" : "",
            "description" : "(Optional) The filter condition used when adding random questions from an existing category.\n                    Not required if adding random questions from a new category.",
            "type" : "string",
            "nullable" : true
          },
          "newcategory" : {
            "default" : "",
            "description" : "(Optional) The name of a new question category to create and use for the random questions.",
            "type" : "string",
            "nullable" : true
          },
          "parentcategory" : {
            "default" : 0,
            "description" : "(Optional) The parent of the new question category, if creating one.",
            "type" : "string",
            "nullable" : true
          },
          "randomcount" : {
            "default" : null,
            "description" : "Number of random questions",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "addonpage", "cmid", "randomcount" ]
      },
      "mod_quiz_add_random_questions_200_response" : {
        "properties" : {
          "message" : {
            "default" : null,
            "description" : "Message",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_quiz_get_attempt_access_information_request" : {
        "properties" : {
          "attemptid" : {
            "default" : 0,
            "description" : "attempt id, 0 for the user last attempt if exists",
            "type" : "integer",
            "nullable" : true
          },
          "quizid" : {
            "default" : null,
            "description" : "quiz instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "quizid" ]
      },
      "mod_quiz_get_attempt_access_information_200_response" : {
        "properties" : {
          "endtime" : {
            "default" : null,
            "description" : "When the attempt must be submitted (determined by rules).",
            "type" : "integer",
            "nullable" : true
          },
          "isfinished" : {
            "default" : null,
            "description" : "Whether there is no way the user will ever be allowed to attempt.",
            "type" : "boolean",
            "nullable" : true
          },
          "ispreflightcheckrequired" : {
            "default" : null,
            "description" : "whether a check is required before the user\n                                                                    starts/continues his attempt.",
            "type" : "boolean",
            "nullable" : true
          },
          "preventnewattemptreasons" : {
            "items" : {
              "default" : null,
              "description" : "access restriction description",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "isfinished", "preventnewattemptreasons" ]
      },
      "mod_quiz_get_attempt_data_request_preflightdata_inner" : {
        "properties" : {
          "name" : {
            "description" : "data name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "data value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_attempt_data_request" : {
        "properties" : {
          "attemptid" : {
            "default" : null,
            "description" : "attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : null,
            "description" : "page number",
            "type" : "integer",
            "nullable" : true
          },
          "preflightdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attemptid", "page" ]
      },
      "mod_quiz_get_attempt_data_200_response_attempt" : {
        "properties" : {
          "attempt" : {
            "default" : null,
            "description" : "Sequentially numbers this students attempts at this quiz.",
            "type" : "integer",
            "nullable" : true
          },
          "currentpage" : {
            "default" : null,
            "description" : "Attempt current page.",
            "type" : "integer",
            "nullable" : true
          },
          "gradednotificationsenttime" : {
            "default" : null,
            "description" : "Time when the student was notified that manual grading of their attempt was complete.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Attempt id.",
            "type" : "integer",
            "nullable" : true
          },
          "layout" : {
            "default" : null,
            "description" : "Attempt layout.",
            "type" : "string",
            "nullable" : true
          },
          "preview" : {
            "default" : null,
            "description" : "Whether is a preview attempt or not.",
            "type" : "integer",
            "nullable" : true
          },
          "quiz" : {
            "default" : null,
            "description" : "Foreign key reference to the quiz that was attempted.",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "The current state of the attempts. 'inprogress',\n                                                'overdue', 'finished' or 'abandoned'.",
            "type" : "string",
            "nullable" : true
          },
          "sumgrades" : {
            "default" : null,
            "description" : "Total marks for this attempt.",
            "type" : "number",
            "nullable" : true
          },
          "timecheckstate" : {
            "default" : null,
            "description" : "Next time quiz cron should check attempt for\n                                                        state changes.  NULL means never check.",
            "type" : "integer",
            "nullable" : true
          },
          "timefinish" : {
            "default" : null,
            "description" : "Time when the attempt was submitted.\n                                                    0 if the attempt has not been submitted yet.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last modified time.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodifiedoffline" : {
            "description" : "Last modified time via webservices.",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "default" : null,
            "description" : "Time when the attempt was started.",
            "type" : "integer",
            "nullable" : true
          },
          "uniqueid" : {
            "default" : null,
            "description" : "Foreign key reference to the question_usage that holds the\n                                                    details of the the question_attempts that make up this quiz\n                                                    attempt.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "Foreign key reference to the user whose attempt this is.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "mod_quiz_get_attempt_data_200_response_questions_inner_responsefileareas_inner" : {
        "default" : null,
        "properties" : {
          "area" : {
            "default" : null,
            "description" : "File area name",
            "type" : "string",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_attempt_data_200_response_questions_inner" : {
        "default" : null,
        "description" : "The question data. Some fields may not be returned depending on the quiz display settings.",
        "properties" : {
          "blockedbyprevious" : {
            "default" : null,
            "description" : "whether the question is blocked by the previous question",
            "type" : "boolean",
            "nullable" : true
          },
          "flagged" : {
            "default" : null,
            "description" : "whether the question is flagged or not",
            "type" : "boolean",
            "nullable" : true
          },
          "hasautosavedstep" : {
            "default" : null,
            "description" : "whether this question attempt has autosaved data",
            "type" : "boolean",
            "nullable" : true
          },
          "html" : {
            "default" : null,
            "description" : "the question rendered",
            "type" : "string",
            "nullable" : true
          },
          "lastactiontime" : {
            "default" : null,
            "description" : "the timestamp of the most recent step in this question attempt",
            "type" : "integer",
            "nullable" : true
          },
          "mark" : {
            "default" : null,
            "description" : "the mark awarded.\n                    It will be returned only if the user is allowed to see it.",
            "type" : "string",
            "nullable" : true
          },
          "maxmark" : {
            "default" : null,
            "description" : "the maximum mark possible for this question attempt.\n                    It will be returned only if the user is allowed to see it.",
            "type" : "number",
            "nullable" : true
          },
          "number" : {
            "default" : null,
            "description" : "DO NOT USE. Use questionnumber. Only retained for backwards compatibility.",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : null,
            "description" : "page of the quiz this question appears on",
            "type" : "integer",
            "nullable" : true
          },
          "questionnumber" : {
            "default" : null,
            "description" : "The question number to display for this question, e.g. \"7\", \"i\" or \"Custom-B)\".",
            "type" : "string",
            "nullable" : true
          },
          "responsefileareas" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_200_response_questions_inner_responsefileareas_inner"
            },
            "type" : "array"
          },
          "sequencecheck" : {
            "default" : null,
            "description" : "the number of real steps in this attempt",
            "type" : "integer",
            "nullable" : true
          },
          "settings" : {
            "default" : null,
            "description" : "Question settings (JSON encoded).",
            "type" : "string",
            "nullable" : true
          },
          "slot" : {
            "default" : null,
            "description" : "slot number",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "default" : null,
            "description" : "the state where the question is in.\n                    It will not be returned if the user cannot see it due to the quiz display correctness settings.",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "current formatted state of the question",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "question type, i.e: multichoice",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_attempt_data_200_response" : {
        "properties" : {
          "attempt" : {
            "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_200_response_attempt"
          },
          "messages" : {
            "items" : {
              "default" : null,
              "description" : "access message",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "nextpage" : {
            "default" : null,
            "description" : "next page number",
            "type" : "integer",
            "nullable" : true
          },
          "questions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_200_response_questions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attempt", "messages", "nextpage", "questions" ]
      },
      "mod_quiz_get_attempt_review_request" : {
        "properties" : {
          "attemptid" : {
            "description" : "attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : -1,
            "description" : "page number, empty for all the questions in all the pages",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attemptid" ]
      },
      "mod_quiz_get_attempt_review_200_response_additionaldata_inner" : {
        "default" : null,
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "data content",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "id of the data",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "data title",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_attempt_review_200_response_attempt" : {
        "properties" : {
          "attempt" : {
            "description" : "Sequentially numbers this students attempts at this quiz.",
            "type" : "integer",
            "nullable" : true
          },
          "currentpage" : {
            "description" : "Attempt current page.",
            "type" : "integer",
            "nullable" : true
          },
          "gradednotificationsenttime" : {
            "description" : "Time when the student was notified that manual grading of their attempt was complete.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Attempt id.",
            "type" : "integer",
            "nullable" : true
          },
          "layout" : {
            "description" : "Attempt layout.",
            "type" : "string",
            "nullable" : true
          },
          "preview" : {
            "description" : "Whether is a preview attempt or not.",
            "type" : "integer",
            "nullable" : true
          },
          "quiz" : {
            "description" : "Foreign key reference to the quiz that was attempted.",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "description" : "The current state of the attempts. 'inprogress',\n                                                'overdue', 'finished' or 'abandoned'.",
            "type" : "string",
            "nullable" : true
          },
          "sumgrades" : {
            "description" : "Total marks for this attempt.",
            "type" : "number",
            "nullable" : true
          },
          "timecheckstate" : {
            "description" : "Next time quiz cron should check attempt for\n                                                        state changes.  NULL means never check.",
            "type" : "integer",
            "nullable" : true
          },
          "timefinish" : {
            "description" : "Time when the attempt was submitted.\n                                                    0 if the attempt has not been submitted yet.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Last modified time.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodifiedoffline" : {
            "description" : "Last modified time via webservices.",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "description" : "Time when the attempt was started.",
            "type" : "integer",
            "nullable" : true
          },
          "uniqueid" : {
            "description" : "Foreign key reference to the question_usage that holds the\n                                                    details of the the question_attempts that make up this quiz\n                                                    attempt.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "Foreign key reference to the user whose attempt this is.",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "mod_quiz_get_attempt_review_200_response_questions_inner_responsefileareas_inner" : {
        "default" : null,
        "properties" : {
          "area" : {
            "description" : "File area name",
            "type" : "string",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_attempt_review_200_response_questions_inner" : {
        "default" : null,
        "description" : "The question data. Some fields may not be returned depending on the quiz display settings.",
        "properties" : {
          "blockedbyprevious" : {
            "description" : "whether the question is blocked by the previous question",
            "type" : "boolean",
            "nullable" : true
          },
          "flagged" : {
            "description" : "whether the question is flagged or not",
            "type" : "boolean",
            "nullable" : true
          },
          "hasautosavedstep" : {
            "description" : "whether this question attempt has autosaved data",
            "type" : "boolean",
            "nullable" : true
          },
          "html" : {
            "description" : "the question rendered",
            "type" : "string",
            "nullable" : true
          },
          "lastactiontime" : {
            "description" : "the timestamp of the most recent step in this question attempt",
            "type" : "integer",
            "nullable" : true
          },
          "mark" : {
            "description" : "the mark awarded.\n                    It will be returned only if the user is allowed to see it.",
            "type" : "string",
            "nullable" : true
          },
          "maxmark" : {
            "description" : "the maximum mark possible for this question attempt.\n                    It will be returned only if the user is allowed to see it.",
            "type" : "number",
            "nullable" : true
          },
          "number" : {
            "description" : "DO NOT USE. Use questionnumber. Only retained for backwards compatibility.",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "description" : "page of the quiz this question appears on",
            "type" : "integer",
            "nullable" : true
          },
          "questionnumber" : {
            "description" : "The question number to display for this question, e.g. \"7\", \"i\" or \"Custom-B)\".",
            "type" : "string",
            "nullable" : true
          },
          "responsefileareas" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_200_response_questions_inner_responsefileareas_inner"
            },
            "type" : "array"
          },
          "sequencecheck" : {
            "description" : "the number of real steps in this attempt",
            "type" : "integer",
            "nullable" : true
          },
          "settings" : {
            "description" : "Question settings (JSON encoded).",
            "type" : "string",
            "nullable" : true
          },
          "slot" : {
            "description" : "slot number",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "description" : "the state where the question is in.\n                    It will not be returned if the user cannot see it due to the quiz display correctness settings.",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "description" : "current formatted state of the question",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "description" : "question type, i.e: multichoice",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_attempt_review_200_response" : {
        "properties" : {
          "additionaldata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_200_response_additionaldata_inner"
            },
            "type" : "array"
          },
          "attempt" : {
            "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_200_response_attempt"
          },
          "grade" : {
            "default" : null,
            "description" : "grade for the quiz (or empty or \"notyetgraded\")",
            "type" : "string",
            "nullable" : true
          },
          "questions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_200_response_questions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "additionaldata", "attempt", "grade", "questions" ]
      },
      "mod_quiz_get_attempt_summary_request" : {
        "properties" : {
          "attemptid" : {
            "description" : "attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "preflightdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attemptid" ]
      },
      "mod_quiz_get_attempt_summary_200_response" : {
        "properties" : {
          "questions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_200_response_questions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "questions" ]
      },
      "mod_quiz_get_combined_review_options_request" : {
        "properties" : {
          "quizid" : {
            "description" : "quiz instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "user id (empty for current user)",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "quizid" ]
      },
      "mod_quiz_get_combined_review_options_200_response_alloptions_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "option name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "option value",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_combined_review_options_200_response_someoptions_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "option name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "option value",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_combined_review_options_200_response" : {
        "properties" : {
          "alloptions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_combined_review_options_200_response_alloptions_inner"
            },
            "type" : "array"
          },
          "someoptions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_combined_review_options_200_response_someoptions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "alloptions", "someoptions" ]
      },
      "mod_quiz_get_quiz_access_information_request" : {
        "properties" : {
          "quizid" : {
            "description" : "quiz instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "quizid" ]
      },
      "mod_quiz_get_quiz_access_information_200_response" : {
        "properties" : {
          "accessrules" : {
            "items" : {
              "default" : null,
              "description" : "rule description",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "activerulenames" : {
            "items" : {
              "default" : null,
              "description" : "rule plugin names",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "canattempt" : {
            "default" : null,
            "description" : "Whether the user can do the quiz or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanage" : {
            "default" : null,
            "description" : "Whether the user can edit the quiz settings or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canpreview" : {
            "default" : null,
            "description" : "Whether the user can preview the quiz or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canreviewmyattempts" : {
            "default" : null,
            "description" : "Whether the users can review their previous attempts\n                                                                or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewreports" : {
            "default" : null,
            "description" : "Whether the user can view the quiz reports or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "preventaccessreasons" : {
            "items" : {
              "description" : "access restriction description",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "accessrules", "activerulenames", "canattempt", "canmanage", "canpreview", "canreviewmyattempts", "canviewreports", "preventaccessreasons" ]
      },
      "mod_quiz_get_quiz_feedback_for_grade_request" : {
        "properties" : {
          "grade" : {
            "default" : null,
            "description" : "the grade to check",
            "type" : "number",
            "nullable" : true
          },
          "quizid" : {
            "description" : "quiz instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "grade", "quizid" ]
      },
      "mod_quiz_get_quiz_feedback_for_grade_200_response" : {
        "properties" : {
          "feedbackinlinefiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "feedbacktext" : {
            "default" : null,
            "description" : "the comment that corresponds to this grade (empty for none)",
            "type" : "string",
            "nullable" : true
          },
          "feedbacktextformat" : {
            "default" : null,
            "description" : "feedbacktext format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "feedbacktext" ]
      },
      "mod_quiz_get_quiz_required_qtypes_200_response" : {
        "properties" : {
          "questiontypes" : {
            "items" : {
              "default" : null,
              "description" : "question type",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "questiontypes" ]
      },
      "mod_quiz_get_quizzes_by_courses_200_response_quizzes_inner" : {
        "default" : null,
        "properties" : {
          "allowofflineattempts" : {
            "default" : null,
            "description" : "Whether to allow the quiz to be attempted\n                                                                            offline in the mobile app",
            "type" : "integer",
            "nullable" : true
          },
          "attemptonlast" : {
            "default" : null,
            "description" : "Whether subsequent attempts start from the answer\n                                                                    to the previous attempt (1) or start blank (0).",
            "type" : "integer",
            "nullable" : true
          },
          "attempts" : {
            "default" : null,
            "description" : "The maximum number of attempts a student is allowed.",
            "type" : "integer",
            "nullable" : true
          },
          "autosaveperiod" : {
            "default" : null,
            "description" : "Auto-save delay",
            "type" : "integer",
            "nullable" : true
          },
          "browsersecurity" : {
            "default" : null,
            "description" : "Restriciton on the browser the student must\n                                                                    use. E.g. 'securewindow'.",
            "type" : "string",
            "nullable" : true
          },
          "canredoquestions" : {
            "default" : null,
            "description" : "Allows students to redo any completed question\n                                                                        within a quiz attempt.",
            "type" : "integer",
            "nullable" : true
          },
          "completionattemptsexhausted" : {
            "default" : null,
            "description" : "Mark quiz complete when the student has\n                                                                                exhausted the maximum number of attempts",
            "type" : "integer",
            "nullable" : true
          },
          "completionpass" : {
            "default" : null,
            "description" : "Whether to require passing grade",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "decimalpoints" : {
            "default" : null,
            "description" : "Number of decimal points to use when displaying\n                                                                    grades.",
            "type" : "integer",
            "nullable" : true
          },
          "delay1" : {
            "default" : null,
            "description" : "Delay that must be left between the first and second attempt,\n                                                            in seconds.",
            "type" : "integer",
            "nullable" : true
          },
          "delay2" : {
            "default" : null,
            "description" : "Delay that must be left between the second and subsequent\n                                                            attempt, in seconds.",
            "type" : "integer",
            "nullable" : true
          },
          "graceperiod" : {
            "default" : null,
            "description" : "The amount of time (in seconds) after the time limit\n                                                                runs out during which attempts can still be submitted,\n                                                                if overduehandling is set to allow it.",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "The total that the quiz overall grade is scaled to be\n                                                            out of.",
            "type" : "number",
            "nullable" : true
          },
          "grademethod" : {
            "default" : null,
            "description" : "One of the values QUIZ_GRADEHIGHEST, QUIZ_GRADEAVERAGE,\n                                                                    QUIZ_ATTEMPTFIRST or QUIZ_ATTEMPTLAST.",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "hasfeedback" : {
            "default" : null,
            "description" : "Whether the quiz has any non-blank feedback text",
            "type" : "integer",
            "nullable" : true
          },
          "hasquestions" : {
            "default" : null,
            "description" : "Whether the quiz has questions",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "navmethod" : {
            "default" : null,
            "description" : "Any constraints on how the user is allowed to navigate\n                                                                around the quiz. Currently recognised values are\n                                                                'free' and 'seq'.",
            "type" : "string",
            "nullable" : true
          },
          "overduehandling" : {
            "default" : null,
            "description" : "The method used to handle overdue attempts.\n                                                                    'autosubmit', 'graceperiod' or 'autoabandon'.",
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "default" : null,
            "description" : "A password that the student must enter before starting or\n                                                                continuing a quiz attempt.",
            "type" : "string",
            "nullable" : true
          },
          "preferredbehaviour" : {
            "default" : null,
            "description" : "The behaviour to ask questions to use.",
            "type" : "string",
            "nullable" : true
          },
          "questiondecimalpoints" : {
            "default" : null,
            "description" : "Number of decimal points to use when\n                                                                            displaying question grades.\n                                                                            (-1 means use decimalpoints.)",
            "type" : "integer",
            "nullable" : true
          },
          "questionsperpage" : {
            "default" : null,
            "description" : "How often to insert a page break when editing\n                                                                        the quiz, or when shuffling the question order.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewattempt" : {
            "default" : null,
            "description" : "Whether users are allowed to review their quiz\n                                                                    attempts at various times. This is a bit field, decoded by the\n                                                                    \\mod_quiz\\question\\display_options class. It is formed by ORing\n                                                                    together the constants defined there.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewcorrectness" : {
            "default" : null,
            "description" : "Whether users are allowed to review their quiz\n                                                       attempts at various times.A bit field, like reviewattempt.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewgeneralfeedback" : {
            "default" : null,
            "description" : "Whether users are allowed to review their\n                                                                            quiz attempts at various times. A bit field, like\n                                                                            reviewattempt.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewmarks" : {
            "default" : null,
            "description" : "Whether users are allowed to review their quiz attempts\n                                                                at various times. A bit field, like reviewattempt.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewmaxmarks" : {
            "default" : null,
            "description" : "Whether users are allowed to review their quiz\n                                                  attempts at various times. A bit field, like reviewattempt.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewoverallfeedback" : {
            "default" : null,
            "description" : "Whether users are allowed to review their quiz\n                                                                            attempts at various times. A bit field, like\n                                                                            reviewattempt.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewrightanswer" : {
            "default" : null,
            "description" : "Whether users are allowed to review their quiz\n                                                                        attempts at various times. A bit field, like\n                                                                        reviewattempt.",
            "type" : "integer",
            "nullable" : true
          },
          "reviewspecificfeedback" : {
            "description" : "Whether users are allowed to review their\n                                                                            quiz attempts at various times. A bit field, like\n                                                                            reviewattempt.",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "showblocks" : {
            "default" : null,
            "description" : "Whether blocks should be shown on the attempt.php and\n                                                                review.php pages.",
            "type" : "integer",
            "nullable" : true
          },
          "showuserpicture" : {
            "default" : null,
            "description" : "Option to show the user's picture during the\n                                                                    attempt and on the review page.",
            "type" : "integer",
            "nullable" : true
          },
          "shuffleanswers" : {
            "default" : null,
            "description" : "Whether the parts of the question should be shuffled,\n                                                                    in those question types that support it.",
            "type" : "integer",
            "nullable" : true
          },
          "subnet" : {
            "default" : null,
            "description" : "Used to restrict the IP addresses from which this quiz can\n                                                            be attempted. The format is as requried by the address_in_subnet\n                                                            function.",
            "type" : "string",
            "nullable" : true
          },
          "sumgrades" : {
            "default" : null,
            "description" : "The total of all the question instance maxmarks.",
            "type" : "number",
            "nullable" : true
          },
          "timeclose" : {
            "default" : null,
            "description" : "The time when this quiz closes. (0 = no restriction.)",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "The time when the quiz was added to the course.",
            "type" : "integer",
            "nullable" : true
          },
          "timelimit" : {
            "default" : null,
            "description" : "The time limit for quiz attempts, in seconds.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Last modified time.",
            "type" : "integer",
            "nullable" : true
          },
          "timeopen" : {
            "default" : null,
            "description" : "The time when this quiz opens. (0 = no restriction.)",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_quizzes_by_courses_200_response" : {
        "properties" : {
          "quizzes" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_quizzes_by_courses_200_response_quizzes_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "quizzes" ]
      },
      "mod_quiz_get_reopen_attempt_confirmation_request" : {
        "properties" : {
          "attemptid" : {
            "default" : null,
            "description" : "The id of the attempt to reopen",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attemptid" ]
      },
      "mod_quiz_get_user_attempts_request" : {
        "properties" : {
          "includepreviews" : {
            "default" : false,
            "description" : "whether to include previews or not",
            "type" : "boolean",
            "nullable" : true
          },
          "quizid" : {
            "description" : "quiz instance id",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : "finished",
            "description" : "quiz status: all, finished or unfinished",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "user id, empty for current user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "quizid" ]
      },
      "mod_quiz_get_user_attempts_200_response_attempts_inner" : {
        "default" : null,
        "properties" : {
          "attempt" : {
            "description" : "Sequentially numbers this students attempts at this quiz.",
            "type" : "integer",
            "nullable" : true
          },
          "currentpage" : {
            "description" : "Attempt current page.",
            "type" : "integer",
            "nullable" : true
          },
          "gradednotificationsenttime" : {
            "description" : "Time when the student was notified that manual grading of their attempt was complete.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Attempt id.",
            "type" : "integer",
            "nullable" : true
          },
          "layout" : {
            "description" : "Attempt layout.",
            "type" : "string",
            "nullable" : true
          },
          "preview" : {
            "description" : "Whether is a preview attempt or not.",
            "type" : "integer",
            "nullable" : true
          },
          "quiz" : {
            "description" : "Foreign key reference to the quiz that was attempted.",
            "type" : "integer",
            "nullable" : true
          },
          "state" : {
            "description" : "The current state of the attempts. 'inprogress',\n                                                'overdue', 'finished' or 'abandoned'.",
            "type" : "string",
            "nullable" : true
          },
          "sumgrades" : {
            "description" : "Total marks for this attempt.",
            "type" : "number",
            "nullable" : true
          },
          "timecheckstate" : {
            "description" : "Next time quiz cron should check attempt for\n                                                        state changes.  NULL means never check.",
            "type" : "integer",
            "nullable" : true
          },
          "timefinish" : {
            "description" : "Time when the attempt was submitted.\n                                                    0 if the attempt has not been submitted yet.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Last modified time.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodifiedoffline" : {
            "description" : "Last modified time via webservices.",
            "type" : "integer",
            "nullable" : true
          },
          "timestart" : {
            "description" : "Time when the attempt was started.",
            "type" : "integer",
            "nullable" : true
          },
          "uniqueid" : {
            "description" : "Foreign key reference to the question_usage that holds the\n                                                    details of the the question_attempts that make up this quiz\n                                                    attempt.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "Foreign key reference to the user whose attempt this is.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_quiz_get_user_attempts_200_response" : {
        "properties" : {
          "attempts" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_user_attempts_200_response_attempts_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attempts" ]
      },
      "mod_quiz_get_user_best_grade_request" : {
        "properties" : {
          "quizid" : {
            "description" : "quiz instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "quizid" ]
      },
      "mod_quiz_get_user_best_grade_200_response" : {
        "properties" : {
          "grade" : {
            "default" : null,
            "description" : "The grade (only if the user has a grade).",
            "type" : "number",
            "nullable" : true
          },
          "gradetopass" : {
            "default" : null,
            "description" : "The grade to pass the quiz (only if set).",
            "type" : "number",
            "nullable" : true
          },
          "hasgrade" : {
            "default" : null,
            "description" : "Whether the user has a grade on the given quiz.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "hasgrade" ]
      },
      "mod_quiz_process_attempt_request" : {
        "properties" : {
          "attemptid" : {
            "description" : "attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          },
          "finishattempt" : {
            "default" : false,
            "description" : "whether to finish or not the attempt",
            "type" : "boolean",
            "nullable" : true
          },
          "preflightdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          },
          "timeup" : {
            "default" : false,
            "description" : "whether the WS was called by a timer when the time is up",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "attemptid" ]
      },
      "mod_quiz_process_attempt_200_response" : {
        "properties" : {
          "state" : {
            "default" : null,
            "description" : "state: the new attempt state:\n                                                                    inprogress, finished, overdue, abandoned",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "state" ]
      },
      "mod_quiz_reopen_attempt_request" : {
        "properties" : {
          "attemptid" : {
            "description" : "The id of the attempt to reopen",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attemptid" ]
      },
      "mod_quiz_save_attempt_request" : {
        "properties" : {
          "attemptid" : {
            "description" : "attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          },
          "preflightdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attemptid", "data" ]
      },
      "mod_quiz_set_question_version_request" : {
        "properties" : {
          "newversion" : {
            "type" : "integer",
            "nullable" : true
          },
          "slotid" : {
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "newversion", "slotid" ]
      },
      "mod_quiz_set_question_version_200_response" : {
        "properties" : {
          "result" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "result" ]
      },
      "mod_quiz_start_attempt_request" : {
        "properties" : {
          "forcenew" : {
            "default" : false,
            "description" : "Whether to force a new attempt or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "preflightdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          },
          "quizid" : {
            "description" : "quiz instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "quizid" ]
      },
      "mod_quiz_start_attempt_200_response" : {
        "properties" : {
          "attempt" : {
            "$ref" : "#/components/schemas/mod_quiz_get_attempt_review_200_response_attempt"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attempt" ]
      },
      "mod_quiz_update_filter_condition_request" : {
        "properties" : {
          "cmid" : {
            "description" : "The cmid of the quiz",
            "type" : "integer",
            "nullable" : true
          },
          "filtercondition" : {
            "default" : null,
            "description" : "Filter condition",
            "type" : "string",
            "nullable" : true
          },
          "slotid" : {
            "default" : null,
            "description" : "The quiz slot ID for the random question.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cmid", "filtercondition", "slotid" ]
      },
      "mod_quiz_view_attempt_request" : {
        "properties" : {
          "attemptid" : {
            "description" : "attempt id",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "description" : "page number",
            "type" : "integer",
            "nullable" : true
          },
          "preflightdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_quiz_get_attempt_data_request_preflightdata_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attemptid", "page" ]
      },
      "mod_quiz_view_attempt_review_request" : {
        "properties" : {
          "attemptid" : {
            "description" : "attempt id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attemptid" ]
      },
      "mod_resource_get_resources_by_courses_200_response_resources_inner" : {
        "default" : null,
        "properties" : {
          "contentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "default" : null,
            "description" : "How to display the resource",
            "type" : "integer",
            "nullable" : true
          },
          "displayoptions" : {
            "description" : "Display options (width, height)",
            "type" : "string",
            "nullable" : true
          },
          "filterfiles" : {
            "default" : null,
            "description" : "If filters should be applied to the resource content",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "legacyfiles" : {
            "description" : "Legacy files flag",
            "type" : "integer",
            "nullable" : true
          },
          "legacyfileslast" : {
            "description" : "Legacy files last control flag",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "revision" : {
            "description" : "Incremented when after each file changes, to avoid cache",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time the resource was modified",
            "type" : "integer",
            "nullable" : true
          },
          "tobemigrated" : {
            "default" : null,
            "description" : "Whether this resource was migrated",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_resource_get_resources_by_courses_200_response" : {
        "properties" : {
          "resources" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_resource_get_resources_by_courses_200_response_resources_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "resources" ]
      },
      "mod_resource_view_resource_request" : {
        "properties" : {
          "resourceid" : {
            "default" : null,
            "description" : "resource instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "resourceid" ]
      },
      "mod_scorm_get_scorm_access_information_request" : {
        "properties" : {
          "scormid" : {
            "default" : null,
            "description" : "scorm instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "scormid" ]
      },
      "mod_scorm_get_scorm_access_information_200_response" : {
        "properties" : {
          "canaddinstance" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/scorm:addinstance allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "candeleteownresponses" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/scorm:deleteownresponses allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "candeleteresponses" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/scorm:deleteresponses allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cansavetrack" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/scorm:savetrack allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canskipview" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/scorm:skipview allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewreport" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/scorm:viewreport allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewscores" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/scorm:viewscores allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_scorm_get_scorm_attempt_count_request" : {
        "properties" : {
          "ignoremissingcompletion" : {
            "default" : false,
            "description" : "Ignores attempts that haven't reported a grade/completion",
            "type" : "boolean",
            "nullable" : true
          },
          "scormid" : {
            "default" : null,
            "description" : "SCORM instance id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "User id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "scormid", "userid" ]
      },
      "mod_scorm_get_scorm_attempt_count_200_response" : {
        "properties" : {
          "attemptscount" : {
            "default" : null,
            "description" : "Attempts count",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attemptscount" ]
      },
      "mod_scorm_get_scorm_sco_tracks_request" : {
        "properties" : {
          "attempt" : {
            "default" : 0,
            "description" : "attempt number (0 for last attempt)",
            "type" : "integer",
            "nullable" : true
          },
          "scoid" : {
            "default" : null,
            "description" : "sco id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "scoid", "userid" ]
      },
      "mod_scorm_get_scorm_sco_tracks_200_response_data_tracks_inner" : {
        "default" : null,
        "description" : "Tracks data",
        "properties" : {
          "element" : {
            "default" : null,
            "description" : "Element name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Element value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_scorm_get_scorm_sco_tracks_200_response_data" : {
        "properties" : {
          "attempt" : {
            "description" : "Attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "tracks" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorm_sco_tracks_200_response_data_tracks_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attempt", "tracks" ]
      },
      "mod_scorm_get_scorm_sco_tracks_200_response" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/mod_scorm_get_scorm_sco_tracks_200_response_data"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ]
      },
      "mod_scorm_get_scorm_scoes_request" : {
        "properties" : {
          "organization" : {
            "default" : "",
            "description" : "organization id",
            "type" : "string",
            "nullable" : true
          },
          "scormid" : {
            "default" : null,
            "description" : "scorm instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "scormid" ]
      },
      "mod_scorm_get_scorm_scoes_200_response_scoes_inner_extradata_inner" : {
        "default" : null,
        "properties" : {
          "element" : {
            "default" : null,
            "description" : "element name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "element value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_scorm_get_scorm_scoes_200_response_scoes_inner" : {
        "default" : null,
        "description" : "SCORM SCO data",
        "properties" : {
          "extradata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorm_scoes_200_response_scoes_inner_extradata_inner"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "sco id",
            "type" : "integer",
            "nullable" : true
          },
          "identifier" : {
            "default" : null,
            "description" : "identifier",
            "type" : "string",
            "nullable" : true
          },
          "launch" : {
            "default" : null,
            "description" : "launch file",
            "type" : "string",
            "nullable" : true
          },
          "manifest" : {
            "default" : null,
            "description" : "manifest id",
            "type" : "string",
            "nullable" : true
          },
          "organization" : {
            "default" : null,
            "description" : "organization id",
            "type" : "string",
            "nullable" : true
          },
          "parent" : {
            "default" : null,
            "description" : "parent",
            "type" : "string",
            "nullable" : true
          },
          "scorm" : {
            "default" : null,
            "description" : "scorm id",
            "type" : "integer",
            "nullable" : true
          },
          "scormtype" : {
            "default" : null,
            "description" : "scorm type (asset, sco)",
            "type" : "string",
            "nullable" : true
          },
          "sortorder" : {
            "default" : null,
            "description" : "sort order",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "sco title",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_scorm_get_scorm_scoes_200_response" : {
        "properties" : {
          "scoes" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorm_scoes_200_response_scoes_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "scoes" ]
      },
      "mod_scorm_get_scorm_user_data_request" : {
        "properties" : {
          "attempt" : {
            "description" : "attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "scormid" : {
            "description" : "scorm instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "attempt", "scormid" ]
      },
      "mod_scorm_get_scorm_user_data_200_response_data_inner_defaultdata_inner" : {
        "properties" : {
          "element" : {
            "description" : "element name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "element value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_scorm_get_scorm_user_data_200_response_data_inner" : {
        "default" : null,
        "description" : "SCO data",
        "properties" : {
          "defaultdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorm_user_data_200_response_data_inner_defaultdata_inner"
            },
            "type" : "array"
          },
          "scoid" : {
            "description" : "sco id",
            "type" : "integer",
            "nullable" : true
          },
          "userdata" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorm_user_data_200_response_data_inner_defaultdata_inner"
            },
            "type" : "array"
          }
        },
        "nullable" : false
      },
      "mod_scorm_get_scorm_user_data_200_response" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorm_user_data_200_response_data_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ]
      },
      "mod_scorm_get_scorms_by_courses_200_response_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Options name",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Option value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_scorm_get_scorms_by_courses_200_response_scorms_inner" : {
        "default" : null,
        "description" : "SCORM",
        "properties" : {
          "auto" : {
            "default" : null,
            "description" : "Auto continue?",
            "type" : "boolean",
            "nullable" : true
          },
          "autocommit" : {
            "default" : null,
            "description" : "Save track data automatically?",
            "type" : "boolean",
            "nullable" : true
          },
          "completionscorerequired" : {
            "default" : null,
            "description" : "Minimum score required",
            "type" : "integer",
            "nullable" : true
          },
          "completionstatusallscos" : {
            "default" : null,
            "description" : "Require all scos to return completion status",
            "type" : "integer",
            "nullable" : true
          },
          "completionstatusrequired" : {
            "default" : null,
            "description" : "Status passed/completed required?",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "displayattemptstatus" : {
            "default" : null,
            "description" : "How to display attempt status",
            "type" : "integer",
            "nullable" : true
          },
          "displaycoursestructure" : {
            "default" : null,
            "description" : "Display contents structure",
            "type" : "boolean",
            "nullable" : true
          },
          "forcecompleted" : {
            "default" : null,
            "description" : "Status current attempt is forced to \"completed\"",
            "type" : "boolean",
            "nullable" : true
          },
          "forcenewattempt" : {
            "default" : null,
            "description" : "Controls re-entry behaviour",
            "type" : "integer",
            "nullable" : true
          },
          "grademethod" : {
            "default" : null,
            "description" : "Grade method",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "height" : {
            "default" : null,
            "description" : "Frame height",
            "type" : "integer",
            "nullable" : true
          },
          "hidebrowse" : {
            "default" : null,
            "description" : "Disable preview mode?",
            "type" : "boolean",
            "nullable" : true
          },
          "hidetoc" : {
            "default" : null,
            "description" : "How to display the SCORM structure in player",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "lastattemptlock" : {
            "default" : null,
            "description" : "Prevents to launch new attempts once finished",
            "type" : "boolean",
            "nullable" : true
          },
          "launch" : {
            "default" : null,
            "description" : "First content to launch",
            "type" : "integer",
            "nullable" : true
          },
          "maxattempt" : {
            "default" : null,
            "description" : "Maximum number of attemtps",
            "type" : "integer",
            "nullable" : true
          },
          "maxgrade" : {
            "default" : null,
            "description" : "Max grade",
            "type" : "integer",
            "nullable" : true
          },
          "md5hash" : {
            "default" : null,
            "description" : "MD5 Hash of package file",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "nav" : {
            "default" : null,
            "description" : "Show navigation buttons",
            "type" : "integer",
            "nullable" : true
          },
          "navpositionleft" : {
            "default" : null,
            "description" : "Navigation position left",
            "type" : "integer",
            "nullable" : true
          },
          "navpositiontop" : {
            "default" : null,
            "description" : "Navigation position top",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "description" : "Additional options",
            "type" : "string",
            "nullable" : true
          },
          "packagesize" : {
            "default" : null,
            "description" : "SCORM zip package size",
            "type" : "integer",
            "nullable" : true
          },
          "packageurl" : {
            "default" : null,
            "description" : "SCORM zip package URL",
            "type" : "string",
            "nullable" : true
          },
          "popup" : {
            "default" : null,
            "description" : "Display in current or new window",
            "type" : "integer",
            "nullable" : true
          },
          "protectpackagedownloads" : {
            "default" : null,
            "description" : "Protect package downloads?",
            "type" : "boolean",
            "nullable" : true
          },
          "reference" : {
            "default" : null,
            "description" : "Reference to the package",
            "type" : "string",
            "nullable" : true
          },
          "revision" : {
            "default" : null,
            "description" : "Revison number",
            "type" : "integer",
            "nullable" : true
          },
          "scormtype" : {
            "default" : null,
            "description" : "SCORM type",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "sha1hash" : {
            "default" : null,
            "description" : "Package content or ext path hash",
            "type" : "string",
            "nullable" : true
          },
          "skipview" : {
            "default" : null,
            "description" : "How to skip the content structure page",
            "type" : "integer",
            "nullable" : true
          },
          "timeclose" : {
            "default" : null,
            "description" : "Available to",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time of last modification",
            "type" : "integer",
            "nullable" : true
          },
          "timeopen" : {
            "default" : null,
            "description" : "Available from",
            "type" : "integer",
            "nullable" : true
          },
          "updatefreq" : {
            "default" : null,
            "description" : "Auto-update frequency for remote packages",
            "type" : "integer",
            "nullable" : true
          },
          "version" : {
            "default" : null,
            "description" : "SCORM version (SCORM_12, SCORM_13, SCORM_AICC)",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          },
          "whatgrade" : {
            "default" : null,
            "description" : "What grade",
            "type" : "integer",
            "nullable" : true
          },
          "width" : {
            "default" : null,
            "description" : "Frame width",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_scorm_get_scorms_by_courses_200_response" : {
        "properties" : {
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorms_by_courses_200_response_options_inner"
            },
            "type" : "array"
          },
          "scorms" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorms_by_courses_200_response_scorms_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "scorms" ]
      },
      "mod_scorm_insert_scorm_tracks_request" : {
        "properties" : {
          "attempt" : {
            "description" : "attempt number",
            "type" : "integer",
            "nullable" : true
          },
          "scoid" : {
            "default" : null,
            "description" : "SCO id",
            "type" : "integer",
            "nullable" : true
          },
          "tracks" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_scorm_get_scorm_user_data_200_response_data_inner_defaultdata_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "attempt", "scoid", "tracks" ]
      },
      "mod_scorm_insert_scorm_tracks_200_response" : {
        "properties" : {
          "trackids" : {
            "items" : {
              "default" : null,
              "description" : "track id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "trackids" ]
      },
      "mod_scorm_launch_sco_request" : {
        "properties" : {
          "scoid" : {
            "default" : 0,
            "description" : "SCO id (empty for launching the first SCO)",
            "type" : "integer",
            "nullable" : true
          },
          "scormid" : {
            "description" : "SCORM instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "scormid" ]
      },
      "mod_scorm_view_scorm_request" : {
        "properties" : {
          "scormid" : {
            "description" : "scorm instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "scormid" ]
      },
      "mod_survey_get_questions_request" : {
        "properties" : {
          "surveyid" : {
            "default" : null,
            "description" : "survey instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "surveyid" ]
      },
      "mod_survey_get_questions_200_response_questions_inner" : {
        "default" : null,
        "description" : "Questions",
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Question id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "default" : null,
            "description" : "The question intro",
            "type" : "string",
            "nullable" : true
          },
          "multi" : {
            "default" : null,
            "description" : "Subquestions ids",
            "type" : "string",
            "nullable" : true
          },
          "options" : {
            "default" : null,
            "description" : "Question options",
            "type" : "string",
            "nullable" : true
          },
          "parent" : {
            "default" : null,
            "description" : "Parent question (for subquestions)",
            "type" : "integer",
            "nullable" : true
          },
          "shorttext" : {
            "default" : null,
            "description" : "Question short text",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "Question text",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Question type",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_survey_get_questions_200_response" : {
        "properties" : {
          "questions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_survey_get_questions_200_response_questions_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "questions" ]
      },
      "mod_survey_get_surveys_by_courses_200_response_surveys_inner" : {
        "default" : null,
        "description" : "Surveys",
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "days" : {
            "default" : null,
            "description" : "Days",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "questions" : {
            "default" : null,
            "description" : "Question ids",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "surveydone" : {
            "default" : null,
            "description" : "Did I finish the survey?",
            "type" : "integer",
            "nullable" : true
          },
          "template" : {
            "default" : null,
            "description" : "Survey type",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time of creation",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time of last modification",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_survey_get_surveys_by_courses_200_response" : {
        "properties" : {
          "surveys" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_survey_get_surveys_by_courses_200_response_surveys_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "surveys" ]
      },
      "mod_survey_submit_answers_request_answers_inner" : {
        "default" : null,
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "Answer key",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Answer value",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_survey_submit_answers_request" : {
        "properties" : {
          "answers" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_survey_submit_answers_request_answers_inner"
            },
            "type" : "array"
          },
          "surveyid" : {
            "default" : null,
            "description" : "Survey id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "answers", "surveyid" ]
      },
      "mod_survey_view_survey_request" : {
        "properties" : {
          "surveyid" : {
            "description" : "survey instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "surveyid" ]
      },
      "mod_url_get_urls_by_courses_200_response_urls_inner" : {
        "default" : null,
        "properties" : {
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "display" : {
            "default" : null,
            "description" : "How to display the url",
            "type" : "integer",
            "nullable" : true
          },
          "displayoptions" : {
            "description" : "Display options (width, height)",
            "type" : "string",
            "nullable" : true
          },
          "externalurl" : {
            "default" : null,
            "description" : "External URL",
            "type" : "string",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "parameters" : {
            "default" : null,
            "description" : "Parameters to append to the URL",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Last time the url was modified",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_url_get_urls_by_courses_200_response" : {
        "properties" : {
          "urls" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_url_get_urls_by_courses_200_response_urls_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "urls" ]
      },
      "mod_url_view_url_request" : {
        "properties" : {
          "urlid" : {
            "default" : null,
            "description" : "url instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "urlid" ]
      },
      "mod_wiki_edit_page_request" : {
        "properties" : {
          "content" : {
            "description" : "Page contents.",
            "type" : "string",
            "nullable" : true
          },
          "pageid" : {
            "default" : null,
            "description" : "Page ID.",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "default" : null,
            "description" : "Section page title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "content", "pageid" ]
      },
      "mod_wiki_edit_page_200_response" : {
        "properties" : {
          "pageid" : {
            "default" : null,
            "description" : "Edited page id.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "pageid" ]
      },
      "mod_wiki_get_page_contents_request" : {
        "properties" : {
          "pageid" : {
            "description" : "Page ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pageid" ]
      },
      "mod_wiki_get_page_contents_200_response_page" : {
        "properties" : {
          "cachedcontent" : {
            "description" : "Page contents.",
            "type" : "string",
            "nullable" : true
          },
          "caneditpage" : {
            "default" : null,
            "description" : "True if user can edit the page.",
            "type" : "boolean",
            "nullable" : true
          },
          "contentformat" : {
            "default" : null,
            "description" : "cachedcontent format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "Page's group ID.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Page ID.",
            "type" : "integer",
            "nullable" : true
          },
          "subwikiid" : {
            "default" : null,
            "description" : "Page's subwiki ID.",
            "type" : "integer",
            "nullable" : true
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "title" : {
            "description" : "Page title.",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "Page's user ID.",
            "type" : "integer",
            "nullable" : true
          },
          "version" : {
            "default" : null,
            "description" : "Latest version of the page.",
            "type" : "integer",
            "nullable" : true
          },
          "wikiid" : {
            "default" : null,
            "description" : "Page's wiki ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "cachedcontent", "caneditpage", "groupid", "id", "subwikiid", "title", "userid", "wikiid" ]
      },
      "mod_wiki_get_page_contents_200_response" : {
        "properties" : {
          "page" : {
            "$ref" : "#/components/schemas/mod_wiki_get_page_contents_200_response_page"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "page" ]
      },
      "mod_wiki_get_page_for_editing_request" : {
        "properties" : {
          "lockonly" : {
            "default" : false,
            "description" : "Just renew lock and not return content.",
            "type" : "boolean",
            "nullable" : true
          },
          "pageid" : {
            "default" : null,
            "description" : "Page ID to edit.",
            "type" : "integer",
            "nullable" : true
          },
          "section" : {
            "description" : "Section page title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "pageid" ]
      },
      "mod_wiki_get_page_for_editing_200_response_pagesection" : {
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "The contents of the page-section to be edited.",
            "type" : "string",
            "nullable" : true
          },
          "contentformat" : {
            "default" : null,
            "description" : "Format of the original content of the page.",
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "description" : "Latest version of the page.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "version" ]
      },
      "mod_wiki_get_page_for_editing_200_response" : {
        "properties" : {
          "pagesection" : {
            "$ref" : "#/components/schemas/mod_wiki_get_page_for_editing_200_response_pagesection"
          }
        },
        "required" : [ "pagesection" ]
      },
      "mod_wiki_get_subwiki_files_request" : {
        "properties" : {
          "groupid" : {
            "default" : -1,
            "description" : "Subwiki's group ID, -1 means current group. It will be ignored if the wiki doesn't use groups.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "Subwiki's user ID, 0 means current user. It will be ignored in collaborative wikis.",
            "type" : "integer",
            "nullable" : true
          },
          "wikiid" : {
            "default" : null,
            "description" : "Wiki instance ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "wikiid" ]
      },
      "mod_wiki_get_subwiki_pages_request_options" : {
        "properties" : {
          "includecontent" : {
            "default" : 1,
            "description" : "Include each page contents or just the contents size.",
            "type" : "integer",
            "nullable" : true
          },
          "sortby" : {
            "default" : "title",
            "description" : "Field to sort by (id, title, ...).",
            "type" : "string",
            "nullable" : true
          },
          "sortdirection" : {
            "default" : "ASC",
            "description" : "Sort direction: ASC or DESC.",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "mod_wiki_get_subwiki_pages_request" : {
        "properties" : {
          "groupid" : {
            "default" : -1,
            "description" : "Subwiki's group ID, -1 means current group. It will be ignored if the wiki doesn't use groups.",
            "type" : "integer",
            "nullable" : true
          },
          "options" : {
            "$ref" : "#/components/schemas/mod_wiki_get_subwiki_pages_request_options"
          },
          "userid" : {
            "default" : 0,
            "description" : "Subwiki's user ID, 0 means current user. It will be ignored in collaborative wikis.",
            "type" : "integer",
            "nullable" : true
          },
          "wikiid" : {
            "description" : "Wiki instance ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "wikiid" ]
      },
      "mod_wiki_get_subwiki_pages_200_response_pages_inner" : {
        "default" : null,
        "description" : "Pages",
        "properties" : {
          "cachedcontent" : {
            "description" : "Page contents.",
            "type" : "string",
            "nullable" : true
          },
          "caneditpage" : {
            "description" : "True if user can edit the page.",
            "type" : "boolean",
            "nullable" : true
          },
          "contentformat" : {
            "description" : "cachedcontent format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "contentsize" : {
            "default" : null,
            "description" : "Size of page contents in bytes (doesn't include size of attached files).",
            "type" : "integer",
            "nullable" : true
          },
          "firstpage" : {
            "default" : null,
            "description" : "True if it's the first page.",
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "description" : "Page ID.",
            "type" : "integer",
            "nullable" : true
          },
          "pageviews" : {
            "default" : null,
            "description" : "Number of times the page has been viewed.",
            "type" : "integer",
            "nullable" : true
          },
          "readonly" : {
            "default" : null,
            "description" : "1 if readonly, 0 otherwise.",
            "type" : "integer",
            "nullable" : true
          },
          "subwikiid" : {
            "description" : "Page's subwiki ID.",
            "type" : "integer",
            "nullable" : true
          },
          "tags" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_data_get_entries_200_response_entries_inner_tags_inner"
            },
            "type" : "array"
          },
          "timecreated" : {
            "default" : null,
            "description" : "Time of creation.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Time of last modification.",
            "type" : "integer",
            "nullable" : true
          },
          "timerendered" : {
            "default" : null,
            "description" : "Time of last renderization.",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "description" : "Page title.",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "ID of the user that last modified the page.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_wiki_get_subwiki_pages_200_response" : {
        "properties" : {
          "pages" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_wiki_get_subwiki_pages_200_response_pages_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "pages" ]
      },
      "mod_wiki_get_subwikis_request" : {
        "properties" : {
          "wikiid" : {
            "description" : "Wiki instance ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "wikiid" ]
      },
      "mod_wiki_get_subwikis_200_response_subwikis_inner" : {
        "default" : null,
        "description" : "Subwikis",
        "properties" : {
          "canedit" : {
            "default" : null,
            "description" : "True if user can edit the subwiki.",
            "type" : "boolean",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "Group ID.",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Subwiki ID.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "User ID.",
            "type" : "integer",
            "nullable" : true
          },
          "wikiid" : {
            "default" : null,
            "description" : "Wiki ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_wiki_get_subwikis_200_response" : {
        "properties" : {
          "subwikis" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_wiki_get_subwikis_200_response_subwikis_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "subwikis" ]
      },
      "mod_wiki_get_wikis_by_courses_request" : {
        "properties" : {
          "courseids" : {
            "items" : {
              "description" : "Course ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "mod_wiki_get_wikis_by_courses_200_response_wikis_inner" : {
        "default" : null,
        "description" : "Wikis",
        "properties" : {
          "cancreatepages" : {
            "default" : null,
            "description" : "True if user can create pages.",
            "type" : "boolean",
            "nullable" : true
          },
          "course" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "coursemodule" : {
            "description" : "Course module id",
            "type" : "integer",
            "nullable" : true
          },
          "defaultformat" : {
            "default" : null,
            "description" : "Wiki's default format (html, creole, nwiki).",
            "type" : "string",
            "nullable" : true
          },
          "editbegin" : {
            "default" : null,
            "description" : "Edit begin.",
            "type" : "integer",
            "nullable" : true
          },
          "editend" : {
            "default" : null,
            "description" : "Edit end.",
            "type" : "integer",
            "nullable" : true
          },
          "firstpagetitle" : {
            "default" : null,
            "description" : "First page title.",
            "type" : "string",
            "nullable" : true
          },
          "forceformat" : {
            "default" : null,
            "description" : "1 if format is forced, 0 otherwise.",
            "type" : "integer",
            "nullable" : true
          },
          "groupingid" : {
            "description" : "Group id",
            "type" : "integer",
            "nullable" : true
          },
          "groupmode" : {
            "description" : "Group mode",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "Activity instance id",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "description" : "Activity introduction",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "Activity name",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "description" : "Course section id",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Time of creation.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Time of last modification.",
            "type" : "integer",
            "nullable" : true
          },
          "visible" : {
            "description" : "Visible",
            "type" : "boolean",
            "nullable" : true
          },
          "wikimode" : {
            "default" : null,
            "description" : "Wiki mode (individual, collaborative).",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_wiki_get_wikis_by_courses_200_response" : {
        "properties" : {
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          },
          "wikis" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_wiki_get_wikis_by_courses_200_response_wikis_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "wikis" ]
      },
      "mod_wiki_new_page_request" : {
        "properties" : {
          "content" : {
            "description" : "Page contents.",
            "type" : "string",
            "nullable" : true
          },
          "contentformat" : {
            "default" : null,
            "description" : "Page contents format. If an invalid format is provided, default\n                    wiki format is used.",
            "type" : "string",
            "nullable" : true
          },
          "groupid" : {
            "default" : null,
            "description" : "Subwiki's group ID. Used if subwiki does not exists.",
            "type" : "integer",
            "nullable" : true
          },
          "subwikiid" : {
            "description" : "Page's subwiki ID.",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "New page title.",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "Subwiki's user ID. Used if subwiki does not exists.",
            "type" : "integer",
            "nullable" : true
          },
          "wikiid" : {
            "default" : null,
            "description" : "Page's wiki ID. Used if subwiki does not exists.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "content", "title" ]
      },
      "mod_wiki_new_page_200_response" : {
        "properties" : {
          "pageid" : {
            "default" : null,
            "description" : "New page id.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "pageid" ]
      },
      "mod_wiki_view_page_request" : {
        "properties" : {
          "pageid" : {
            "default" : null,
            "description" : "Wiki page ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pageid" ]
      },
      "mod_wiki_view_page_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "Status: true if success.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_wiki_view_wiki_200_response" : {
        "properties" : {
          "status" : {
            "description" : "Status: true if success.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_workshop_add_submission_request" : {
        "properties" : {
          "attachmentsid" : {
            "default" : 0,
            "description" : "The draft file area id for attachments",
            "type" : "integer",
            "nullable" : true
          },
          "content" : {
            "default" : "",
            "description" : "Submission text content",
            "type" : "string",
            "nullable" : true
          },
          "contentformat" : {
            "default" : "0",
            "description" : "The format used for the content",
            "type" : "integer",
            "nullable" : true
          },
          "inlineattachmentsid" : {
            "default" : 0,
            "description" : "The draft file area id for inline attachments in the content",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Submission title",
            "type" : "string",
            "nullable" : true
          },
          "workshopid" : {
            "default" : null,
            "description" : "Workshop id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "title", "workshopid" ]
      },
      "mod_workshop_add_submission_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the submission was created false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "submissionid" : {
            "default" : null,
            "description" : "New workshop submission id.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_workshop_delete_submission_request" : {
        "properties" : {
          "submissionid" : {
            "default" : null,
            "description" : "Submission id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "submissionid" ]
      },
      "mod_workshop_delete_submission_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the submission was deleted.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_workshop_evaluate_assessment_request" : {
        "properties" : {
          "assessmentid" : {
            "default" : null,
            "description" : "Assessment id.",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackformat" : {
            "default" : "0",
            "description" : "The feedback format for text.",
            "type" : "integer",
            "nullable" : true
          },
          "feedbacktext" : {
            "default" : "",
            "description" : "The feedback for the reviewer.",
            "type" : "string",
            "nullable" : true
          },
          "gradinggradeover" : {
            "default" : "",
            "description" : "The new grading grade.",
            "type" : "string",
            "nullable" : true
          },
          "weight" : {
            "default" : 1,
            "description" : "The new weight for the assessment.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assessmentid" ]
      },
      "mod_workshop_evaluate_assessment_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "status: true if the assessment was evaluated, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_workshop_evaluate_submission_request" : {
        "properties" : {
          "feedbackformat" : {
            "default" : "0",
            "description" : "The feedback format for text.",
            "type" : "integer",
            "nullable" : true
          },
          "feedbacktext" : {
            "default" : "",
            "description" : "The feedback for the author.",
            "type" : "string",
            "nullable" : true
          },
          "gradeover" : {
            "default" : "",
            "description" : "The new submission grade.",
            "type" : "string",
            "nullable" : true
          },
          "published" : {
            "default" : false,
            "description" : "Publish the submission for others?.",
            "type" : "boolean",
            "nullable" : true
          },
          "submissionid" : {
            "default" : null,
            "description" : "submission id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "submissionid" ]
      },
      "mod_workshop_evaluate_submission_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "status: true if the submission was evaluated, false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_workshop_get_assessment_request" : {
        "properties" : {
          "assessmentid" : {
            "default" : null,
            "description" : "Assessment id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "assessmentid" ]
      },
      "mod_workshop_get_assessment_200_response_assessment" : {
        "properties" : {
          "feedbackattachmentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "feedbackauthor" : {
            "default" : null,
            "description" : "The comment/feedback from the reviewer for the author.",
            "type" : "string",
            "nullable" : true
          },
          "feedbackauthorattachment" : {
            "default" : 0,
            "description" : "Are there some files attached to the feedbackauthor field?\n                    Sets to 1 by file_postupdate_standard_filemanager().",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackauthorformat" : {
            "default" : "0",
            "description" : "feedbackauthor format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackcontentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "feedbackreviewer" : {
            "default" : null,
            "description" : "The comment/feedback from the teacher for the reviewer.\n                    For example the reason why the grade for assessment was overridden",
            "type" : "string",
            "nullable" : true
          },
          "feedbackreviewerformat" : {
            "default" : "0",
            "description" : "feedbackreviewer format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "The aggregated grade for submission suggested by the reviewer.\n                    The grade 0..100 is computed from the values assigned to the assessment dimensions fields. If NULL then it has not been aggregated yet.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggrade" : {
            "default" : null,
            "description" : "The computed grade 0..100 for this assessment. If NULL then it has not been computed yet.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggradeover" : {
            "default" : null,
            "description" : "Grade for the assessment manually overridden by a teacher.\n                    Grade is always from interval 0..100. If NULL then the grade is not overriden.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggradeoverby" : {
            "default" : null,
            "description" : "The id of the user who has overridden the grade for submission.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The primary key of the record.",
            "type" : "integer",
            "nullable" : false
          },
          "reviewerid" : {
            "default" : null,
            "description" : "The id of the reviewer who makes this assessment",
            "type" : "integer",
            "nullable" : false
          },
          "submissionid" : {
            "default" : null,
            "description" : "The id of the assessed submission",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "If 0 then the assessment was allocated but the reviewer has not assessed yet.\n                    If greater than 0 then the timestamp of when the reviewer assessed for the first time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : 0,
            "description" : "If 0 then the assessment was allocated but the reviewer has not assessed yet.\n                    If greater than 0 then the timestamp of when the reviewer assessed for the last time",
            "type" : "integer",
            "nullable" : true
          },
          "weight" : {
            "default" : 1,
            "description" : "The weight of the assessment for the purposes of aggregation",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "feedbackattachmentfiles", "feedbackauthor", "feedbackauthorattachment", "feedbackcontentfiles", "grade", "gradinggrade", "gradinggradeover", "gradinggradeoverby", "id", "reviewerid", "submissionid", "timecreated", "timemodified", "weight" ]
      },
      "mod_workshop_get_assessment_200_response" : {
        "properties" : {
          "assessment" : {
            "$ref" : "#/components/schemas/mod_workshop_get_assessment_200_response_assessment"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assessment" ]
      },
      "mod_workshop_get_assessment_form_definition_request" : {
        "properties" : {
          "assessmentid" : {
            "description" : "Assessment id",
            "type" : "integer",
            "nullable" : true
          },
          "mode" : {
            "default" : "assessment",
            "description" : "The form mode (assessment or preview)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "assessmentid" ]
      },
      "mod_workshop_get_assessment_form_definition_200_response_current_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Field name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Current field value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_assessment_form_definition_200_response_dimensionsinfo_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "Dimension id.",
            "type" : "integer",
            "nullable" : true
          },
          "max" : {
            "default" : null,
            "description" : "Maximum grade for the dimension.",
            "type" : "number",
            "nullable" : true
          },
          "min" : {
            "default" : null,
            "description" : "Minimum grade for the dimension.",
            "type" : "number",
            "nullable" : true
          },
          "scale" : {
            "default" : null,
            "description" : "Scale items (if used).",
            "type" : "string",
            "nullable" : true
          },
          "weight" : {
            "default" : null,
            "description" : "The weight of the dimension.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_assessment_form_definition_200_response_fields_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "Field name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Field default value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_assessment_form_definition_200_response_options_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Option name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Option value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_assessment_form_definition_200_response" : {
        "properties" : {
          "current" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_assessment_form_definition_200_response_current_inner"
            },
            "type" : "array"
          },
          "descriptionfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "dimensionsinfo" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_assessment_form_definition_200_response_dimensionsinfo_inner"
            },
            "type" : "array"
          },
          "dimenssionscount" : {
            "default" : null,
            "description" : "The number of dimenssions used by the form.",
            "type" : "integer",
            "nullable" : true
          },
          "fields" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_assessment_form_definition_200_response_fields_inner"
            },
            "type" : "array"
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_assessment_form_definition_200_response_options_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "current", "descriptionfiles", "dimensionsinfo", "dimenssionscount", "fields", "options" ]
      },
      "mod_workshop_get_grades_request" : {
        "properties" : {
          "userid" : {
            "default" : 0,
            "description" : "User id (empty or 0 for current user).",
            "type" : "integer",
            "nullable" : true
          },
          "workshopid" : {
            "default" : null,
            "description" : "Workshop instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "workshopid" ]
      },
      "mod_workshop_get_grades_200_response" : {
        "properties" : {
          "assessmentgradehidden" : {
            "default" : null,
            "description" : "Whether the grade is hidden or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "assessmentlongstrgrade" : {
            "default" : null,
            "description" : "The assessment string grade.",
            "type" : "string",
            "nullable" : true
          },
          "assessmentrawgrade" : {
            "default" : null,
            "description" : "The assessment raw (numeric) grade.",
            "type" : "number",
            "nullable" : true
          },
          "submissiongradehidden" : {
            "description" : "Whether the grade is hidden or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "submissionlongstrgrade" : {
            "default" : null,
            "description" : "The submission string grade.",
            "type" : "string",
            "nullable" : true
          },
          "submissionrawgrade" : {
            "default" : null,
            "description" : "The submission raw (numeric) grade.",
            "type" : "number",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        }
      },
      "mod_workshop_get_grades_report_request" : {
        "properties" : {
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group.",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "The page of records to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "The number of records to return per page.",
            "type" : "integer",
            "nullable" : true
          },
          "sortby" : {
            "default" : "lastname",
            "description" : "sort by this element: lastname, firstname, submissiontitle,\n                    submissionmodified, submissiongrade, gradinggrade.",
            "type" : "string",
            "nullable" : true
          },
          "sortdirection" : {
            "default" : "ASC",
            "description" : "sort direction: ASC or DESC",
            "type" : "string",
            "nullable" : true
          },
          "workshopid" : {
            "description" : "Workshop instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "workshopid" ]
      },
      "mod_workshop_get_grades_report_200_response_report_grades_inner_reviewedby_inner" : {
        "default" : null,
        "properties" : {
          "assessmentid" : {
            "default" : null,
            "description" : "The id of the assessment.",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "The grade for submission.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggrade" : {
            "default" : null,
            "description" : "The grade for assessment.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggradeover" : {
            "default" : null,
            "description" : "The aggregated grade overrided.",
            "type" : "number",
            "nullable" : true
          },
          "submissionid" : {
            "default" : null,
            "description" : "The id of the submission assessed.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user (0 when is configured to do not display names).",
            "type" : "integer",
            "nullable" : true
          },
          "weight" : {
            "default" : null,
            "description" : "The weight of the assessment for aggregation.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_grades_report_200_response_report_grades_inner_reviewerof_inner" : {
        "properties" : {
          "assessmentid" : {
            "description" : "The id of the assessment.",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "The grade for submission.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggrade" : {
            "description" : "The grade for assessment.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggradeover" : {
            "description" : "The aggregated grade overrided.",
            "type" : "number",
            "nullable" : true
          },
          "submissionid" : {
            "description" : "The id of the submission assessed.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The id of the user (0 when is configured to do not display names).",
            "type" : "integer",
            "nullable" : true
          },
          "weight" : {
            "description" : "The weight of the assessment for aggregation.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_grades_report_200_response_report_grades_inner" : {
        "default" : null,
        "properties" : {
          "gradinggrade" : {
            "default" : null,
            "description" : "Computed grade for the assessment.",
            "type" : "number",
            "nullable" : true
          },
          "reviewedby" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_grades_report_200_response_report_grades_inner_reviewedby_inner"
            },
            "type" : "array"
          },
          "reviewerof" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_grades_report_200_response_report_grades_inner_reviewerof_inner"
            },
            "type" : "array"
          },
          "submissiongrade" : {
            "default" : null,
            "description" : "Aggregated grade for the submission.",
            "type" : "number",
            "nullable" : true
          },
          "submissiongradeover" : {
            "default" : null,
            "description" : "Grade for the assessment overrided\n                                        by the teacher.",
            "type" : "number",
            "nullable" : true
          },
          "submissiongradeoverby" : {
            "default" : null,
            "description" : "The id of the user who overrided\n                                        the grade.",
            "type" : "integer",
            "nullable" : true
          },
          "submissionid" : {
            "default" : null,
            "description" : "Submission id.",
            "type" : "integer",
            "nullable" : true
          },
          "submissionmodified" : {
            "default" : null,
            "description" : "Timestamp submission was updated.",
            "type" : "integer",
            "nullable" : true
          },
          "submissionpublished" : {
            "default" : null,
            "description" : "Whether is a submission published.",
            "type" : "integer",
            "nullable" : true
          },
          "submissiontitle" : {
            "default" : null,
            "description" : "Submission title.",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The id of the user being displayed in the report.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_grades_report_200_response_report" : {
        "properties" : {
          "grades" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_grades_report_200_response_report_grades_inner"
            },
            "type" : "array"
          },
          "totalcount" : {
            "default" : null,
            "description" : "Number of total submissions.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "grades", "totalcount" ]
      },
      "mod_workshop_get_grades_report_200_response" : {
        "properties" : {
          "report" : {
            "$ref" : "#/components/schemas/mod_workshop_get_grades_report_200_response_report"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "report" ]
      },
      "mod_workshop_get_reviewer_assessments_request" : {
        "properties" : {
          "userid" : {
            "default" : 0,
            "description" : "User id who did the assessment review (empty or 0 for current user).",
            "type" : "integer",
            "nullable" : true
          },
          "workshopid" : {
            "description" : "Workshop instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "workshopid" ]
      },
      "mod_workshop_get_reviewer_assessments_200_response_assessments_inner" : {
        "default" : null,
        "properties" : {
          "feedbackattachmentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "feedbackauthor" : {
            "description" : "The comment/feedback from the reviewer for the author.",
            "type" : "string",
            "nullable" : true
          },
          "feedbackauthorattachment" : {
            "default" : 0,
            "description" : "Are there some files attached to the feedbackauthor field?\n                    Sets to 1 by file_postupdate_standard_filemanager().",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackauthorformat" : {
            "default" : "0",
            "description" : "feedbackauthor format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "feedbackcontentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "feedbackreviewer" : {
            "description" : "The comment/feedback from the teacher for the reviewer.\n                    For example the reason why the grade for assessment was overridden",
            "type" : "string",
            "nullable" : true
          },
          "feedbackreviewerformat" : {
            "default" : "0",
            "description" : "feedbackreviewer format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "The aggregated grade for submission suggested by the reviewer.\n                    The grade 0..100 is computed from the values assigned to the assessment dimensions fields. If NULL then it has not been aggregated yet.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggrade" : {
            "description" : "The computed grade 0..100 for this assessment. If NULL then it has not been computed yet.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggradeover" : {
            "description" : "Grade for the assessment manually overridden by a teacher.\n                    Grade is always from interval 0..100. If NULL then the grade is not overriden.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggradeoverby" : {
            "description" : "The id of the user who has overridden the grade for submission.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The primary key of the record.",
            "type" : "integer",
            "nullable" : false
          },
          "reviewerid" : {
            "description" : "The id of the reviewer who makes this assessment",
            "type" : "integer",
            "nullable" : false
          },
          "submissionid" : {
            "description" : "The id of the assessed submission",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "If 0 then the assessment was allocated but the reviewer has not assessed yet.\n                    If greater than 0 then the timestamp of when the reviewer assessed for the first time",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : 0,
            "description" : "If 0 then the assessment was allocated but the reviewer has not assessed yet.\n                    If greater than 0 then the timestamp of when the reviewer assessed for the last time",
            "type" : "integer",
            "nullable" : true
          },
          "weight" : {
            "default" : 1,
            "description" : "The weight of the assessment for the purposes of aggregation",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_reviewer_assessments_200_response" : {
        "properties" : {
          "assessments" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_reviewer_assessments_200_response_assessments_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assessments" ]
      },
      "mod_workshop_get_submission_request" : {
        "properties" : {
          "submissionid" : {
            "description" : "Submission id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "submissionid" ]
      },
      "mod_workshop_get_submission_200_response_submission" : {
        "properties" : {
          "attachment" : {
            "default" : 0,
            "description" : "Used by File API file_postupdate_standard_filemanager.",
            "type" : "integer",
            "nullable" : true
          },
          "attachmentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "authorid" : {
            "default" : null,
            "description" : "The author of the submission.",
            "type" : "integer",
            "nullable" : false
          },
          "content" : {
            "default" : null,
            "description" : "Submission text.",
            "type" : "string",
            "nullable" : true
          },
          "contentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "contentformat" : {
            "default" : "0",
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "contenttrust" : {
            "default" : 0,
            "description" : "The trust mode of the data.",
            "type" : "integer",
            "nullable" : false
          },
          "example" : {
            "default" : false,
            "description" : "Is this submission an example from teacher.",
            "type" : "boolean",
            "nullable" : true
          },
          "feedbackauthor" : {
            "default" : null,
            "description" : "Teacher comment/feedback for the author of the submission, for example describing the reasons\n                    for the grade overriding.",
            "type" : "string",
            "nullable" : true
          },
          "feedbackauthorformat" : {
            "default" : "0",
            "description" : "feedbackauthor format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "Aggregated grade for the submission. The grade is a decimal number from interval 0..100.\n                    If NULL then the grade for submission has not been aggregated yet.",
            "type" : "number",
            "nullable" : true
          },
          "gradeover" : {
            "default" : null,
            "description" : "Grade for the submission manually overridden by a teacher. Grade is always from interval 0..100.\n                    If NULL then the grade is not overriden.",
            "type" : "number",
            "nullable" : true
          },
          "gradeoverby" : {
            "description" : "The id of the user who has overridden the grade for submission.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The primary key of the record.",
            "type" : "integer",
            "nullable" : false
          },
          "late" : {
            "default" : 0,
            "description" : "Has this submission been submitted after the deadline or during the assessment phase?",
            "type" : "integer",
            "nullable" : false
          },
          "published" : {
            "default" : false,
            "description" : "Shall the submission be available to other when the workshop is closed.",
            "type" : "boolean",
            "nullable" : true
          },
          "timecreated" : {
            "default" : null,
            "description" : "Timestamp when the work was submitted for the first time.",
            "type" : "integer",
            "nullable" : false
          },
          "timegraded" : {
            "default" : null,
            "description" : "The timestamp when grade or gradeover was recently modified.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "default" : null,
            "description" : "Timestamp when the submission has been updated.",
            "type" : "integer",
            "nullable" : false
          },
          "title" : {
            "default" : null,
            "description" : "The submission title.",
            "type" : "string",
            "nullable" : false
          },
          "workshopid" : {
            "default" : null,
            "description" : "The id of the workshop instance.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "attachment", "authorid", "content", "contenttrust", "example", "id", "late", "published", "timecreated", "timemodified", "title", "workshopid" ]
      },
      "mod_workshop_get_submission_200_response" : {
        "properties" : {
          "submission" : {
            "$ref" : "#/components/schemas/mod_workshop_get_submission_200_response_submission"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "submission" ]
      },
      "mod_workshop_get_submissions_request" : {
        "properties" : {
          "groupid" : {
            "default" : 0,
            "description" : "Group id, 0 means that the function will determine the user group.\n                                                   It will return submissions done by users in the given group.",
            "type" : "integer",
            "nullable" : true
          },
          "page" : {
            "default" : 0,
            "description" : "The page of records to return.",
            "type" : "integer",
            "nullable" : true
          },
          "perpage" : {
            "default" : 0,
            "description" : "The number of records to return per page.",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : 0,
            "description" : "Get submissions done by this user. Use 0 or empty for the current user",
            "type" : "integer",
            "nullable" : true
          },
          "workshopid" : {
            "description" : "Workshop instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "workshopid" ]
      },
      "mod_workshop_get_submissions_200_response_submissions_inner" : {
        "default" : null,
        "properties" : {
          "attachment" : {
            "default" : 0,
            "description" : "Used by File API file_postupdate_standard_filemanager.",
            "type" : "integer",
            "nullable" : true
          },
          "attachmentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "authorid" : {
            "description" : "The author of the submission.",
            "type" : "integer",
            "nullable" : false
          },
          "content" : {
            "description" : "Submission text.",
            "type" : "string",
            "nullable" : true
          },
          "contentfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "contentformat" : {
            "default" : "0",
            "description" : "content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "contenttrust" : {
            "default" : 0,
            "description" : "The trust mode of the data.",
            "type" : "integer",
            "nullable" : false
          },
          "example" : {
            "default" : false,
            "description" : "Is this submission an example from teacher.",
            "type" : "boolean",
            "nullable" : true
          },
          "feedbackauthor" : {
            "description" : "Teacher comment/feedback for the author of the submission, for example describing the reasons\n                    for the grade overriding.",
            "type" : "string",
            "nullable" : true
          },
          "feedbackauthorformat" : {
            "default" : "0",
            "description" : "feedbackauthor format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "description" : "Aggregated grade for the submission. The grade is a decimal number from interval 0..100.\n                    If NULL then the grade for submission has not been aggregated yet.",
            "type" : "number",
            "nullable" : true
          },
          "gradeover" : {
            "description" : "Grade for the submission manually overridden by a teacher. Grade is always from interval 0..100.\n                    If NULL then the grade is not overriden.",
            "type" : "number",
            "nullable" : true
          },
          "gradeoverby" : {
            "description" : "The id of the user who has overridden the grade for submission.",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "The primary key of the record.",
            "type" : "integer",
            "nullable" : false
          },
          "late" : {
            "default" : 0,
            "description" : "Has this submission been submitted after the deadline or during the assessment phase?",
            "type" : "integer",
            "nullable" : false
          },
          "published" : {
            "default" : false,
            "description" : "Shall the submission be available to other when the workshop is closed.",
            "type" : "boolean",
            "nullable" : true
          },
          "timecreated" : {
            "description" : "Timestamp when the work was submitted for the first time.",
            "type" : "integer",
            "nullable" : false
          },
          "timegraded" : {
            "description" : "The timestamp when grade or gradeover was recently modified.",
            "type" : "integer",
            "nullable" : true
          },
          "timemodified" : {
            "description" : "Timestamp when the submission has been updated.",
            "type" : "integer",
            "nullable" : false
          },
          "title" : {
            "description" : "The submission title.",
            "type" : "string",
            "nullable" : false
          },
          "workshopid" : {
            "description" : "The id of the workshop instance.",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_submissions_200_response" : {
        "properties" : {
          "submissions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_submissions_200_response_submissions_inner"
            },
            "type" : "array"
          },
          "totalcount" : {
            "default" : null,
            "description" : "Total count of submissions.",
            "type" : "integer",
            "nullable" : true
          },
          "totalfilesize" : {
            "default" : null,
            "description" : "Total size (bytes) of the files attached to all the\n                    submissions (even the ones not returned due to pagination).",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "submissions", "totalcount", "totalfilesize" ]
      },
      "mod_workshop_get_user_plan_request" : {
        "properties" : {
          "userid" : {
            "default" : 0,
            "description" : "User id (empty or 0 for current user).",
            "type" : "integer",
            "nullable" : true
          },
          "workshopid" : {
            "description" : "Workshop instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "workshopid" ]
      },
      "mod_workshop_get_user_plan_200_response_userplan_examples_inner" : {
        "default" : null,
        "properties" : {
          "assessmentid" : {
            "default" : null,
            "description" : "Example submission assessment id.",
            "type" : "integer",
            "nullable" : true
          },
          "grade" : {
            "default" : null,
            "description" : "The submission grade.",
            "type" : "number",
            "nullable" : true
          },
          "gradinggrade" : {
            "default" : null,
            "description" : "The assessment grade.",
            "type" : "number",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "Example submission id.",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Example submission title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_user_plan_200_response_userplan_phases_inner_actions_inner" : {
        "default" : null,
        "properties" : {
          "label" : {
            "default" : null,
            "description" : "Action label.",
            "type" : "string",
            "nullable" : true
          },
          "method" : {
            "default" : null,
            "description" : "Get or post.",
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "default" : null,
            "description" : "Action type.",
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "default" : null,
            "description" : "Link to action.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_user_plan_200_response_userplan_phases_inner_tasks_inner" : {
        "default" : null,
        "properties" : {
          "code" : {
            "default" : null,
            "description" : "Task code.",
            "type" : "string",
            "nullable" : true
          },
          "completed" : {
            "default" : null,
            "description" : "Completion information (maybe empty, maybe a boolean or generic info.",
            "type" : "string",
            "nullable" : true
          },
          "details" : {
            "default" : null,
            "description" : "Task details.",
            "type" : "string",
            "nullable" : true
          },
          "link" : {
            "default" : null,
            "description" : "Link to task.",
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Task title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_user_plan_200_response_userplan_phases_inner" : {
        "default" : null,
        "properties" : {
          "actions" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_user_plan_200_response_userplan_phases_inner_actions_inner"
            },
            "type" : "array"
          },
          "active" : {
            "default" : null,
            "description" : "Whether is the active task.",
            "type" : "boolean",
            "nullable" : true
          },
          "code" : {
            "default" : null,
            "description" : "Phase code.",
            "type" : "integer",
            "nullable" : true
          },
          "tasks" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_user_plan_200_response_userplan_phases_inner_tasks_inner"
            },
            "type" : "array"
          },
          "title" : {
            "default" : null,
            "description" : "Phase title.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_user_plan_200_response_userplan" : {
        "properties" : {
          "examples" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_user_plan_200_response_userplan_examples_inner"
            },
            "type" : "array"
          },
          "phases" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_user_plan_200_response_userplan_phases_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "examples", "phases" ]
      },
      "mod_workshop_get_user_plan_200_response" : {
        "properties" : {
          "userplan" : {
            "$ref" : "#/components/schemas/mod_workshop_get_user_plan_200_response_userplan"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "userplan" ]
      },
      "mod_workshop_get_workshop_access_information_request" : {
        "properties" : {
          "workshopid" : {
            "description" : "Workshop instance id.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "workshopid" ]
      },
      "mod_workshop_get_workshop_access_information_200_response" : {
        "properties" : {
          "assessingallowed" : {
            "default" : null,
            "description" : "Is the user allowed to create/edit his assessments?",
            "type" : "boolean",
            "nullable" : true
          },
          "assessingexamplesallowed" : {
            "default" : null,
            "description" : "Are reviewers allowed to create/edit their assessments of the example submissions?.",
            "type" : "boolean",
            "nullable" : true
          },
          "canaddinstance" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:addinstance allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canallocate" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:allocate allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "candeletesubmissions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:deletesubmissions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "caneditdimensions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:editdimensions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canexportsubmissions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:exportsubmissions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canignoredeadlines" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:ignoredeadlines allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanageexamples" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:manageexamples allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canoverridegrades" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:overridegrades allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canpeerassess" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:peerassess allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canpublishsubmissions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:publishsubmissions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "cansubmit" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:submit allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canswitchphase" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:switchphase allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canview" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:view allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewallassessments" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:viewallassessments allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewallsubmissions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:viewallsubmissions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewauthornames" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:viewauthornames allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewauthorpublished" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:viewauthorpublished allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewpublishedsubmissions" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:viewpublishedsubmissions allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "canviewreviewernames" : {
            "default" : null,
            "description" : "Whether the user has the capability mod/workshop:viewreviewernames allowed.",
            "type" : "boolean",
            "nullable" : true
          },
          "creatingsubmissionallowed" : {
            "default" : null,
            "description" : "Is the given user allowed to create their submission?",
            "type" : "boolean",
            "nullable" : true
          },
          "examplesassessedbeforeassessment" : {
            "default" : null,
            "description" : "Whether the given user has assessed all his required examples before assessment\n                (always true if there are not examples to assessor not configured to check before assessment).",
            "type" : "boolean",
            "nullable" : true
          },
          "examplesassessedbeforesubmission" : {
            "default" : null,
            "description" : "Whether the given user has assessed all his required examples before submission\n                (always true if there are not examples to assess or not configured to check before submission).",
            "type" : "boolean",
            "nullable" : true
          },
          "modifyingsubmissionallowed" : {
            "default" : null,
            "description" : "Is the user allowed to modify his existing submission?",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assessingallowed", "assessingexamplesallowed", "canaddinstance", "canallocate", "candeletesubmissions", "caneditdimensions", "canexportsubmissions", "canignoredeadlines", "canmanageexamples", "canoverridegrades", "canpeerassess", "canpublishsubmissions", "cansubmit", "canswitchphase", "canview", "canviewallassessments", "canviewallsubmissions", "canviewauthornames", "canviewauthorpublished", "canviewpublishedsubmissions", "canviewreviewernames", "creatingsubmissionallowed", "examplesassessedbeforeassessment", "examplesassessedbeforesubmission", "modifyingsubmissionallowed" ]
      },
      "mod_workshop_get_workshops_by_courses_200_response_workshops_inner" : {
        "default" : null,
        "properties" : {
          "assessmentend" : {
            "default" : 0,
            "description" : "0 = will be closed manually, greater than 0 the timestamp of the end of the assessment phase.",
            "type" : "integer",
            "nullable" : false
          },
          "assessmentstart" : {
            "default" : 0,
            "description" : "0 = will be started manually, greater than 0 the timestamp of the start of the assessment phase.",
            "type" : "integer",
            "nullable" : false
          },
          "conclusion" : {
            "default" : null,
            "description" : "A text to be displayed at the end of the workshop.",
            "type" : "string",
            "nullable" : true
          },
          "conclusionfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "conclusionformat" : {
            "default" : "0",
            "description" : "conclusion format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "course" : {
            "default" : null,
            "description" : "Course id this workshop is part of.",
            "type" : "integer",
            "nullable" : false
          },
          "coursemodule" : {
            "description" : "coursemodule",
            "type" : "integer",
            "nullable" : false
          },
          "evaluation" : {
            "default" : null,
            "description" : "The recently used grading evaluation method.",
            "type" : "string",
            "nullable" : false
          },
          "examplesmode" : {
            "default" : 0,
            "description" : "0 = example assessments are voluntary, 1 = examples must be assessed before submission,\n                    2 = examples are available after own submission and must be assessed before peer/self assessment phase.",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "default" : 80,
            "description" : "The maximum grade for submission.",
            "type" : "number",
            "nullable" : false
          },
          "gradedecimals" : {
            "default" : 0,
            "description" : "Number of digits that should be shown after the decimal point when displaying grades.",
            "type" : "integer",
            "nullable" : false
          },
          "gradinggrade" : {
            "default" : 20,
            "description" : "The maximum grade for assessment.",
            "type" : "number",
            "nullable" : false
          },
          "id" : {
            "description" : "The primary key of the record.",
            "type" : "integer",
            "nullable" : false
          },
          "instructauthors" : {
            "default" : null,
            "description" : "Instructions for the submission phase.",
            "type" : "string",
            "nullable" : true
          },
          "instructauthorsfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "instructauthorsformat" : {
            "default" : "0",
            "description" : "instructauthors format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "instructreviewers" : {
            "default" : null,
            "description" : "Instructions for the assessment phase.",
            "type" : "string",
            "nullable" : true
          },
          "instructreviewersfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "instructreviewersformat" : {
            "default" : "0",
            "description" : "instructreviewers format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "intro" : {
            "default" : "",
            "description" : "Workshop introduction text.",
            "type" : "string",
            "nullable" : true
          },
          "introfiles" : {
            "items" : {
              "$ref" : "#/components/schemas/core_blog_get_entries_200_response_entries_inner_summaryfiles_inner"
            },
            "type" : "array"
          },
          "introformat" : {
            "default" : "0",
            "description" : "intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "lang" : {
            "description" : "Forced activity language",
            "type" : "string",
            "nullable" : true
          },
          "latesubmissions" : {
            "default" : false,
            "description" : "Allow submitting the work after the deadline.",
            "type" : "boolean",
            "nullable" : false
          },
          "maxbytes" : {
            "default" : 100000,
            "description" : "Maximum size of the one attached file.",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "Workshop name.",
            "type" : "string",
            "nullable" : false
          },
          "nattachments" : {
            "default" : 1,
            "description" : "Maximum number of submission attachments.",
            "type" : "integer",
            "nullable" : false
          },
          "overallfeedbackfiles" : {
            "default" : 0,
            "description" : "Number of allowed attachments to the overall feedback.",
            "type" : "integer",
            "nullable" : false
          },
          "overallfeedbackfiletypes" : {
            "default" : null,
            "description" : "Comma separated list of file extensions.",
            "type" : "string",
            "nullable" : true
          },
          "overallfeedbackmaxbytes" : {
            "default" : 100000,
            "description" : "Maximum size of one file attached to the overall feedback.",
            "type" : "integer",
            "nullable" : false
          },
          "overallfeedbackmode" : {
            "default" : 1,
            "description" : "Mode of the overall feedback support.",
            "type" : "integer",
            "nullable" : false
          },
          "phase" : {
            "default" : 0,
            "description" : "The current phase of workshop (0 = not available, 1 = submission, 2 = assessment, 3 = closed).",
            "type" : "integer",
            "nullable" : false
          },
          "phaseswitchassessment" : {
            "default" : false,
            "description" : "Automatically switch to the assessment phase after the submissions deadline.",
            "type" : "boolean",
            "nullable" : false
          },
          "strategy" : {
            "default" : null,
            "description" : "The type of the current grading strategy used in this workshop.",
            "type" : "string",
            "nullable" : false
          },
          "submissionend" : {
            "default" : 0,
            "description" : "0 = will be closed manually, greater than 0 the timestamp of the end of the submission phase.",
            "type" : "integer",
            "nullable" : false
          },
          "submissionfiletypes" : {
            "description" : "Comma separated list of file extensions.",
            "type" : "string",
            "nullable" : true
          },
          "submissionstart" : {
            "default" : 0,
            "description" : "0 = will be started manually, greater than 0 the timestamp of the start of the submission phase.",
            "type" : "integer",
            "nullable" : false
          },
          "submissiontypefile" : {
            "default" : 1,
            "description" : "Indicates whether a file upload is required as part of each submission. 0 for no, 1 for optional, 2 for required.",
            "type" : "integer",
            "nullable" : false
          },
          "submissiontypetext" : {
            "default" : 1,
            "description" : "Indicates whether text is required as part of each submission. 0 for no, 1 for optional, 2 for required.",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : null,
            "description" : "The timestamp when the module was modified.",
            "type" : "integer",
            "nullable" : false
          },
          "useexamples" : {
            "default" : false,
            "description" : "Optional feature: students practise evaluating on example submissions from teacher.",
            "type" : "boolean",
            "nullable" : false
          },
          "usepeerassessment" : {
            "default" : false,
            "description" : "Optional feature: students perform peer assessment of others' work.",
            "type" : "boolean",
            "nullable" : false
          },
          "useselfassessment" : {
            "default" : false,
            "description" : "Optional feature: students perform self assessment of their own work.",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "mod_workshop_get_workshops_by_courses_200_response" : {
        "properties" : {
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          },
          "workshops" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_get_workshops_by_courses_200_response_workshops_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "workshops" ]
      },
      "mod_workshop_update_assessment_request_data_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The assessment data (use WS get_assessment_form_definition for obtaining the data to sent).\n                                Apart from that data, you can optionally send:\n                                feedbackauthor (str); the feedback for the submission author\n                                feedbackauthorformat (int); the format of the feedbackauthor\n                                feedbackauthorinlineattachmentsid (int); the draft file area for the editor attachments\n                                feedbackauthorattachmentsid (int); the draft file area id for the feedback attachments",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "description" : "The value of the option.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "mod_workshop_update_assessment_request" : {
        "properties" : {
          "assessmentid" : {
            "description" : "Assessment id.",
            "type" : "integer",
            "nullable" : true
          },
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_workshop_update_assessment_request_data_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "assessmentid", "data" ]
      },
      "mod_workshop_update_assessment_200_response" : {
        "properties" : {
          "rawgrade" : {
            "default" : null,
            "description" : "Raw percentual grade (0.00000 to 100.00000) for submission.",
            "type" : "number",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "status: true if the assessment was added or updated false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_workshop_update_submission_request" : {
        "properties" : {
          "attachmentsid" : {
            "default" : 0,
            "description" : "The draft file area id for attachments",
            "type" : "integer",
            "nullable" : true
          },
          "content" : {
            "default" : "",
            "description" : "Submission text content",
            "type" : "string",
            "nullable" : true
          },
          "contentformat" : {
            "default" : "0",
            "description" : "The format used for the content",
            "type" : "integer",
            "nullable" : true
          },
          "inlineattachmentsid" : {
            "default" : 0,
            "description" : "The draft file area id for inline attachments in the content",
            "type" : "integer",
            "nullable" : true
          },
          "submissionid" : {
            "description" : "Submission id",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "description" : "Submission title",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "submissionid", "title" ]
      },
      "mod_workshop_update_submission_200_response" : {
        "properties" : {
          "status" : {
            "default" : null,
            "description" : "True if the submission was updated false otherwise.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "status" ]
      },
      "mod_workshop_view_workshop_request" : {
        "properties" : {
          "workshopid" : {
            "default" : null,
            "description" : "Workshop instance id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "workshopid" ]
      },
      "paygw_paypal_create_transaction_complete_request" : {
        "properties" : {
          "component" : {
            "default" : null,
            "description" : "The component name",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "default" : null,
            "description" : "The item id in the context of the component area",
            "type" : "integer",
            "nullable" : true
          },
          "orderid" : {
            "default" : null,
            "description" : "The order id coming back from PayPal",
            "type" : "string",
            "nullable" : true
          },
          "paymentarea" : {
            "description" : "Payment area in the component",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "itemid", "orderid", "paymentarea" ]
      },
      "paygw_paypal_create_transaction_complete_200_response" : {
        "properties" : {
          "message" : {
            "default" : null,
            "description" : "Message (usually the error message).",
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "default" : null,
            "description" : "Whether everything was successful or not.",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "message", "success" ]
      },
      "paygw_paypal_get_config_for_js_request" : {
        "properties" : {
          "component" : {
            "description" : "Component",
            "type" : "string",
            "nullable" : true
          },
          "itemid" : {
            "description" : "An identifier for payment area in the component",
            "type" : "integer",
            "nullable" : true
          },
          "paymentarea" : {
            "description" : "Payment area in the component",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "itemid", "paymentarea" ]
      },
      "paygw_paypal_get_config_for_js_200_response" : {
        "properties" : {
          "brandname" : {
            "default" : null,
            "description" : "Brand name",
            "type" : "string",
            "nullable" : true
          },
          "clientid" : {
            "default" : null,
            "description" : "PayPal client ID",
            "type" : "string",
            "nullable" : true
          },
          "cost" : {
            "default" : null,
            "description" : "Cost with gateway surcharge",
            "type" : "number",
            "nullable" : true
          },
          "currency" : {
            "default" : null,
            "description" : "Currency",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "brandname", "clientid", "cost", "currency" ]
      },
      "qbank_columnsortorder_set_column_size_request" : {
        "properties" : {
          "global" : {
            "default" : false,
            "description" : "Set global config setting, rather than user preference",
            "type" : "boolean",
            "nullable" : true
          },
          "sizes" : {
            "default" : null,
            "description" : "Size for each column, as a JSON string representing [column => size]",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "qbank_columnsortorder_set_columnbank_order_request" : {
        "properties" : {
          "columns" : {
            "items" : {
              "default" : null,
              "description" : "Plugin name for the column",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "global" : {
            "default" : false,
            "description" : "Set global config setting, rather than user preference",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "qbank_columnsortorder_set_hidden_columns_request" : {
        "properties" : {
          "columns" : {
            "items" : {
              "default" : null,
              "description" : "Plugin name for the hidden column",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "global" : {
            "default" : false,
            "description" : "Set global config setting, rather than user preference",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "qbank_editquestion_set_status_request" : {
        "properties" : {
          "questionid" : {
            "description" : "The question id",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : null,
            "description" : "The updated question status",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "questionid", "status" ]
      },
      "qbank_editquestion_set_status_200_response" : {
        "properties" : {
          "error" : {
            "default" : null,
            "description" : "Error message if error exists",
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "description" : "status: true if success",
            "type" : "boolean",
            "nullable" : true
          },
          "statusname" : {
            "default" : null,
            "description" : "statusname: name of the status",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "error", "status", "statusname" ]
      },
      "qbank_tagquestion_submit_tags_form_request" : {
        "properties" : {
          "contextid" : {
            "description" : "The editing context id",
            "type" : "integer",
            "nullable" : true
          },
          "formdata" : {
            "description" : "The data from the tag form",
            "type" : "string",
            "nullable" : true
          },
          "questionid" : {
            "description" : "The question id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "contextid", "formdata", "questionid" ]
      },
      "qbank_viewquestiontext_set_question_text_format_request" : {
        "properties" : {
          "format" : {
            "default" : null,
            "description" : "Format for the question text",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "format" ]
      },
      "quizaccess_seb_validate_quiz_keys_request" : {
        "properties" : {
          "browserexamkey" : {
            "default" : null,
            "description" : "SEB browser exam key",
            "type" : "string",
            "nullable" : true
          },
          "cmid" : {
            "default" : null,
            "description" : "Course module ID",
            "type" : "integer",
            "nullable" : false
          },
          "configkey" : {
            "default" : null,
            "description" : "SEB config key",
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "default" : null,
            "description" : "Page URL to check",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "cmid", "url" ]
      },
      "quizaccess_seb_validate_quiz_keys_200_response" : {
        "properties" : {
          "browserexamkey" : {
            "default" : 0,
            "description" : "Is a provided browser exam key valid?",
            "type" : "boolean",
            "nullable" : false
          },
          "configkey" : {
            "default" : 0,
            "description" : "Is a provided config key valid?",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "browserexamkey", "configkey" ]
      },
      "report_competency_data_for_report_request" : {
        "properties" : {
          "courseid" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          },
          "moduleid" : {
            "default" : null,
            "description" : "The module id",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid", "moduleid", "userid" ]
      },
      "report_competency_data_for_report_200_response_usercompetencies_inner_competency_comppath_ancestors_inner" : {
        "default" : null,
        "properties" : {
          "first" : {
            "default" : null,
            "description" : "first",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : true
          },
          "last" : {
            "default" : null,
            "description" : "last",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "position" : {
            "default" : null,
            "description" : "position",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "report_competency_data_for_report_200_response_usercompetencies_inner_competency_comppath_framework" : {
        "properties" : {
          "first" : {
            "description" : "first",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : true
          },
          "last" : {
            "description" : "last",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "position" : {
            "description" : "position",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "first", "id", "last", "name", "position" ]
      },
      "report_competency_data_for_report_200_response_usercompetencies_inner_competency_comppath" : {
        "properties" : {
          "ancestors" : {
            "items" : {
              "$ref" : "#/components/schemas/report_competency_data_for_report_200_response_usercompetencies_inner_competency_comppath_ancestors_inner"
            },
            "type" : "array"
          },
          "framework" : {
            "$ref" : "#/components/schemas/report_competency_data_for_report_200_response_usercompetencies_inner_competency_comppath_framework"
          },
          "pagecontextid" : {
            "default" : null,
            "description" : "pagecontextid",
            "type" : "integer",
            "nullable" : false
          },
          "pluginbaseurl" : {
            "default" : null,
            "description" : "pluginbaseurl",
            "type" : "string",
            "nullable" : false
          },
          "showlinks" : {
            "default" : null,
            "description" : "showlinks",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "ancestors", "framework", "pagecontextid", "pluginbaseurl", "showlinks" ]
      },
      "report_competency_data_for_report_200_response_usercompetencies_inner_competency" : {
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
          },
          "comppath" : {
            "$ref" : "#/components/schemas/report_competency_data_for_report_200_response_usercompetencies_inner_competency_comppath"
          },
          "framework" : {
            "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_200_response"
          },
          "hascourses" : {
            "default" : null,
            "description" : "hascourses",
            "type" : "boolean",
            "nullable" : false
          },
          "hasrelatedcompetencies" : {
            "default" : null,
            "description" : "hasrelatedcompetencies",
            "type" : "boolean",
            "nullable" : false
          },
          "linkedcourses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_enrolled_courses_by_timeline_classification_200_response_courses_inner"
            },
            "type" : "array"
          },
          "pluginbaseurl" : {
            "description" : "pluginbaseurl",
            "type" : "string",
            "nullable" : false
          },
          "relatedcompetencies" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "taxonomyterm" : {
            "default" : null,
            "description" : "taxonomyterm",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "competency", "comppath", "framework", "hascourses", "hasrelatedcompetencies", "linkedcourses", "pluginbaseurl", "relatedcompetencies", "scaleconfiguration", "scaleid", "taxonomyterm" ]
      },
      "report_competency_data_for_report_200_response_usercompetencies_inner_usercompetencycourse" : {
        "properties" : {
          "competencyid" : {
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "proficiency" : {
            "default" : null,
            "description" : "proficiency",
            "type" : "boolean",
            "nullable" : true
          },
          "proficiencyname" : {
            "default" : null,
            "description" : "proficiencyname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencyid", "courseid", "grade", "gradename", "id", "proficiency", "proficiencyname", "timecreated", "timemodified", "userid", "usermodified" ]
      },
      "report_competency_data_for_report_200_response_usercompetencies_inner" : {
        "default" : null,
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/report_competency_data_for_report_200_response_usercompetencies_inner_competency"
          },
          "usercompetencycourse" : {
            "$ref" : "#/components/schemas/report_competency_data_for_report_200_response_usercompetencies_inner_usercompetencycourse"
          }
        },
        "nullable" : false
      },
      "report_competency_data_for_report_200_response" : {
        "properties" : {
          "course" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_course"
          },
          "courseid" : {
            "description" : "Course id",
            "type" : "integer",
            "nullable" : true
          },
          "pushratingstouserplans" : {
            "default" : null,
            "description" : "True if rating is push to user plans",
            "type" : "boolean",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "usercompetencies" : {
            "items" : {
              "$ref" : "#/components/schemas/report_competency_data_for_report_200_response_usercompetencies_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "course", "courseid", "pushratingstouserplans", "user", "usercompetencies" ]
      },
      "report_insights_action_executed_request" : {
        "properties" : {
          "actionname" : {
            "default" : null,
            "description" : "The name of the action",
            "type" : "string",
            "nullable" : true
          },
          "predictionids" : {
            "items" : {
              "default" : null,
              "description" : "Prediction id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "actionname", "predictionids" ]
      },
      "report_insights_set_fixed_prediction_request" : {
        "properties" : {
          "predictionid" : {
            "default" : null,
            "description" : "The prediction id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "predictionid" ]
      },
      "report_insights_set_fixed_prediction_200_response" : {
        "properties" : {
          "success" : {
            "default" : null,
            "description" : "True if the prediction was successfully flagged as fixed.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "success" ]
      },
      "report_insights_set_notuseful_prediction_request" : {
        "properties" : {
          "predictionid" : {
            "description" : "The prediction id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "predictionid" ]
      },
      "report_insights_set_notuseful_prediction_200_response" : {
        "properties" : {
          "success" : {
            "default" : null,
            "description" : "True if the prediction was successfully flagged as not useful.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "success" ]
      },
      "tiny_autosave_reset_session_request" : {
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The context id that owns the editor",
            "type" : "integer",
            "nullable" : true
          },
          "elementid" : {
            "default" : null,
            "description" : "The ID of the element",
            "type" : "string",
            "nullable" : true
          },
          "pagehash" : {
            "default" : null,
            "description" : "The page hash",
            "type" : "string",
            "nullable" : true
          },
          "pageinstance" : {
            "default" : null,
            "description" : "The page instance",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "contextid", "elementid", "pagehash", "pageinstance" ]
      },
      "tiny_autosave_resume_session_request" : {
        "properties" : {
          "contextid" : {
            "description" : "The context id that owns the editor",
            "type" : "integer",
            "nullable" : true
          },
          "draftid" : {
            "default" : null,
            "description" : "The new draft item id to resume files to",
            "type" : "integer",
            "nullable" : true
          },
          "elementid" : {
            "description" : "The ID of the element",
            "type" : "string",
            "nullable" : true
          },
          "pagehash" : {
            "description" : "The page hash",
            "type" : "string",
            "nullable" : true
          },
          "pageinstance" : {
            "description" : "The page instance",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "contextid", "draftid", "elementid", "pagehash", "pageinstance" ]
      },
      "tiny_autosave_resume_session_200_response" : {
        "properties" : {
          "drafttext" : {
            "default" : null,
            "description" : "The draft text",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "drafttext" ]
      },
      "tiny_autosave_update_session_request" : {
        "properties" : {
          "contextid" : {
            "description" : "The context id that owns the editor",
            "type" : "integer",
            "nullable" : true
          },
          "drafttext" : {
            "description" : "The draft text",
            "type" : "string",
            "nullable" : true
          },
          "elementid" : {
            "description" : "The ID of the element",
            "type" : "string",
            "nullable" : true
          },
          "pagehash" : {
            "description" : "The page hash",
            "type" : "string",
            "nullable" : true
          },
          "pageinstance" : {
            "description" : "The page instance",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "contextid", "drafttext", "elementid", "pagehash", "pageinstance" ]
      },
      "tiny_equation_filter_request" : {
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "The equation content",
            "type" : "string",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "The context ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "content", "contextid" ]
      },
      "tiny_equation_filter_200_response" : {
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "Filtered content",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "content" ]
      },
      "tiny_premium_get_api_key_request" : {
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The current context ID.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "contextid" ]
      },
      "tiny_premium_get_api_key_200_response" : {
        "properties" : {
          "apikey" : {
            "default" : null,
            "description" : "The API key for Tiny Premium",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "apikey" ]
      },
      "tool_analytics_potential_contexts_request" : {
        "properties" : {
          "modelid" : {
            "default" : null,
            "description" : "The model id",
            "type" : "integer",
            "nullable" : true
          },
          "query" : {
            "default" : null,
            "description" : "The model id",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "tool_behat_get_entity_generator_request" : {
        "properties" : {
          "entitytype" : {
            "default" : null,
            "description" : "Entity type that can be created by a generator.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "entitytype" ]
      },
      "tool_behat_get_entity_generator_200_response" : {
        "properties" : {
          "required" : {
            "items" : {
              "default" : null,
              "description" : "Required field",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "tool_dataprivacy_approve_data_request_request" : {
        "properties" : {
          "requestid" : {
            "default" : null,
            "description" : "The request ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "requestid" ]
      },
      "tool_dataprivacy_bulk_approve_data_requests_request" : {
        "properties" : {
          "requestids" : {
            "items" : {
              "default" : null,
              "description" : "The request ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "requestids" ]
      },
      "tool_dataprivacy_bulk_deny_data_requests_request" : {
        "properties" : {
          "requestids" : {
            "items" : {
              "description" : "The request ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        },
        "required" : [ "requestids" ]
      },
      "tool_dataprivacy_cancel_data_request_request" : {
        "properties" : {
          "requestid" : {
            "description" : "The request ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "requestid" ]
      },
      "tool_dataprivacy_confirm_contexts_for_deletion_request" : {
        "properties" : {
          "ids" : {
            "items" : {
              "default" : null,
              "description" : "Expired context record ID",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "tool_dataprivacy_confirm_contexts_for_deletion_200_response" : {
        "properties" : {
          "result" : {
            "default" : null,
            "description" : "Whether the record was properly marked for deletion or not",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "tool_dataprivacy_contact_dpo_request" : {
        "properties" : {
          "message" : {
            "default" : null,
            "description" : "The user's message to the Data Protection Officer(s)",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "message" ]
      },
      "tool_dataprivacy_create_category_form_request" : {
        "properties" : {
          "jsonformdata" : {
            "default" : null,
            "description" : "The data to create the category, encoded as a json array",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata" ]
      },
      "tool_dataprivacy_create_category_form_200_response_category" : {
        "properties" : {
          "description" : {
            "default" : "",
            "description" : "The category description.",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "The category name.",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "description", "id", "name", "timecreated", "timemodified", "usermodified" ]
      },
      "tool_dataprivacy_create_category_form_200_response" : {
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/tool_dataprivacy_create_category_form_200_response_category"
          },
          "validationerrors" : {
            "default" : null,
            "description" : "Were there validation errors",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "category", "validationerrors" ]
      },
      "tool_dataprivacy_create_purpose_form_request" : {
        "properties" : {
          "jsonformdata" : {
            "default" : null,
            "description" : "The data to create the purpose, encoded as a json array",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata" ]
      },
      "tool_dataprivacy_create_purpose_form_200_response_purpose_formattedlawfulbases_inner" : {
        "default" : null,
        "properties" : {
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_dataprivacy_create_purpose_form_200_response_purpose" : {
        "properties" : {
          "description" : {
            "default" : "",
            "description" : "The purpose description.",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "formattedlawfulbases" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_dataprivacy_create_purpose_form_200_response_purpose_formattedlawfulbases_inner"
            },
            "type" : "array"
          },
          "formattedretentionperiod" : {
            "default" : null,
            "description" : "formattedretentionperiod",
            "type" : "string",
            "nullable" : false
          },
          "formattedsensitivedatareasons" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_dataprivacy_create_purpose_form_200_response_purpose_formattedlawfulbases_inner"
            },
            "type" : "array"
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "lawfulbases" : {
            "default" : null,
            "description" : "Comma-separated IDs matching records in tool_dataprivacy_lawfulbasis.",
            "type" : "string",
            "nullable" : false
          },
          "name" : {
            "default" : null,
            "description" : "The purpose name.",
            "type" : "string",
            "nullable" : false
          },
          "protected" : {
            "default" : "0",
            "description" : "Data retention with higher precedent over user's request to be forgotten.",
            "type" : "integer",
            "nullable" : false
          },
          "retentionperiod" : {
            "default" : "",
            "description" : "Retention period. ISO_8601 durations format (as in DateInterval format).",
            "type" : "string",
            "nullable" : false
          },
          "roleoverrides" : {
            "default" : null,
            "description" : "roleoverrides",
            "type" : "string",
            "nullable" : false
          },
          "sensitivedatareasons" : {
            "default" : "",
            "description" : "Comma-separated IDs matching records in tool_dataprivacy_sensitive",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "description", "formattedlawfulbases", "formattedretentionperiod", "id", "lawfulbases", "name", "protected", "retentionperiod", "roleoverrides", "sensitivedatareasons", "timecreated", "timemodified", "usermodified" ]
      },
      "tool_dataprivacy_create_purpose_form_200_response" : {
        "properties" : {
          "purpose" : {
            "$ref" : "#/components/schemas/tool_dataprivacy_create_purpose_form_200_response_purpose"
          },
          "validationerrors" : {
            "description" : "Were there validation errors",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "purpose", "validationerrors" ]
      },
      "tool_dataprivacy_delete_category_request" : {
        "properties" : {
          "id" : {
            "description" : "The category ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "tool_dataprivacy_delete_purpose_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The purpose ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "tool_dataprivacy_get_activity_options_request" : {
        "properties" : {
          "nodefaults" : {
            "default" : false,
            "description" : "Whether to fetch all activities or only those without defaults",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "tool_dataprivacy_get_activity_options_200_response_options_inner" : {
        "default" : null,
        "properties" : {
          "displayname" : {
            "default" : null,
            "description" : "The display name of the activity",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The plugin name of the activity",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_dataprivacy_get_activity_options_200_response" : {
        "properties" : {
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_dataprivacy_get_activity_options_200_response_options_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "options" ]
      },
      "tool_dataprivacy_get_category_options_request" : {
        "properties" : {
          "includeinherit" : {
            "default" : true,
            "description" : "Include option \"Inherit\"",
            "type" : "boolean",
            "nullable" : true
          },
          "includenotset" : {
            "default" : false,
            "description" : "Include option \"Not set\"",
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "tool_dataprivacy_get_category_options_200_response_options_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "The category ID",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The category name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_dataprivacy_get_category_options_200_response" : {
        "properties" : {
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_dataprivacy_get_category_options_200_response_options_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "options" ]
      },
      "tool_dataprivacy_get_data_request_200_response_result" : {
        "properties" : {
          "allowfiltering" : {
            "default" : false,
            "description" : "allowfiltering",
            "type" : "boolean",
            "nullable" : false
          },
          "approvedeny" : {
            "default" : false,
            "description" : "approvedeny",
            "type" : "boolean",
            "nullable" : false
          },
          "canmarkcomplete" : {
            "default" : false,
            "description" : "canmarkcomplete",
            "type" : "boolean",
            "nullable" : false
          },
          "canreview" : {
            "default" : false,
            "description" : "canreview",
            "type" : "boolean",
            "nullable" : false
          },
          "comments" : {
            "default" : "",
            "description" : "comments",
            "type" : "string",
            "nullable" : false
          },
          "commentsformat" : {
            "default" : "2",
            "description" : "commentsformat",
            "type" : "integer",
            "nullable" : false
          },
          "creationmethod" : {
            "default" : 0,
            "description" : "creationmethod",
            "type" : "integer",
            "nullable" : false
          },
          "dpo" : {
            "default" : 0,
            "description" : "dpo",
            "type" : "integer",
            "nullable" : true
          },
          "dpocomment" : {
            "default" : "",
            "description" : "dpocomment",
            "type" : "string",
            "nullable" : true
          },
          "dpocommentformat" : {
            "default" : "2",
            "description" : "dpocommentformat",
            "type" : "integer",
            "nullable" : false
          },
          "dpouser" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "foruser" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "messagehtml" : {
            "default" : null,
            "description" : "messagehtml",
            "type" : "string",
            "nullable" : false
          },
          "requestedby" : {
            "default" : 0,
            "description" : "requestedby",
            "type" : "integer",
            "nullable" : false
          },
          "requestedbyuser" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "status" : {
            "default" : 2,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "statuslabel" : {
            "default" : null,
            "description" : "statuslabel",
            "type" : "string",
            "nullable" : false
          },
          "statuslabelclass" : {
            "default" : null,
            "description" : "statuslabelclass",
            "type" : "string",
            "nullable" : false
          },
          "systemapproved" : {
            "default" : false,
            "description" : "systemapproved",
            "type" : "boolean",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "type" : {
            "description" : "type",
            "type" : "integer",
            "nullable" : false
          },
          "typename" : {
            "default" : null,
            "description" : "typename",
            "type" : "string",
            "nullable" : false
          },
          "typenameshort" : {
            "default" : null,
            "description" : "typenameshort",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "default" : { },
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "comments", "commentsformat", "creationmethod", "dpo", "dpocomment", "dpocommentformat", "foruser", "id", "requestedby", "status", "statuslabel", "statuslabelclass", "systemapproved", "timecreated", "timemodified", "type", "typename", "typenameshort", "userid", "usermodified" ]
      },
      "tool_dataprivacy_get_data_request_200_response" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/tool_dataprivacy_get_data_request_200_response_result"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "tool_dataprivacy_get_purpose_options_200_response_options_inner" : {
        "default" : null,
        "properties" : {
          "id" : {
            "description" : "The purpose ID",
            "type" : "integer",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The purpose name",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_dataprivacy_get_purpose_options_200_response" : {
        "properties" : {
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_dataprivacy_get_purpose_options_200_response_options_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "options" ]
      },
      "tool_dataprivacy_get_users_request" : {
        "properties" : {
          "query" : {
            "description" : "The search query",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "query" ]
      },
      "tool_dataprivacy_set_context_defaults_request" : {
        "properties" : {
          "activity" : {
            "description" : "The plugin name of the activity",
            "type" : "string",
            "nullable" : true
          },
          "category" : {
            "default" : null,
            "description" : "The default category for the given context level",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The context level",
            "type" : "integer",
            "nullable" : true
          },
          "override" : {
            "default" : false,
            "description" : "Whether to override existing instances with the defaults",
            "type" : "boolean",
            "nullable" : true
          },
          "purpose" : {
            "default" : null,
            "description" : "The default purpose for the given context level",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "category", "contextlevel", "purpose" ]
      },
      "tool_dataprivacy_set_context_defaults_200_response" : {
        "properties" : {
          "result" : {
            "default" : null,
            "description" : "Whether the context defaults were successfully set or not",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "tool_dataprivacy_set_context_form_request" : {
        "properties" : {
          "jsonformdata" : {
            "default" : null,
            "description" : "The context level data, encoded as a json array",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata" ]
      },
      "tool_dataprivacy_set_context_form_200_response" : {
        "properties" : {
          "result" : {
            "default" : null,
            "description" : "Whether the data was properly set or not",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "tool_dataprivacy_set_contextlevel_form_request" : {
        "properties" : {
          "jsonformdata" : {
            "description" : "The context level data, encoded as a json array",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata" ]
      },
      "tool_dataprivacy_set_contextlevel_form_200_response" : {
        "properties" : {
          "result" : {
            "description" : "Whether the data was properly set or not",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "tool_dataprivacy_submit_selected_courses_form_request" : {
        "properties" : {
          "jsonformdata" : {
            "default" : null,
            "description" : "The data of selected courses form, encoded as a json array",
            "type" : "string",
            "nullable" : true
          },
          "requestid" : {
            "default" : null,
            "description" : "The id of data request",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata", "requestid" ]
      },
      "tool_dataprivacy_tree_extra_branches_request" : {
        "properties" : {
          "contextid" : {
            "default" : null,
            "description" : "The context id to expand",
            "type" : "integer",
            "nullable" : true
          },
          "element" : {
            "default" : null,
            "description" : "The element we are interested on",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "contextid", "element" ]
      },
      "tool_dataprivacy_tree_extra_branches_200_response_branches_inner_branches_inner" : {
        "default" : null,
        "description" : "Node structure",
        "properties" : {
          "branches" : {
            "items" : {
              "default" : null,
              "description" : "Nothing really, it will always be an empty array",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "contextid" : {
            "default" : null,
            "description" : "The node contextid",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "default" : null,
            "description" : "The node contextlevel",
            "type" : "integer",
            "nullable" : true
          },
          "expandcontextid" : {
            "default" : null,
            "description" : "The contextid this node expands",
            "type" : "integer",
            "nullable" : true
          },
          "expanded" : {
            "default" : null,
            "description" : "Is it expanded",
            "type" : "integer",
            "nullable" : true
          },
          "expandelement" : {
            "default" : null,
            "description" : "What element is this node expanded to",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "The node text",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_dataprivacy_tree_extra_branches_200_response_branches_inner" : {
        "default" : null,
        "description" : "Node structure",
        "properties" : {
          "branches" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_dataprivacy_tree_extra_branches_200_response_branches_inner_branches_inner"
            },
            "type" : "array"
          },
          "contextid" : {
            "description" : "The node contextid",
            "type" : "integer",
            "nullable" : true
          },
          "contextlevel" : {
            "description" : "The node contextlevel",
            "type" : "integer",
            "nullable" : true
          },
          "expandcontextid" : {
            "description" : "The contextid this node expands",
            "type" : "integer",
            "nullable" : true
          },
          "expanded" : {
            "description" : "Is it expanded",
            "type" : "integer",
            "nullable" : true
          },
          "expandelement" : {
            "description" : "What element is this node expanded to",
            "type" : "string",
            "nullable" : true
          },
          "text" : {
            "description" : "The node text",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_dataprivacy_tree_extra_branches_200_response" : {
        "properties" : {
          "branches" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_dataprivacy_tree_extra_branches_200_response_branches_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "branches" ]
      },
      "tool_iomadpolicy_get_iomadpolicy_version_request" : {
        "properties" : {
          "behalfid" : {
            "default" : 0,
            "description" : "The id of user on whose behalf the user is viewing the iomadpolicy",
            "type" : "integer",
            "nullable" : true
          },
          "versionid" : {
            "default" : null,
            "description" : "The iomadpolicy version ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "versionid" ]
      },
      "tool_iomadpolicy_get_iomadpolicy_version_200_response_result_iomadpolicy" : {
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "The iomadpolicy version content",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The iomadpolicy version name",
            "type" : "string",
            "nullable" : true
          },
          "versionid" : {
            "default" : null,
            "description" : "The iomadpolicy version id",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "tool_iomadpolicy_get_iomadpolicy_version_200_response_result" : {
        "properties" : {
          "iomadpolicy" : {
            "$ref" : "#/components/schemas/tool_iomadpolicy_get_iomadpolicy_version_200_response_result_iomadpolicy"
          }
        }
      },
      "tool_iomadpolicy_get_iomadpolicy_version_200_response" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/tool_iomadpolicy_get_iomadpolicy_version_200_response_result"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "tool_iomadpolicy_submit_accept_on_behalf_request" : {
        "properties" : {
          "jsonformdata" : {
            "default" : null,
            "description" : "The data from the create group form, encoded as a json array",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata" ]
      },
      "tool_lp_data_for_competencies_manage_page_request" : {
        "properties" : {
          "competencyframeworkid" : {
            "description" : "The competency framework id",
            "type" : "integer",
            "nullable" : true
          },
          "search" : {
            "default" : "",
            "description" : "A search string",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "competencyframeworkid" ]
      },
      "tool_lp_data_for_competencies_manage_page_200_response" : {
        "properties" : {
          "canmanage" : {
            "default" : null,
            "description" : "True if this user has permission to manage competency frameworks",
            "type" : "boolean",
            "nullable" : true
          },
          "framework" : {
            "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_200_response"
          },
          "pagecontextid" : {
            "default" : null,
            "description" : "Context id for the framework",
            "type" : "integer",
            "nullable" : true
          },
          "pluginbaseurl" : {
            "default" : null,
            "description" : "Plugin base url",
            "type" : "string",
            "nullable" : true
          },
          "rulesmodules" : {
            "default" : null,
            "description" : "JSON encoded data for rules",
            "type" : "string",
            "nullable" : true
          },
          "search" : {
            "default" : null,
            "description" : "Current search string",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "canmanage", "framework", "pagecontextid", "pluginbaseurl", "rulesmodules", "search" ]
      },
      "tool_lp_data_for_competency_frameworks_manage_page_request" : {
        "properties" : {
          "pagecontext" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          }
        },
        "required" : [ "pagecontext" ]
      },
      "tool_lp_data_for_competency_frameworks_manage_page_200_response_competencyframeworks_inner" : {
        "default" : null,
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "competenciescount" : {
            "description" : "competenciescount",
            "type" : "integer",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "contextname" : {
            "description" : "contextname",
            "type" : "string",
            "nullable" : false
          },
          "contextnamenoprefix" : {
            "description" : "contextnamenoprefix",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "idnumber" : {
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "taxonomies" : {
            "default" : "",
            "description" : "taxonomies",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_competency_frameworks_manage_page_200_response" : {
        "properties" : {
          "competencyframeworks" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_competency_frameworks_manage_page_200_response_competencyframeworks_inner"
            },
            "type" : "array"
          },
          "navigation" : {
            "items" : {
              "default" : null,
              "description" : "HTML for a navigation item that should be on this page",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "pagecontextid" : {
            "default" : null,
            "description" : "The page context id",
            "type" : "integer",
            "nullable" : true
          },
          "pluginbaseurl" : {
            "default" : null,
            "description" : "Url to the tool_lp plugin folder on this Moodle site",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "competencyframeworks", "navigation", "pagecontextid", "pluginbaseurl" ]
      },
      "tool_lp_data_for_competency_summary_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          },
          "includecourses" : {
            "default" : false,
            "description" : "Include or not competency courses",
            "type" : "boolean",
            "nullable" : true
          },
          "includerelated" : {
            "default" : false,
            "description" : "Include or not related competencies",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "competencyid" ]
      },
      "tool_lp_data_for_competency_summary_200_response_comppath_ancestors_inner" : {
        "default" : null,
        "properties" : {
          "first" : {
            "description" : "first",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : true
          },
          "last" : {
            "description" : "last",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "position" : {
            "description" : "position",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_competency_summary_200_response_comppath" : {
        "properties" : {
          "ancestors" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response_comppath_ancestors_inner"
            },
            "type" : "array"
          },
          "framework" : {
            "$ref" : "#/components/schemas/report_competency_data_for_report_200_response_usercompetencies_inner_competency_comppath_framework"
          },
          "pagecontextid" : {
            "description" : "pagecontextid",
            "type" : "integer",
            "nullable" : false
          },
          "pluginbaseurl" : {
            "description" : "pluginbaseurl",
            "type" : "string",
            "nullable" : false
          },
          "showlinks" : {
            "description" : "showlinks",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "required" : [ "ancestors", "framework", "pagecontextid", "pluginbaseurl", "showlinks" ]
      },
      "tool_lp_data_for_competency_summary_200_response" : {
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
          },
          "comppath" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response_comppath"
          },
          "framework" : {
            "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_200_response"
          },
          "hascourses" : {
            "description" : "hascourses",
            "type" : "boolean",
            "nullable" : false
          },
          "hasrelatedcompetencies" : {
            "description" : "hasrelatedcompetencies",
            "type" : "boolean",
            "nullable" : false
          },
          "linkedcourses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_enrolled_courses_by_timeline_classification_200_response_courses_inner"
            },
            "type" : "array"
          },
          "pluginbaseurl" : {
            "description" : "pluginbaseurl",
            "type" : "string",
            "nullable" : false
          },
          "relatedcompetencies" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "taxonomyterm" : {
            "description" : "taxonomyterm",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "competency", "comppath", "framework", "hascourses", "hasrelatedcompetencies", "linkedcourses", "pluginbaseurl", "relatedcompetencies", "scaleconfiguration", "scaleid", "taxonomyterm" ]
      },
      "tool_lp_data_for_course_competencies_page_request" : {
        "properties" : {
          "courseid" : {
            "description" : "The course id",
            "type" : "integer",
            "nullable" : true
          },
          "moduleid" : {
            "default" : 0,
            "description" : "The module id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "courseid" ]
      },
      "tool_lp_data_for_course_competencies_page_200_response_competencies_inner_coursecompetency" : {
        "properties" : {
          "competencyid" : {
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "ruleoutcome" : {
            "default" : 1,
            "description" : "ruleoutcome",
            "type" : "integer",
            "nullable" : false
          },
          "sortorder" : {
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencyid", "courseid", "id", "ruleoutcome", "sortorder", "timecreated", "timemodified", "usermodified" ]
      },
      "tool_lp_data_for_course_competencies_page_200_response_competencies_inner_coursemodules_inner" : {
        "default" : null,
        "properties" : {
          "iconurl" : {
            "description" : "iconurl",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_course_competencies_page_200_response_competencies_inner_plans_inner" : {
        "default" : null,
        "properties" : {
          "canbeedited" : {
            "description" : "canbeedited",
            "type" : "boolean",
            "nullable" : false
          },
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "canrequestreview" : {
            "description" : "canrequestreview",
            "type" : "boolean",
            "nullable" : false
          },
          "canreview" : {
            "description" : "canreview",
            "type" : "boolean",
            "nullable" : false
          },
          "commentarea" : {
            "$ref" : "#/components/schemas/core_competency_read_plan_200_response_commentarea"
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "duedateformatted" : {
            "description" : "duedateformatted",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "isactive" : {
            "description" : "isactive",
            "type" : "boolean",
            "nullable" : false
          },
          "isapproveallowed" : {
            "description" : "isapproveallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isbasedontemplate" : {
            "description" : "isbasedontemplate",
            "type" : "boolean",
            "nullable" : false
          },
          "iscancelreviewrequestallowed" : {
            "description" : "iscancelreviewrequestallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iscompleteallowed" : {
            "description" : "iscompleteallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iscompleted" : {
            "description" : "iscompleted",
            "type" : "boolean",
            "nullable" : false
          },
          "isdraft" : {
            "description" : "isdraft",
            "type" : "boolean",
            "nullable" : false
          },
          "isinreview" : {
            "description" : "isinreview",
            "type" : "boolean",
            "nullable" : false
          },
          "isreopenallowed" : {
            "description" : "isreopenallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isrequestreviewallowed" : {
            "description" : "isrequestreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstartreviewallowed" : {
            "description" : "isstartreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstopreviewallowed" : {
            "description" : "isstopreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isunapproveallowed" : {
            "description" : "isunapproveallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isunlinkallowed" : {
            "description" : "isunlinkallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "iswaitingforreview" : {
            "description" : "iswaitingforreview",
            "type" : "boolean",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "origtemplateid" : {
            "description" : "origtemplateid",
            "type" : "integer",
            "nullable" : true
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "reviewerid" : {
            "description" : "reviewerid",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : 0,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "statusname" : {
            "description" : "statusname",
            "type" : "string",
            "nullable" : false
          },
          "template" : {
            "$ref" : "#/components/schemas/core_competency_create_template_200_response"
          },
          "templateid" : {
            "description" : "templateid",
            "type" : "integer",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_course_competencies_page_200_response_competencies_inner_ruleoutcomeoptions_inner" : {
        "default" : null,
        "properties" : {
          "selected" : {
            "default" : null,
            "description" : "If this is the currently selected option",
            "type" : "boolean",
            "nullable" : true
          },
          "text" : {
            "default" : null,
            "description" : "The name of the option",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The option value",
            "type" : "integer",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_course_competencies_page_200_response_competencies_inner_usercompetencycourse" : {
        "properties" : {
          "competencyid" : {
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "proficiency" : {
            "description" : "proficiency",
            "type" : "boolean",
            "nullable" : true
          },
          "proficiencyname" : {
            "description" : "proficiencyname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencyid", "courseid", "grade", "gradename", "id", "proficiency", "proficiencyname", "timecreated", "timemodified", "userid", "usermodified" ]
      },
      "tool_lp_data_for_course_competencies_page_200_response_competencies_inner" : {
        "default" : null,
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
          },
          "comppath" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response_comppath"
          },
          "coursecompetency" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_coursecompetency"
          },
          "coursemodules" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_coursemodules_inner"
            },
            "type" : "array"
          },
          "plans" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_plans_inner"
            },
            "type" : "array"
          },
          "ruleoutcomeoptions" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_ruleoutcomeoptions_inner"
            },
            "type" : "array"
          },
          "usercompetencycourse" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_usercompetencycourse"
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_course_competencies_page_200_response_settings" : {
        "properties" : {
          "courseid" : {
            "description" : "courseid",
            "type" : "integer",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "pushratingstouserplans" : {
            "default" : { },
            "description" : "pushratingstouserplans",
            "type" : "boolean",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "courseid", "id", "pushratingstouserplans", "timecreated", "timemodified", "usermodified" ]
      },
      "tool_lp_data_for_course_competencies_page_200_response_statistics" : {
        "properties" : {
          "canbegradedincourse" : {
            "default" : null,
            "description" : "canbegradedincourse",
            "type" : "boolean",
            "nullable" : false
          },
          "canmanagecoursecompetencies" : {
            "default" : null,
            "description" : "canmanagecoursecompetencies",
            "type" : "boolean",
            "nullable" : false
          },
          "competencycount" : {
            "description" : "competencycount",
            "type" : "integer",
            "nullable" : false
          },
          "leastproficient" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "leastproficientcount" : {
            "default" : null,
            "description" : "leastproficientcount",
            "type" : "integer",
            "nullable" : false
          },
          "proficientcompetencycount" : {
            "default" : null,
            "description" : "proficientcompetencycount",
            "type" : "integer",
            "nullable" : false
          },
          "proficientcompetencypercentage" : {
            "default" : null,
            "description" : "proficientcompetencypercentage",
            "type" : "number",
            "nullable" : false
          },
          "proficientcompetencypercentageformatted" : {
            "default" : null,
            "description" : "proficientcompetencypercentageformatted",
            "type" : "string",
            "nullable" : false
          }
        },
        "required" : [ "canbegradedincourse", "canmanagecoursecompetencies", "competencycount", "leastproficient", "leastproficientcount", "proficientcompetencycount", "proficientcompetencypercentage", "proficientcompetencypercentageformatted" ]
      },
      "tool_lp_data_for_course_competencies_page_200_response" : {
        "properties" : {
          "canconfigurecoursecompetencies" : {
            "default" : null,
            "description" : "User can configure course competency settings",
            "type" : "boolean",
            "nullable" : true
          },
          "cangradecompetencies" : {
            "default" : null,
            "description" : "User can grade competencies.",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanagecompetencyframeworks" : {
            "default" : null,
            "description" : "User can manage competency frameworks",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanagecoursecompetencies" : {
            "default" : null,
            "description" : "User can manage linked course competencies",
            "type" : "boolean",
            "nullable" : true
          },
          "competencies" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "courseid" : {
            "default" : null,
            "description" : "The current course id",
            "type" : "integer",
            "nullable" : true
          },
          "gradableuserid" : {
            "default" : null,
            "description" : "Current user id, if the user is a gradable user.",
            "type" : "integer",
            "nullable" : true
          },
          "manageurl" : {
            "default" : null,
            "description" : "Url to the manage competencies page.",
            "type" : "string",
            "nullable" : true
          },
          "pagecontextid" : {
            "default" : null,
            "description" : "The current page context ID.",
            "type" : "integer",
            "nullable" : true
          },
          "pluginbaseurl" : {
            "default" : null,
            "description" : "Url to the course competencies page.",
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_settings"
          },
          "statistics" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_statistics"
          }
        },
        "required" : [ "canconfigurecoursecompetencies", "cangradecompetencies", "canmanagecompetencyframeworks", "canmanagecoursecompetencies", "competencies", "courseid", "manageurl", "pagecontextid", "pluginbaseurl", "settings", "statistics" ]
      },
      "tool_lp_data_for_plan_page_200_response_competencies_inner_usercompetency" : {
        "properties" : {
          "canrequestreview" : {
            "description" : "canrequestreview",
            "type" : "boolean",
            "nullable" : false
          },
          "canreview" : {
            "description" : "canreview",
            "type" : "boolean",
            "nullable" : false
          },
          "competencyid" : {
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "iscancelreviewrequestallowed" : {
            "description" : "iscancelreviewrequestallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isrequestreviewallowed" : {
            "description" : "isrequestreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstartreviewallowed" : {
            "description" : "isstartreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstatusidle" : {
            "default" : null,
            "description" : "isstatusidle",
            "type" : "boolean",
            "nullable" : false
          },
          "isstatusinreview" : {
            "default" : null,
            "description" : "isstatusinreview",
            "type" : "boolean",
            "nullable" : false
          },
          "isstatuswaitingforreview" : {
            "default" : null,
            "description" : "isstatuswaitingforreview",
            "type" : "boolean",
            "nullable" : false
          },
          "isstopreviewallowed" : {
            "description" : "isstopreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "proficiency" : {
            "description" : "proficiency",
            "type" : "boolean",
            "nullable" : true
          },
          "proficiencyname" : {
            "description" : "proficiencyname",
            "type" : "string",
            "nullable" : false
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "reviewerid" : {
            "description" : "reviewerid",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : 0,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "statusname" : {
            "description" : "statusname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "canrequestreview", "canreview", "competencyid", "grade", "gradename", "id", "iscancelreviewrequestallowed", "isrequestreviewallowed", "isstartreviewallowed", "isstatusidle", "isstatusinreview", "isstatuswaitingforreview", "isstopreviewallowed", "proficiency", "proficiencyname", "reviewerid", "status", "statusname", "timecreated", "timemodified", "url", "userid", "usermodified" ]
      },
      "tool_lp_data_for_plan_page_200_response_competencies_inner_usercompetencyplan" : {
        "properties" : {
          "competencyid" : {
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "planid" : {
            "default" : null,
            "description" : "planid",
            "type" : "integer",
            "nullable" : false
          },
          "proficiency" : {
            "description" : "proficiency",
            "type" : "boolean",
            "nullable" : true
          },
          "proficiencyname" : {
            "description" : "proficiencyname",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "default" : 0,
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencyid", "grade", "gradename", "id", "planid", "proficiency", "proficiencyname", "sortorder", "timecreated", "timemodified", "userid", "usermodified" ]
      },
      "tool_lp_data_for_plan_page_200_response_competencies_inner" : {
        "default" : null,
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
          },
          "comppath" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response_comppath"
          },
          "usercompetency" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_plan_page_200_response_competencies_inner_usercompetency"
          },
          "usercompetencyplan" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_plan_page_200_response_competencies_inner_usercompetencyplan"
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_plan_page_200_response" : {
        "properties" : {
          "competencies" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_plan_page_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "competencycount" : {
            "default" : null,
            "description" : "Count of competencies",
            "type" : "integer",
            "nullable" : true
          },
          "contextid" : {
            "default" : null,
            "description" : "Context ID.",
            "type" : "integer",
            "nullable" : true
          },
          "plan" : {
            "$ref" : "#/components/schemas/core_competency_read_plan_200_response"
          },
          "pluginbaseurl" : {
            "default" : null,
            "description" : "Plugin base URL.",
            "type" : "string",
            "nullable" : true
          },
          "proficientcompetencycount" : {
            "default" : null,
            "description" : "Count of proficientcompetencies",
            "type" : "integer",
            "nullable" : true
          },
          "proficientcompetencypercentage" : {
            "default" : null,
            "description" : "Percentage of competencies proficient",
            "type" : "number",
            "nullable" : true
          },
          "proficientcompetencypercentageformatted" : {
            "default" : null,
            "description" : "Displayable percentage",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "competencies", "competencycount", "contextid", "plan", "pluginbaseurl", "proficientcompetencycount", "proficientcompetencypercentage", "proficientcompetencypercentageformatted" ]
      },
      "tool_lp_data_for_plans_page_request" : {
        "properties" : {
          "userid" : {
            "description" : "The user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "tool_lp_data_for_plans_page_200_response" : {
        "properties" : {
          "canmanageuserplans" : {
            "default" : null,
            "description" : "Can the current user manage the user's plans",
            "type" : "boolean",
            "nullable" : true
          },
          "canreaduserevidence" : {
            "default" : null,
            "description" : "Can the current user view the user's evidence",
            "type" : "boolean",
            "nullable" : true
          },
          "navigation" : {
            "items" : {
              "description" : "HTML for a navigation item that should be on this page",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "plans" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_plans_inner"
            },
            "type" : "array"
          },
          "pluginbaseurl" : {
            "description" : "Url to the tool_lp plugin folder on this Moodle site",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The learning plan user id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "canmanageuserplans", "canreaduserevidence", "navigation", "plans", "pluginbaseurl", "userid" ]
      },
      "tool_lp_data_for_related_competencies_section_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "The competency id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid" ]
      },
      "tool_lp_data_for_related_competencies_section_200_response" : {
        "properties" : {
          "relatedcompetencies" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "showdeleterelatedaction" : {
            "default" : null,
            "description" : "Whether to show the delete relation link or not",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "relatedcompetencies", "showdeleterelatedaction" ]
      },
      "tool_lp_data_for_template_competencies_page_request" : {
        "properties" : {
          "pagecontext" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "templateid" : {
            "description" : "The template id",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "pagecontext", "templateid" ]
      },
      "tool_lp_data_for_template_competencies_page_200_response_competencies_inner" : {
        "default" : null,
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
          },
          "comppath" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response_comppath"
          },
          "framework" : {
            "$ref" : "#/components/schemas/core_competency_duplicate_competency_framework_200_response"
          },
          "hascourses" : {
            "description" : "hascourses",
            "type" : "boolean",
            "nullable" : false
          },
          "hasrelatedcompetencies" : {
            "description" : "hasrelatedcompetencies",
            "type" : "boolean",
            "nullable" : false
          },
          "linkedcourses" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_enrolled_courses_by_timeline_classification_200_response_courses_inner"
            },
            "type" : "array"
          },
          "pluginbaseurl" : {
            "description" : "pluginbaseurl",
            "type" : "string",
            "nullable" : false
          },
          "relatedcompetencies" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "scaleconfiguration" : {
            "description" : "scaleconfiguration",
            "type" : "string",
            "nullable" : false
          },
          "scaleid" : {
            "description" : "scaleid",
            "type" : "integer",
            "nullable" : false
          },
          "taxonomyterm" : {
            "description" : "taxonomyterm",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_template_competencies_page_200_response_statistics" : {
        "properties" : {
          "competencycount" : {
            "description" : "competencycount",
            "type" : "integer",
            "nullable" : false
          },
          "completedplancount" : {
            "default" : null,
            "description" : "completedplancount",
            "type" : "integer",
            "nullable" : false
          },
          "completedplanpercentage" : {
            "default" : null,
            "description" : "completedplanpercentage",
            "type" : "number",
            "nullable" : false
          },
          "completedplanpercentageformatted" : {
            "default" : null,
            "description" : "completedplanpercentageformatted",
            "type" : "string",
            "nullable" : false
          },
          "leastproficient" : {
            "items" : {
              "$ref" : "#/components/schemas/core_competency_read_user_evidence_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "leastproficientcount" : {
            "description" : "leastproficientcount",
            "type" : "integer",
            "nullable" : false
          },
          "linkedcompetencycount" : {
            "default" : null,
            "description" : "linkedcompetencycount",
            "type" : "integer",
            "nullable" : false
          },
          "linkedcompetencypercentage" : {
            "default" : null,
            "description" : "linkedcompetencypercentage",
            "type" : "number",
            "nullable" : false
          },
          "linkedcompetencypercentageformatted" : {
            "default" : null,
            "description" : "linkedcompetencypercentageformatted",
            "type" : "string",
            "nullable" : false
          },
          "plancount" : {
            "default" : null,
            "description" : "plancount",
            "type" : "integer",
            "nullable" : false
          },
          "proficientusercompetencyplancount" : {
            "default" : null,
            "description" : "proficientusercompetencyplancount",
            "type" : "integer",
            "nullable" : false
          },
          "proficientusercompetencyplanpercentage" : {
            "default" : null,
            "description" : "proficientusercompetencyplanpercentage",
            "type" : "number",
            "nullable" : false
          },
          "proficientusercompetencyplanpercentageformatted" : {
            "default" : null,
            "description" : "proficientusercompetencyplanpercentageformatted",
            "type" : "string",
            "nullable" : false
          },
          "unlinkedcompetencycount" : {
            "default" : null,
            "description" : "unlinkedcompetencycount",
            "type" : "integer",
            "nullable" : false
          },
          "usercompetencyplancount" : {
            "default" : null,
            "description" : "usercompetencyplancount",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencycount", "completedplancount", "completedplanpercentage", "completedplanpercentageformatted", "leastproficient", "leastproficientcount", "linkedcompetencycount", "linkedcompetencypercentage", "linkedcompetencypercentageformatted", "plancount", "proficientusercompetencyplancount", "proficientusercompetencyplanpercentage", "proficientusercompetencyplanpercentageformatted", "unlinkedcompetencycount", "usercompetencyplancount" ]
      },
      "tool_lp_data_for_template_competencies_page_200_response" : {
        "properties" : {
          "canmanagecompetencyframeworks" : {
            "description" : "User can manage competency frameworks",
            "type" : "boolean",
            "nullable" : true
          },
          "canmanagetemplatecompetencies" : {
            "default" : null,
            "description" : "User can manage learning plan templates",
            "type" : "boolean",
            "nullable" : true
          },
          "competencies" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_template_competencies_page_200_response_competencies_inner"
            },
            "type" : "array"
          },
          "manageurl" : {
            "description" : "Url to the manage competencies page.",
            "type" : "string",
            "nullable" : true
          },
          "pagecontextid" : {
            "description" : "Context ID",
            "type" : "integer",
            "nullable" : true
          },
          "pluginbaseurl" : {
            "default" : null,
            "description" : "Base URL of the plugin.",
            "type" : "string",
            "nullable" : true
          },
          "statistics" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_template_competencies_page_200_response_statistics"
          },
          "template" : {
            "$ref" : "#/components/schemas/core_competency_create_template_200_response"
          }
        },
        "required" : [ "canmanagecompetencyframeworks", "canmanagetemplatecompetencies", "competencies", "manageurl", "pagecontextid", "pluginbaseurl", "statistics", "template" ]
      },
      "tool_lp_data_for_templates_manage_page_200_response_templates_inner" : {
        "default" : null,
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "canread" : {
            "description" : "canread",
            "type" : "boolean",
            "nullable" : false
          },
          "cohortscount" : {
            "description" : "cohortscount",
            "type" : "integer",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "contextname" : {
            "description" : "contextname",
            "type" : "string",
            "nullable" : false
          },
          "contextnamenoprefix" : {
            "description" : "contextnamenoprefix",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "duedate" : {
            "default" : 0,
            "description" : "duedate",
            "type" : "integer",
            "nullable" : false
          },
          "duedateformatted" : {
            "description" : "duedateformatted",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "planscount" : {
            "description" : "planscount",
            "type" : "integer",
            "nullable" : false
          },
          "shortname" : {
            "description" : "shortname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          },
          "visible" : {
            "default" : 1,
            "description" : "visible",
            "type" : "boolean",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_templates_manage_page_200_response" : {
        "properties" : {
          "canmanage" : {
            "default" : null,
            "description" : "Whether the user manage the templates",
            "type" : "boolean",
            "nullable" : true
          },
          "navigation" : {
            "items" : {
              "description" : "HTML for a navigation item that should be on this page",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "pagecontextid" : {
            "description" : "The page context id",
            "type" : "integer",
            "nullable" : true
          },
          "pluginbaseurl" : {
            "description" : "Url to the tool_lp plugin folder on this Moodle site",
            "type" : "string",
            "nullable" : true
          },
          "templates" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_templates_manage_page_200_response_templates_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "canmanage", "navigation", "pagecontextid", "pluginbaseurl", "templates" ]
      },
      "tool_lp_data_for_user_competency_summary_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "Data base record id for the competency",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "Data base record id for the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "userid" ]
      },
      "tool_lp_data_for_user_competency_summary_200_response_evidence_inner" : {
        "default" : null,
        "properties" : {
          "action" : {
            "description" : "action",
            "type" : "integer",
            "nullable" : false
          },
          "actionuser" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "actionuserid" : {
            "description" : "actionuserid",
            "type" : "integer",
            "nullable" : true
          },
          "candelete" : {
            "description" : "candelete",
            "type" : "boolean",
            "nullable" : false
          },
          "contextid" : {
            "description" : "contextid",
            "type" : "integer",
            "nullable" : false
          },
          "desca" : {
            "description" : "desca",
            "type" : "string",
            "nullable" : true
          },
          "desccomponent" : {
            "description" : "desccomponent",
            "type" : "string",
            "nullable" : false
          },
          "descidentifier" : {
            "description" : "descidentifier",
            "type" : "string",
            "nullable" : false
          },
          "description" : {
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "note" : {
            "description" : "note",
            "type" : "string",
            "nullable" : true
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : true
          },
          "usercompetencyid" : {
            "description" : "usercompetencyid",
            "type" : "integer",
            "nullable" : false
          },
          "userdate" : {
            "description" : "userdate",
            "type" : "string",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_user_competency_summary_200_response_usercompetency" : {
        "properties" : {
          "canrequestreview" : {
            "description" : "canrequestreview",
            "type" : "boolean",
            "nullable" : false
          },
          "canreview" : {
            "description" : "canreview",
            "type" : "boolean",
            "nullable" : false
          },
          "competencyid" : {
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "iscancelreviewrequestallowed" : {
            "description" : "iscancelreviewrequestallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isrequestreviewallowed" : {
            "description" : "isrequestreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstartreviewallowed" : {
            "description" : "isstartreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "isstatusidle" : {
            "description" : "isstatusidle",
            "type" : "boolean",
            "nullable" : false
          },
          "isstatusinreview" : {
            "description" : "isstatusinreview",
            "type" : "boolean",
            "nullable" : false
          },
          "isstatuswaitingforreview" : {
            "description" : "isstatuswaitingforreview",
            "type" : "boolean",
            "nullable" : false
          },
          "isstopreviewallowed" : {
            "description" : "isstopreviewallowed",
            "type" : "boolean",
            "nullable" : false
          },
          "proficiency" : {
            "description" : "proficiency",
            "type" : "boolean",
            "nullable" : true
          },
          "proficiencyname" : {
            "description" : "proficiencyname",
            "type" : "string",
            "nullable" : false
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "reviewerid" : {
            "description" : "reviewerid",
            "type" : "integer",
            "nullable" : true
          },
          "status" : {
            "default" : 0,
            "description" : "status",
            "type" : "integer",
            "nullable" : false
          },
          "statusname" : {
            "description" : "statusname",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "canrequestreview", "canreview", "competencyid", "grade", "gradename", "id", "iscancelreviewrequestallowed", "isrequestreviewallowed", "isstartreviewallowed", "isstatusidle", "isstatusinreview", "isstatuswaitingforreview", "isstopreviewallowed", "proficiency", "proficiencyname", "reviewerid", "status", "statusname", "timecreated", "timemodified", "url", "userid", "usermodified" ]
      },
      "tool_lp_data_for_user_competency_summary_200_response_usercompetencyplan" : {
        "properties" : {
          "competencyid" : {
            "description" : "competencyid",
            "type" : "integer",
            "nullable" : false
          },
          "grade" : {
            "description" : "grade",
            "type" : "integer",
            "nullable" : true
          },
          "gradename" : {
            "description" : "gradename",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "planid" : {
            "description" : "planid",
            "type" : "integer",
            "nullable" : false
          },
          "proficiency" : {
            "description" : "proficiency",
            "type" : "boolean",
            "nullable" : true
          },
          "proficiencyname" : {
            "description" : "proficiencyname",
            "type" : "string",
            "nullable" : false
          },
          "sortorder" : {
            "default" : 0,
            "description" : "sortorder",
            "type" : "integer",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "competencyid", "grade", "gradename", "id", "planid", "proficiency", "proficiencyname", "sortorder", "timecreated", "timemodified", "userid", "usermodified" ]
      },
      "tool_lp_data_for_user_competency_summary_200_response" : {
        "properties" : {
          "cangrade" : {
            "default" : null,
            "description" : "cangrade",
            "type" : "boolean",
            "nullable" : false
          },
          "commentarea" : {
            "$ref" : "#/components/schemas/core_competency_read_plan_200_response_commentarea"
          },
          "competency" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response"
          },
          "evidence" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response_evidence_inner"
            },
            "type" : "array"
          },
          "showrelatedcompetencies" : {
            "default" : null,
            "description" : "showrelatedcompetencies",
            "type" : "boolean",
            "nullable" : false
          },
          "user" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "usercompetency" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response_usercompetency"
          },
          "usercompetencycourse" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_usercompetencycourse"
          },
          "usercompetencyplan" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response_usercompetencyplan"
          }
        },
        "required" : [ "cangrade", "competency", "evidence", "showrelatedcompetencies", "user" ]
      },
      "tool_lp_data_for_user_competency_summary_in_course_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "Data base record id for the competency",
            "type" : "integer",
            "nullable" : true
          },
          "courseid" : {
            "default" : null,
            "description" : "Data base record id for the course",
            "type" : "integer",
            "nullable" : true
          },
          "userid" : {
            "description" : "Data base record id for the user",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "courseid", "userid" ]
      },
      "tool_lp_data_for_user_competency_summary_in_course_200_response_usercompetencysummary" : {
        "properties" : {
          "cangrade" : {
            "description" : "cangrade",
            "type" : "boolean",
            "nullable" : false
          },
          "commentarea" : {
            "$ref" : "#/components/schemas/core_competency_read_plan_200_response_commentarea"
          },
          "competency" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_competency_summary_200_response"
          },
          "evidence" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response_evidence_inner"
            },
            "type" : "array"
          },
          "showrelatedcompetencies" : {
            "description" : "showrelatedcompetencies",
            "type" : "boolean",
            "nullable" : false
          },
          "user" : {
            "$ref" : "#/components/schemas/core_competency_grade_competency_200_response_actionuser"
          },
          "usercompetency" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response_usercompetency"
          },
          "usercompetencycourse" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_usercompetencycourse"
          },
          "usercompetencyplan" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response_usercompetencyplan"
          }
        },
        "required" : [ "cangrade", "competency", "evidence", "showrelatedcompetencies", "user" ]
      },
      "tool_lp_data_for_user_competency_summary_in_course_200_response" : {
        "properties" : {
          "course" : {
            "$ref" : "#/components/schemas/core_calendar_get_action_events_by_courses_200_response_groupedbycourse_inner_events_inner_course"
          },
          "coursemodules" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_coursemodules_inner"
            },
            "type" : "array"
          },
          "plans" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_course_competencies_page_200_response_competencies_inner_plans_inner"
            },
            "type" : "array"
          },
          "pluginbaseurl" : {
            "description" : "pluginbaseurl",
            "type" : "string",
            "nullable" : false
          },
          "usercompetencysummary" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_in_course_200_response_usercompetencysummary"
          }
        },
        "required" : [ "course", "coursemodules", "plans", "pluginbaseurl", "usercompetencysummary" ]
      },
      "tool_lp_data_for_user_competency_summary_in_plan_request" : {
        "properties" : {
          "competencyid" : {
            "description" : "Data base record id for the competency",
            "type" : "integer",
            "nullable" : true
          },
          "planid" : {
            "description" : "Data base record id for the plan",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "competencyid", "planid" ]
      },
      "tool_lp_data_for_user_competency_summary_in_plan_200_response" : {
        "properties" : {
          "plan" : {
            "$ref" : "#/components/schemas/core_competency_read_plan_200_response"
          },
          "usercompetencysummary" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_in_course_200_response_usercompetencysummary"
          }
        },
        "required" : [ "plan", "usercompetencysummary" ]
      },
      "tool_lp_data_for_user_evidence_list_page_request" : {
        "properties" : {
          "userid" : {
            "description" : "The user ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "userid" ]
      },
      "tool_lp_data_for_user_evidence_list_page_200_response_evidence_inner_usercompetencies_inner" : {
        "default" : null,
        "properties" : {
          "competency" : {
            "$ref" : "#/components/schemas/core_competency_create_competency_200_response"
          },
          "usercompetency" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_competency_summary_200_response_usercompetency"
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_user_evidence_list_page_200_response_evidence_inner" : {
        "default" : null,
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "competencycount" : {
            "description" : "competencycount",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "filecount" : {
            "description" : "filecount",
            "type" : "integer",
            "nullable" : false
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner"
            },
            "type" : "array"
          },
          "hasurlorfiles" : {
            "description" : "hasurlorfiles",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "default" : "",
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "urlshort" : {
            "description" : "urlshort",
            "type" : "string",
            "nullable" : false
          },
          "usercompetencies" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_list_page_200_response_evidence_inner_usercompetencies_inner"
            },
            "type" : "array"
          },
          "userhasplan" : {
            "default" : null,
            "description" : "userhasplan",
            "type" : "boolean",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_data_for_user_evidence_list_page_200_response" : {
        "properties" : {
          "canmanage" : {
            "default" : null,
            "description" : "Can the current user manage the user's evidence",
            "type" : "boolean",
            "nullable" : true
          },
          "evidence" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_list_page_200_response_evidence_inner"
            },
            "type" : "array"
          },
          "navigation" : {
            "items" : {
              "description" : "HTML for a navigation item that should be on this page",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "pluginbaseurl" : {
            "description" : "Url to the tool_lp plugin folder on this Moodle site",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "description" : "The user ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "canmanage", "evidence", "navigation", "pluginbaseurl", "userid" ]
      },
      "tool_lp_data_for_user_evidence_page_request" : {
        "properties" : {
          "id" : {
            "default" : null,
            "description" : "The user evidence ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "id" ]
      },
      "tool_lp_data_for_user_evidence_page_200_response_userevidence" : {
        "properties" : {
          "canmanage" : {
            "description" : "canmanage",
            "type" : "boolean",
            "nullable" : false
          },
          "competencycount" : {
            "description" : "competencycount",
            "type" : "integer",
            "nullable" : false
          },
          "description" : {
            "default" : "",
            "description" : "description",
            "type" : "string",
            "nullable" : false
          },
          "descriptionformat" : {
            "default" : "1",
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "filecount" : {
            "description" : "filecount",
            "type" : "integer",
            "nullable" : false
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/mod_feedback_get_analysis_200_response_itemsdata_inner_item_itemfiles_inner"
            },
            "type" : "array"
          },
          "hasurlorfiles" : {
            "description" : "hasurlorfiles",
            "type" : "boolean",
            "nullable" : false
          },
          "id" : {
            "default" : 0,
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "name" : {
            "description" : "name",
            "type" : "string",
            "nullable" : false
          },
          "timecreated" : {
            "default" : 0,
            "description" : "timecreated",
            "type" : "integer",
            "nullable" : false
          },
          "timemodified" : {
            "default" : 0,
            "description" : "timemodified",
            "type" : "integer",
            "nullable" : false
          },
          "url" : {
            "default" : "",
            "description" : "url",
            "type" : "string",
            "nullable" : false
          },
          "urlshort" : {
            "description" : "urlshort",
            "type" : "string",
            "nullable" : false
          },
          "usercompetencies" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_list_page_200_response_evidence_inner_usercompetencies_inner"
            },
            "type" : "array"
          },
          "userhasplan" : {
            "description" : "userhasplan",
            "type" : "boolean",
            "nullable" : false
          },
          "userid" : {
            "description" : "userid",
            "type" : "integer",
            "nullable" : false
          },
          "usermodified" : {
            "default" : 0,
            "description" : "usermodified",
            "type" : "integer",
            "nullable" : false
          }
        },
        "required" : [ "canmanage", "competencycount", "description", "filecount", "files", "hasurlorfiles", "id", "name", "timecreated", "timemodified", "url", "urlshort", "userhasplan", "userid", "usermodified" ]
      },
      "tool_lp_data_for_user_evidence_page_200_response" : {
        "properties" : {
          "pluginbaseurl" : {
            "description" : "Url to the tool_lp plugin folder on this Moodle site",
            "type" : "string",
            "nullable" : true
          },
          "userevidence" : {
            "$ref" : "#/components/schemas/tool_lp_data_for_user_evidence_page_200_response_userevidence"
          }
        },
        "required" : [ "pluginbaseurl", "userevidence" ]
      },
      "tool_lp_search_cohorts_request" : {
        "properties" : {
          "context" : {
            "$ref" : "#/components/schemas/core_cohort_search_cohorts_request_context"
          },
          "includes" : {
            "default" : "parents",
            "description" : "What other contexts to fetch the frameworks from. (all, parents, self)",
            "type" : "string",
            "nullable" : true
          },
          "limitfrom" : {
            "default" : 0,
            "description" : "limitfrom we are fetching the records from",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 25,
            "description" : "Number of records to fetch",
            "type" : "integer",
            "nullable" : true
          },
          "query" : {
            "description" : "Query string",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "context", "query" ]
      },
      "tool_lp_search_cohorts_200_response_cohorts_inner" : {
        "default" : null,
        "properties" : {
          "customfields" : {
            "items" : {
              "$ref" : "#/components/schemas/core_course_get_courses_by_field_200_response_courses_inner_customfields_inner"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "cohort description",
            "type" : "string",
            "nullable" : true
          },
          "descriptionformat" : {
            "description" : "description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "ID of the cohort",
            "type" : "integer",
            "nullable" : true
          },
          "idnumber" : {
            "description" : "cohort idnumber",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "description" : "cohort name",
            "type" : "string",
            "nullable" : true
          },
          "theme" : {
            "description" : "cohort theme",
            "type" : "string",
            "nullable" : true
          },
          "visible" : {
            "description" : "cohort visible",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_lp_search_cohorts_200_response" : {
        "properties" : {
          "cohorts" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_search_cohorts_200_response_cohorts_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "cohorts" ]
      },
      "tool_lp_search_users_request" : {
        "properties" : {
          "capability" : {
            "default" : null,
            "description" : "Required capability",
            "type" : "string",
            "nullable" : true
          },
          "limitfrom" : {
            "default" : 0,
            "description" : "Number of records to skip",
            "type" : "integer",
            "nullable" : true
          },
          "limitnum" : {
            "default" : 100,
            "description" : "Number of records to fetch",
            "type" : "string",
            "nullable" : true
          },
          "query" : {
            "description" : "Query string",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "capability", "query" ]
      },
      "tool_lp_search_users_200_response_users_inner" : {
        "default" : null,
        "properties" : {
          "department" : {
            "default" : "",
            "description" : "department",
            "type" : "string",
            "nullable" : false
          },
          "email" : {
            "default" : "",
            "description" : "email",
            "type" : "string",
            "nullable" : false
          },
          "fullname" : {
            "description" : "fullname",
            "type" : "string",
            "nullable" : false
          },
          "id" : {
            "description" : "id",
            "type" : "integer",
            "nullable" : false
          },
          "identity" : {
            "description" : "identity",
            "type" : "string",
            "nullable" : false
          },
          "idnumber" : {
            "default" : "",
            "description" : "idnumber",
            "type" : "string",
            "nullable" : false
          },
          "institution" : {
            "default" : "",
            "description" : "institution",
            "type" : "string",
            "nullable" : false
          },
          "phone1" : {
            "default" : "",
            "description" : "phone1",
            "type" : "string",
            "nullable" : false
          },
          "phone2" : {
            "default" : "",
            "description" : "phone2",
            "type" : "string",
            "nullable" : false
          },
          "profileimageurl" : {
            "description" : "profileimageurl",
            "type" : "string",
            "nullable" : false
          },
          "profileimageurlsmall" : {
            "description" : "profileimageurlsmall",
            "type" : "string",
            "nullable" : false
          },
          "profileurl" : {
            "description" : "profileurl",
            "type" : "string",
            "nullable" : false
          }
        },
        "nullable" : false
      },
      "tool_lp_search_users_200_response" : {
        "properties" : {
          "count" : {
            "default" : null,
            "description" : "Total number of results.",
            "type" : "integer",
            "nullable" : true
          },
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_lp_search_users_200_response_users_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "count", "users" ]
      },
      "tool_mobile_call_external_functions_request_requests_inner" : {
        "default" : null,
        "properties" : {
          "arguments" : {
            "default" : "{}",
            "description" : "JSON-encoded object with named arguments",
            "type" : "string",
            "nullable" : true
          },
          "function" : {
            "default" : null,
            "description" : "Function name",
            "type" : "string",
            "nullable" : true
          },
          "settingfileurl" : {
            "default" : true,
            "description" : "Rewrite plugin file URLs",
            "type" : "boolean",
            "nullable" : true
          },
          "settingfilter" : {
            "default" : false,
            "description" : "Filter text",
            "type" : "boolean",
            "nullable" : true
          },
          "settinglang" : {
            "default" : "",
            "description" : "Session language",
            "type" : "string",
            "nullable" : true
          },
          "settingraw" : {
            "default" : false,
            "description" : "Return raw text",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_call_external_functions_request" : {
        "properties" : {
          "requests" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_call_external_functions_request_requests_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "requests" ]
      },
      "tool_mobile_call_external_functions_200_response_responses_inner" : {
        "default" : null,
        "properties" : {
          "data" : {
            "default" : null,
            "description" : "JSON-encoded response data",
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "default" : null,
            "description" : "Whether an exception was thrown.",
            "type" : "boolean",
            "nullable" : true
          },
          "exception" : {
            "default" : null,
            "description" : "JSON-encoed exception info",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_call_external_functions_200_response" : {
        "properties" : {
          "responses" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_call_external_functions_200_response_responses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "responses" ]
      },
      "tool_mobile_get_autologin_key_request" : {
        "properties" : {
          "privatetoken" : {
            "default" : null,
            "description" : "Private token, usually generated by login/token.php",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "privatetoken" ]
      },
      "tool_mobile_get_autologin_key_200_response" : {
        "properties" : {
          "autologinurl" : {
            "default" : null,
            "description" : "Auto-login URL.",
            "type" : "string",
            "nullable" : true
          },
          "key" : {
            "default" : null,
            "description" : "Auto-login key for a single usage with time expiration.",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "autologinurl", "key" ]
      },
      "tool_mobile_get_config_request" : {
        "properties" : {
          "section" : {
            "default" : "",
            "description" : "Settings section name.",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "tool_mobile_get_config_200_response_settings_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "The name of the setting",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "The value of the setting",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_get_config_200_response" : {
        "properties" : {
          "settings" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_get_config_200_response_settings_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "settings" ]
      },
      "tool_mobile_get_content_request_args_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "default" : null,
            "description" : "Param name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Param value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_get_content_request" : {
        "properties" : {
          "args" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_get_content_request_args_inner"
            },
            "type" : "array"
          },
          "component" : {
            "default" : null,
            "description" : "Component where the class is e.g. mod_assign.",
            "type" : "string",
            "nullable" : true
          },
          "method" : {
            "default" : null,
            "description" : "Method to execute in class \\$component\\output\\mobile.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "method" ]
      },
      "tool_mobile_get_content_200_response_otherdata_inner" : {
        "default" : null,
        "properties" : {
          "name" : {
            "description" : "Field name.",
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "default" : null,
            "description" : "Field value.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_get_content_200_response_restrict" : {
        "properties" : {
          "courses" : {
            "items" : {
              "description" : "course id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "users" : {
            "items" : {
              "description" : "user id",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          }
        }
      },
      "tool_mobile_get_content_200_response_templates_inner" : {
        "default" : null,
        "properties" : {
          "html" : {
            "default" : null,
            "description" : "HTML code.",
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "default" : null,
            "description" : "ID of the template.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_get_content_200_response" : {
        "properties" : {
          "disabled" : {
            "default" : null,
            "description" : "Whether we consider this disabled or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/core_block_get_dashboard_blocks_200_response_blocks_inner_contents_files_inner"
            },
            "type" : "array"
          },
          "javascript" : {
            "default" : null,
            "description" : "JavaScript code.",
            "type" : "string",
            "nullable" : true
          },
          "otherdata" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_get_content_200_response_otherdata_inner"
            },
            "type" : "array"
          },
          "restrict" : {
            "$ref" : "#/components/schemas/tool_mobile_get_content_200_response_restrict"
          },
          "templates" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_get_content_200_response_templates_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "files", "javascript", "otherdata", "restrict", "templates" ]
      },
      "tool_mobile_get_plugins_supporting_mobile_200_response_plugins_inner" : {
        "default" : null,
        "properties" : {
          "addon" : {
            "default" : null,
            "description" : "The Mobile addon (package) name.",
            "type" : "string",
            "nullable" : true
          },
          "component" : {
            "default" : null,
            "description" : "The plugin component name.",
            "type" : "string",
            "nullable" : true
          },
          "dependencies" : {
            "items" : {
              "default" : null,
              "description" : "Mobile addon name.",
              "type" : "object",
              "nullable" : true
            },
            "type" : "array"
          },
          "filehash" : {
            "default" : null,
            "description" : "The addon package hash or empty if it doesn't exist.",
            "type" : "string",
            "nullable" : true
          },
          "filesize" : {
            "default" : null,
            "description" : "The addon package size or empty if it doesn't exist.",
            "type" : "integer",
            "nullable" : true
          },
          "fileurl" : {
            "default" : null,
            "description" : "The addon package url for download\n                                                            or empty if it doesn't exist.",
            "type" : "string",
            "nullable" : true
          },
          "handlers" : {
            "default" : null,
            "description" : "Handlers definition (JSON)",
            "type" : "string",
            "nullable" : true
          },
          "lang" : {
            "default" : null,
            "description" : "Language strings used by the handlers (JSON)",
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "default" : null,
            "description" : "The plugin version number.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_get_plugins_supporting_mobile_200_response" : {
        "properties" : {
          "plugins" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_get_plugins_supporting_mobile_200_response_plugins_inner"
            },
            "type" : "array"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "plugins" ]
      },
      "tool_mobile_get_public_config_200_response_identityproviders_inner" : {
        "default" : null,
        "properties" : {
          "iconurl" : {
            "default" : null,
            "description" : "The icon URL for the provider.",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The identity provider name.",
            "type" : "string",
            "nullable" : true
          },
          "url" : {
            "default" : null,
            "description" : "The URL of the provider.",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_mobile_get_public_config_200_response" : {
        "properties" : {
          "agedigitalconsentverification" : {
            "default" : null,
            "description" : "Whether age digital consent verification\n                    is enabled.",
            "type" : "boolean",
            "nullable" : true
          },
          "authinstructions" : {
            "default" : null,
            "description" : "Authentication instructions.",
            "type" : "string",
            "nullable" : true
          },
          "authloginviaemail" : {
            "default" : null,
            "description" : "Whether log in via email is enabled.",
            "type" : "integer",
            "nullable" : true
          },
          "authnoneenabled" : {
            "default" : null,
            "description" : "Whether auth none is enabled.",
            "type" : "integer",
            "nullable" : true
          },
          "autolang" : {
            "default" : null,
            "description" : "Whether to detect default language\n                    from browser setting.",
            "type" : "integer",
            "nullable" : true
          },
          "compactlogourl" : {
            "default" : null,
            "description" : "The site compact logo URL",
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "default" : null,
            "description" : "Default site country",
            "type" : "string",
            "nullable" : true
          },
          "enablemobilewebservice" : {
            "default" : null,
            "description" : "Whether the Mobile service is enabled.",
            "type" : "integer",
            "nullable" : true
          },
          "enablewebservices" : {
            "default" : null,
            "description" : "Whether Web Services are enabled.",
            "type" : "integer",
            "nullable" : true
          },
          "forgottenpasswordurl" : {
            "default" : null,
            "description" : "Forgotten password URL.",
            "type" : "string",
            "nullable" : true
          },
          "guestlogin" : {
            "default" : null,
            "description" : "Whether guest login is enabled.",
            "type" : "integer",
            "nullable" : true
          },
          "httpswwwroot" : {
            "default" : null,
            "description" : "Site https URL (if httpslogin is enabled).",
            "type" : "string",
            "nullable" : true
          },
          "identityproviders" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_mobile_get_public_config_200_response_identityproviders_inner"
            },
            "type" : "array"
          },
          "lang" : {
            "default" : null,
            "description" : "Default language for the site.",
            "type" : "string",
            "nullable" : true
          },
          "langlist" : {
            "default" : null,
            "description" : "Languages on language menu.",
            "type" : "string",
            "nullable" : true
          },
          "langmenu" : {
            "default" : null,
            "description" : "Whether the language menu should be displayed.",
            "type" : "integer",
            "nullable" : true
          },
          "launchurl" : {
            "default" : null,
            "description" : "SSO login launch URL.",
            "type" : "string",
            "nullable" : true
          },
          "locale" : {
            "default" : null,
            "description" : "Sitewide locale.",
            "type" : "string",
            "nullable" : true
          },
          "logourl" : {
            "default" : null,
            "description" : "The site logo URL",
            "type" : "string",
            "nullable" : true
          },
          "maintenanceenabled" : {
            "default" : null,
            "description" : "Whether site maintenance is enabled.",
            "type" : "integer",
            "nullable" : true
          },
          "maintenancemessage" : {
            "default" : null,
            "description" : "Maintenance message.",
            "type" : "string",
            "nullable" : true
          },
          "mobilecssurl" : {
            "description" : "Mobile custom CSS theme",
            "type" : "string",
            "nullable" : true
          },
          "registerauth" : {
            "default" : null,
            "description" : "Authentication method for user registration.",
            "type" : "string",
            "nullable" : true
          },
          "rememberusername" : {
            "default" : null,
            "description" : "Values: 0 for No, 1 for Yes, 2 for optional.",
            "type" : "integer",
            "nullable" : true
          },
          "sitename" : {
            "default" : null,
            "description" : "Site name.",
            "type" : "string",
            "nullable" : true
          },
          "supportavailability" : {
            "default" : null,
            "description" : "Determines who has access to contact site support.",
            "type" : "integer",
            "nullable" : true
          },
          "supportemail" : {
            "default" : null,
            "description" : "Site support contact email\n                    (only if age verification is enabled).",
            "type" : "string",
            "nullable" : true
          },
          "supportname" : {
            "default" : null,
            "description" : "Site support contact name\n                    (only if age verification is enabled).",
            "type" : "string",
            "nullable" : true
          },
          "supportpage" : {
            "default" : null,
            "description" : "Site support page link.",
            "type" : "string",
            "nullable" : true
          },
          "tool_mobile_androidappid" : {
            "default" : null,
            "description" : "Android app's unique identifier.",
            "type" : "string",
            "nullable" : true
          },
          "tool_mobile_disabledfeatures" : {
            "default" : null,
            "description" : "Disabled features in the app",
            "type" : "string",
            "nullable" : true
          },
          "tool_mobile_iosappid" : {
            "default" : null,
            "description" : "iOS app's unique identifier.",
            "type" : "string",
            "nullable" : true
          },
          "tool_mobile_minimumversion" : {
            "default" : null,
            "description" : "Minimum required version to access.",
            "type" : "string",
            "nullable" : true
          },
          "tool_mobile_qrcodetype" : {
            "default" : null,
            "description" : "QR login configuration.",
            "type" : "integer",
            "nullable" : true
          },
          "tool_mobile_setuplink" : {
            "default" : null,
            "description" : "App download page.",
            "type" : "string",
            "nullable" : true
          },
          "typeoflogin" : {
            "default" : null,
            "description" : "The type of login. 1 for app, 2 for browser, 3 for embedded.",
            "type" : "integer",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          },
          "wwwroot" : {
            "default" : null,
            "description" : "Site URL.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "authinstructions", "authloginviaemail", "authnoneenabled", "enablemobilewebservice", "enablewebservices", "forgottenpasswordurl", "guestlogin", "httpswwwroot", "maintenanceenabled", "maintenancemessage", "registerauth", "rememberusername", "sitename", "typeoflogin", "wwwroot" ]
      },
      "tool_mobile_get_tokens_for_qr_login_request" : {
        "properties" : {
          "qrloginkey" : {
            "default" : null,
            "description" : "The user key for validating the request.",
            "type" : "string",
            "nullable" : true
          },
          "userid" : {
            "default" : null,
            "description" : "The user the key belongs to.",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "qrloginkey", "userid" ]
      },
      "tool_mobile_get_tokens_for_qr_login_200_response" : {
        "properties" : {
          "privatetoken" : {
            "default" : null,
            "description" : "Private token used for auto-login processes.",
            "type" : "string",
            "nullable" : true
          },
          "token" : {
            "default" : null,
            "description" : "A valid WebService token for the official mobile app service.",
            "type" : "string",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "privatetoken", "token" ]
      },
      "tool_mobile_validate_subscription_key_request" : {
        "properties" : {
          "key" : {
            "default" : null,
            "description" : "Site subscription temporary key.",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "key" ]
      },
      "tool_mobile_validate_subscription_key_200_response" : {
        "properties" : {
          "validated" : {
            "default" : null,
            "description" : "Whether the key is validated or not.",
            "type" : "boolean",
            "nullable" : true
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "validated" ]
      },
      "tool_moodlenet_search_courses_request" : {
        "properties" : {
          "searchvalue" : {
            "default" : null,
            "description" : "search value",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "searchvalue" ]
      },
      "tool_moodlenet_search_courses_200_response_courses_inner" : {
        "default" : null,
        "properties" : {
          "coursecategory" : {
            "default" : null,
            "description" : "Category name",
            "type" : "string",
            "nullable" : true
          },
          "courseimage" : {
            "default" : null,
            "description" : "course image",
            "type" : "string",
            "nullable" : true
          },
          "fullname" : {
            "description" : "course full name",
            "type" : "string",
            "nullable" : true
          },
          "hidden" : {
            "default" : null,
            "description" : "is the course visible",
            "type" : "integer",
            "nullable" : true
          },
          "id" : {
            "description" : "course id",
            "type" : "integer",
            "nullable" : true
          },
          "viewurl" : {
            "default" : null,
            "description" : "Next step of import",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_moodlenet_search_courses_200_response" : {
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_moodlenet_search_courses_200_response_courses_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "courses" ]
      },
      "tool_moodlenet_verify_webfinger_request" : {
        "properties" : {
          "course" : {
            "default" : null,
            "description" : "The course we are adding to",
            "type" : "integer",
            "nullable" : true
          },
          "profileurl" : {
            "default" : null,
            "description" : "The profile url that the user has given us",
            "type" : "string",
            "nullable" : true
          },
          "section" : {
            "default" : null,
            "description" : "The section within the course we are adding to",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "course", "profileurl", "section" ]
      },
      "tool_moodlenet_verify_webfinger_200_response" : {
        "properties" : {
          "domain" : {
            "default" : null,
            "description" : "Domain to redirect the user to",
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "default" : null,
            "description" : "Our message for the user",
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "default" : null,
            "description" : "Was the passed content a valid WebFinger?",
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "message", "result" ]
      },
      "tool_policy_get_policy_version_request" : {
        "properties" : {
          "behalfid" : {
            "default" : 0,
            "description" : "The id of user on whose behalf the user is viewing the policy",
            "type" : "integer",
            "nullable" : true
          },
          "versionid" : {
            "default" : null,
            "description" : "The policy version ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "versionid" ]
      },
      "tool_policy_get_policy_version_200_response_result_policy" : {
        "properties" : {
          "content" : {
            "default" : null,
            "description" : "The policy version content",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "The policy version name",
            "type" : "string",
            "nullable" : true
          },
          "versionid" : {
            "default" : null,
            "description" : "The policy version id",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "tool_policy_get_policy_version_200_response_result" : {
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/tool_policy_get_policy_version_200_response_result_policy"
          }
        }
      },
      "tool_policy_get_policy_version_200_response" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/tool_policy_get_policy_version_200_response_result"
          },
          "warnings" : {
            "items" : {
              "$ref" : "#/components/schemas/auth_email_signup_user_200_response_warnings_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "result" ]
      },
      "tool_policy_submit_accept_on_behalf_request" : {
        "properties" : {
          "jsonformdata" : {
            "description" : "The data from the create group form, encoded as a json array",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "jsonformdata" ]
      },
      "tool_templatelibrary_list_templates_request" : {
        "properties" : {
          "component" : {
            "default" : "",
            "description" : "The component to search",
            "type" : "string",
            "nullable" : true
          },
          "search" : {
            "default" : "",
            "description" : "The search string",
            "type" : "string",
            "nullable" : true
          },
          "themename" : {
            "default" : "",
            "description" : "The current theme",
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "tool_templatelibrary_load_canonical_template_request" : {
        "properties" : {
          "component" : {
            "description" : "component containing the template",
            "type" : "string",
            "nullable" : true
          },
          "template" : {
            "description" : "name of the template",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "component", "template" ]
      },
      "tool_usertours_complete_tour_request" : {
        "properties" : {
          "context" : {
            "description" : "Context ID",
            "type" : "integer",
            "nullable" : true
          },
          "pageurl" : {
            "default" : null,
            "description" : "Page URL",
            "type" : "string",
            "nullable" : true
          },
          "stepid" : {
            "default" : null,
            "description" : "Step ID",
            "type" : "integer",
            "nullable" : true
          },
          "stepindex" : {
            "default" : null,
            "description" : "Step Number",
            "type" : "integer",
            "nullable" : true
          },
          "tourid" : {
            "default" : null,
            "description" : "Tour ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "context", "pageurl", "stepid", "stepindex", "tourid" ]
      },
      "tool_usertours_fetch_and_start_tour_request" : {
        "properties" : {
          "context" : {
            "description" : "Context ID",
            "type" : "integer",
            "nullable" : true
          },
          "pageurl" : {
            "description" : "Page URL",
            "type" : "string",
            "nullable" : true
          },
          "tourid" : {
            "description" : "Tour ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "context", "pageurl", "tourid" ]
      },
      "tool_usertours_fetch_and_start_tour_200_response_tourconfig_steps_inner" : {
        "default" : null,
        "properties" : {
          "backdrop" : {
            "default" : null,
            "description" : "Whether a backdrop should be used",
            "type" : "boolean",
            "nullable" : true
          },
          "content" : {
            "default" : null,
            "description" : "Step Content",
            "type" : "string",
            "nullable" : true
          },
          "delay" : {
            "default" : null,
            "description" : "Delay before showing the step (ms)",
            "type" : "integer",
            "nullable" : true
          },
          "element" : {
            "default" : null,
            "description" : "Step Target",
            "type" : "string",
            "nullable" : true
          },
          "orphan" : {
            "default" : null,
            "description" : "Whether to display the step even if it could not be found",
            "type" : "boolean",
            "nullable" : true
          },
          "placement" : {
            "default" : null,
            "description" : "Step Placement",
            "type" : "string",
            "nullable" : true
          },
          "reflex" : {
            "default" : null,
            "description" : "Whether to move to the next step when the target element is clicked",
            "type" : "boolean",
            "nullable" : true
          },
          "stepid" : {
            "default" : null,
            "description" : "The actual ID of the step",
            "type" : "integer",
            "nullable" : true
          },
          "title" : {
            "default" : null,
            "description" : "Step Title",
            "type" : "string",
            "nullable" : true
          }
        },
        "nullable" : false
      },
      "tool_usertours_fetch_and_start_tour_200_response_tourconfig" : {
        "properties" : {
          "displaystepnumbers" : {
            "default" : null,
            "description" : "display step number",
            "type" : "boolean",
            "nullable" : true
          },
          "endtourlabel" : {
            "default" : null,
            "description" : "Label of the end tour button",
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "default" : null,
            "description" : "Tour Name",
            "type" : "string",
            "nullable" : true
          },
          "steps" : {
            "items" : {
              "$ref" : "#/components/schemas/tool_usertours_fetch_and_start_tour_200_response_tourconfig_steps_inner"
            },
            "type" : "array"
          }
        },
        "required" : [ "displaystepnumbers", "endtourlabel", "name", "steps" ]
      },
      "tool_usertours_fetch_and_start_tour_200_response" : {
        "properties" : {
          "tourconfig" : {
            "$ref" : "#/components/schemas/tool_usertours_fetch_and_start_tour_200_response_tourconfig"
          }
        }
      },
      "tool_usertours_reset_tour_request" : {
        "properties" : {
          "context" : {
            "description" : "Context ID",
            "type" : "integer",
            "nullable" : true
          },
          "pageurl" : {
            "default" : null,
            "description" : "Current page location",
            "type" : "string",
            "nullable" : true
          },
          "tourid" : {
            "description" : "Tour ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "context", "pageurl", "tourid" ]
      },
      "tool_usertours_reset_tour_200_response" : {
        "properties" : {
          "startTour" : {
            "description" : "Tour ID",
            "type" : "integer",
            "nullable" : true
          }
        }
      },
      "tool_usertours_step_shown_request" : {
        "properties" : {
          "context" : {
            "description" : "Context ID",
            "type" : "integer",
            "nullable" : true
          },
          "pageurl" : {
            "description" : "Page URL",
            "type" : "string",
            "nullable" : true
          },
          "stepid" : {
            "description" : "Step ID",
            "type" : "integer",
            "nullable" : true
          },
          "stepindex" : {
            "description" : "Step Number",
            "type" : "integer",
            "nullable" : true
          },
          "tourid" : {
            "description" : "Tour ID",
            "type" : "integer",
            "nullable" : true
          }
        },
        "required" : [ "context", "pageurl", "stepid", "stepindex", "tourid" ]
      },
      "tool_xmldb_invoke_move_action_request" : {
        "properties" : {
          "action" : {
            "default" : null,
            "description" : "Action",
            "type" : "string",
            "nullable" : true
          },
          "dir" : {
            "default" : null,
            "description" : "Plugin that is being edited",
            "type" : "string",
            "nullable" : true
          },
          "field" : {
            "default" : "",
            "description" : "Field name",
            "type" : "string",
            "nullable" : true
          },
          "index" : {
            "default" : "",
            "description" : "Index name",
            "type" : "string",
            "nullable" : true
          },
          "key" : {
            "default" : "",
            "description" : "Key name",
            "type" : "string",
            "nullable" : true
          },
          "position" : {
            "default" : null,
            "description" : "How many positions to move by (negative - up, positive - down)",
            "type" : "integer",
            "nullable" : true
          },
          "table" : {
            "default" : null,
            "description" : "Table name",
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "action", "dir", "position", "table" ]
      }
    },
    "securitySchemes" : {
      "apiKey" : {
        "description" : "Webservice token retrieved from site administration",
        "in" : "header",
        "name" : "Authorization",
        "type" : "apiKey"
      }
    }
  }
}