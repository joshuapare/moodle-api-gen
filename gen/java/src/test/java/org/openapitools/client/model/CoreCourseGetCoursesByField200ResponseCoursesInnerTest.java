/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CoreCourseGetCoursesByField200ResponseCoursesInner
 */
public class CoreCourseGetCoursesByField200ResponseCoursesInnerTest {
    private final CoreCourseGetCoursesByField200ResponseCoursesInner model = new CoreCourseGetCoursesByField200ResponseCoursesInner();

    /**
     * Model tests for CoreCourseGetCoursesByField200ResponseCoursesInner
     */
    @Test
    public void testCoreCourseGetCoursesByField200ResponseCoursesInner() {
        // TODO: test CoreCourseGetCoursesByField200ResponseCoursesInner
    }

    /**
     * Test the property 'cacherev'
     */
    @Test
    public void cacherevTest() {
        // TODO: test cacherev
    }

    /**
     * Test the property 'calendartype'
     */
    @Test
    public void calendartypeTest() {
        // TODO: test calendartype
    }

    /**
     * Test the property 'categoryid'
     */
    @Test
    public void categoryidTest() {
        // TODO: test categoryid
    }

    /**
     * Test the property 'categoryname'
     */
    @Test
    public void categorynameTest() {
        // TODO: test categoryname
    }

    /**
     * Test the property 'completionnotify'
     */
    @Test
    public void completionnotifyTest() {
        // TODO: test completionnotify
    }

    /**
     * Test the property 'contacts'
     */
    @Test
    public void contactsTest() {
        // TODO: test contacts
    }

    /**
     * Test the property 'courseformatoptions'
     */
    @Test
    public void courseformatoptionsTest() {
        // TODO: test courseformatoptions
    }

    /**
     * Test the property 'courseimage'
     */
    @Test
    public void courseimageTest() {
        // TODO: test courseimage
    }

    /**
     * Test the property 'customfields'
     */
    @Test
    public void customfieldsTest() {
        // TODO: test customfields
    }

    /**
     * Test the property 'defaultgroupingid'
     */
    @Test
    public void defaultgroupingidTest() {
        // TODO: test defaultgroupingid
    }

    /**
     * Test the property 'displayname'
     */
    @Test
    public void displaynameTest() {
        // TODO: test displayname
    }

    /**
     * Test the property 'enablecompletion'
     */
    @Test
    public void enablecompletionTest() {
        // TODO: test enablecompletion
    }

    /**
     * Test the property 'enddate'
     */
    @Test
    public void enddateTest() {
        // TODO: test enddate
    }

    /**
     * Test the property 'enrollmentmethods'
     */
    @Test
    public void enrollmentmethodsTest() {
        // TODO: test enrollmentmethods
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'fullname'
     */
    @Test
    public void fullnameTest() {
        // TODO: test fullname
    }

    /**
     * Test the property 'groupmode'
     */
    @Test
    public void groupmodeTest() {
        // TODO: test groupmode
    }

    /**
     * Test the property 'groupmodeforce'
     */
    @Test
    public void groupmodeforceTest() {
        // TODO: test groupmodeforce
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'idnumber'
     */
    @Test
    public void idnumberTest() {
        // TODO: test idnumber
    }

    /**
     * Test the property 'lang'
     */
    @Test
    public void langTest() {
        // TODO: test lang
    }

    /**
     * Test the property 'legacyfiles'
     */
    @Test
    public void legacyfilesTest() {
        // TODO: test legacyfiles
    }

    /**
     * Test the property 'marker'
     */
    @Test
    public void markerTest() {
        // TODO: test marker
    }

    /**
     * Test the property 'maxbytes'
     */
    @Test
    public void maxbytesTest() {
        // TODO: test maxbytes
    }

    /**
     * Test the property 'newsitems'
     */
    @Test
    public void newsitemsTest() {
        // TODO: test newsitems
    }

    /**
     * Test the property 'overviewfiles'
     */
    @Test
    public void overviewfilesTest() {
        // TODO: test overviewfiles
    }

    /**
     * Test the property 'requested'
     */
    @Test
    public void requestedTest() {
        // TODO: test requested
    }

    /**
     * Test the property 'shortname'
     */
    @Test
    public void shortnameTest() {
        // TODO: test shortname
    }

    /**
     * Test the property 'showactivitydates'
     */
    @Test
    public void showactivitydatesTest() {
        // TODO: test showactivitydates
    }

    /**
     * Test the property 'showcompletionconditions'
     */
    @Test
    public void showcompletionconditionsTest() {
        // TODO: test showcompletionconditions
    }

    /**
     * Test the property 'showgrades'
     */
    @Test
    public void showgradesTest() {
        // TODO: test showgrades
    }

    /**
     * Test the property 'showreports'
     */
    @Test
    public void showreportsTest() {
        // TODO: test showreports
    }

    /**
     * Test the property 'sortorder'
     */
    @Test
    public void sortorderTest() {
        // TODO: test sortorder
    }

    /**
     * Test the property 'startdate'
     */
    @Test
    public void startdateTest() {
        // TODO: test startdate
    }

    /**
     * Test the property 'summary'
     */
    @Test
    public void summaryTest() {
        // TODO: test summary
    }

    /**
     * Test the property 'summaryfiles'
     */
    @Test
    public void summaryfilesTest() {
        // TODO: test summaryfiles
    }

    /**
     * Test the property 'summaryformat'
     */
    @Test
    public void summaryformatTest() {
        // TODO: test summaryformat
    }

    /**
     * Test the property 'theme'
     */
    @Test
    public void themeTest() {
        // TODO: test theme
    }

    /**
     * Test the property 'timecreated'
     */
    @Test
    public void timecreatedTest() {
        // TODO: test timecreated
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

    /**
     * Test the property 'visible'
     */
    @Test
    public void visibleTest() {
        // TODO: test visible
    }

}
