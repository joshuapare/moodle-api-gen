/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner;
import org.openapitools.client.model.ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner
 */
public class ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerTest {
    private final ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner model = new ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner();

    /**
     * Model tests for ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner
     */
    @Test
    public void testModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner() {
        // TODO: test ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner
    }

    /**
     * Test the property 'activity'
     */
    @Test
    public void activityTest() {
        // TODO: test activity
    }

    /**
     * Test the property 'activityattachments'
     */
    @Test
    public void activityattachmentsTest() {
        // TODO: test activityattachments
    }

    /**
     * Test the property 'activityformat'
     */
    @Test
    public void activityformatTest() {
        // TODO: test activityformat
    }

    /**
     * Test the property 'allowsubmissionsfromdate'
     */
    @Test
    public void allowsubmissionsfromdateTest() {
        // TODO: test allowsubmissionsfromdate
    }

    /**
     * Test the property 'attemptreopenmethod'
     */
    @Test
    public void attemptreopenmethodTest() {
        // TODO: test attemptreopenmethod
    }

    /**
     * Test the property 'blindmarking'
     */
    @Test
    public void blindmarkingTest() {
        // TODO: test blindmarking
    }

    /**
     * Test the property 'cmid'
     */
    @Test
    public void cmidTest() {
        // TODO: test cmid
    }

    /**
     * Test the property 'completionsubmit'
     */
    @Test
    public void completionsubmitTest() {
        // TODO: test completionsubmit
    }

    /**
     * Test the property 'configs'
     */
    @Test
    public void configsTest() {
        // TODO: test configs
    }

    /**
     * Test the property 'course'
     */
    @Test
    public void courseTest() {
        // TODO: test course
    }

    /**
     * Test the property 'cutoffdate'
     */
    @Test
    public void cutoffdateTest() {
        // TODO: test cutoffdate
    }

    /**
     * Test the property 'duedate'
     */
    @Test
    public void duedateTest() {
        // TODO: test duedate
    }

    /**
     * Test the property 'grade'
     */
    @Test
    public void gradeTest() {
        // TODO: test grade
    }

    /**
     * Test the property 'gradingduedate'
     */
    @Test
    public void gradingduedateTest() {
        // TODO: test gradingduedate
    }

    /**
     * Test the property 'hidegrader'
     */
    @Test
    public void hidegraderTest() {
        // TODO: test hidegrader
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'intro'
     */
    @Test
    public void introTest() {
        // TODO: test intro
    }

    /**
     * Test the property 'introattachments'
     */
    @Test
    public void introattachmentsTest() {
        // TODO: test introattachments
    }

    /**
     * Test the property 'introfiles'
     */
    @Test
    public void introfilesTest() {
        // TODO: test introfiles
    }

    /**
     * Test the property 'introformat'
     */
    @Test
    public void introformatTest() {
        // TODO: test introformat
    }

    /**
     * Test the property 'markingallocation'
     */
    @Test
    public void markingallocationTest() {
        // TODO: test markingallocation
    }

    /**
     * Test the property 'markingworkflow'
     */
    @Test
    public void markingworkflowTest() {
        // TODO: test markingworkflow
    }

    /**
     * Test the property 'maxattempts'
     */
    @Test
    public void maxattemptsTest() {
        // TODO: test maxattempts
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nosubmissions'
     */
    @Test
    public void nosubmissionsTest() {
        // TODO: test nosubmissions
    }

    /**
     * Test the property 'preventsubmissionnotingroup'
     */
    @Test
    public void preventsubmissionnotingroupTest() {
        // TODO: test preventsubmissionnotingroup
    }

    /**
     * Test the property 'requireallteammemberssubmit'
     */
    @Test
    public void requireallteammemberssubmitTest() {
        // TODO: test requireallteammemberssubmit
    }

    /**
     * Test the property 'requiresubmissionstatement'
     */
    @Test
    public void requiresubmissionstatementTest() {
        // TODO: test requiresubmissionstatement
    }

    /**
     * Test the property 'revealidentities'
     */
    @Test
    public void revealidentitiesTest() {
        // TODO: test revealidentities
    }

    /**
     * Test the property 'sendlatenotifications'
     */
    @Test
    public void sendlatenotificationsTest() {
        // TODO: test sendlatenotifications
    }

    /**
     * Test the property 'sendnotifications'
     */
    @Test
    public void sendnotificationsTest() {
        // TODO: test sendnotifications
    }

    /**
     * Test the property 'sendstudentnotifications'
     */
    @Test
    public void sendstudentnotificationsTest() {
        // TODO: test sendstudentnotifications
    }

    /**
     * Test the property 'submissionattachments'
     */
    @Test
    public void submissionattachmentsTest() {
        // TODO: test submissionattachments
    }

    /**
     * Test the property 'submissiondrafts'
     */
    @Test
    public void submissiondraftsTest() {
        // TODO: test submissiondrafts
    }

    /**
     * Test the property 'submissionstatement'
     */
    @Test
    public void submissionstatementTest() {
        // TODO: test submissionstatement
    }

    /**
     * Test the property 'submissionstatementformat'
     */
    @Test
    public void submissionstatementformatTest() {
        // TODO: test submissionstatementformat
    }

    /**
     * Test the property 'teamsubmission'
     */
    @Test
    public void teamsubmissionTest() {
        // TODO: test teamsubmission
    }

    /**
     * Test the property 'teamsubmissiongroupingid'
     */
    @Test
    public void teamsubmissiongroupingidTest() {
        // TODO: test teamsubmissiongroupingid
    }

    /**
     * Test the property 'timelimit'
     */
    @Test
    public void timelimitTest() {
        // TODO: test timelimit
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

}
