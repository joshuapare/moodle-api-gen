/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreMessageGetConversationBetweenUsers200ResponseMembersInnerContactrequestsInner;
import org.openapitools.client.model.CoreMessageGetConversationBetweenUsers200ResponseMembersInnerConversationsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CoreMessageGetConversationBetweenUsers200ResponseMembersInner
 */
public class CoreMessageGetConversationBetweenUsers200ResponseMembersInnerTest {
    private final CoreMessageGetConversationBetweenUsers200ResponseMembersInner model = new CoreMessageGetConversationBetweenUsers200ResponseMembersInner();

    /**
     * Model tests for CoreMessageGetConversationBetweenUsers200ResponseMembersInner
     */
    @Test
    public void testCoreMessageGetConversationBetweenUsers200ResponseMembersInner() {
        // TODO: test CoreMessageGetConversationBetweenUsers200ResponseMembersInner
    }

    /**
     * Test the property 'canmessage'
     */
    @Test
    public void canmessageTest() {
        // TODO: test canmessage
    }

    /**
     * Test the property 'canmessageevenifblocked'
     */
    @Test
    public void canmessageevenifblockedTest() {
        // TODO: test canmessageevenifblocked
    }

    /**
     * Test the property 'contactrequests'
     */
    @Test
    public void contactrequestsTest() {
        // TODO: test contactrequests
    }

    /**
     * Test the property 'conversations'
     */
    @Test
    public void conversationsTest() {
        // TODO: test conversations
    }

    /**
     * Test the property 'fullname'
     */
    @Test
    public void fullnameTest() {
        // TODO: test fullname
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isblocked'
     */
    @Test
    public void isblockedTest() {
        // TODO: test isblocked
    }

    /**
     * Test the property 'iscontact'
     */
    @Test
    public void iscontactTest() {
        // TODO: test iscontact
    }

    /**
     * Test the property 'isdeleted'
     */
    @Test
    public void isdeletedTest() {
        // TODO: test isdeleted
    }

    /**
     * Test the property 'isonline'
     */
    @Test
    public void isonlineTest() {
        // TODO: test isonline
    }

    /**
     * Test the property 'profileimageurl'
     */
    @Test
    public void profileimageurlTest() {
        // TODO: test profileimageurl
    }

    /**
     * Test the property 'profileimageurlsmall'
     */
    @Test
    public void profileimageurlsmallTest() {
        // TODO: test profileimageurlsmall
    }

    /**
     * Test the property 'profileurl'
     */
    @Test
    public void profileurlTest() {
        // TODO: test profileurl
    }

    /**
     * Test the property 'requirescontact'
     */
    @Test
    public void requirescontactTest() {
        // TODO: test requirescontact
    }

    /**
     * Test the property 'showonlinestatus'
     */
    @Test
    public void showonlinestatusTest() {
        // TODO: test showonlinestatus
    }

}
