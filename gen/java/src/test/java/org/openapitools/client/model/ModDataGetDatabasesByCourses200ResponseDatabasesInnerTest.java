/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModDataGetDatabasesByCourses200ResponseDatabasesInner
 */
public class ModDataGetDatabasesByCourses200ResponseDatabasesInnerTest {
    private final ModDataGetDatabasesByCourses200ResponseDatabasesInner model = new ModDataGetDatabasesByCourses200ResponseDatabasesInner();

    /**
     * Model tests for ModDataGetDatabasesByCourses200ResponseDatabasesInner
     */
    @Test
    public void testModDataGetDatabasesByCourses200ResponseDatabasesInner() {
        // TODO: test ModDataGetDatabasesByCourses200ResponseDatabasesInner
    }

    /**
     * Test the property 'addtemplate'
     */
    @Test
    public void addtemplateTest() {
        // TODO: test addtemplate
    }

    /**
     * Test the property 'approval'
     */
    @Test
    public void approvalTest() {
        // TODO: test approval
    }

    /**
     * Test the property 'asearchtemplate'
     */
    @Test
    public void asearchtemplateTest() {
        // TODO: test asearchtemplate
    }

    /**
     * Test the property 'assessed'
     */
    @Test
    public void assessedTest() {
        // TODO: test assessed
    }

    /**
     * Test the property 'assesstimefinish'
     */
    @Test
    public void assesstimefinishTest() {
        // TODO: test assesstimefinish
    }

    /**
     * Test the property 'assesstimestart'
     */
    @Test
    public void assesstimestartTest() {
        // TODO: test assesstimestart
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'course'
     */
    @Test
    public void courseTest() {
        // TODO: test course
    }

    /**
     * Test the property 'coursemodule'
     */
    @Test
    public void coursemoduleTest() {
        // TODO: test coursemodule
    }

    /**
     * Test the property 'csstemplate'
     */
    @Test
    public void csstemplateTest() {
        // TODO: test csstemplate
    }

    /**
     * Test the property 'defaultsort'
     */
    @Test
    public void defaultsortTest() {
        // TODO: test defaultsort
    }

    /**
     * Test the property 'defaultsortdir'
     */
    @Test
    public void defaultsortdirTest() {
        // TODO: test defaultsortdir
    }

    /**
     * Test the property 'editany'
     */
    @Test
    public void editanyTest() {
        // TODO: test editany
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'intro'
     */
    @Test
    public void introTest() {
        // TODO: test intro
    }

    /**
     * Test the property 'introfiles'
     */
    @Test
    public void introfilesTest() {
        // TODO: test introfiles
    }

    /**
     * Test the property 'introformat'
     */
    @Test
    public void introformatTest() {
        // TODO: test introformat
    }

    /**
     * Test the property 'jstemplate'
     */
    @Test
    public void jstemplateTest() {
        // TODO: test jstemplate
    }

    /**
     * Test the property 'lang'
     */
    @Test
    public void langTest() {
        // TODO: test lang
    }

    /**
     * Test the property 'listtemplate'
     */
    @Test
    public void listtemplateTest() {
        // TODO: test listtemplate
    }

    /**
     * Test the property 'listtemplatefooter'
     */
    @Test
    public void listtemplatefooterTest() {
        // TODO: test listtemplatefooter
    }

    /**
     * Test the property 'listtemplateheader'
     */
    @Test
    public void listtemplateheaderTest() {
        // TODO: test listtemplateheader
    }

    /**
     * Test the property 'manageapproved'
     */
    @Test
    public void manageapprovedTest() {
        // TODO: test manageapproved
    }

    /**
     * Test the property 'maxentries'
     */
    @Test
    public void maxentriesTest() {
        // TODO: test maxentries
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notification'
     */
    @Test
    public void notificationTest() {
        // TODO: test notification
    }

    /**
     * Test the property 'requiredentries'
     */
    @Test
    public void requiredentriesTest() {
        // TODO: test requiredentries
    }

    /**
     * Test the property 'requiredentriestoview'
     */
    @Test
    public void requiredentriestoviewTest() {
        // TODO: test requiredentriestoview
    }

    /**
     * Test the property 'rssarticles'
     */
    @Test
    public void rssarticlesTest() {
        // TODO: test rssarticles
    }

    /**
     * Test the property 'rsstemplate'
     */
    @Test
    public void rsstemplateTest() {
        // TODO: test rsstemplate
    }

    /**
     * Test the property 'rsstitletemplate'
     */
    @Test
    public void rsstitletemplateTest() {
        // TODO: test rsstitletemplate
    }

    /**
     * Test the property 'scale'
     */
    @Test
    public void scaleTest() {
        // TODO: test scale
    }

    /**
     * Test the property 'singletemplate'
     */
    @Test
    public void singletemplateTest() {
        // TODO: test singletemplate
    }

    /**
     * Test the property 'timeavailablefrom'
     */
    @Test
    public void timeavailablefromTest() {
        // TODO: test timeavailablefrom
    }

    /**
     * Test the property 'timeavailableto'
     */
    @Test
    public void timeavailabletoTest() {
        // TODO: test timeavailableto
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

    /**
     * Test the property 'timeviewfrom'
     */
    @Test
    public void timeviewfromTest() {
        // TODO: test timeviewfrom
    }

    /**
     * Test the property 'timeviewto'
     */
    @Test
    public void timeviewtoTest() {
        // TODO: test timeviewto
    }

}
