/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner
 */
public class ModGlossaryGetGlossariesByCourses200ResponseGlossariesInnerTest {
    private final ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner model = new ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner();

    /**
     * Model tests for ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner
     */
    @Test
    public void testModGlossaryGetGlossariesByCourses200ResponseGlossariesInner() {
        // TODO: test ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner
    }

    /**
     * Test the property 'allowcomments'
     */
    @Test
    public void allowcommentsTest() {
        // TODO: test allowcomments
    }

    /**
     * Test the property 'allowduplicatedentries'
     */
    @Test
    public void allowduplicatedentriesTest() {
        // TODO: test allowduplicatedentries
    }

    /**
     * Test the property 'allowprintview'
     */
    @Test
    public void allowprintviewTest() {
        // TODO: test allowprintview
    }

    /**
     * Test the property 'approvaldisplayformat'
     */
    @Test
    public void approvaldisplayformatTest() {
        // TODO: test approvaldisplayformat
    }

    /**
     * Test the property 'assessed'
     */
    @Test
    public void assessedTest() {
        // TODO: test assessed
    }

    /**
     * Test the property 'assesstimefinish'
     */
    @Test
    public void assesstimefinishTest() {
        // TODO: test assesstimefinish
    }

    /**
     * Test the property 'assesstimestart'
     */
    @Test
    public void assesstimestartTest() {
        // TODO: test assesstimestart
    }

    /**
     * Test the property 'browsemodes'
     */
    @Test
    public void browsemodesTest() {
        // TODO: test browsemodes
    }

    /**
     * Test the property 'canaddentry'
     */
    @Test
    public void canaddentryTest() {
        // TODO: test canaddentry
    }

    /**
     * Test the property 'completionentries'
     */
    @Test
    public void completionentriesTest() {
        // TODO: test completionentries
    }

    /**
     * Test the property 'course'
     */
    @Test
    public void courseTest() {
        // TODO: test course
    }

    /**
     * Test the property 'coursemodule'
     */
    @Test
    public void coursemoduleTest() {
        // TODO: test coursemodule
    }

    /**
     * Test the property 'defaultapproval'
     */
    @Test
    public void defaultapprovalTest() {
        // TODO: test defaultapproval
    }

    /**
     * Test the property 'displayformat'
     */
    @Test
    public void displayformatTest() {
        // TODO: test displayformat
    }

    /**
     * Test the property 'editalways'
     */
    @Test
    public void editalwaysTest() {
        // TODO: test editalways
    }

    /**
     * Test the property 'entbypage'
     */
    @Test
    public void entbypageTest() {
        // TODO: test entbypage
    }

    /**
     * Test the property 'globalglossary'
     */
    @Test
    public void globalglossaryTest() {
        // TODO: test globalglossary
    }

    /**
     * Test the property 'groupingid'
     */
    @Test
    public void groupingidTest() {
        // TODO: test groupingid
    }

    /**
     * Test the property 'groupmode'
     */
    @Test
    public void groupmodeTest() {
        // TODO: test groupmode
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'intro'
     */
    @Test
    public void introTest() {
        // TODO: test intro
    }

    /**
     * Test the property 'introfiles'
     */
    @Test
    public void introfilesTest() {
        // TODO: test introfiles
    }

    /**
     * Test the property 'introformat'
     */
    @Test
    public void introformatTest() {
        // TODO: test introformat
    }

    /**
     * Test the property 'lang'
     */
    @Test
    public void langTest() {
        // TODO: test lang
    }

    /**
     * Test the property 'mainglossary'
     */
    @Test
    public void mainglossaryTest() {
        // TODO: test mainglossary
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'rssarticles'
     */
    @Test
    public void rssarticlesTest() {
        // TODO: test rssarticles
    }

    /**
     * Test the property 'rsstype'
     */
    @Test
    public void rsstypeTest() {
        // TODO: test rsstype
    }

    /**
     * Test the property 'scale'
     */
    @Test
    public void scaleTest() {
        // TODO: test scale
    }

    /**
     * Test the property 'section'
     */
    @Test
    public void sectionTest() {
        // TODO: test section
    }

    /**
     * Test the property 'showall'
     */
    @Test
    public void showallTest() {
        // TODO: test showall
    }

    /**
     * Test the property 'showalphabet'
     */
    @Test
    public void showalphabetTest() {
        // TODO: test showalphabet
    }

    /**
     * Test the property 'showspecial'
     */
    @Test
    public void showspecialTest() {
        // TODO: test showspecial
    }

    /**
     * Test the property 'timecreated'
     */
    @Test
    public void timecreatedTest() {
        // TODO: test timecreated
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

    /**
     * Test the property 'usedynalink'
     */
    @Test
    public void usedynalinkTest() {
        // TODO: test usedynalink
    }

    /**
     * Test the property 'visible'
     */
    @Test
    public void visibleTest() {
        // TODO: test visible
    }

}
