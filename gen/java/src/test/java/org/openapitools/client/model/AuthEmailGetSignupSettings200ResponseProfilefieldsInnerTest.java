/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AuthEmailGetSignupSettings200ResponseProfilefieldsInner
 */
public class AuthEmailGetSignupSettings200ResponseProfilefieldsInnerTest {
    private final AuthEmailGetSignupSettings200ResponseProfilefieldsInner model = new AuthEmailGetSignupSettings200ResponseProfilefieldsInner();

    /**
     * Model tests for AuthEmailGetSignupSettings200ResponseProfilefieldsInner
     */
    @Test
    public void testAuthEmailGetSignupSettings200ResponseProfilefieldsInner() {
        // TODO: test AuthEmailGetSignupSettings200ResponseProfilefieldsInner
    }

    /**
     * Test the property 'categoryid'
     */
    @Test
    public void categoryidTest() {
        // TODO: test categoryid
    }

    /**
     * Test the property 'categoryname'
     */
    @Test
    public void categorynameTest() {
        // TODO: test categoryname
    }

    /**
     * Test the property 'datatype'
     */
    @Test
    public void datatypeTest() {
        // TODO: test datatype
    }

    /**
     * Test the property 'defaultdata'
     */
    @Test
    public void defaultdataTest() {
        // TODO: test defaultdata
    }

    /**
     * Test the property 'defaultdataformat'
     */
    @Test
    public void defaultdataformatTest() {
        // TODO: test defaultdataformat
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'descriptionformat'
     */
    @Test
    public void descriptionformatTest() {
        // TODO: test descriptionformat
    }

    /**
     * Test the property 'forceunique'
     */
    @Test
    public void forceuniqueTest() {
        // TODO: test forceunique
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'param1'
     */
    @Test
    public void param1Test() {
        // TODO: test param1
    }

    /**
     * Test the property 'param2'
     */
    @Test
    public void param2Test() {
        // TODO: test param2
    }

    /**
     * Test the property 'param3'
     */
    @Test
    public void param3Test() {
        // TODO: test param3
    }

    /**
     * Test the property 'param4'
     */
    @Test
    public void param4Test() {
        // TODO: test param4
    }

    /**
     * Test the property 'param5'
     */
    @Test
    public void param5Test() {
        // TODO: test param5
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'shortname'
     */
    @Test
    public void shortnameTest() {
        // TODO: test shortname
    }

    /**
     * Test the property 'signup'
     */
    @Test
    public void signupTest() {
        // TODO: test signup
    }

    /**
     * Test the property 'sortorder'
     */
    @Test
    public void sortorderTest() {
        // TODO: test sortorder
    }

    /**
     * Test the property 'visible'
     */
    @Test
    public void visibleTest() {
        // TODO: test visible
    }

}
