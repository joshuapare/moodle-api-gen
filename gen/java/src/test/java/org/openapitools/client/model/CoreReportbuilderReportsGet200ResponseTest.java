/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreReportbuilderColumnsDelete200Response;
import org.openapitools.client.model.CoreReportbuilderConditionsDelete200Response;
import org.openapitools.client.model.CoreReportbuilderFiltersDelete200Response;
import org.openapitools.client.model.CoreReportbuilderReportsGet200ResponseAttributesInner;
import org.openapitools.client.model.CoreReportbuilderReportsGet200ResponseCardview;
import org.openapitools.client.model.CoreReportbuilderReportsGet200ResponseSidebarmenucards;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CoreReportbuilderReportsGet200Response
 */
public class CoreReportbuilderReportsGet200ResponseTest {
    private final CoreReportbuilderReportsGet200Response model = new CoreReportbuilderReportsGet200Response();

    /**
     * Model tests for CoreReportbuilderReportsGet200Response
     */
    @Test
    public void testCoreReportbuilderReportsGet200Response() {
        // TODO: test CoreReportbuilderReportsGet200Response
    }

    /**
     * Test the property 'area'
     */
    @Test
    public void areaTest() {
        // TODO: test area
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'cardview'
     */
    @Test
    public void cardviewTest() {
        // TODO: test cardview
    }

    /**
     * Test the property 'classes'
     */
    @Test
    public void classesTest() {
        // TODO: test classes
    }

    /**
     * Test the property 'component'
     */
    @Test
    public void componentTest() {
        // TODO: test component
    }

    /**
     * Test the property 'conditiondata'
     */
    @Test
    public void conditiondataTest() {
        // TODO: test conditiondata
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'contextid'
     */
    @Test
    public void contextidTest() {
        // TODO: test contextid
    }

    /**
     * Test the property 'editmode'
     */
    @Test
    public void editmodeTest() {
        // TODO: test editmode
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'filtersapplied'
     */
    @Test
    public void filtersappliedTest() {
        // TODO: test filtersapplied
    }

    /**
     * Test the property 'filtersform'
     */
    @Test
    public void filtersformTest() {
        // TODO: test filtersform
    }

    /**
     * Test the property 'filterspresent'
     */
    @Test
    public void filterspresentTest() {
        // TODO: test filterspresent
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'itemid'
     */
    @Test
    public void itemidTest() {
        // TODO: test itemid
    }

    /**
     * Test the property 'javascript'
     */
    @Test
    public void javascriptTest() {
        // TODO: test javascript
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'settingsdata'
     */
    @Test
    public void settingsdataTest() {
        // TODO: test settingsdata
    }

    /**
     * Test the property 'sidebarmenucards'
     */
    @Test
    public void sidebarmenucardsTest() {
        // TODO: test sidebarmenucards
    }

    /**
     * Test the property 'sorting'
     */
    @Test
    public void sortingTest() {
        // TODO: test sorting
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'table'
     */
    @Test
    public void tableTest() {
        // TODO: test table
    }

    /**
     * Test the property 'timecreated'
     */
    @Test
    public void timecreatedTest() {
        // TODO: test timecreated
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'uniquerows'
     */
    @Test
    public void uniquerowsTest() {
        // TODO: test uniquerows
    }

    /**
     * Test the property 'usercreated'
     */
    @Test
    public void usercreatedTest() {
        // TODO: test usercreated
    }

    /**
     * Test the property 'usermodified'
     */
    @Test
    public void usermodifiedTest() {
        // TODO: test usermodified
    }

}
