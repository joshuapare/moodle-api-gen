/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostAttachmentsInner;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostAuthor;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostCapabilities;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostHtml;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostTagsInner;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostUrls;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModForumAddDiscussionPost200ResponsePost
 */
public class ModForumAddDiscussionPost200ResponsePostTest {
    private final ModForumAddDiscussionPost200ResponsePost model = new ModForumAddDiscussionPost200ResponsePost();

    /**
     * Model tests for ModForumAddDiscussionPost200ResponsePost
     */
    @Test
    public void testModForumAddDiscussionPost200ResponsePost() {
        // TODO: test ModForumAddDiscussionPost200ResponsePost
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'author'
     */
    @Test
    public void authorTest() {
        // TODO: test author
    }

    /**
     * Test the property 'capabilities'
     */
    @Test
    public void capabilitiesTest() {
        // TODO: test capabilities
    }

    /**
     * Test the property 'charcount'
     */
    @Test
    public void charcountTest() {
        // TODO: test charcount
    }

    /**
     * Test the property 'discussionid'
     */
    @Test
    public void discussionidTest() {
        // TODO: test discussionid
    }

    /**
     * Test the property 'hasparent'
     */
    @Test
    public void hasparentTest() {
        // TODO: test hasparent
    }

    /**
     * Test the property 'haswordcount'
     */
    @Test
    public void haswordcountTest() {
        // TODO: test haswordcount
    }

    /**
     * Test the property 'html'
     */
    @Test
    public void htmlTest() {
        // TODO: test html
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isdeleted'
     */
    @Test
    public void isdeletedTest() {
        // TODO: test isdeleted
    }

    /**
     * Test the property 'isprivatereply'
     */
    @Test
    public void isprivatereplyTest() {
        // TODO: test isprivatereply
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'messageformat'
     */
    @Test
    public void messageformatTest() {
        // TODO: test messageformat
    }

    /**
     * Test the property 'messageinlinefiles'
     */
    @Test
    public void messageinlinefilesTest() {
        // TODO: test messageinlinefiles
    }

    /**
     * Test the property 'parentid'
     */
    @Test
    public void parentidTest() {
        // TODO: test parentid
    }

    /**
     * Test the property 'replysubject'
     */
    @Test
    public void replysubjectTest() {
        // TODO: test replysubject
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'timecreated'
     */
    @Test
    public void timecreatedTest() {
        // TODO: test timecreated
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

    /**
     * Test the property 'unread'
     */
    @Test
    public void unreadTest() {
        // TODO: test unread
    }

    /**
     * Test the property 'urls'
     */
    @Test
    public void urlsTest() {
        // TODO: test urls
    }

    /**
     * Test the property 'wordcount'
     */
    @Test
    public void wordcountTest() {
        // TODO: test wordcount
    }

}
