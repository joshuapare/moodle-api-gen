/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner
 */
public class ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInnerTest {
    private final ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner model = new ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner();

    /**
     * Model tests for ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner
     */
    @Test
    public void testModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner() {
        // TODO: test ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner
    }

    /**
     * Test the property 'assessmentend'
     */
    @Test
    public void assessmentendTest() {
        // TODO: test assessmentend
    }

    /**
     * Test the property 'assessmentstart'
     */
    @Test
    public void assessmentstartTest() {
        // TODO: test assessmentstart
    }

    /**
     * Test the property 'conclusion'
     */
    @Test
    public void conclusionTest() {
        // TODO: test conclusion
    }

    /**
     * Test the property 'conclusionfiles'
     */
    @Test
    public void conclusionfilesTest() {
        // TODO: test conclusionfiles
    }

    /**
     * Test the property 'conclusionformat'
     */
    @Test
    public void conclusionformatTest() {
        // TODO: test conclusionformat
    }

    /**
     * Test the property 'course'
     */
    @Test
    public void courseTest() {
        // TODO: test course
    }

    /**
     * Test the property 'coursemodule'
     */
    @Test
    public void coursemoduleTest() {
        // TODO: test coursemodule
    }

    /**
     * Test the property 'evaluation'
     */
    @Test
    public void evaluationTest() {
        // TODO: test evaluation
    }

    /**
     * Test the property 'examplesmode'
     */
    @Test
    public void examplesmodeTest() {
        // TODO: test examplesmode
    }

    /**
     * Test the property 'grade'
     */
    @Test
    public void gradeTest() {
        // TODO: test grade
    }

    /**
     * Test the property 'gradedecimals'
     */
    @Test
    public void gradedecimalsTest() {
        // TODO: test gradedecimals
    }

    /**
     * Test the property 'gradinggrade'
     */
    @Test
    public void gradinggradeTest() {
        // TODO: test gradinggrade
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'instructauthors'
     */
    @Test
    public void instructauthorsTest() {
        // TODO: test instructauthors
    }

    /**
     * Test the property 'instructauthorsfiles'
     */
    @Test
    public void instructauthorsfilesTest() {
        // TODO: test instructauthorsfiles
    }

    /**
     * Test the property 'instructauthorsformat'
     */
    @Test
    public void instructauthorsformatTest() {
        // TODO: test instructauthorsformat
    }

    /**
     * Test the property 'instructreviewers'
     */
    @Test
    public void instructreviewersTest() {
        // TODO: test instructreviewers
    }

    /**
     * Test the property 'instructreviewersfiles'
     */
    @Test
    public void instructreviewersfilesTest() {
        // TODO: test instructreviewersfiles
    }

    /**
     * Test the property 'instructreviewersformat'
     */
    @Test
    public void instructreviewersformatTest() {
        // TODO: test instructreviewersformat
    }

    /**
     * Test the property 'intro'
     */
    @Test
    public void introTest() {
        // TODO: test intro
    }

    /**
     * Test the property 'introfiles'
     */
    @Test
    public void introfilesTest() {
        // TODO: test introfiles
    }

    /**
     * Test the property 'introformat'
     */
    @Test
    public void introformatTest() {
        // TODO: test introformat
    }

    /**
     * Test the property 'lang'
     */
    @Test
    public void langTest() {
        // TODO: test lang
    }

    /**
     * Test the property 'latesubmissions'
     */
    @Test
    public void latesubmissionsTest() {
        // TODO: test latesubmissions
    }

    /**
     * Test the property 'maxbytes'
     */
    @Test
    public void maxbytesTest() {
        // TODO: test maxbytes
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nattachments'
     */
    @Test
    public void nattachmentsTest() {
        // TODO: test nattachments
    }

    /**
     * Test the property 'overallfeedbackfiles'
     */
    @Test
    public void overallfeedbackfilesTest() {
        // TODO: test overallfeedbackfiles
    }

    /**
     * Test the property 'overallfeedbackfiletypes'
     */
    @Test
    public void overallfeedbackfiletypesTest() {
        // TODO: test overallfeedbackfiletypes
    }

    /**
     * Test the property 'overallfeedbackmaxbytes'
     */
    @Test
    public void overallfeedbackmaxbytesTest() {
        // TODO: test overallfeedbackmaxbytes
    }

    /**
     * Test the property 'overallfeedbackmode'
     */
    @Test
    public void overallfeedbackmodeTest() {
        // TODO: test overallfeedbackmode
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'phaseswitchassessment'
     */
    @Test
    public void phaseswitchassessmentTest() {
        // TODO: test phaseswitchassessment
    }

    /**
     * Test the property 'strategy'
     */
    @Test
    public void strategyTest() {
        // TODO: test strategy
    }

    /**
     * Test the property 'submissionend'
     */
    @Test
    public void submissionendTest() {
        // TODO: test submissionend
    }

    /**
     * Test the property 'submissionfiletypes'
     */
    @Test
    public void submissionfiletypesTest() {
        // TODO: test submissionfiletypes
    }

    /**
     * Test the property 'submissionstart'
     */
    @Test
    public void submissionstartTest() {
        // TODO: test submissionstart
    }

    /**
     * Test the property 'submissiontypefile'
     */
    @Test
    public void submissiontypefileTest() {
        // TODO: test submissiontypefile
    }

    /**
     * Test the property 'submissiontypetext'
     */
    @Test
    public void submissiontypetextTest() {
        // TODO: test submissiontypetext
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

    /**
     * Test the property 'useexamples'
     */
    @Test
    public void useexamplesTest() {
        // TODO: test useexamples
    }

    /**
     * Test the property 'usepeerassessment'
     */
    @Test
    public void usepeerassessmentTest() {
        // TODO: test usepeerassessment
    }

    /**
     * Test the property 'useselfassessment'
     */
    @Test
    public void useselfassessmentTest() {
        // TODO: test useselfassessment
    }

}
