/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerAlignmentInner;
import org.openapitools.client.model.CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerEndorsement;
import org.openapitools.client.model.CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerRelatedbadgesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CoreBadgesGetUserBadgeByHash200ResponseBadgeInner
 */
public class CoreBadgesGetUserBadgeByHash200ResponseBadgeInnerTest {
    private final CoreBadgesGetUserBadgeByHash200ResponseBadgeInner model = new CoreBadgesGetUserBadgeByHash200ResponseBadgeInner();

    /**
     * Model tests for CoreBadgesGetUserBadgeByHash200ResponseBadgeInner
     */
    @Test
    public void testCoreBadgesGetUserBadgeByHash200ResponseBadgeInner() {
        // TODO: test CoreBadgesGetUserBadgeByHash200ResponseBadgeInner
    }

    /**
     * Test the property 'alignment'
     */
    @Test
    public void alignmentTest() {
        // TODO: test alignment
    }

    /**
     * Test the property 'attachment'
     */
    @Test
    public void attachmentTest() {
        // TODO: test attachment
    }

    /**
     * Test the property 'badgeurl'
     */
    @Test
    public void badgeurlTest() {
        // TODO: test badgeurl
    }

    /**
     * Test the property 'courseid'
     */
    @Test
    public void courseidTest() {
        // TODO: test courseid
    }

    /**
     * Test the property 'dateexpire'
     */
    @Test
    public void dateexpireTest() {
        // TODO: test dateexpire
    }

    /**
     * Test the property 'dateissued'
     */
    @Test
    public void dateissuedTest() {
        // TODO: test dateissued
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'endorsement'
     */
    @Test
    public void endorsementTest() {
        // TODO: test endorsement
    }

    /**
     * Test the property 'expiredate'
     */
    @Test
    public void expiredateTest() {
        // TODO: test expiredate
    }

    /**
     * Test the property 'expireperiod'
     */
    @Test
    public void expireperiodTest() {
        // TODO: test expireperiod
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageauthoremail'
     */
    @Test
    public void imageauthoremailTest() {
        // TODO: test imageauthoremail
    }

    /**
     * Test the property 'imageauthorname'
     */
    @Test
    public void imageauthornameTest() {
        // TODO: test imageauthorname
    }

    /**
     * Test the property 'imageauthorurl'
     */
    @Test
    public void imageauthorurlTest() {
        // TODO: test imageauthorurl
    }

    /**
     * Test the property 'imagecaption'
     */
    @Test
    public void imagecaptionTest() {
        // TODO: test imagecaption
    }

    /**
     * Test the property 'issuedid'
     */
    @Test
    public void issuedidTest() {
        // TODO: test issuedid
    }

    /**
     * Test the property 'issuercontact'
     */
    @Test
    public void issuercontactTest() {
        // TODO: test issuercontact
    }

    /**
     * Test the property 'issuername'
     */
    @Test
    public void issuernameTest() {
        // TODO: test issuername
    }

    /**
     * Test the property 'issuerurl'
     */
    @Test
    public void issuerurlTest() {
        // TODO: test issuerurl
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'messagesubject'
     */
    @Test
    public void messagesubjectTest() {
        // TODO: test messagesubject
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nextcron'
     */
    @Test
    public void nextcronTest() {
        // TODO: test nextcron
    }

    /**
     * Test the property 'notification'
     */
    @Test
    public void notificationTest() {
        // TODO: test notification
    }

    /**
     * Test the property 'relatedbadges'
     */
    @Test
    public void relatedbadgesTest() {
        // TODO: test relatedbadges
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'timecreated'
     */
    @Test
    public void timecreatedTest() {
        // TODO: test timecreated
    }

    /**
     * Test the property 'timemodified'
     */
    @Test
    public void timemodifiedTest() {
        // TODO: test timemodified
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'uniquehash'
     */
    @Test
    public void uniquehashTest() {
        // TODO: test uniquehash
    }

    /**
     * Test the property 'usercreated'
     */
    @Test
    public void usercreatedTest() {
        // TODO: test usercreated
    }

    /**
     * Test the property 'usermodified'
     */
    @Test
    public void usermodifiedTest() {
        // TODO: test usermodified
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'visible'
     */
    @Test
    public void visibleTest() {
        // TODO: test visible
    }

}
