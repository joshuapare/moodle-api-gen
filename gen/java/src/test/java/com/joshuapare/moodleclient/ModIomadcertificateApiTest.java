/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.joshuapare.moodleclient;

import com.joshuapare.ApiException;
import org.openapitools.client.model.CoreCalendarDeleteSubscription200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ModChatGetChatsByCoursesRequest;
import org.openapitools.client.model.ModIomadcertificateGetIomadcertificatesByCourses200Response;
import org.openapitools.client.model.ModIomadcertificateGetIssuedIomadcertificates200Response;
import org.openapitools.client.model.ModIomadcertificateGetIssuedIomadcertificatesRequest;
import org.openapitools.client.model.ModIomadcertificateIssueIomadcertificate200Response;
import org.openapitools.client.model.ModIomadcertificateIssueIomadcertificateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModIomadcertificateApi
 */
@Disabled
public class ModIomadcertificateApiTest {

    private final ModIomadcertificateApi api = new ModIomadcertificateApi();

    /**
     * Returns a list of iomadcertificate instances in a provided set of courses, if                             no courses are provided then all the iomadcertificate instances the user has access to will be returned.
     *
     * Returns a list of iomadcertificate instances in a provided set of courses, if                             no courses are provided then all the iomadcertificate instances the user has access to will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modIomadcertificateGetIomadcertificatesByCoursesTest() throws ApiException {
        ModChatGetChatsByCoursesRequest modChatGetChatsByCoursesRequest = null;
        ModIomadcertificateGetIomadcertificatesByCourses200Response response = api.modIomadcertificateGetIomadcertificatesByCourses(modChatGetChatsByCoursesRequest);
        // TODO: test validations
    }

    /**
     * Get the list of issued iomadcertificates for the current user.
     *
     * Get the list of issued iomadcertificates for the current user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modIomadcertificateGetIssuedIomadcertificatesTest() throws ApiException {
        ModIomadcertificateGetIssuedIomadcertificatesRequest modIomadcertificateGetIssuedIomadcertificatesRequest = null;
        ModIomadcertificateGetIssuedIomadcertificates200Response response = api.modIomadcertificateGetIssuedIomadcertificates(modIomadcertificateGetIssuedIomadcertificatesRequest);
        // TODO: test validations
    }

    /**
     * Create new iomadcertificate record, or return existing record for the current user.
     *
     * Create new iomadcertificate record, or return existing record for the current user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modIomadcertificateIssueIomadcertificateTest() throws ApiException {
        ModIomadcertificateIssueIomadcertificateRequest modIomadcertificateIssueIomadcertificateRequest = null;
        ModIomadcertificateIssueIomadcertificate200Response response = api.modIomadcertificateIssueIomadcertificate(modIomadcertificateIssueIomadcertificateRequest);
        // TODO: test validations
    }

    /**
     * Trigger the course module viewed event and update the module completion status.
     *
     * Trigger the course module viewed event and update the module completion status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modIomadcertificateViewIomadcertificateTest() throws ApiException {
        ModIomadcertificateIssueIomadcertificateRequest modIomadcertificateIssueIomadcertificateRequest = null;
        CoreCalendarDeleteSubscription200Response response = api.modIomadcertificateViewIomadcertificate(modIomadcertificateIssueIomadcertificateRequest);
        // TODO: test validations
    }

}
