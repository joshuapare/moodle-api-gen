/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.joshuapare.moodleclient;

import com.joshuapare.ApiException;
import org.openapitools.client.model.CoreCalendarDeleteSubscription200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ModChatGetChatsByCoursesRequest;
import org.openapitools.client.model.ModSurveyGetQuestions200Response;
import org.openapitools.client.model.ModSurveyGetQuestionsRequest;
import org.openapitools.client.model.ModSurveyGetSurveysByCourses200Response;
import org.openapitools.client.model.ModSurveySubmitAnswersRequest;
import org.openapitools.client.model.ModSurveyViewSurveyRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModSurveyApi
 */
@Disabled
public class ModSurveyApiTest {

    private final ModSurveyApi api = new ModSurveyApi();

    /**
     * Get the complete list of questions for the survey, including subquestions.
     *
     * Get the complete list of questions for the survey, including subquestions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modSurveyGetQuestionsTest() throws ApiException {
        ModSurveyGetQuestionsRequest modSurveyGetQuestionsRequest = null;
        ModSurveyGetQuestions200Response response = api.modSurveyGetQuestions(modSurveyGetQuestionsRequest);
        // TODO: test validations
    }

    /**
     * Returns a list of survey instances in a provided set of courses,                             if no courses are provided then all the survey instances the user has access to will be returned.
     *
     * Returns a list of survey instances in a provided set of courses,                             if no courses are provided then all the survey instances the user has access to will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modSurveyGetSurveysByCoursesTest() throws ApiException {
        ModChatGetChatsByCoursesRequest modChatGetChatsByCoursesRequest = null;
        ModSurveyGetSurveysByCourses200Response response = api.modSurveyGetSurveysByCourses(modChatGetChatsByCoursesRequest);
        // TODO: test validations
    }

    /**
     * Submit the answers for a given survey.
     *
     * Submit the answers for a given survey.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modSurveySubmitAnswersTest() throws ApiException {
        ModSurveySubmitAnswersRequest modSurveySubmitAnswersRequest = null;
        CoreCalendarDeleteSubscription200Response response = api.modSurveySubmitAnswers(modSurveySubmitAnswersRequest);
        // TODO: test validations
    }

    /**
     * Trigger the course module viewed event and update the module completion status.
     *
     * Trigger the course module viewed event and update the module completion status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modSurveyViewSurveyTest() throws ApiException {
        ModSurveyViewSurveyRequest modSurveyViewSurveyRequest = null;
        CoreCalendarDeleteSubscription200Response response = api.modSurveyViewSurvey(modSurveyViewSurveyRequest);
        // TODO: test validations
    }

}
