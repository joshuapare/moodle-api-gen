/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.joshuapare.moodleclient;

import com.joshuapare.ApiException;
import org.openapitools.client.model.BlockIomadCompanyAdminAllocateLicensesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminAssignCoursesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminAssignUsers200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminAssignUsersRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminCapabilityDeleteTemplateRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminCheckToken200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminCheckTokenRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminCreateCompaniesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminCreateLicensesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminDeleteLicensesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminEditCompaniesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminEditLicensesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminEnrolUsersRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminGetCompanies200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminGetCompaniesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminGetCompanyCourses200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminGetCompanyCoursesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminGetCourseInfoRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminGetDepartmentUsers200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminGetDepartmentUsersRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminGetDepartments200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminGetDepartmentsRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminGetLicenseFromId200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminGetLicenseFromIdRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminGetLicenseInfo200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminGetLicenseInfoRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminMoveUsersRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminRestrictCapabilityRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminSyncUsers200Response;
import org.openapitools.client.model.BlockIomadCompanyAdminSyncUsersRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminUnallocateLicensesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminUnassignCoursesRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminUnassignUsersRequest;
import org.openapitools.client.model.BlockIomadCompanyAdminUpdateCoursesRequest;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BlockIomadCompanyAdminApi
 */
@Disabled
public class BlockIomadCompanyAdminApiTest {

    private final BlockIomadCompanyAdminApi api = new BlockIomadCompanyAdminApi();

    /**
     * Allocate course licenses to a user
     *
     * Allocate course licenses to a user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminAllocateLicensesTest() throws ApiException {
        BlockIomadCompanyAdminAllocateLicensesRequest blockIomadCompanyAdminAllocateLicensesRequest = null;
        Object response = api.blockIomadCompanyAdminAllocateLicenses(blockIomadCompanyAdminAllocateLicensesRequest);
        // TODO: test validations
    }

    /**
     * Assign a course to a company
     *
     * Assign a course to a company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminAssignCoursesTest() throws ApiException {
        BlockIomadCompanyAdminAssignCoursesRequest blockIomadCompanyAdminAssignCoursesRequest = null;
        Object response = api.blockIomadCompanyAdminAssignCourses(blockIomadCompanyAdminAssignCoursesRequest);
        // TODO: test validations
    }

    /**
     * Assign users to a company
     *
     * Assign users to a company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminAssignUsersTest() throws ApiException {
        BlockIomadCompanyAdminAssignUsersRequest blockIomadCompanyAdminAssignUsersRequest = null;
        BlockIomadCompanyAdminAssignUsers200Response response = api.blockIomadCompanyAdminAssignUsers(blockIomadCompanyAdminAssignUsersRequest);
        // TODO: test validations
    }

    /**
     * Delete Iomad capabilities template
     *
     * Delete Iomad capabilities template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminCapabilityDeleteTemplateTest() throws ApiException {
        BlockIomadCompanyAdminCapabilityDeleteTemplateRequest blockIomadCompanyAdminCapabilityDeleteTemplateRequest = null;
        Object response = api.blockIomadCompanyAdminCapabilityDeleteTemplate(blockIomadCompanyAdminCapabilityDeleteTemplateRequest);
        // TODO: test validations
    }

    /**
     * Check SSO token
     *
     * Check SSO token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminCheckTokenTest() throws ApiException {
        BlockIomadCompanyAdminCheckTokenRequest blockIomadCompanyAdminCheckTokenRequest = null;
        BlockIomadCompanyAdminCheckToken200Response response = api.blockIomadCompanyAdminCheckToken(blockIomadCompanyAdminCheckTokenRequest);
        // TODO: test validations
    }

    /**
     * Create new Iomad companies
     *
     * Create new Iomad companies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminCreateCompaniesTest() throws ApiException {
        BlockIomadCompanyAdminCreateCompaniesRequest blockIomadCompanyAdminCreateCompaniesRequest = null;
        Object response = api.blockIomadCompanyAdminCreateCompanies(blockIomadCompanyAdminCreateCompaniesRequest);
        // TODO: test validations
    }

    /**
     * Create company licenses
     *
     * Create company licenses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminCreateLicensesTest() throws ApiException {
        BlockIomadCompanyAdminCreateLicensesRequest blockIomadCompanyAdminCreateLicensesRequest = null;
        Object response = api.blockIomadCompanyAdminCreateLicenses(blockIomadCompanyAdminCreateLicensesRequest);
        // TODO: test validations
    }

    /**
     * Delete company licenses
     *
     * Delete company licenses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminDeleteLicensesTest() throws ApiException {
        BlockIomadCompanyAdminDeleteLicensesRequest blockIomadCompanyAdminDeleteLicensesRequest = null;
        Object response = api.blockIomadCompanyAdminDeleteLicenses(blockIomadCompanyAdminDeleteLicensesRequest);
        // TODO: test validations
    }

    /**
     * Edit Iomad companies
     *
     * Edit Iomad companies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminEditCompaniesTest() throws ApiException {
        BlockIomadCompanyAdminEditCompaniesRequest blockIomadCompanyAdminEditCompaniesRequest = null;
        Object response = api.blockIomadCompanyAdminEditCompanies(blockIomadCompanyAdminEditCompaniesRequest);
        // TODO: test validations
    }

    /**
     * Edit company license settings
     *
     * Edit company license settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminEditLicensesTest() throws ApiException {
        BlockIomadCompanyAdminEditLicensesRequest blockIomadCompanyAdminEditLicensesRequest = null;
        Object response = api.blockIomadCompanyAdminEditLicenses(blockIomadCompanyAdminEditLicensesRequest);
        // TODO: test validations
    }

    /**
     * Assign users onto courses
     *
     * Assign users onto courses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminEnrolUsersTest() throws ApiException {
        BlockIomadCompanyAdminEnrolUsersRequest blockIomadCompanyAdminEnrolUsersRequest = null;
        Object response = api.blockIomadCompanyAdminEnrolUsers(blockIomadCompanyAdminEnrolUsersRequest);
        // TODO: test validations
    }

    /**
     * Get all Iomad companies
     *
     * Get all Iomad companies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminGetCompaniesTest() throws ApiException {
        BlockIomadCompanyAdminGetCompaniesRequest blockIomadCompanyAdminGetCompaniesRequest = null;
        BlockIomadCompanyAdminGetCompanies200Response response = api.blockIomadCompanyAdminGetCompanies(blockIomadCompanyAdminGetCompaniesRequest);
        // TODO: test validations
    }

    /**
     * Get Iomad company course allocations
     *
     * Get Iomad company course allocations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminGetCompanyCoursesTest() throws ApiException {
        BlockIomadCompanyAdminGetCompanyCoursesRequest blockIomadCompanyAdminGetCompanyCoursesRequest = null;
        BlockIomadCompanyAdminGetCompanyCourses200Response response = api.blockIomadCompanyAdminGetCompanyCourses(blockIomadCompanyAdminGetCompanyCoursesRequest);
        // TODO: test validations
    }

    /**
     * Get Iomad course settings
     *
     * Get Iomad course settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminGetCourseInfoTest() throws ApiException {
        BlockIomadCompanyAdminGetCourseInfoRequest blockIomadCompanyAdminGetCourseInfoRequest = null;
        Object response = api.blockIomadCompanyAdminGetCourseInfo(blockIomadCompanyAdminGetCourseInfoRequest);
        // TODO: test validations
    }

    /**
     * Get users within a department
     *
     * Get users within a department
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminGetDepartmentUsersTest() throws ApiException {
        BlockIomadCompanyAdminGetDepartmentUsersRequest blockIomadCompanyAdminGetDepartmentUsersRequest = null;
        BlockIomadCompanyAdminGetDepartmentUsers200Response response = api.blockIomadCompanyAdminGetDepartmentUsers(blockIomadCompanyAdminGetDepartmentUsersRequest);
        // TODO: test validations
    }

    /**
     * Get all company departments
     *
     * Get all company departments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminGetDepartmentsTest() throws ApiException {
        BlockIomadCompanyAdminGetDepartmentsRequest blockIomadCompanyAdminGetDepartmentsRequest = null;
        BlockIomadCompanyAdminGetDepartments200Response response = api.blockIomadCompanyAdminGetDepartments(blockIomadCompanyAdminGetDepartmentsRequest);
        // TODO: test validations
    }

    /**
     * Get licence data give the ID
     *
     * Get licence data give the ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminGetLicenseFromIdTest() throws ApiException {
        BlockIomadCompanyAdminGetLicenseFromIdRequest blockIomadCompanyAdminGetLicenseFromIdRequest = null;
        BlockIomadCompanyAdminGetLicenseFromId200Response response = api.blockIomadCompanyAdminGetLicenseFromId(blockIomadCompanyAdminGetLicenseFromIdRequest);
        // TODO: test validations
    }

    /**
     * Get company license information
     *
     * Get company license information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminGetLicenseInfoTest() throws ApiException {
        BlockIomadCompanyAdminGetLicenseInfoRequest blockIomadCompanyAdminGetLicenseInfoRequest = null;
        BlockIomadCompanyAdminGetLicenseInfo200Response response = api.blockIomadCompanyAdminGetLicenseInfo(blockIomadCompanyAdminGetLicenseInfoRequest);
        // TODO: test validations
    }

    /**
     * Move users between departments
     *
     * Move users between departments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminMoveUsersTest() throws ApiException {
        BlockIomadCompanyAdminMoveUsersRequest blockIomadCompanyAdminMoveUsersRequest = null;
        Object response = api.blockIomadCompanyAdminMoveUsers(blockIomadCompanyAdminMoveUsersRequest);
        // TODO: test validations
    }

    /**
     * set/reset Iomad capability
     *
     * set/reset Iomad capability
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminRestrictCapabilityTest() throws ApiException {
        BlockIomadCompanyAdminRestrictCapabilityRequest blockIomadCompanyAdminRestrictCapabilityRequest = null;
        Object response = api.blockIomadCompanyAdminRestrictCapability(blockIomadCompanyAdminRestrictCapabilityRequest);
        // TODO: test validations
    }

    /**
     * Call update users to sync to external system
     *
     * Call update users to sync to external system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminSyncUsersTest() throws ApiException {
        BlockIomadCompanyAdminSyncUsersRequest blockIomadCompanyAdminSyncUsersRequest = null;
        BlockIomadCompanyAdminSyncUsers200Response response = api.blockIomadCompanyAdminSyncUsers(blockIomadCompanyAdminSyncUsersRequest);
        // TODO: test validations
    }

    /**
     * Remove course licenses from users
     *
     * Remove course licenses from users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminUnallocateLicensesTest() throws ApiException {
        BlockIomadCompanyAdminUnallocateLicensesRequest blockIomadCompanyAdminUnallocateLicensesRequest = null;
        Object response = api.blockIomadCompanyAdminUnallocateLicenses(blockIomadCompanyAdminUnallocateLicensesRequest);
        // TODO: test validations
    }

    /**
     * Unassign a course from a company
     *
     * Unassign a course from a company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminUnassignCoursesTest() throws ApiException {
        BlockIomadCompanyAdminUnassignCoursesRequest blockIomadCompanyAdminUnassignCoursesRequest = null;
        Object response = api.blockIomadCompanyAdminUnassignCourses(blockIomadCompanyAdminUnassignCoursesRequest);
        // TODO: test validations
    }

    /**
     * Unassign users from a company
     *
     * Unassign users from a company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminUnassignUsersTest() throws ApiException {
        BlockIomadCompanyAdminUnassignUsersRequest blockIomadCompanyAdminUnassignUsersRequest = null;
        Object response = api.blockIomadCompanyAdminUnassignUsers(blockIomadCompanyAdminUnassignUsersRequest);
        // TODO: test validations
    }

    /**
     * Update Iomad course settings
     *
     * Update Iomad course settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockIomadCompanyAdminUpdateCoursesTest() throws ApiException {
        BlockIomadCompanyAdminUpdateCoursesRequest blockIomadCompanyAdminUpdateCoursesRequest = null;
        Object response = api.blockIomadCompanyAdminUpdateCourses(blockIomadCompanyAdminUpdateCoursesRequest);
        // TODO: test validations
    }

}
