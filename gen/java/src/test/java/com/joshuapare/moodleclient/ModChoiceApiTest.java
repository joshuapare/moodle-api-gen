/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.joshuapare.moodleclient;

import com.joshuapare.ApiException;
import org.openapitools.client.model.CoreCalendarDeleteSubscription200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ModChatGetChatsByCoursesRequest;
import org.openapitools.client.model.ModChoiceDeleteChoiceResponses200Response;
import org.openapitools.client.model.ModChoiceDeleteChoiceResponsesRequest;
import org.openapitools.client.model.ModChoiceGetChoiceOptions200Response;
import org.openapitools.client.model.ModChoiceGetChoiceOptionsRequest;
import org.openapitools.client.model.ModChoiceGetChoiceResults200Response;
import org.openapitools.client.model.ModChoiceGetChoicesByCourses200Response;
import org.openapitools.client.model.ModChoiceSubmitChoiceResponse200Response;
import org.openapitools.client.model.ModChoiceSubmitChoiceResponseRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModChoiceApi
 */
@Disabled
public class ModChoiceApiTest {

    private final ModChoiceApi api = new ModChoiceApi();

    /**
     * Delete the given submitted responses in a choice
     *
     * Delete the given submitted responses in a choice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modChoiceDeleteChoiceResponsesTest() throws ApiException {
        ModChoiceDeleteChoiceResponsesRequest modChoiceDeleteChoiceResponsesRequest = null;
        ModChoiceDeleteChoiceResponses200Response response = api.modChoiceDeleteChoiceResponses(modChoiceDeleteChoiceResponsesRequest);
        // TODO: test validations
    }

    /**
     * Retrieve options for a specific choice.
     *
     * Retrieve options for a specific choice.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modChoiceGetChoiceOptionsTest() throws ApiException {
        ModChoiceGetChoiceOptionsRequest modChoiceGetChoiceOptionsRequest = null;
        ModChoiceGetChoiceOptions200Response response = api.modChoiceGetChoiceOptions(modChoiceGetChoiceOptionsRequest);
        // TODO: test validations
    }

    /**
     * Retrieve users results for a given choice.
     *
     * Retrieve users results for a given choice.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modChoiceGetChoiceResultsTest() throws ApiException {
        ModChoiceGetChoiceOptionsRequest modChoiceGetChoiceOptionsRequest = null;
        ModChoiceGetChoiceResults200Response response = api.modChoiceGetChoiceResults(modChoiceGetChoiceOptionsRequest);
        // TODO: test validations
    }

    /**
     * Returns a list of choice instances in a provided set of courses,                             if no courses are provided then all the choice instances the user has access to will be returned.
     *
     * Returns a list of choice instances in a provided set of courses,                             if no courses are provided then all the choice instances the user has access to will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modChoiceGetChoicesByCoursesTest() throws ApiException {
        ModChatGetChatsByCoursesRequest modChatGetChatsByCoursesRequest = null;
        ModChoiceGetChoicesByCourses200Response response = api.modChoiceGetChoicesByCourses(modChatGetChatsByCoursesRequest);
        // TODO: test validations
    }

    /**
     * Submit responses to a specific choice item.
     *
     * Submit responses to a specific choice item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modChoiceSubmitChoiceResponseTest() throws ApiException {
        ModChoiceSubmitChoiceResponseRequest modChoiceSubmitChoiceResponseRequest = null;
        ModChoiceSubmitChoiceResponse200Response response = api.modChoiceSubmitChoiceResponse(modChoiceSubmitChoiceResponseRequest);
        // TODO: test validations
    }

    /**
     * Trigger the course module viewed event and update the module completion status.
     *
     * Trigger the course module viewed event and update the module completion status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modChoiceViewChoiceTest() throws ApiException {
        ModChoiceGetChoiceOptionsRequest modChoiceGetChoiceOptionsRequest = null;
        CoreCalendarDeleteSubscription200Response response = api.modChoiceViewChoice(modChoiceGetChoiceOptionsRequest);
        // TODO: test validations
    }

}
