/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.joshuapare.moodleclient;

import com.joshuapare.ApiCallback;
import com.joshuapare.ApiClient;
import com.joshuapare.ApiException;
import com.joshuapare.ApiResponse;
import com.joshuapare.Configuration;
import com.joshuapare.Pair;
import com.joshuapare.ProgressRequestBody;
import com.joshuapare.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CoreCalendarDeleteSubscription200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GradereportOverviewViewGradeReportRequest;
import org.openapitools.client.model.GradereportUserGetAccessInformation200Response;
import org.openapitools.client.model.GradereportUserGetAccessInformationRequest;
import org.openapitools.client.model.GradereportUserGetGradeItems200Response;
import org.openapitools.client.model.GradereportUserGetGradeItemsRequest;
import org.openapitools.client.model.GradereportUserGetGradesTable200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GradereportUserApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GradereportUserApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GradereportUserApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for gradereportUserGetAccessInformation
     * @param gradereportUserGetAccessInformationRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserGetAccessInformationCall(GradereportUserGetAccessInformationRequest gradereportUserGetAccessInformationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = gradereportUserGetAccessInformationRequest;

        // create path and map variables
        String localVarPath = "/gradereport_user_get_access_information";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call gradereportUserGetAccessInformationValidateBeforeCall(GradereportUserGetAccessInformationRequest gradereportUserGetAccessInformationRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'gradereportUserGetAccessInformationRequest' is set
        if (gradereportUserGetAccessInformationRequest == null) {
            throw new ApiException("Missing the required parameter 'gradereportUserGetAccessInformationRequest' when calling gradereportUserGetAccessInformation(Async)");
        }

        return gradereportUserGetAccessInformationCall(gradereportUserGetAccessInformationRequest, _callback);

    }

    /**
     * Returns user access information for the user grade report.
     * Returns user access information for the user grade report.
     * @param gradereportUserGetAccessInformationRequest  (required)
     * @return GradereportUserGetAccessInformation200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public GradereportUserGetAccessInformation200Response gradereportUserGetAccessInformation(GradereportUserGetAccessInformationRequest gradereportUserGetAccessInformationRequest) throws ApiException {
        ApiResponse<GradereportUserGetAccessInformation200Response> localVarResp = gradereportUserGetAccessInformationWithHttpInfo(gradereportUserGetAccessInformationRequest);
        return localVarResp.getData();
    }

    /**
     * Returns user access information for the user grade report.
     * Returns user access information for the user grade report.
     * @param gradereportUserGetAccessInformationRequest  (required)
     * @return ApiResponse&lt;GradereportUserGetAccessInformation200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GradereportUserGetAccessInformation200Response> gradereportUserGetAccessInformationWithHttpInfo(GradereportUserGetAccessInformationRequest gradereportUserGetAccessInformationRequest) throws ApiException {
        okhttp3.Call localVarCall = gradereportUserGetAccessInformationValidateBeforeCall(gradereportUserGetAccessInformationRequest, null);
        Type localVarReturnType = new TypeToken<GradereportUserGetAccessInformation200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns user access information for the user grade report. (asynchronously)
     * Returns user access information for the user grade report.
     * @param gradereportUserGetAccessInformationRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserGetAccessInformationAsync(GradereportUserGetAccessInformationRequest gradereportUserGetAccessInformationRequest, final ApiCallback<GradereportUserGetAccessInformation200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = gradereportUserGetAccessInformationValidateBeforeCall(gradereportUserGetAccessInformationRequest, _callback);
        Type localVarReturnType = new TypeToken<GradereportUserGetAccessInformation200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for gradereportUserGetGradeItems
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserGetGradeItemsCall(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = gradereportUserGetGradeItemsRequest;

        // create path and map variables
        String localVarPath = "/gradereport_user_get_grade_items";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call gradereportUserGetGradeItemsValidateBeforeCall(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'gradereportUserGetGradeItemsRequest' is set
        if (gradereportUserGetGradeItemsRequest == null) {
            throw new ApiException("Missing the required parameter 'gradereportUserGetGradeItemsRequest' when calling gradereportUserGetGradeItems(Async)");
        }

        return gradereportUserGetGradeItemsCall(gradereportUserGetGradeItemsRequest, _callback);

    }

    /**
     * Returns the complete list of grade items for users in a course
     * Returns the complete list of grade items for users in a course
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @return GradereportUserGetGradeItems200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public GradereportUserGetGradeItems200Response gradereportUserGetGradeItems(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest) throws ApiException {
        ApiResponse<GradereportUserGetGradeItems200Response> localVarResp = gradereportUserGetGradeItemsWithHttpInfo(gradereportUserGetGradeItemsRequest);
        return localVarResp.getData();
    }

    /**
     * Returns the complete list of grade items for users in a course
     * Returns the complete list of grade items for users in a course
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @return ApiResponse&lt;GradereportUserGetGradeItems200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GradereportUserGetGradeItems200Response> gradereportUserGetGradeItemsWithHttpInfo(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest) throws ApiException {
        okhttp3.Call localVarCall = gradereportUserGetGradeItemsValidateBeforeCall(gradereportUserGetGradeItemsRequest, null);
        Type localVarReturnType = new TypeToken<GradereportUserGetGradeItems200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns the complete list of grade items for users in a course (asynchronously)
     * Returns the complete list of grade items for users in a course
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserGetGradeItemsAsync(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest, final ApiCallback<GradereportUserGetGradeItems200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = gradereportUserGetGradeItemsValidateBeforeCall(gradereportUserGetGradeItemsRequest, _callback);
        Type localVarReturnType = new TypeToken<GradereportUserGetGradeItems200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for gradereportUserGetGradesTable
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserGetGradesTableCall(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = gradereportUserGetGradeItemsRequest;

        // create path and map variables
        String localVarPath = "/gradereport_user_get_grades_table";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call gradereportUserGetGradesTableValidateBeforeCall(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'gradereportUserGetGradeItemsRequest' is set
        if (gradereportUserGetGradeItemsRequest == null) {
            throw new ApiException("Missing the required parameter 'gradereportUserGetGradeItemsRequest' when calling gradereportUserGetGradesTable(Async)");
        }

        return gradereportUserGetGradesTableCall(gradereportUserGetGradeItemsRequest, _callback);

    }

    /**
     * Get the user/s report grades table for a course
     * Get the user/s report grades table for a course
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @return GradereportUserGetGradesTable200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public GradereportUserGetGradesTable200Response gradereportUserGetGradesTable(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest) throws ApiException {
        ApiResponse<GradereportUserGetGradesTable200Response> localVarResp = gradereportUserGetGradesTableWithHttpInfo(gradereportUserGetGradeItemsRequest);
        return localVarResp.getData();
    }

    /**
     * Get the user/s report grades table for a course
     * Get the user/s report grades table for a course
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @return ApiResponse&lt;GradereportUserGetGradesTable200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GradereportUserGetGradesTable200Response> gradereportUserGetGradesTableWithHttpInfo(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest) throws ApiException {
        okhttp3.Call localVarCall = gradereportUserGetGradesTableValidateBeforeCall(gradereportUserGetGradeItemsRequest, null);
        Type localVarReturnType = new TypeToken<GradereportUserGetGradesTable200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the user/s report grades table for a course (asynchronously)
     * Get the user/s report grades table for a course
     * @param gradereportUserGetGradeItemsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserGetGradesTableAsync(GradereportUserGetGradeItemsRequest gradereportUserGetGradeItemsRequest, final ApiCallback<GradereportUserGetGradesTable200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = gradereportUserGetGradesTableValidateBeforeCall(gradereportUserGetGradeItemsRequest, _callback);
        Type localVarReturnType = new TypeToken<GradereportUserGetGradesTable200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for gradereportUserViewGradeReport
     * @param gradereportOverviewViewGradeReportRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserViewGradeReportCall(GradereportOverviewViewGradeReportRequest gradereportOverviewViewGradeReportRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = gradereportOverviewViewGradeReportRequest;

        // create path and map variables
        String localVarPath = "/gradereport_user_view_grade_report";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call gradereportUserViewGradeReportValidateBeforeCall(GradereportOverviewViewGradeReportRequest gradereportOverviewViewGradeReportRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'gradereportOverviewViewGradeReportRequest' is set
        if (gradereportOverviewViewGradeReportRequest == null) {
            throw new ApiException("Missing the required parameter 'gradereportOverviewViewGradeReportRequest' when calling gradereportUserViewGradeReport(Async)");
        }

        return gradereportUserViewGradeReportCall(gradereportOverviewViewGradeReportRequest, _callback);

    }

    /**
     * Trigger the report view event
     * Trigger the report view event
     * @param gradereportOverviewViewGradeReportRequest  (required)
     * @return CoreCalendarDeleteSubscription200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public CoreCalendarDeleteSubscription200Response gradereportUserViewGradeReport(GradereportOverviewViewGradeReportRequest gradereportOverviewViewGradeReportRequest) throws ApiException {
        ApiResponse<CoreCalendarDeleteSubscription200Response> localVarResp = gradereportUserViewGradeReportWithHttpInfo(gradereportOverviewViewGradeReportRequest);
        return localVarResp.getData();
    }

    /**
     * Trigger the report view event
     * Trigger the report view event
     * @param gradereportOverviewViewGradeReportRequest  (required)
     * @return ApiResponse&lt;CoreCalendarDeleteSubscription200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CoreCalendarDeleteSubscription200Response> gradereportUserViewGradeReportWithHttpInfo(GradereportOverviewViewGradeReportRequest gradereportOverviewViewGradeReportRequest) throws ApiException {
        okhttp3.Call localVarCall = gradereportUserViewGradeReportValidateBeforeCall(gradereportOverviewViewGradeReportRequest, null);
        Type localVarReturnType = new TypeToken<CoreCalendarDeleteSubscription200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Trigger the report view event (asynchronously)
     * Trigger the report view event
     * @param gradereportOverviewViewGradeReportRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradereportUserViewGradeReportAsync(GradereportOverviewViewGradeReportRequest gradereportOverviewViewGradeReportRequest, final ApiCallback<CoreCalendarDeleteSubscription200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = gradereportUserViewGradeReportValidateBeforeCall(gradereportOverviewViewGradeReportRequest, _callback);
        Type localVarReturnType = new TypeToken<CoreCalendarDeleteSubscription200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
