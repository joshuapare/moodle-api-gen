/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.joshuapare.moodleclient;

import com.joshuapare.ApiCallback;
import com.joshuapare.ApiClient;
import com.joshuapare.ApiException;
import com.joshuapare.ApiResponse;
import com.joshuapare.Configuration;
import com.joshuapare.Pair;
import com.joshuapare.ProgressRequestBody;
import com.joshuapare.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CoreCalendarDeleteSubscription200Response;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest;
import org.openapitools.client.model.ModH5pactivityGetAttempts200Response;
import org.openapitools.client.model.ModH5pactivityGetAttemptsRequest;
import org.openapitools.client.model.ModH5pactivityGetH5pactivitiesByCourses200Response;
import org.openapitools.client.model.ModH5pactivityGetH5pactivityAccessInformation200Response;
import org.openapitools.client.model.ModH5pactivityGetH5pactivityAccessInformationRequest;
import org.openapitools.client.model.ModH5pactivityGetResults200Response;
import org.openapitools.client.model.ModH5pactivityGetResultsRequest;
import org.openapitools.client.model.ModH5pactivityGetUserAttempts200Response;
import org.openapitools.client.model.ModH5pactivityGetUserAttemptsRequest;
import org.openapitools.client.model.ModH5pactivityLogReportViewedRequest;
import org.openapitools.client.model.ModH5pactivityViewH5pactivityRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ModH5pactivityApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ModH5pactivityApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ModH5pactivityApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for modH5pactivityGetAttempts
     * @param modH5pactivityGetAttemptsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetAttemptsCall(ModH5pactivityGetAttemptsRequest modH5pactivityGetAttemptsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modH5pactivityGetAttemptsRequest;

        // create path and map variables
        String localVarPath = "/mod_h5pactivity_get_attempts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modH5pactivityGetAttemptsValidateBeforeCall(ModH5pactivityGetAttemptsRequest modH5pactivityGetAttemptsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modH5pactivityGetAttemptsRequest' is set
        if (modH5pactivityGetAttemptsRequest == null) {
            throw new ApiException("Missing the required parameter 'modH5pactivityGetAttemptsRequest' when calling modH5pactivityGetAttempts(Async)");
        }

        return modH5pactivityGetAttemptsCall(modH5pactivityGetAttemptsRequest, _callback);

    }

    /**
     * Return the information needed to list a user attempts.
     * Return the information needed to list a user attempts.
     * @param modH5pactivityGetAttemptsRequest  (required)
     * @return ModH5pactivityGetAttempts200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ModH5pactivityGetAttempts200Response modH5pactivityGetAttempts(ModH5pactivityGetAttemptsRequest modH5pactivityGetAttemptsRequest) throws ApiException {
        ApiResponse<ModH5pactivityGetAttempts200Response> localVarResp = modH5pactivityGetAttemptsWithHttpInfo(modH5pactivityGetAttemptsRequest);
        return localVarResp.getData();
    }

    /**
     * Return the information needed to list a user attempts.
     * Return the information needed to list a user attempts.
     * @param modH5pactivityGetAttemptsRequest  (required)
     * @return ApiResponse&lt;ModH5pactivityGetAttempts200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModH5pactivityGetAttempts200Response> modH5pactivityGetAttemptsWithHttpInfo(ModH5pactivityGetAttemptsRequest modH5pactivityGetAttemptsRequest) throws ApiException {
        okhttp3.Call localVarCall = modH5pactivityGetAttemptsValidateBeforeCall(modH5pactivityGetAttemptsRequest, null);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetAttempts200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Return the information needed to list a user attempts. (asynchronously)
     * Return the information needed to list a user attempts.
     * @param modH5pactivityGetAttemptsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetAttemptsAsync(ModH5pactivityGetAttemptsRequest modH5pactivityGetAttemptsRequest, final ApiCallback<ModH5pactivityGetAttempts200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = modH5pactivityGetAttemptsValidateBeforeCall(modH5pactivityGetAttemptsRequest, _callback);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetAttempts200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modH5pactivityGetH5pactivitiesByCourses
     * @param modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetH5pactivitiesByCoursesCall(ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest;

        // create path and map variables
        String localVarPath = "/mod_h5pactivity_get_h5pactivities_by_courses";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modH5pactivityGetH5pactivitiesByCoursesValidateBeforeCall(ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest' is set
        if (modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest == null) {
            throw new ApiException("Missing the required parameter 'modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest' when calling modH5pactivityGetH5pactivitiesByCourses(Async)");
        }

        return modH5pactivityGetH5pactivitiesByCoursesCall(modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest, _callback);

    }

    /**
     * Returns a list of h5p activities in a list of             provided courses, if no list is provided all h5p activities             that the user can view will be returned.
     * Returns a list of h5p activities in a list of             provided courses, if no list is provided all h5p activities             that the user can view will be returned.
     * @param modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest  (required)
     * @return ModH5pactivityGetH5pactivitiesByCourses200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ModH5pactivityGetH5pactivitiesByCourses200Response modH5pactivityGetH5pactivitiesByCourses(ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest) throws ApiException {
        ApiResponse<ModH5pactivityGetH5pactivitiesByCourses200Response> localVarResp = modH5pactivityGetH5pactivitiesByCoursesWithHttpInfo(modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest);
        return localVarResp.getData();
    }

    /**
     * Returns a list of h5p activities in a list of             provided courses, if no list is provided all h5p activities             that the user can view will be returned.
     * Returns a list of h5p activities in a list of             provided courses, if no list is provided all h5p activities             that the user can view will be returned.
     * @param modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest  (required)
     * @return ApiResponse&lt;ModH5pactivityGetH5pactivitiesByCourses200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModH5pactivityGetH5pactivitiesByCourses200Response> modH5pactivityGetH5pactivitiesByCoursesWithHttpInfo(ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest) throws ApiException {
        okhttp3.Call localVarCall = modH5pactivityGetH5pactivitiesByCoursesValidateBeforeCall(modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest, null);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetH5pactivitiesByCourses200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a list of h5p activities in a list of             provided courses, if no list is provided all h5p activities             that the user can view will be returned. (asynchronously)
     * Returns a list of h5p activities in a list of             provided courses, if no list is provided all h5p activities             that the user can view will be returned.
     * @param modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetH5pactivitiesByCoursesAsync(ModBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest, final ApiCallback<ModH5pactivityGetH5pactivitiesByCourses200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = modH5pactivityGetH5pactivitiesByCoursesValidateBeforeCall(modBigbluebuttonbnGetBigbluebuttonbnsByCoursesRequest, _callback);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetH5pactivitiesByCourses200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modH5pactivityGetH5pactivityAccessInformation
     * @param modH5pactivityGetH5pactivityAccessInformationRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetH5pactivityAccessInformationCall(ModH5pactivityGetH5pactivityAccessInformationRequest modH5pactivityGetH5pactivityAccessInformationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modH5pactivityGetH5pactivityAccessInformationRequest;

        // create path and map variables
        String localVarPath = "/mod_h5pactivity_get_h5pactivity_access_information";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modH5pactivityGetH5pactivityAccessInformationValidateBeforeCall(ModH5pactivityGetH5pactivityAccessInformationRequest modH5pactivityGetH5pactivityAccessInformationRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modH5pactivityGetH5pactivityAccessInformationRequest' is set
        if (modH5pactivityGetH5pactivityAccessInformationRequest == null) {
            throw new ApiException("Missing the required parameter 'modH5pactivityGetH5pactivityAccessInformationRequest' when calling modH5pactivityGetH5pactivityAccessInformation(Async)");
        }

        return modH5pactivityGetH5pactivityAccessInformationCall(modH5pactivityGetH5pactivityAccessInformationRequest, _callback);

    }

    /**
     * Return access information for a given h5p activity.
     * Return access information for a given h5p activity.
     * @param modH5pactivityGetH5pactivityAccessInformationRequest  (required)
     * @return ModH5pactivityGetH5pactivityAccessInformation200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ModH5pactivityGetH5pactivityAccessInformation200Response modH5pactivityGetH5pactivityAccessInformation(ModH5pactivityGetH5pactivityAccessInformationRequest modH5pactivityGetH5pactivityAccessInformationRequest) throws ApiException {
        ApiResponse<ModH5pactivityGetH5pactivityAccessInformation200Response> localVarResp = modH5pactivityGetH5pactivityAccessInformationWithHttpInfo(modH5pactivityGetH5pactivityAccessInformationRequest);
        return localVarResp.getData();
    }

    /**
     * Return access information for a given h5p activity.
     * Return access information for a given h5p activity.
     * @param modH5pactivityGetH5pactivityAccessInformationRequest  (required)
     * @return ApiResponse&lt;ModH5pactivityGetH5pactivityAccessInformation200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModH5pactivityGetH5pactivityAccessInformation200Response> modH5pactivityGetH5pactivityAccessInformationWithHttpInfo(ModH5pactivityGetH5pactivityAccessInformationRequest modH5pactivityGetH5pactivityAccessInformationRequest) throws ApiException {
        okhttp3.Call localVarCall = modH5pactivityGetH5pactivityAccessInformationValidateBeforeCall(modH5pactivityGetH5pactivityAccessInformationRequest, null);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetH5pactivityAccessInformation200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Return access information for a given h5p activity. (asynchronously)
     * Return access information for a given h5p activity.
     * @param modH5pactivityGetH5pactivityAccessInformationRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetH5pactivityAccessInformationAsync(ModH5pactivityGetH5pactivityAccessInformationRequest modH5pactivityGetH5pactivityAccessInformationRequest, final ApiCallback<ModH5pactivityGetH5pactivityAccessInformation200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = modH5pactivityGetH5pactivityAccessInformationValidateBeforeCall(modH5pactivityGetH5pactivityAccessInformationRequest, _callback);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetH5pactivityAccessInformation200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modH5pactivityGetResults
     * @param modH5pactivityGetResultsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts results data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetResultsCall(ModH5pactivityGetResultsRequest modH5pactivityGetResultsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modH5pactivityGetResultsRequest;

        // create path and map variables
        String localVarPath = "/mod_h5pactivity_get_results";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modH5pactivityGetResultsValidateBeforeCall(ModH5pactivityGetResultsRequest modH5pactivityGetResultsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modH5pactivityGetResultsRequest' is set
        if (modH5pactivityGetResultsRequest == null) {
            throw new ApiException("Missing the required parameter 'modH5pactivityGetResultsRequest' when calling modH5pactivityGetResults(Async)");
        }

        return modH5pactivityGetResultsCall(modH5pactivityGetResultsRequest, _callback);

    }

    /**
     * Return the information needed to list a user attempt results.
     * Return the information needed to list a user attempt results.
     * @param modH5pactivityGetResultsRequest  (required)
     * @return ModH5pactivityGetResults200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts results data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ModH5pactivityGetResults200Response modH5pactivityGetResults(ModH5pactivityGetResultsRequest modH5pactivityGetResultsRequest) throws ApiException {
        ApiResponse<ModH5pactivityGetResults200Response> localVarResp = modH5pactivityGetResultsWithHttpInfo(modH5pactivityGetResultsRequest);
        return localVarResp.getData();
    }

    /**
     * Return the information needed to list a user attempt results.
     * Return the information needed to list a user attempt results.
     * @param modH5pactivityGetResultsRequest  (required)
     * @return ApiResponse&lt;ModH5pactivityGetResults200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts results data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModH5pactivityGetResults200Response> modH5pactivityGetResultsWithHttpInfo(ModH5pactivityGetResultsRequest modH5pactivityGetResultsRequest) throws ApiException {
        okhttp3.Call localVarCall = modH5pactivityGetResultsValidateBeforeCall(modH5pactivityGetResultsRequest, null);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetResults200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Return the information needed to list a user attempt results. (asynchronously)
     * Return the information needed to list a user attempt results.
     * @param modH5pactivityGetResultsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts results data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetResultsAsync(ModH5pactivityGetResultsRequest modH5pactivityGetResultsRequest, final ApiCallback<ModH5pactivityGetResults200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = modH5pactivityGetResultsValidateBeforeCall(modH5pactivityGetResultsRequest, _callback);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetResults200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modH5pactivityGetUserAttempts
     * @param modH5pactivityGetUserAttemptsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetUserAttemptsCall(ModH5pactivityGetUserAttemptsRequest modH5pactivityGetUserAttemptsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modH5pactivityGetUserAttemptsRequest;

        // create path and map variables
        String localVarPath = "/mod_h5pactivity_get_user_attempts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modH5pactivityGetUserAttemptsValidateBeforeCall(ModH5pactivityGetUserAttemptsRequest modH5pactivityGetUserAttemptsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modH5pactivityGetUserAttemptsRequest' is set
        if (modH5pactivityGetUserAttemptsRequest == null) {
            throw new ApiException("Missing the required parameter 'modH5pactivityGetUserAttemptsRequest' when calling modH5pactivityGetUserAttempts(Async)");
        }

        return modH5pactivityGetUserAttemptsCall(modH5pactivityGetUserAttemptsRequest, _callback);

    }

    /**
     * Return the information needed to list all enrolled user attempts.
     * Return the information needed to list all enrolled user attempts.
     * @param modH5pactivityGetUserAttemptsRequest  (required)
     * @return ModH5pactivityGetUserAttempts200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ModH5pactivityGetUserAttempts200Response modH5pactivityGetUserAttempts(ModH5pactivityGetUserAttemptsRequest modH5pactivityGetUserAttemptsRequest) throws ApiException {
        ApiResponse<ModH5pactivityGetUserAttempts200Response> localVarResp = modH5pactivityGetUserAttemptsWithHttpInfo(modH5pactivityGetUserAttemptsRequest);
        return localVarResp.getData();
    }

    /**
     * Return the information needed to list all enrolled user attempts.
     * Return the information needed to list all enrolled user attempts.
     * @param modH5pactivityGetUserAttemptsRequest  (required)
     * @return ApiResponse&lt;ModH5pactivityGetUserAttempts200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModH5pactivityGetUserAttempts200Response> modH5pactivityGetUserAttemptsWithHttpInfo(ModH5pactivityGetUserAttemptsRequest modH5pactivityGetUserAttemptsRequest) throws ApiException {
        okhttp3.Call localVarCall = modH5pactivityGetUserAttemptsValidateBeforeCall(modH5pactivityGetUserAttemptsRequest, null);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetUserAttempts200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Return the information needed to list all enrolled user attempts. (asynchronously)
     * Return the information needed to list all enrolled user attempts.
     * @param modH5pactivityGetUserAttemptsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Activity attempts data </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityGetUserAttemptsAsync(ModH5pactivityGetUserAttemptsRequest modH5pactivityGetUserAttemptsRequest, final ApiCallback<ModH5pactivityGetUserAttempts200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = modH5pactivityGetUserAttemptsValidateBeforeCall(modH5pactivityGetUserAttemptsRequest, _callback);
        Type localVarReturnType = new TypeToken<ModH5pactivityGetUserAttempts200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modH5pactivityLogReportViewed
     * @param modH5pactivityLogReportViewedRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityLogReportViewedCall(ModH5pactivityLogReportViewedRequest modH5pactivityLogReportViewedRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modH5pactivityLogReportViewedRequest;

        // create path and map variables
        String localVarPath = "/mod_h5pactivity_log_report_viewed";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modH5pactivityLogReportViewedValidateBeforeCall(ModH5pactivityLogReportViewedRequest modH5pactivityLogReportViewedRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modH5pactivityLogReportViewedRequest' is set
        if (modH5pactivityLogReportViewedRequest == null) {
            throw new ApiException("Missing the required parameter 'modH5pactivityLogReportViewedRequest' when calling modH5pactivityLogReportViewed(Async)");
        }

        return modH5pactivityLogReportViewedCall(modH5pactivityLogReportViewedRequest, _callback);

    }

    /**
     * Log that the h5pactivity was viewed.
     * Log that the h5pactivity was viewed.
     * @param modH5pactivityLogReportViewedRequest  (required)
     * @return CoreCalendarDeleteSubscription200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public CoreCalendarDeleteSubscription200Response modH5pactivityLogReportViewed(ModH5pactivityLogReportViewedRequest modH5pactivityLogReportViewedRequest) throws ApiException {
        ApiResponse<CoreCalendarDeleteSubscription200Response> localVarResp = modH5pactivityLogReportViewedWithHttpInfo(modH5pactivityLogReportViewedRequest);
        return localVarResp.getData();
    }

    /**
     * Log that the h5pactivity was viewed.
     * Log that the h5pactivity was viewed.
     * @param modH5pactivityLogReportViewedRequest  (required)
     * @return ApiResponse&lt;CoreCalendarDeleteSubscription200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CoreCalendarDeleteSubscription200Response> modH5pactivityLogReportViewedWithHttpInfo(ModH5pactivityLogReportViewedRequest modH5pactivityLogReportViewedRequest) throws ApiException {
        okhttp3.Call localVarCall = modH5pactivityLogReportViewedValidateBeforeCall(modH5pactivityLogReportViewedRequest, null);
        Type localVarReturnType = new TypeToken<CoreCalendarDeleteSubscription200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Log that the h5pactivity was viewed. (asynchronously)
     * Log that the h5pactivity was viewed.
     * @param modH5pactivityLogReportViewedRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityLogReportViewedAsync(ModH5pactivityLogReportViewedRequest modH5pactivityLogReportViewedRequest, final ApiCallback<CoreCalendarDeleteSubscription200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = modH5pactivityLogReportViewedValidateBeforeCall(modH5pactivityLogReportViewedRequest, _callback);
        Type localVarReturnType = new TypeToken<CoreCalendarDeleteSubscription200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modH5pactivityViewH5pactivity
     * @param modH5pactivityViewH5pactivityRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityViewH5pactivityCall(ModH5pactivityViewH5pactivityRequest modH5pactivityViewH5pactivityRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modH5pactivityViewH5pactivityRequest;

        // create path and map variables
        String localVarPath = "/mod_h5pactivity_view_h5pactivity";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modH5pactivityViewH5pactivityValidateBeforeCall(ModH5pactivityViewH5pactivityRequest modH5pactivityViewH5pactivityRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modH5pactivityViewH5pactivityRequest' is set
        if (modH5pactivityViewH5pactivityRequest == null) {
            throw new ApiException("Missing the required parameter 'modH5pactivityViewH5pactivityRequest' when calling modH5pactivityViewH5pactivity(Async)");
        }

        return modH5pactivityViewH5pactivityCall(modH5pactivityViewH5pactivityRequest, _callback);

    }

    /**
     * Trigger the course module viewed event and update the module completion status.
     * Trigger the course module viewed event and update the module completion status.
     * @param modH5pactivityViewH5pactivityRequest  (required)
     * @return CoreCalendarDeleteSubscription200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public CoreCalendarDeleteSubscription200Response modH5pactivityViewH5pactivity(ModH5pactivityViewH5pactivityRequest modH5pactivityViewH5pactivityRequest) throws ApiException {
        ApiResponse<CoreCalendarDeleteSubscription200Response> localVarResp = modH5pactivityViewH5pactivityWithHttpInfo(modH5pactivityViewH5pactivityRequest);
        return localVarResp.getData();
    }

    /**
     * Trigger the course module viewed event and update the module completion status.
     * Trigger the course module viewed event and update the module completion status.
     * @param modH5pactivityViewH5pactivityRequest  (required)
     * @return ApiResponse&lt;CoreCalendarDeleteSubscription200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CoreCalendarDeleteSubscription200Response> modH5pactivityViewH5pactivityWithHttpInfo(ModH5pactivityViewH5pactivityRequest modH5pactivityViewH5pactivityRequest) throws ApiException {
        okhttp3.Call localVarCall = modH5pactivityViewH5pactivityValidateBeforeCall(modH5pactivityViewH5pactivityRequest, null);
        Type localVarReturnType = new TypeToken<CoreCalendarDeleteSubscription200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Trigger the course module viewed event and update the module completion status. (asynchronously)
     * Trigger the course module viewed event and update the module completion status.
     * @param modH5pactivityViewH5pactivityRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modH5pactivityViewH5pactivityAsync(ModH5pactivityViewH5pactivityRequest modH5pactivityViewH5pactivityRequest, final ApiCallback<CoreCalendarDeleteSubscription200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = modH5pactivityViewH5pactivityValidateBeforeCall(modH5pactivityViewH5pactivityRequest, _callback);
        Type localVarReturnType = new TypeToken<CoreCalendarDeleteSubscription200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
