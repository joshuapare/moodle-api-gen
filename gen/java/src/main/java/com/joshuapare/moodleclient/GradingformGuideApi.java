/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.joshuapare.moodleclient;

import com.joshuapare.ApiCallback;
import com.joshuapare.ApiClient;
import com.joshuapare.ApiException;
import com.joshuapare.ApiResponse;
import com.joshuapare.Configuration;
import com.joshuapare.Pair;
import com.joshuapare.ProgressRequestBody;
import com.joshuapare.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CoreGradesGraderGradingpanelScaleFetchRequest;
import org.openapitools.client.model.CoreGradesGraderGradingpanelScaleStoreRequest;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GradingformGuideGraderGradingpanelFetch200Response;
import org.openapitools.client.model.GradingformGuideGraderGradingpanelStore200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GradingformGuideApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GradingformGuideApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GradingformGuideApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for gradingformGuideGraderGradingpanelFetch
     * @param coreGradesGraderGradingpanelScaleFetchRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradingformGuideGraderGradingpanelFetchCall(CoreGradesGraderGradingpanelScaleFetchRequest coreGradesGraderGradingpanelScaleFetchRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = coreGradesGraderGradingpanelScaleFetchRequest;

        // create path and map variables
        String localVarPath = "/gradingform_guide_grader_gradingpanel_fetch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call gradingformGuideGraderGradingpanelFetchValidateBeforeCall(CoreGradesGraderGradingpanelScaleFetchRequest coreGradesGraderGradingpanelScaleFetchRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'coreGradesGraderGradingpanelScaleFetchRequest' is set
        if (coreGradesGraderGradingpanelScaleFetchRequest == null) {
            throw new ApiException("Missing the required parameter 'coreGradesGraderGradingpanelScaleFetchRequest' when calling gradingformGuideGraderGradingpanelFetch(Async)");
        }

        return gradingformGuideGraderGradingpanelFetchCall(coreGradesGraderGradingpanelScaleFetchRequest, _callback);

    }

    /**
     * Fetch the data required to display the grader grading panel, creating the grade item if required
     * Fetch the data required to display the grader grading panel, creating the grade item if required
     * @param coreGradesGraderGradingpanelScaleFetchRequest  (required)
     * @return GradingformGuideGraderGradingpanelFetch200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public GradingformGuideGraderGradingpanelFetch200Response gradingformGuideGraderGradingpanelFetch(CoreGradesGraderGradingpanelScaleFetchRequest coreGradesGraderGradingpanelScaleFetchRequest) throws ApiException {
        ApiResponse<GradingformGuideGraderGradingpanelFetch200Response> localVarResp = gradingformGuideGraderGradingpanelFetchWithHttpInfo(coreGradesGraderGradingpanelScaleFetchRequest);
        return localVarResp.getData();
    }

    /**
     * Fetch the data required to display the grader grading panel, creating the grade item if required
     * Fetch the data required to display the grader grading panel, creating the grade item if required
     * @param coreGradesGraderGradingpanelScaleFetchRequest  (required)
     * @return ApiResponse&lt;GradingformGuideGraderGradingpanelFetch200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GradingformGuideGraderGradingpanelFetch200Response> gradingformGuideGraderGradingpanelFetchWithHttpInfo(CoreGradesGraderGradingpanelScaleFetchRequest coreGradesGraderGradingpanelScaleFetchRequest) throws ApiException {
        okhttp3.Call localVarCall = gradingformGuideGraderGradingpanelFetchValidateBeforeCall(coreGradesGraderGradingpanelScaleFetchRequest, null);
        Type localVarReturnType = new TypeToken<GradingformGuideGraderGradingpanelFetch200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Fetch the data required to display the grader grading panel, creating the grade item if required (asynchronously)
     * Fetch the data required to display the grader grading panel, creating the grade item if required
     * @param coreGradesGraderGradingpanelScaleFetchRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradingformGuideGraderGradingpanelFetchAsync(CoreGradesGraderGradingpanelScaleFetchRequest coreGradesGraderGradingpanelScaleFetchRequest, final ApiCallback<GradingformGuideGraderGradingpanelFetch200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = gradingformGuideGraderGradingpanelFetchValidateBeforeCall(coreGradesGraderGradingpanelScaleFetchRequest, _callback);
        Type localVarReturnType = new TypeToken<GradingformGuideGraderGradingpanelFetch200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for gradingformGuideGraderGradingpanelStore
     * @param coreGradesGraderGradingpanelScaleStoreRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradingformGuideGraderGradingpanelStoreCall(CoreGradesGraderGradingpanelScaleStoreRequest coreGradesGraderGradingpanelScaleStoreRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = coreGradesGraderGradingpanelScaleStoreRequest;

        // create path and map variables
        String localVarPath = "/gradingform_guide_grader_gradingpanel_store";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call gradingformGuideGraderGradingpanelStoreValidateBeforeCall(CoreGradesGraderGradingpanelScaleStoreRequest coreGradesGraderGradingpanelScaleStoreRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'coreGradesGraderGradingpanelScaleStoreRequest' is set
        if (coreGradesGraderGradingpanelScaleStoreRequest == null) {
            throw new ApiException("Missing the required parameter 'coreGradesGraderGradingpanelScaleStoreRequest' when calling gradingformGuideGraderGradingpanelStore(Async)");
        }

        return gradingformGuideGraderGradingpanelStoreCall(coreGradesGraderGradingpanelScaleStoreRequest, _callback);

    }

    /**
     * Store the grading data for a user from the grader grading panel.
     * Store the grading data for a user from the grader grading panel.
     * @param coreGradesGraderGradingpanelScaleStoreRequest  (required)
     * @return GradingformGuideGraderGradingpanelStore200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public GradingformGuideGraderGradingpanelStore200Response gradingformGuideGraderGradingpanelStore(CoreGradesGraderGradingpanelScaleStoreRequest coreGradesGraderGradingpanelScaleStoreRequest) throws ApiException {
        ApiResponse<GradingformGuideGraderGradingpanelStore200Response> localVarResp = gradingformGuideGraderGradingpanelStoreWithHttpInfo(coreGradesGraderGradingpanelScaleStoreRequest);
        return localVarResp.getData();
    }

    /**
     * Store the grading data for a user from the grader grading panel.
     * Store the grading data for a user from the grader grading panel.
     * @param coreGradesGraderGradingpanelScaleStoreRequest  (required)
     * @return ApiResponse&lt;GradingformGuideGraderGradingpanelStore200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GradingformGuideGraderGradingpanelStore200Response> gradingformGuideGraderGradingpanelStoreWithHttpInfo(CoreGradesGraderGradingpanelScaleStoreRequest coreGradesGraderGradingpanelScaleStoreRequest) throws ApiException {
        okhttp3.Call localVarCall = gradingformGuideGraderGradingpanelStoreValidateBeforeCall(coreGradesGraderGradingpanelScaleStoreRequest, null);
        Type localVarReturnType = new TypeToken<GradingformGuideGraderGradingpanelStore200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Store the grading data for a user from the grader grading panel. (asynchronously)
     * Store the grading data for a user from the grader grading panel.
     * @param coreGradesGraderGradingpanelScaleStoreRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid parameter value detected </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call gradingformGuideGraderGradingpanelStoreAsync(CoreGradesGraderGradingpanelScaleStoreRequest coreGradesGraderGradingpanelScaleStoreRequest, final ApiCallback<GradingformGuideGraderGradingpanelStore200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = gradingformGuideGraderGradingpanelStoreValidateBeforeCall(coreGradesGraderGradingpanelScaleStoreRequest, _callback);
        Type localVarReturnType = new TypeToken<GradingformGuideGraderGradingpanelStore200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
