/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active = null;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email = "null";

  public static final String SERIALIZED_NAME_FULLNAME = "fullname";
  @SerializedName(SERIALIZED_NAME_FULLNAME)
  private String fullname;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_PROFILEIMAGE = "profileimage";
  @SerializedName(SERIALIZED_NAME_PROFILEIMAGE)
  private String profileimage;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url = "null";

  public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner() {
  }

  public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Are we currently on this item?
   * @return active
  **/
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner email(String email) {
    this.email = email;
    return this;
  }

   /**
   * An email address - allow email as root@localhost
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

   /**
   * The full name of the user
   * @return fullname
  **/
  @javax.annotation.Nullable
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }


  public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the user
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner profileimage(String profileimage) {
    this.profileimage = profileimage;
    return this;
  }

   /**
   * The location of the users larger image
   * @return profileimage
  **/
  @javax.annotation.Nullable
  public String getProfileimage() {
    return profileimage;
  }

  public void setProfileimage(String profileimage) {
    this.profileimage = profileimage;
  }


  public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The link to the user report
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner coreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner = (CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner) o;
    return Objects.equals(this.active, coreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.active) &&
        Objects.equals(this.email, coreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.email) &&
        Objects.equals(this.fullname, coreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.fullname) &&
        Objects.equals(this.id, coreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.id) &&
        Objects.equals(this.profileimage, coreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.profileimage) &&
        Objects.equals(this.url, coreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, email, fullname, id, profileimage, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    profileimage: ").append(toIndentedString(profileimage)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("email");
    openapiFields.add("fullname");
    openapiFields.add("id");
    openapiFields.add("profileimage");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner is not found in the empty JSON string", CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("fullname") != null && !jsonObj.get("fullname").isJsonNull()) && !jsonObj.get("fullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullname").toString()));
      }
      if ((jsonObj.get("profileimage") != null && !jsonObj.get("profileimage").isJsonNull()) && !jsonObj.get("profileimage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileimage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileimage").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner>() {
           @Override
           public void write(JsonWriter out, CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner
  * @throws IOException if the JSON string is invalid with respect to CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner
  */
  public static CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner.class);
  }

 /**
  * Convert an instance of CoreGradesGetEnrolledUsersForSearchWidget200ResponseUsersInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

