/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner;
import org.openapitools.client.model.CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner;
import org.openapitools.client.model.CoreBlogGetEntries200ResponseEntriesInnerTagsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreBlogGetEntries200ResponseEntriesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreBlogGetEntries200ResponseEntriesInner {
  public static final String SERIALIZED_NAME_ATTACHMENT = "attachment";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT)
  private String attachment = "null";

  public static final String SERIALIZED_NAME_ATTACHMENTFILES = "attachmentfiles";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTFILES)
  private List<CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner> attachmentfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content = "null";

  public static final String SERIALIZED_NAME_COURSEID = "courseid";
  @SerializedName(SERIALIZED_NAME_COURSEID)
  private Integer courseid = 0;

  public static final String SERIALIZED_NAME_COURSEMODULEID = "coursemoduleid";
  @SerializedName(SERIALIZED_NAME_COURSEMODULEID)
  private Integer coursemoduleid = 0;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private Integer created = 0;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private Integer format = 0;

  public static final String SERIALIZED_NAME_GROUPID = "groupid";
  @SerializedName(SERIALIZED_NAME_GROUPID)
  private Integer groupid = 0;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_LASTMODIFIED = "lastmodified";
  @SerializedName(SERIALIZED_NAME_LASTMODIFIED)
  private Integer lastmodified = 0;

  public static final String SERIALIZED_NAME_MODULE = "module";
  @SerializedName(SERIALIZED_NAME_MODULE)
  private String module = "null";

  public static final String SERIALIZED_NAME_MODULEID = "moduleid";
  @SerializedName(SERIALIZED_NAME_MODULEID)
  private Integer moduleid = 0;

  public static final String SERIALIZED_NAME_PUBLISHSTATE = "publishstate";
  @SerializedName(SERIALIZED_NAME_PUBLISHSTATE)
  private String publishstate = "draft";

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private Integer rating = 0;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject = "null";

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary = "null";

  public static final String SERIALIZED_NAME_SUMMARYFILES = "summaryfiles";
  @SerializedName(SERIALIZED_NAME_SUMMARYFILES)
  private List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> summaryfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUMMARYFORMAT = "summaryformat";
  @SerializedName(SERIALIZED_NAME_SUMMARYFORMAT)
  private Integer summaryformat = 0;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<CoreBlogGetEntries200ResponseEntriesInnerTagsInner> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNIQUEHASH = "uniquehash";
  @SerializedName(SERIALIZED_NAME_UNIQUEHASH)
  private String uniquehash = "null";

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid = 0;

  public static final String SERIALIZED_NAME_USERMODIFIED = "usermodified";
  @SerializedName(SERIALIZED_NAME_USERMODIFIED)
  private Integer usermodified = null;

  public CoreBlogGetEntries200ResponseEntriesInner() {
  }

  public CoreBlogGetEntries200ResponseEntriesInner attachment(String attachment) {
    this.attachment = attachment;
    return this;
  }

   /**
   * Post atachment.
   * @return attachment
  **/
  @javax.annotation.Nullable
  public String getAttachment() {
    return attachment;
  }

  public void setAttachment(String attachment) {
    this.attachment = attachment;
  }


  public CoreBlogGetEntries200ResponseEntriesInner attachmentfiles(List<CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner> attachmentfiles) {
    this.attachmentfiles = attachmentfiles;
    return this;
  }

  public CoreBlogGetEntries200ResponseEntriesInner addAttachmentfilesItem(CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner attachmentfilesItem) {
    if (this.attachmentfiles == null) {
      this.attachmentfiles = new ArrayList<>();
    }
    this.attachmentfiles.add(attachmentfilesItem);
    return this;
  }

   /**
   * Get attachmentfiles
   * @return attachmentfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner> getAttachmentfiles() {
    return attachmentfiles;
  }

  public void setAttachmentfiles(List<CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner> attachmentfiles) {
    this.attachmentfiles = attachmentfiles;
  }


  public CoreBlogGetEntries200ResponseEntriesInner content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Post content.
   * @return content
  **/
  @javax.annotation.Nullable
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  public CoreBlogGetEntries200ResponseEntriesInner courseid(Integer courseid) {
    this.courseid = courseid;
    return this;
  }

   /**
   * Course where the post was created.
   * @return courseid
  **/
  @javax.annotation.Nullable
  public Integer getCourseid() {
    return courseid;
  }

  public void setCourseid(Integer courseid) {
    this.courseid = courseid;
  }


  public CoreBlogGetEntries200ResponseEntriesInner coursemoduleid(Integer coursemoduleid) {
    this.coursemoduleid = coursemoduleid;
    return this;
  }

   /**
   * Course module id where the post was created.
   * @return coursemoduleid
  **/
  @javax.annotation.Nullable
  public Integer getCoursemoduleid() {
    return coursemoduleid;
  }

  public void setCoursemoduleid(Integer coursemoduleid) {
    this.coursemoduleid = coursemoduleid;
  }


  public CoreBlogGetEntries200ResponseEntriesInner created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * When it was created.
   * @return created
  **/
  @javax.annotation.Nullable
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }


  public CoreBlogGetEntries200ResponseEntriesInner format(Integer format) {
    this.format = format;
    return this;
  }

   /**
   * Post content format.
   * @return format
  **/
  @javax.annotation.Nullable
  public Integer getFormat() {
    return format;
  }

  public void setFormat(Integer format) {
    this.format = format;
  }


  public CoreBlogGetEntries200ResponseEntriesInner groupid(Integer groupid) {
    this.groupid = groupid;
    return this;
  }

   /**
   * Group post was created for.
   * @return groupid
  **/
  @javax.annotation.Nullable
  public Integer getGroupid() {
    return groupid;
  }

  public void setGroupid(Integer groupid) {
    this.groupid = groupid;
  }


  public CoreBlogGetEntries200ResponseEntriesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Post/entry id.
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreBlogGetEntries200ResponseEntriesInner lastmodified(Integer lastmodified) {
    this.lastmodified = lastmodified;
    return this;
  }

   /**
   * When it was last modified.
   * @return lastmodified
  **/
  @javax.annotation.Nullable
  public Integer getLastmodified() {
    return lastmodified;
  }

  public void setLastmodified(Integer lastmodified) {
    this.lastmodified = lastmodified;
  }


  public CoreBlogGetEntries200ResponseEntriesInner module(String module) {
    this.module = module;
    return this;
  }

   /**
   * Where it was published the post (blog, blog_external...).
   * @return module
  **/
  @javax.annotation.Nullable
  public String getModule() {
    return module;
  }

  public void setModule(String module) {
    this.module = module;
  }


  public CoreBlogGetEntries200ResponseEntriesInner moduleid(Integer moduleid) {
    this.moduleid = moduleid;
    return this;
  }

   /**
   * Module id where the post was created (not used anymore).
   * @return moduleid
  **/
  @javax.annotation.Nullable
  public Integer getModuleid() {
    return moduleid;
  }

  public void setModuleid(Integer moduleid) {
    this.moduleid = moduleid;
  }


  public CoreBlogGetEntries200ResponseEntriesInner publishstate(String publishstate) {
    this.publishstate = publishstate;
    return this;
  }

   /**
   * Post publish state.
   * @return publishstate
  **/
  @javax.annotation.Nullable
  public String getPublishstate() {
    return publishstate;
  }

  public void setPublishstate(String publishstate) {
    this.publishstate = publishstate;
  }


  public CoreBlogGetEntries200ResponseEntriesInner rating(Integer rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Post rating.
   * @return rating
  **/
  @javax.annotation.Nullable
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }


  public CoreBlogGetEntries200ResponseEntriesInner subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Post subject.
   * @return subject
  **/
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public CoreBlogGetEntries200ResponseEntriesInner summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Post summary.
   * @return summary
  **/
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }


  public CoreBlogGetEntries200ResponseEntriesInner summaryfiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> summaryfiles) {
    this.summaryfiles = summaryfiles;
    return this;
  }

  public CoreBlogGetEntries200ResponseEntriesInner addSummaryfilesItem(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner summaryfilesItem) {
    if (this.summaryfiles == null) {
      this.summaryfiles = new ArrayList<>();
    }
    this.summaryfiles.add(summaryfilesItem);
    return this;
  }

   /**
   * Get summaryfiles
   * @return summaryfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> getSummaryfiles() {
    return summaryfiles;
  }

  public void setSummaryfiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> summaryfiles) {
    this.summaryfiles = summaryfiles;
  }


  public CoreBlogGetEntries200ResponseEntriesInner summaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
    return this;
  }

   /**
   * summary format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return summaryformat
  **/
  @javax.annotation.Nullable
  public Integer getSummaryformat() {
    return summaryformat;
  }

  public void setSummaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
  }


  public CoreBlogGetEntries200ResponseEntriesInner tags(List<CoreBlogGetEntries200ResponseEntriesInnerTagsInner> tags) {
    this.tags = tags;
    return this;
  }

  public CoreBlogGetEntries200ResponseEntriesInner addTagsItem(CoreBlogGetEntries200ResponseEntriesInnerTagsInner tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<CoreBlogGetEntries200ResponseEntriesInnerTagsInner> getTags() {
    return tags;
  }

  public void setTags(List<CoreBlogGetEntries200ResponseEntriesInnerTagsInner> tags) {
    this.tags = tags;
  }


  public CoreBlogGetEntries200ResponseEntriesInner uniquehash(String uniquehash) {
    this.uniquehash = uniquehash;
    return this;
  }

   /**
   * Post unique hash.
   * @return uniquehash
  **/
  @javax.annotation.Nullable
  public String getUniquehash() {
    return uniquehash;
  }

  public void setUniquehash(String uniquehash) {
    this.uniquehash = uniquehash;
  }


  public CoreBlogGetEntries200ResponseEntriesInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * Post author.
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }


  public CoreBlogGetEntries200ResponseEntriesInner usermodified(Integer usermodified) {
    this.usermodified = usermodified;
    return this;
  }

   /**
   * User that updated the post.
   * @return usermodified
  **/
  @javax.annotation.Nullable
  public Integer getUsermodified() {
    return usermodified;
  }

  public void setUsermodified(Integer usermodified) {
    this.usermodified = usermodified;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreBlogGetEntries200ResponseEntriesInner coreBlogGetEntries200ResponseEntriesInner = (CoreBlogGetEntries200ResponseEntriesInner) o;
    return Objects.equals(this.attachment, coreBlogGetEntries200ResponseEntriesInner.attachment) &&
        Objects.equals(this.attachmentfiles, coreBlogGetEntries200ResponseEntriesInner.attachmentfiles) &&
        Objects.equals(this.content, coreBlogGetEntries200ResponseEntriesInner.content) &&
        Objects.equals(this.courseid, coreBlogGetEntries200ResponseEntriesInner.courseid) &&
        Objects.equals(this.coursemoduleid, coreBlogGetEntries200ResponseEntriesInner.coursemoduleid) &&
        Objects.equals(this.created, coreBlogGetEntries200ResponseEntriesInner.created) &&
        Objects.equals(this.format, coreBlogGetEntries200ResponseEntriesInner.format) &&
        Objects.equals(this.groupid, coreBlogGetEntries200ResponseEntriesInner.groupid) &&
        Objects.equals(this.id, coreBlogGetEntries200ResponseEntriesInner.id) &&
        Objects.equals(this.lastmodified, coreBlogGetEntries200ResponseEntriesInner.lastmodified) &&
        Objects.equals(this.module, coreBlogGetEntries200ResponseEntriesInner.module) &&
        Objects.equals(this.moduleid, coreBlogGetEntries200ResponseEntriesInner.moduleid) &&
        Objects.equals(this.publishstate, coreBlogGetEntries200ResponseEntriesInner.publishstate) &&
        Objects.equals(this.rating, coreBlogGetEntries200ResponseEntriesInner.rating) &&
        Objects.equals(this.subject, coreBlogGetEntries200ResponseEntriesInner.subject) &&
        Objects.equals(this.summary, coreBlogGetEntries200ResponseEntriesInner.summary) &&
        Objects.equals(this.summaryfiles, coreBlogGetEntries200ResponseEntriesInner.summaryfiles) &&
        Objects.equals(this.summaryformat, coreBlogGetEntries200ResponseEntriesInner.summaryformat) &&
        Objects.equals(this.tags, coreBlogGetEntries200ResponseEntriesInner.tags) &&
        Objects.equals(this.uniquehash, coreBlogGetEntries200ResponseEntriesInner.uniquehash) &&
        Objects.equals(this.userid, coreBlogGetEntries200ResponseEntriesInner.userid) &&
        Objects.equals(this.usermodified, coreBlogGetEntries200ResponseEntriesInner.usermodified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachment, attachmentfiles, content, courseid, coursemoduleid, created, format, groupid, id, lastmodified, module, moduleid, publishstate, rating, subject, summary, summaryfiles, summaryformat, tags, uniquehash, userid, usermodified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreBlogGetEntries200ResponseEntriesInner {\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    attachmentfiles: ").append(toIndentedString(attachmentfiles)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    courseid: ").append(toIndentedString(courseid)).append("\n");
    sb.append("    coursemoduleid: ").append(toIndentedString(coursemoduleid)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    groupid: ").append(toIndentedString(groupid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastmodified: ").append(toIndentedString(lastmodified)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    moduleid: ").append(toIndentedString(moduleid)).append("\n");
    sb.append("    publishstate: ").append(toIndentedString(publishstate)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    summaryfiles: ").append(toIndentedString(summaryfiles)).append("\n");
    sb.append("    summaryformat: ").append(toIndentedString(summaryformat)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    uniquehash: ").append(toIndentedString(uniquehash)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    usermodified: ").append(toIndentedString(usermodified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attachment");
    openapiFields.add("attachmentfiles");
    openapiFields.add("content");
    openapiFields.add("courseid");
    openapiFields.add("coursemoduleid");
    openapiFields.add("created");
    openapiFields.add("format");
    openapiFields.add("groupid");
    openapiFields.add("id");
    openapiFields.add("lastmodified");
    openapiFields.add("module");
    openapiFields.add("moduleid");
    openapiFields.add("publishstate");
    openapiFields.add("rating");
    openapiFields.add("subject");
    openapiFields.add("summary");
    openapiFields.add("summaryfiles");
    openapiFields.add("summaryformat");
    openapiFields.add("tags");
    openapiFields.add("uniquehash");
    openapiFields.add("userid");
    openapiFields.add("usermodified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreBlogGetEntries200ResponseEntriesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreBlogGetEntries200ResponseEntriesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreBlogGetEntries200ResponseEntriesInner is not found in the empty JSON string", CoreBlogGetEntries200ResponseEntriesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreBlogGetEntries200ResponseEntriesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreBlogGetEntries200ResponseEntriesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attachment") != null && !jsonObj.get("attachment").isJsonNull()) && !jsonObj.get("attachment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attachment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attachment").toString()));
      }
      if (jsonObj.get("attachmentfiles") != null && !jsonObj.get("attachmentfiles").isJsonNull()) {
        JsonArray jsonArrayattachmentfiles = jsonObj.getAsJsonArray("attachmentfiles");
        if (jsonArrayattachmentfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachmentfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachmentfiles` to be an array in the JSON string but got `%s`", jsonObj.get("attachmentfiles").toString()));
          }

          // validate the optional field `attachmentfiles` (array)
          for (int i = 0; i < jsonArrayattachmentfiles.size(); i++) {
            CoreBlogGetEntries200ResponseEntriesInnerAttachmentfilesInner.validateJsonElement(jsonArrayattachmentfiles.get(i));
          };
        }
      }
      if ((jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
      if ((jsonObj.get("module") != null && !jsonObj.get("module").isJsonNull()) && !jsonObj.get("module").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `module` to be a primitive type in the JSON string but got `%s`", jsonObj.get("module").toString()));
      }
      if ((jsonObj.get("publishstate") != null && !jsonObj.get("publishstate").isJsonNull()) && !jsonObj.get("publishstate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publishstate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publishstate").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      if ((jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) && !jsonObj.get("summary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary").toString()));
      }
      if (jsonObj.get("summaryfiles") != null && !jsonObj.get("summaryfiles").isJsonNull()) {
        JsonArray jsonArraysummaryfiles = jsonObj.getAsJsonArray("summaryfiles");
        if (jsonArraysummaryfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("summaryfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `summaryfiles` to be an array in the JSON string but got `%s`", jsonObj.get("summaryfiles").toString()));
          }

          // validate the optional field `summaryfiles` (array)
          for (int i = 0; i < jsonArraysummaryfiles.size(); i++) {
            CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner.validateJsonElement(jsonArraysummaryfiles.get(i));
          };
        }
      }
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
          }

          // validate the optional field `tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            CoreBlogGetEntries200ResponseEntriesInnerTagsInner.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if ((jsonObj.get("uniquehash") != null && !jsonObj.get("uniquehash").isJsonNull()) && !jsonObj.get("uniquehash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uniquehash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uniquehash").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreBlogGetEntries200ResponseEntriesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreBlogGetEntries200ResponseEntriesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreBlogGetEntries200ResponseEntriesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreBlogGetEntries200ResponseEntriesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreBlogGetEntries200ResponseEntriesInner>() {
           @Override
           public void write(JsonWriter out, CoreBlogGetEntries200ResponseEntriesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreBlogGetEntries200ResponseEntriesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreBlogGetEntries200ResponseEntriesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreBlogGetEntries200ResponseEntriesInner
  * @throws IOException if the JSON string is invalid with respect to CoreBlogGetEntries200ResponseEntriesInner
  */
  public static CoreBlogGetEntries200ResponseEntriesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreBlogGetEntries200ResponseEntriesInner.class);
  }

 /**
  * Convert an instance of CoreBlogGetEntries200ResponseEntriesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

