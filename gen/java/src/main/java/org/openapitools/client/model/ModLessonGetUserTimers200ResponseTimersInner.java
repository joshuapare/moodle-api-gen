/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * The timers
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModLessonGetUserTimers200ResponseTimersInner {
  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private Integer completed = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LESSONID = "lessonid";
  @SerializedName(SERIALIZED_NAME_LESSONID)
  private Integer lessonid = null;

  public static final String SERIALIZED_NAME_LESSONTIME = "lessontime";
  @SerializedName(SERIALIZED_NAME_LESSONTIME)
  private Integer lessontime = null;

  public static final String SERIALIZED_NAME_STARTTIME = "starttime";
  @SerializedName(SERIALIZED_NAME_STARTTIME)
  private Integer starttime = null;

  public static final String SERIALIZED_NAME_TIMEMODIFIEDOFFLINE = "timemodifiedoffline";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIEDOFFLINE)
  private Integer timemodifiedoffline = null;

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid;

  public ModLessonGetUserTimers200ResponseTimersInner() {
  }

  public ModLessonGetUserTimers200ResponseTimersInner completed(Integer completed) {
    this.completed = completed;
    return this;
  }

   /**
   * If the lesson for this timer was completed
   * @return completed
  **/
  @javax.annotation.Nullable
  public Integer getCompleted() {
    return completed;
  }

  public void setCompleted(Integer completed) {
    this.completed = completed;
  }


  public ModLessonGetUserTimers200ResponseTimersInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The attempt id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModLessonGetUserTimers200ResponseTimersInner lessonid(Integer lessonid) {
    this.lessonid = lessonid;
    return this;
  }

   /**
   * The lesson id
   * @return lessonid
  **/
  @javax.annotation.Nullable
  public Integer getLessonid() {
    return lessonid;
  }

  public void setLessonid(Integer lessonid) {
    this.lessonid = lessonid;
  }


  public ModLessonGetUserTimers200ResponseTimersInner lessontime(Integer lessontime) {
    this.lessontime = lessontime;
    return this;
  }

   /**
   * Last access time to the lesson during the timer session
   * @return lessontime
  **/
  @javax.annotation.Nullable
  public Integer getLessontime() {
    return lessontime;
  }

  public void setLessontime(Integer lessontime) {
    this.lessontime = lessontime;
  }


  public ModLessonGetUserTimers200ResponseTimersInner starttime(Integer starttime) {
    this.starttime = starttime;
    return this;
  }

   /**
   * First access time for a new timer session
   * @return starttime
  **/
  @javax.annotation.Nullable
  public Integer getStarttime() {
    return starttime;
  }

  public void setStarttime(Integer starttime) {
    this.starttime = starttime;
  }


  public ModLessonGetUserTimers200ResponseTimersInner timemodifiedoffline(Integer timemodifiedoffline) {
    this.timemodifiedoffline = timemodifiedoffline;
    return this;
  }

   /**
   * Last modified time via webservices.
   * @return timemodifiedoffline
  **/
  @javax.annotation.Nullable
  public Integer getTimemodifiedoffline() {
    return timemodifiedoffline;
  }

  public void setTimemodifiedoffline(Integer timemodifiedoffline) {
    this.timemodifiedoffline = timemodifiedoffline;
  }


  public ModLessonGetUserTimers200ResponseTimersInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * The user id
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModLessonGetUserTimers200ResponseTimersInner modLessonGetUserTimers200ResponseTimersInner = (ModLessonGetUserTimers200ResponseTimersInner) o;
    return Objects.equals(this.completed, modLessonGetUserTimers200ResponseTimersInner.completed) &&
        Objects.equals(this.id, modLessonGetUserTimers200ResponseTimersInner.id) &&
        Objects.equals(this.lessonid, modLessonGetUserTimers200ResponseTimersInner.lessonid) &&
        Objects.equals(this.lessontime, modLessonGetUserTimers200ResponseTimersInner.lessontime) &&
        Objects.equals(this.starttime, modLessonGetUserTimers200ResponseTimersInner.starttime) &&
        Objects.equals(this.timemodifiedoffline, modLessonGetUserTimers200ResponseTimersInner.timemodifiedoffline) &&
        Objects.equals(this.userid, modLessonGetUserTimers200ResponseTimersInner.userid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completed, id, lessonid, lessontime, starttime, timemodifiedoffline, userid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModLessonGetUserTimers200ResponseTimersInner {\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lessonid: ").append(toIndentedString(lessonid)).append("\n");
    sb.append("    lessontime: ").append(toIndentedString(lessontime)).append("\n");
    sb.append("    starttime: ").append(toIndentedString(starttime)).append("\n");
    sb.append("    timemodifiedoffline: ").append(toIndentedString(timemodifiedoffline)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("completed");
    openapiFields.add("id");
    openapiFields.add("lessonid");
    openapiFields.add("lessontime");
    openapiFields.add("starttime");
    openapiFields.add("timemodifiedoffline");
    openapiFields.add("userid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModLessonGetUserTimers200ResponseTimersInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModLessonGetUserTimers200ResponseTimersInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModLessonGetUserTimers200ResponseTimersInner is not found in the empty JSON string", ModLessonGetUserTimers200ResponseTimersInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModLessonGetUserTimers200ResponseTimersInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModLessonGetUserTimers200ResponseTimersInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModLessonGetUserTimers200ResponseTimersInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModLessonGetUserTimers200ResponseTimersInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModLessonGetUserTimers200ResponseTimersInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModLessonGetUserTimers200ResponseTimersInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModLessonGetUserTimers200ResponseTimersInner>() {
           @Override
           public void write(JsonWriter out, ModLessonGetUserTimers200ResponseTimersInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModLessonGetUserTimers200ResponseTimersInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModLessonGetUserTimers200ResponseTimersInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModLessonGetUserTimers200ResponseTimersInner
  * @throws IOException if the JSON string is invalid with respect to ModLessonGetUserTimers200ResponseTimersInner
  */
  public static ModLessonGetUserTimers200ResponseTimersInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModLessonGetUserTimers200ResponseTimersInner.class);
  }

 /**
  * Convert an instance of ModLessonGetUserTimers200ResponseTimersInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

