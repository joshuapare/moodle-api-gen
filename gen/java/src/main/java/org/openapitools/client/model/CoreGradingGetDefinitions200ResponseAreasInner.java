/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreGradingGetDefinitions200ResponseAreasInnerDefinitionsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreGradingGetDefinitions200ResponseAreasInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreGradingGetDefinitions200ResponseAreasInner {
  public static final String SERIALIZED_NAME_ACTIVEMETHOD = "activemethod";
  @SerializedName(SERIALIZED_NAME_ACTIVEMETHOD)
  private String activemethod = "null";

  public static final String SERIALIZED_NAME_AREANAME = "areaname";
  @SerializedName(SERIALIZED_NAME_AREANAME)
  private String areaname;

  public static final String SERIALIZED_NAME_CMID = "cmid";
  @SerializedName(SERIALIZED_NAME_CMID)
  private Integer cmid;

  public static final String SERIALIZED_NAME_COMPONENT = "component";
  @SerializedName(SERIALIZED_NAME_COMPONENT)
  private String component = "null";

  public static final String SERIALIZED_NAME_CONTEXTID = "contextid";
  @SerializedName(SERIALIZED_NAME_CONTEXTID)
  private Integer contextid;

  public static final String SERIALIZED_NAME_DEFINITIONS = "definitions";
  @SerializedName(SERIALIZED_NAME_DEFINITIONS)
  private List<CoreGradingGetDefinitions200ResponseAreasInnerDefinitionsInner> definitions = new ArrayList<>();

  public CoreGradingGetDefinitions200ResponseAreasInner() {
  }

  public CoreGradingGetDefinitions200ResponseAreasInner activemethod(String activemethod) {
    this.activemethod = activemethod;
    return this;
  }

   /**
   * active method
   * @return activemethod
  **/
  @javax.annotation.Nullable
  public String getActivemethod() {
    return activemethod;
  }

  public void setActivemethod(String activemethod) {
    this.activemethod = activemethod;
  }


  public CoreGradingGetDefinitions200ResponseAreasInner areaname(String areaname) {
    this.areaname = areaname;
    return this;
  }

   /**
   * area name
   * @return areaname
  **/
  @javax.annotation.Nullable
  public String getAreaname() {
    return areaname;
  }

  public void setAreaname(String areaname) {
    this.areaname = areaname;
  }


  public CoreGradingGetDefinitions200ResponseAreasInner cmid(Integer cmid) {
    this.cmid = cmid;
    return this;
  }

   /**
   * course module id
   * @return cmid
  **/
  @javax.annotation.Nullable
  public Integer getCmid() {
    return cmid;
  }

  public void setCmid(Integer cmid) {
    this.cmid = cmid;
  }


  public CoreGradingGetDefinitions200ResponseAreasInner component(String component) {
    this.component = component;
    return this;
  }

   /**
   * component name
   * @return component
  **/
  @javax.annotation.Nullable
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }


  public CoreGradingGetDefinitions200ResponseAreasInner contextid(Integer contextid) {
    this.contextid = contextid;
    return this;
  }

   /**
   * context id
   * @return contextid
  **/
  @javax.annotation.Nullable
  public Integer getContextid() {
    return contextid;
  }

  public void setContextid(Integer contextid) {
    this.contextid = contextid;
  }


  public CoreGradingGetDefinitions200ResponseAreasInner definitions(List<CoreGradingGetDefinitions200ResponseAreasInnerDefinitionsInner> definitions) {
    this.definitions = definitions;
    return this;
  }

  public CoreGradingGetDefinitions200ResponseAreasInner addDefinitionsItem(CoreGradingGetDefinitions200ResponseAreasInnerDefinitionsInner definitionsItem) {
    if (this.definitions == null) {
      this.definitions = new ArrayList<>();
    }
    this.definitions.add(definitionsItem);
    return this;
  }

   /**
   * Get definitions
   * @return definitions
  **/
  @javax.annotation.Nullable
  public List<CoreGradingGetDefinitions200ResponseAreasInnerDefinitionsInner> getDefinitions() {
    return definitions;
  }

  public void setDefinitions(List<CoreGradingGetDefinitions200ResponseAreasInnerDefinitionsInner> definitions) {
    this.definitions = definitions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreGradingGetDefinitions200ResponseAreasInner coreGradingGetDefinitions200ResponseAreasInner = (CoreGradingGetDefinitions200ResponseAreasInner) o;
    return Objects.equals(this.activemethod, coreGradingGetDefinitions200ResponseAreasInner.activemethod) &&
        Objects.equals(this.areaname, coreGradingGetDefinitions200ResponseAreasInner.areaname) &&
        Objects.equals(this.cmid, coreGradingGetDefinitions200ResponseAreasInner.cmid) &&
        Objects.equals(this.component, coreGradingGetDefinitions200ResponseAreasInner.component) &&
        Objects.equals(this.contextid, coreGradingGetDefinitions200ResponseAreasInner.contextid) &&
        Objects.equals(this.definitions, coreGradingGetDefinitions200ResponseAreasInner.definitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activemethod, areaname, cmid, component, contextid, definitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreGradingGetDefinitions200ResponseAreasInner {\n");
    sb.append("    activemethod: ").append(toIndentedString(activemethod)).append("\n");
    sb.append("    areaname: ").append(toIndentedString(areaname)).append("\n");
    sb.append("    cmid: ").append(toIndentedString(cmid)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    contextid: ").append(toIndentedString(contextid)).append("\n");
    sb.append("    definitions: ").append(toIndentedString(definitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activemethod");
    openapiFields.add("areaname");
    openapiFields.add("cmid");
    openapiFields.add("component");
    openapiFields.add("contextid");
    openapiFields.add("definitions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreGradingGetDefinitions200ResponseAreasInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreGradingGetDefinitions200ResponseAreasInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreGradingGetDefinitions200ResponseAreasInner is not found in the empty JSON string", CoreGradingGetDefinitions200ResponseAreasInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreGradingGetDefinitions200ResponseAreasInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreGradingGetDefinitions200ResponseAreasInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("activemethod") != null && !jsonObj.get("activemethod").isJsonNull()) && !jsonObj.get("activemethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activemethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activemethod").toString()));
      }
      if ((jsonObj.get("areaname") != null && !jsonObj.get("areaname").isJsonNull()) && !jsonObj.get("areaname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `areaname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("areaname").toString()));
      }
      if ((jsonObj.get("component") != null && !jsonObj.get("component").isJsonNull()) && !jsonObj.get("component").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `component` to be a primitive type in the JSON string but got `%s`", jsonObj.get("component").toString()));
      }
      if (jsonObj.get("definitions") != null && !jsonObj.get("definitions").isJsonNull()) {
        JsonArray jsonArraydefinitions = jsonObj.getAsJsonArray("definitions");
        if (jsonArraydefinitions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("definitions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `definitions` to be an array in the JSON string but got `%s`", jsonObj.get("definitions").toString()));
          }

          // validate the optional field `definitions` (array)
          for (int i = 0; i < jsonArraydefinitions.size(); i++) {
            CoreGradingGetDefinitions200ResponseAreasInnerDefinitionsInner.validateJsonElement(jsonArraydefinitions.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreGradingGetDefinitions200ResponseAreasInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreGradingGetDefinitions200ResponseAreasInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreGradingGetDefinitions200ResponseAreasInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreGradingGetDefinitions200ResponseAreasInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreGradingGetDefinitions200ResponseAreasInner>() {
           @Override
           public void write(JsonWriter out, CoreGradingGetDefinitions200ResponseAreasInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreGradingGetDefinitions200ResponseAreasInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreGradingGetDefinitions200ResponseAreasInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreGradingGetDefinitions200ResponseAreasInner
  * @throws IOException if the JSON string is invalid with respect to CoreGradingGetDefinitions200ResponseAreasInner
  */
  public static CoreGradingGetDefinitions200ResponseAreasInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreGradingGetDefinitions200ResponseAreasInner.class);
  }

 /**
  * Convert an instance of CoreGradingGetDefinitions200ResponseAreasInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

