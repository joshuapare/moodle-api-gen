/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreCompetencyReadUserEvidence200ResponseCompetenciesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ToolLpDataForCourseCompetenciesPage200ResponseStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ToolLpDataForCourseCompetenciesPage200ResponseStatistics {
  public static final String SERIALIZED_NAME_CANBEGRADEDINCOURSE = "canbegradedincourse";
  @SerializedName(SERIALIZED_NAME_CANBEGRADEDINCOURSE)
  private Boolean canbegradedincourse = null;

  public static final String SERIALIZED_NAME_CANMANAGECOURSECOMPETENCIES = "canmanagecoursecompetencies";
  @SerializedName(SERIALIZED_NAME_CANMANAGECOURSECOMPETENCIES)
  private Boolean canmanagecoursecompetencies = null;

  public static final String SERIALIZED_NAME_COMPETENCYCOUNT = "competencycount";
  @SerializedName(SERIALIZED_NAME_COMPETENCYCOUNT)
  private Integer competencycount;

  public static final String SERIALIZED_NAME_LEASTPROFICIENT = "leastproficient";
  @SerializedName(SERIALIZED_NAME_LEASTPROFICIENT)
  private List<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner> leastproficient = new ArrayList<>();

  public static final String SERIALIZED_NAME_LEASTPROFICIENTCOUNT = "leastproficientcount";
  @SerializedName(SERIALIZED_NAME_LEASTPROFICIENTCOUNT)
  private Integer leastproficientcount = null;

  public static final String SERIALIZED_NAME_PROFICIENTCOMPETENCYCOUNT = "proficientcompetencycount";
  @SerializedName(SERIALIZED_NAME_PROFICIENTCOMPETENCYCOUNT)
  private Integer proficientcompetencycount = null;

  public static final String SERIALIZED_NAME_PROFICIENTCOMPETENCYPERCENTAGE = "proficientcompetencypercentage";
  @SerializedName(SERIALIZED_NAME_PROFICIENTCOMPETENCYPERCENTAGE)
  private BigDecimal proficientcompetencypercentage = new BigDecimal("null");

  public static final String SERIALIZED_NAME_PROFICIENTCOMPETENCYPERCENTAGEFORMATTED = "proficientcompetencypercentageformatted";
  @SerializedName(SERIALIZED_NAME_PROFICIENTCOMPETENCYPERCENTAGEFORMATTED)
  private String proficientcompetencypercentageformatted = "null";

  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics() {
  }

  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics canbegradedincourse(Boolean canbegradedincourse) {
    this.canbegradedincourse = canbegradedincourse;
    return this;
  }

   /**
   * canbegradedincourse
   * @return canbegradedincourse
  **/
  @javax.annotation.Nonnull
  public Boolean getCanbegradedincourse() {
    return canbegradedincourse;
  }

  public void setCanbegradedincourse(Boolean canbegradedincourse) {
    this.canbegradedincourse = canbegradedincourse;
  }


  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics canmanagecoursecompetencies(Boolean canmanagecoursecompetencies) {
    this.canmanagecoursecompetencies = canmanagecoursecompetencies;
    return this;
  }

   /**
   * canmanagecoursecompetencies
   * @return canmanagecoursecompetencies
  **/
  @javax.annotation.Nonnull
  public Boolean getCanmanagecoursecompetencies() {
    return canmanagecoursecompetencies;
  }

  public void setCanmanagecoursecompetencies(Boolean canmanagecoursecompetencies) {
    this.canmanagecoursecompetencies = canmanagecoursecompetencies;
  }


  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics competencycount(Integer competencycount) {
    this.competencycount = competencycount;
    return this;
  }

   /**
   * competencycount
   * @return competencycount
  **/
  @javax.annotation.Nonnull
  public Integer getCompetencycount() {
    return competencycount;
  }

  public void setCompetencycount(Integer competencycount) {
    this.competencycount = competencycount;
  }


  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics leastproficient(List<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner> leastproficient) {
    this.leastproficient = leastproficient;
    return this;
  }

  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics addLeastproficientItem(CoreCompetencyReadUserEvidence200ResponseCompetenciesInner leastproficientItem) {
    if (this.leastproficient == null) {
      this.leastproficient = new ArrayList<>();
    }
    this.leastproficient.add(leastproficientItem);
    return this;
  }

   /**
   * Get leastproficient
   * @return leastproficient
  **/
  @javax.annotation.Nonnull
  public List<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner> getLeastproficient() {
    return leastproficient;
  }

  public void setLeastproficient(List<CoreCompetencyReadUserEvidence200ResponseCompetenciesInner> leastproficient) {
    this.leastproficient = leastproficient;
  }


  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics leastproficientcount(Integer leastproficientcount) {
    this.leastproficientcount = leastproficientcount;
    return this;
  }

   /**
   * leastproficientcount
   * @return leastproficientcount
  **/
  @javax.annotation.Nonnull
  public Integer getLeastproficientcount() {
    return leastproficientcount;
  }

  public void setLeastproficientcount(Integer leastproficientcount) {
    this.leastproficientcount = leastproficientcount;
  }


  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics proficientcompetencycount(Integer proficientcompetencycount) {
    this.proficientcompetencycount = proficientcompetencycount;
    return this;
  }

   /**
   * proficientcompetencycount
   * @return proficientcompetencycount
  **/
  @javax.annotation.Nonnull
  public Integer getProficientcompetencycount() {
    return proficientcompetencycount;
  }

  public void setProficientcompetencycount(Integer proficientcompetencycount) {
    this.proficientcompetencycount = proficientcompetencycount;
  }


  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics proficientcompetencypercentage(BigDecimal proficientcompetencypercentage) {
    this.proficientcompetencypercentage = proficientcompetencypercentage;
    return this;
  }

   /**
   * proficientcompetencypercentage
   * @return proficientcompetencypercentage
  **/
  @javax.annotation.Nonnull
  public BigDecimal getProficientcompetencypercentage() {
    return proficientcompetencypercentage;
  }

  public void setProficientcompetencypercentage(BigDecimal proficientcompetencypercentage) {
    this.proficientcompetencypercentage = proficientcompetencypercentage;
  }


  public ToolLpDataForCourseCompetenciesPage200ResponseStatistics proficientcompetencypercentageformatted(String proficientcompetencypercentageformatted) {
    this.proficientcompetencypercentageformatted = proficientcompetencypercentageformatted;
    return this;
  }

   /**
   * proficientcompetencypercentageformatted
   * @return proficientcompetencypercentageformatted
  **/
  @javax.annotation.Nonnull
  public String getProficientcompetencypercentageformatted() {
    return proficientcompetencypercentageformatted;
  }

  public void setProficientcompetencypercentageformatted(String proficientcompetencypercentageformatted) {
    this.proficientcompetencypercentageformatted = proficientcompetencypercentageformatted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToolLpDataForCourseCompetenciesPage200ResponseStatistics toolLpDataForCourseCompetenciesPage200ResponseStatistics = (ToolLpDataForCourseCompetenciesPage200ResponseStatistics) o;
    return Objects.equals(this.canbegradedincourse, toolLpDataForCourseCompetenciesPage200ResponseStatistics.canbegradedincourse) &&
        Objects.equals(this.canmanagecoursecompetencies, toolLpDataForCourseCompetenciesPage200ResponseStatistics.canmanagecoursecompetencies) &&
        Objects.equals(this.competencycount, toolLpDataForCourseCompetenciesPage200ResponseStatistics.competencycount) &&
        Objects.equals(this.leastproficient, toolLpDataForCourseCompetenciesPage200ResponseStatistics.leastproficient) &&
        Objects.equals(this.leastproficientcount, toolLpDataForCourseCompetenciesPage200ResponseStatistics.leastproficientcount) &&
        Objects.equals(this.proficientcompetencycount, toolLpDataForCourseCompetenciesPage200ResponseStatistics.proficientcompetencycount) &&
        Objects.equals(this.proficientcompetencypercentage, toolLpDataForCourseCompetenciesPage200ResponseStatistics.proficientcompetencypercentage) &&
        Objects.equals(this.proficientcompetencypercentageformatted, toolLpDataForCourseCompetenciesPage200ResponseStatistics.proficientcompetencypercentageformatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canbegradedincourse, canmanagecoursecompetencies, competencycount, leastproficient, leastproficientcount, proficientcompetencycount, proficientcompetencypercentage, proficientcompetencypercentageformatted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToolLpDataForCourseCompetenciesPage200ResponseStatistics {\n");
    sb.append("    canbegradedincourse: ").append(toIndentedString(canbegradedincourse)).append("\n");
    sb.append("    canmanagecoursecompetencies: ").append(toIndentedString(canmanagecoursecompetencies)).append("\n");
    sb.append("    competencycount: ").append(toIndentedString(competencycount)).append("\n");
    sb.append("    leastproficient: ").append(toIndentedString(leastproficient)).append("\n");
    sb.append("    leastproficientcount: ").append(toIndentedString(leastproficientcount)).append("\n");
    sb.append("    proficientcompetencycount: ").append(toIndentedString(proficientcompetencycount)).append("\n");
    sb.append("    proficientcompetencypercentage: ").append(toIndentedString(proficientcompetencypercentage)).append("\n");
    sb.append("    proficientcompetencypercentageformatted: ").append(toIndentedString(proficientcompetencypercentageformatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("canbegradedincourse");
    openapiFields.add("canmanagecoursecompetencies");
    openapiFields.add("competencycount");
    openapiFields.add("leastproficient");
    openapiFields.add("leastproficientcount");
    openapiFields.add("proficientcompetencycount");
    openapiFields.add("proficientcompetencypercentage");
    openapiFields.add("proficientcompetencypercentageformatted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("canbegradedincourse");
    openapiRequiredFields.add("canmanagecoursecompetencies");
    openapiRequiredFields.add("competencycount");
    openapiRequiredFields.add("leastproficient");
    openapiRequiredFields.add("leastproficientcount");
    openapiRequiredFields.add("proficientcompetencycount");
    openapiRequiredFields.add("proficientcompetencypercentage");
    openapiRequiredFields.add("proficientcompetencypercentageformatted");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ToolLpDataForCourseCompetenciesPage200ResponseStatistics
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ToolLpDataForCourseCompetenciesPage200ResponseStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ToolLpDataForCourseCompetenciesPage200ResponseStatistics is not found in the empty JSON string", ToolLpDataForCourseCompetenciesPage200ResponseStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ToolLpDataForCourseCompetenciesPage200ResponseStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ToolLpDataForCourseCompetenciesPage200ResponseStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ToolLpDataForCourseCompetenciesPage200ResponseStatistics.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("leastproficient").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `leastproficient` to be an array in the JSON string but got `%s`", jsonObj.get("leastproficient").toString()));
      }

      JsonArray jsonArrayleastproficient = jsonObj.getAsJsonArray("leastproficient");
      // validate the required field `leastproficient` (array)
      for (int i = 0; i < jsonArrayleastproficient.size(); i++) {
        CoreCompetencyReadUserEvidence200ResponseCompetenciesInner.validateJsonElement(jsonArrayleastproficient.get(i));
      };
      if (!jsonObj.get("proficientcompetencypercentageformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proficientcompetencypercentageformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proficientcompetencypercentageformatted").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ToolLpDataForCourseCompetenciesPage200ResponseStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ToolLpDataForCourseCompetenciesPage200ResponseStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ToolLpDataForCourseCompetenciesPage200ResponseStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ToolLpDataForCourseCompetenciesPage200ResponseStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<ToolLpDataForCourseCompetenciesPage200ResponseStatistics>() {
           @Override
           public void write(JsonWriter out, ToolLpDataForCourseCompetenciesPage200ResponseStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ToolLpDataForCourseCompetenciesPage200ResponseStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ToolLpDataForCourseCompetenciesPage200ResponseStatistics given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ToolLpDataForCourseCompetenciesPage200ResponseStatistics
  * @throws IOException if the JSON string is invalid with respect to ToolLpDataForCourseCompetenciesPage200ResponseStatistics
  */
  public static ToolLpDataForCourseCompetenciesPage200ResponseStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ToolLpDataForCourseCompetenciesPage200ResponseStatistics.class);
  }

 /**
  * Convert an instance of ToolLpDataForCourseCompetenciesPage200ResponseStatistics to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

