/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreCourseGetCoursesByField200ResponseCoursesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreCourseGetCoursesByField200ResponseCoursesInner {
  public static final String SERIALIZED_NAME_CACHEREV = "cacherev";
  @SerializedName(SERIALIZED_NAME_CACHEREV)
  private Integer cacherev = null;

  public static final String SERIALIZED_NAME_CALENDARTYPE = "calendartype";
  @SerializedName(SERIALIZED_NAME_CALENDARTYPE)
  private String calendartype = "null";

  public static final String SERIALIZED_NAME_CATEGORYID = "categoryid";
  @SerializedName(SERIALIZED_NAME_CATEGORYID)
  private Integer categoryid;

  public static final String SERIALIZED_NAME_CATEGORYNAME = "categoryname";
  @SerializedName(SERIALIZED_NAME_CATEGORYNAME)
  private String categoryname = "null";

  public static final String SERIALIZED_NAME_COMPLETIONNOTIFY = "completionnotify";
  @SerializedName(SERIALIZED_NAME_COMPLETIONNOTIFY)
  private Integer completionnotify;

  public static final String SERIALIZED_NAME_CONTACTS = "contacts";
  @SerializedName(SERIALIZED_NAME_CONTACTS)
  private List<CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner> contacts = new ArrayList<>();

  public static final String SERIALIZED_NAME_COURSEFORMATOPTIONS = "courseformatoptions";
  @SerializedName(SERIALIZED_NAME_COURSEFORMATOPTIONS)
  private List<CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner> courseformatoptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_COURSEIMAGE = "courseimage";
  @SerializedName(SERIALIZED_NAME_COURSEIMAGE)
  private String courseimage = "null";

  public static final String SERIALIZED_NAME_CUSTOMFIELDS = "customfields";
  @SerializedName(SERIALIZED_NAME_CUSTOMFIELDS)
  private List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> customfields = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULTGROUPINGID = "defaultgroupingid";
  @SerializedName(SERIALIZED_NAME_DEFAULTGROUPINGID)
  private Integer defaultgroupingid = null;

  public static final String SERIALIZED_NAME_DISPLAYNAME = "displayname";
  @SerializedName(SERIALIZED_NAME_DISPLAYNAME)
  private String displayname = "null";

  public static final String SERIALIZED_NAME_ENABLECOMPLETION = "enablecompletion";
  @SerializedName(SERIALIZED_NAME_ENABLECOMPLETION)
  private Integer enablecompletion = null;

  public static final String SERIALIZED_NAME_ENDDATE = "enddate";
  @SerializedName(SERIALIZED_NAME_ENDDATE)
  private Integer enddate = null;

  public static final String SERIALIZED_NAME_ENROLLMENTMETHODS = "enrollmentmethods";
  @SerializedName(SERIALIZED_NAME_ENROLLMENTMETHODS)
  private List<Object> enrollmentmethods = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner> filters = new ArrayList<>();

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format = "null";

  public static final String SERIALIZED_NAME_FULLNAME = "fullname";
  @SerializedName(SERIALIZED_NAME_FULLNAME)
  private String fullname = "null";

  public static final String SERIALIZED_NAME_GROUPMODE = "groupmode";
  @SerializedName(SERIALIZED_NAME_GROUPMODE)
  private Integer groupmode = null;

  public static final String SERIALIZED_NAME_GROUPMODEFORCE = "groupmodeforce";
  @SerializedName(SERIALIZED_NAME_GROUPMODEFORCE)
  private Integer groupmodeforce = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IDNUMBER = "idnumber";
  @SerializedName(SERIALIZED_NAME_IDNUMBER)
  private String idnumber = "null";

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang = "null";

  public static final String SERIALIZED_NAME_LEGACYFILES = "legacyfiles";
  @SerializedName(SERIALIZED_NAME_LEGACYFILES)
  private Integer legacyfiles = null;

  public static final String SERIALIZED_NAME_MARKER = "marker";
  @SerializedName(SERIALIZED_NAME_MARKER)
  private Integer marker = null;

  public static final String SERIALIZED_NAME_MAXBYTES = "maxbytes";
  @SerializedName(SERIALIZED_NAME_MAXBYTES)
  private Integer maxbytes = null;

  public static final String SERIALIZED_NAME_NEWSITEMS = "newsitems";
  @SerializedName(SERIALIZED_NAME_NEWSITEMS)
  private Integer newsitems = null;

  public static final String SERIALIZED_NAME_OVERVIEWFILES = "overviewfiles";
  @SerializedName(SERIALIZED_NAME_OVERVIEWFILES)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> overviewfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUESTED = "requested";
  @SerializedName(SERIALIZED_NAME_REQUESTED)
  private Integer requested = null;

  public static final String SERIALIZED_NAME_SHORTNAME = "shortname";
  @SerializedName(SERIALIZED_NAME_SHORTNAME)
  private String shortname;

  public static final String SERIALIZED_NAME_SHOWACTIVITYDATES = "showactivitydates";
  @SerializedName(SERIALIZED_NAME_SHOWACTIVITYDATES)
  private Boolean showactivitydates = null;

  public static final String SERIALIZED_NAME_SHOWCOMPLETIONCONDITIONS = "showcompletionconditions";
  @SerializedName(SERIALIZED_NAME_SHOWCOMPLETIONCONDITIONS)
  private Boolean showcompletionconditions = null;

  public static final String SERIALIZED_NAME_SHOWGRADES = "showgrades";
  @SerializedName(SERIALIZED_NAME_SHOWGRADES)
  private Integer showgrades = null;

  public static final String SERIALIZED_NAME_SHOWREPORTS = "showreports";
  @SerializedName(SERIALIZED_NAME_SHOWREPORTS)
  private Integer showreports = null;

  public static final String SERIALIZED_NAME_SORTORDER = "sortorder";
  @SerializedName(SERIALIZED_NAME_SORTORDER)
  private Integer sortorder = null;

  public static final String SERIALIZED_NAME_STARTDATE = "startdate";
  @SerializedName(SERIALIZED_NAME_STARTDATE)
  private Integer startdate = null;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public static final String SERIALIZED_NAME_SUMMARYFILES = "summaryfiles";
  @SerializedName(SERIALIZED_NAME_SUMMARYFILES)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> summaryfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUMMARYFORMAT = "summaryformat";
  @SerializedName(SERIALIZED_NAME_SUMMARYFORMAT)
  private Integer summaryformat;

  public static final String SERIALIZED_NAME_THEME = "theme";
  @SerializedName(SERIALIZED_NAME_THEME)
  private String theme = "null";

  public static final String SERIALIZED_NAME_TIMECREATED = "timecreated";
  @SerializedName(SERIALIZED_NAME_TIMECREATED)
  private Integer timecreated = null;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified = null;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Integer visible;

  public CoreCourseGetCoursesByField200ResponseCoursesInner() {
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner cacherev(Integer cacherev) {
    this.cacherev = cacherev;
    return this;
  }

   /**
   * Cache revision number
   * @return cacherev
  **/
  @javax.annotation.Nullable
  public Integer getCacherev() {
    return cacherev;
  }

  public void setCacherev(Integer cacherev) {
    this.cacherev = cacherev;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner calendartype(String calendartype) {
    this.calendartype = calendartype;
    return this;
  }

   /**
   * Calendar type
   * @return calendartype
  **/
  @javax.annotation.Nullable
  public String getCalendartype() {
    return calendartype;
  }

  public void setCalendartype(String calendartype) {
    this.calendartype = calendartype;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner categoryid(Integer categoryid) {
    this.categoryid = categoryid;
    return this;
  }

   /**
   * category id
   * @return categoryid
  **/
  @javax.annotation.Nullable
  public Integer getCategoryid() {
    return categoryid;
  }

  public void setCategoryid(Integer categoryid) {
    this.categoryid = categoryid;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner categoryname(String categoryname) {
    this.categoryname = categoryname;
    return this;
  }

   /**
   * category name
   * @return categoryname
  **/
  @javax.annotation.Nullable
  public String getCategoryname() {
    return categoryname;
  }

  public void setCategoryname(String categoryname) {
    this.categoryname = categoryname;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner completionnotify(Integer completionnotify) {
    this.completionnotify = completionnotify;
    return this;
  }

   /**
   * 1: yes 0: no
   * @return completionnotify
  **/
  @javax.annotation.Nullable
  public Integer getCompletionnotify() {
    return completionnotify;
  }

  public void setCompletionnotify(Integer completionnotify) {
    this.completionnotify = completionnotify;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner contacts(List<CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner> contacts) {
    this.contacts = contacts;
    return this;
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner addContactsItem(CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @javax.annotation.Nullable
  public List<CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner> getContacts() {
    return contacts;
  }

  public void setContacts(List<CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner> contacts) {
    this.contacts = contacts;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner courseformatoptions(List<CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner> courseformatoptions) {
    this.courseformatoptions = courseformatoptions;
    return this;
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner addCourseformatoptionsItem(CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner courseformatoptionsItem) {
    if (this.courseformatoptions == null) {
      this.courseformatoptions = new ArrayList<>();
    }
    this.courseformatoptions.add(courseformatoptionsItem);
    return this;
  }

   /**
   * Get courseformatoptions
   * @return courseformatoptions
  **/
  @javax.annotation.Nullable
  public List<CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner> getCourseformatoptions() {
    return courseformatoptions;
  }

  public void setCourseformatoptions(List<CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner> courseformatoptions) {
    this.courseformatoptions = courseformatoptions;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner courseimage(String courseimage) {
    this.courseimage = courseimage;
    return this;
  }

   /**
   * Course image
   * @return courseimage
  **/
  @javax.annotation.Nullable
  public String getCourseimage() {
    return courseimage;
  }

  public void setCourseimage(String courseimage) {
    this.courseimage = courseimage;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner customfields(List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> customfields) {
    this.customfields = customfields;
    return this;
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner addCustomfieldsItem(CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner customfieldsItem) {
    if (this.customfields == null) {
      this.customfields = new ArrayList<>();
    }
    this.customfields.add(customfieldsItem);
    return this;
  }

   /**
   * Get customfields
   * @return customfields
  **/
  @javax.annotation.Nullable
  public List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> getCustomfields() {
    return customfields;
  }

  public void setCustomfields(List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> customfields) {
    this.customfields = customfields;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner defaultgroupingid(Integer defaultgroupingid) {
    this.defaultgroupingid = defaultgroupingid;
    return this;
  }

   /**
   * default grouping id
   * @return defaultgroupingid
  **/
  @javax.annotation.Nullable
  public Integer getDefaultgroupingid() {
    return defaultgroupingid;
  }

  public void setDefaultgroupingid(Integer defaultgroupingid) {
    this.defaultgroupingid = defaultgroupingid;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * course display name
   * @return displayname
  **/
  @javax.annotation.Nullable
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner enablecompletion(Integer enablecompletion) {
    this.enablecompletion = enablecompletion;
    return this;
  }

   /**
   * Completion enabled? 1: yes 0: no
   * @return enablecompletion
  **/
  @javax.annotation.Nullable
  public Integer getEnablecompletion() {
    return enablecompletion;
  }

  public void setEnablecompletion(Integer enablecompletion) {
    this.enablecompletion = enablecompletion;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner enddate(Integer enddate) {
    this.enddate = enddate;
    return this;
  }

   /**
   * Timestamp when the course end
   * @return enddate
  **/
  @javax.annotation.Nullable
  public Integer getEnddate() {
    return enddate;
  }

  public void setEnddate(Integer enddate) {
    this.enddate = enddate;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner enrollmentmethods(List<Object> enrollmentmethods) {
    this.enrollmentmethods = enrollmentmethods;
    return this;
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner addEnrollmentmethodsItem(Object enrollmentmethodsItem) {
    if (this.enrollmentmethods == null) {
      this.enrollmentmethods = new ArrayList<>();
    }
    this.enrollmentmethods.add(enrollmentmethodsItem);
    return this;
  }

   /**
   * Get enrollmentmethods
   * @return enrollmentmethods
  **/
  @javax.annotation.Nullable
  public List<Object> getEnrollmentmethods() {
    return enrollmentmethods;
  }

  public void setEnrollmentmethods(List<Object> enrollmentmethods) {
    this.enrollmentmethods = enrollmentmethods;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner filters(List<CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner> filters) {
    this.filters = filters;
    return this;
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner addFiltersItem(CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @javax.annotation.Nullable
  public List<CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner> getFilters() {
    return filters;
  }

  public void setFilters(List<CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner> filters) {
    this.filters = filters;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Course format: weeks, topics, social, site,..
   * @return format
  **/
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

   /**
   * course full name
   * @return fullname
  **/
  @javax.annotation.Nullable
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner groupmode(Integer groupmode) {
    this.groupmode = groupmode;
    return this;
  }

   /**
   * no group, separate, visible
   * @return groupmode
  **/
  @javax.annotation.Nullable
  public Integer getGroupmode() {
    return groupmode;
  }

  public void setGroupmode(Integer groupmode) {
    this.groupmode = groupmode;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner groupmodeforce(Integer groupmodeforce) {
    this.groupmodeforce = groupmodeforce;
    return this;
  }

   /**
   * 1: yes, 0: no
   * @return groupmodeforce
  **/
  @javax.annotation.Nullable
  public Integer getGroupmodeforce() {
    return groupmodeforce;
  }

  public void setGroupmodeforce(Integer groupmodeforce) {
    this.groupmodeforce = groupmodeforce;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * course id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner idnumber(String idnumber) {
    this.idnumber = idnumber;
    return this;
  }

   /**
   * Id number
   * @return idnumber
  **/
  @javax.annotation.Nullable
  public String getIdnumber() {
    return idnumber;
  }

  public void setIdnumber(String idnumber) {
    this.idnumber = idnumber;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner lang(String lang) {
    this.lang = lang;
    return this;
  }

   /**
   * Forced course language
   * @return lang
  **/
  @javax.annotation.Nullable
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner legacyfiles(Integer legacyfiles) {
    this.legacyfiles = legacyfiles;
    return this;
  }

   /**
   * If legacy files are enabled
   * @return legacyfiles
  **/
  @javax.annotation.Nullable
  public Integer getLegacyfiles() {
    return legacyfiles;
  }

  public void setLegacyfiles(Integer legacyfiles) {
    this.legacyfiles = legacyfiles;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner marker(Integer marker) {
    this.marker = marker;
    return this;
  }

   /**
   * Current course marker
   * @return marker
  **/
  @javax.annotation.Nullable
  public Integer getMarker() {
    return marker;
  }

  public void setMarker(Integer marker) {
    this.marker = marker;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner maxbytes(Integer maxbytes) {
    this.maxbytes = maxbytes;
    return this;
  }

   /**
   * Largest size of file that can be uploaded into
   * @return maxbytes
  **/
  @javax.annotation.Nullable
  public Integer getMaxbytes() {
    return maxbytes;
  }

  public void setMaxbytes(Integer maxbytes) {
    this.maxbytes = maxbytes;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner newsitems(Integer newsitems) {
    this.newsitems = newsitems;
    return this;
  }

   /**
   * Number of recent items appearing on the course page
   * @return newsitems
  **/
  @javax.annotation.Nullable
  public Integer getNewsitems() {
    return newsitems;
  }

  public void setNewsitems(Integer newsitems) {
    this.newsitems = newsitems;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner overviewfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> overviewfiles) {
    this.overviewfiles = overviewfiles;
    return this;
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner addOverviewfilesItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner overviewfilesItem) {
    if (this.overviewfiles == null) {
      this.overviewfiles = new ArrayList<>();
    }
    this.overviewfiles.add(overviewfilesItem);
    return this;
  }

   /**
   * Get overviewfiles
   * @return overviewfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getOverviewfiles() {
    return overviewfiles;
  }

  public void setOverviewfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> overviewfiles) {
    this.overviewfiles = overviewfiles;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner requested(Integer requested) {
    this.requested = requested;
    return this;
  }

   /**
   * If is a requested course
   * @return requested
  **/
  @javax.annotation.Nullable
  public Integer getRequested() {
    return requested;
  }

  public void setRequested(Integer requested) {
    this.requested = requested;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner shortname(String shortname) {
    this.shortname = shortname;
    return this;
  }

   /**
   * course short name
   * @return shortname
  **/
  @javax.annotation.Nullable
  public String getShortname() {
    return shortname;
  }

  public void setShortname(String shortname) {
    this.shortname = shortname;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner showactivitydates(Boolean showactivitydates) {
    this.showactivitydates = showactivitydates;
    return this;
  }

   /**
   * Whether the activity dates are shown or not
   * @return showactivitydates
  **/
  @javax.annotation.Nullable
  public Boolean getShowactivitydates() {
    return showactivitydates;
  }

  public void setShowactivitydates(Boolean showactivitydates) {
    this.showactivitydates = showactivitydates;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner showcompletionconditions(Boolean showcompletionconditions) {
    this.showcompletionconditions = showcompletionconditions;
    return this;
  }

   /**
   * Whether the activity completion conditions are shown or not
   * @return showcompletionconditions
  **/
  @javax.annotation.Nullable
  public Boolean getShowcompletionconditions() {
    return showcompletionconditions;
  }

  public void setShowcompletionconditions(Boolean showcompletionconditions) {
    this.showcompletionconditions = showcompletionconditions;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner showgrades(Integer showgrades) {
    this.showgrades = showgrades;
    return this;
  }

   /**
   * 1 if grades are shown, otherwise 0
   * @return showgrades
  **/
  @javax.annotation.Nullable
  public Integer getShowgrades() {
    return showgrades;
  }

  public void setShowgrades(Integer showgrades) {
    this.showgrades = showgrades;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner showreports(Integer showreports) {
    this.showreports = showreports;
    return this;
  }

   /**
   * Are activity report shown (yes &#x3D; 1, no &#x3D;0)
   * @return showreports
  **/
  @javax.annotation.Nullable
  public Integer getShowreports() {
    return showreports;
  }

  public void setShowreports(Integer showreports) {
    this.showreports = showreports;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner sortorder(Integer sortorder) {
    this.sortorder = sortorder;
    return this;
  }

   /**
   * Sort order in the category
   * @return sortorder
  **/
  @javax.annotation.Nullable
  public Integer getSortorder() {
    return sortorder;
  }

  public void setSortorder(Integer sortorder) {
    this.sortorder = sortorder;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner startdate(Integer startdate) {
    this.startdate = startdate;
    return this;
  }

   /**
   * Timestamp when the course start
   * @return startdate
  **/
  @javax.annotation.Nullable
  public Integer getStartdate() {
    return startdate;
  }

  public void setStartdate(Integer startdate) {
    this.startdate = startdate;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * summary
   * @return summary
  **/
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner summaryfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> summaryfiles) {
    this.summaryfiles = summaryfiles;
    return this;
  }

  public CoreCourseGetCoursesByField200ResponseCoursesInner addSummaryfilesItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner summaryfilesItem) {
    if (this.summaryfiles == null) {
      this.summaryfiles = new ArrayList<>();
    }
    this.summaryfiles.add(summaryfilesItem);
    return this;
  }

   /**
   * Get summaryfiles
   * @return summaryfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getSummaryfiles() {
    return summaryfiles;
  }

  public void setSummaryfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> summaryfiles) {
    this.summaryfiles = summaryfiles;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner summaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
    return this;
  }

   /**
   * summary format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return summaryformat
  **/
  @javax.annotation.Nullable
  public Integer getSummaryformat() {
    return summaryformat;
  }

  public void setSummaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner theme(String theme) {
    this.theme = theme;
    return this;
  }

   /**
   * Fame of the forced theme
   * @return theme
  **/
  @javax.annotation.Nullable
  public String getTheme() {
    return theme;
  }

  public void setTheme(String theme) {
    this.theme = theme;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner timecreated(Integer timecreated) {
    this.timecreated = timecreated;
    return this;
  }

   /**
   * Time when the course was created
   * @return timecreated
  **/
  @javax.annotation.Nullable
  public Integer getTimecreated() {
    return timecreated;
  }

  public void setTimecreated(Integer timecreated) {
    this.timecreated = timecreated;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * Last time  the course was updated
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public CoreCourseGetCoursesByField200ResponseCoursesInner visible(Integer visible) {
    this.visible = visible;
    return this;
  }

   /**
   * 1: available to student, 0:not available
   * @return visible
  **/
  @javax.annotation.Nullable
  public Integer getVisible() {
    return visible;
  }

  public void setVisible(Integer visible) {
    this.visible = visible;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreCourseGetCoursesByField200ResponseCoursesInner coreCourseGetCoursesByField200ResponseCoursesInner = (CoreCourseGetCoursesByField200ResponseCoursesInner) o;
    return Objects.equals(this.cacherev, coreCourseGetCoursesByField200ResponseCoursesInner.cacherev) &&
        Objects.equals(this.calendartype, coreCourseGetCoursesByField200ResponseCoursesInner.calendartype) &&
        Objects.equals(this.categoryid, coreCourseGetCoursesByField200ResponseCoursesInner.categoryid) &&
        Objects.equals(this.categoryname, coreCourseGetCoursesByField200ResponseCoursesInner.categoryname) &&
        Objects.equals(this.completionnotify, coreCourseGetCoursesByField200ResponseCoursesInner.completionnotify) &&
        Objects.equals(this.contacts, coreCourseGetCoursesByField200ResponseCoursesInner.contacts) &&
        Objects.equals(this.courseformatoptions, coreCourseGetCoursesByField200ResponseCoursesInner.courseformatoptions) &&
        Objects.equals(this.courseimage, coreCourseGetCoursesByField200ResponseCoursesInner.courseimage) &&
        Objects.equals(this.customfields, coreCourseGetCoursesByField200ResponseCoursesInner.customfields) &&
        Objects.equals(this.defaultgroupingid, coreCourseGetCoursesByField200ResponseCoursesInner.defaultgroupingid) &&
        Objects.equals(this.displayname, coreCourseGetCoursesByField200ResponseCoursesInner.displayname) &&
        Objects.equals(this.enablecompletion, coreCourseGetCoursesByField200ResponseCoursesInner.enablecompletion) &&
        Objects.equals(this.enddate, coreCourseGetCoursesByField200ResponseCoursesInner.enddate) &&
        Objects.equals(this.enrollmentmethods, coreCourseGetCoursesByField200ResponseCoursesInner.enrollmentmethods) &&
        Objects.equals(this.filters, coreCourseGetCoursesByField200ResponseCoursesInner.filters) &&
        Objects.equals(this.format, coreCourseGetCoursesByField200ResponseCoursesInner.format) &&
        Objects.equals(this.fullname, coreCourseGetCoursesByField200ResponseCoursesInner.fullname) &&
        Objects.equals(this.groupmode, coreCourseGetCoursesByField200ResponseCoursesInner.groupmode) &&
        Objects.equals(this.groupmodeforce, coreCourseGetCoursesByField200ResponseCoursesInner.groupmodeforce) &&
        Objects.equals(this.id, coreCourseGetCoursesByField200ResponseCoursesInner.id) &&
        Objects.equals(this.idnumber, coreCourseGetCoursesByField200ResponseCoursesInner.idnumber) &&
        Objects.equals(this.lang, coreCourseGetCoursesByField200ResponseCoursesInner.lang) &&
        Objects.equals(this.legacyfiles, coreCourseGetCoursesByField200ResponseCoursesInner.legacyfiles) &&
        Objects.equals(this.marker, coreCourseGetCoursesByField200ResponseCoursesInner.marker) &&
        Objects.equals(this.maxbytes, coreCourseGetCoursesByField200ResponseCoursesInner.maxbytes) &&
        Objects.equals(this.newsitems, coreCourseGetCoursesByField200ResponseCoursesInner.newsitems) &&
        Objects.equals(this.overviewfiles, coreCourseGetCoursesByField200ResponseCoursesInner.overviewfiles) &&
        Objects.equals(this.requested, coreCourseGetCoursesByField200ResponseCoursesInner.requested) &&
        Objects.equals(this.shortname, coreCourseGetCoursesByField200ResponseCoursesInner.shortname) &&
        Objects.equals(this.showactivitydates, coreCourseGetCoursesByField200ResponseCoursesInner.showactivitydates) &&
        Objects.equals(this.showcompletionconditions, coreCourseGetCoursesByField200ResponseCoursesInner.showcompletionconditions) &&
        Objects.equals(this.showgrades, coreCourseGetCoursesByField200ResponseCoursesInner.showgrades) &&
        Objects.equals(this.showreports, coreCourseGetCoursesByField200ResponseCoursesInner.showreports) &&
        Objects.equals(this.sortorder, coreCourseGetCoursesByField200ResponseCoursesInner.sortorder) &&
        Objects.equals(this.startdate, coreCourseGetCoursesByField200ResponseCoursesInner.startdate) &&
        Objects.equals(this.summary, coreCourseGetCoursesByField200ResponseCoursesInner.summary) &&
        Objects.equals(this.summaryfiles, coreCourseGetCoursesByField200ResponseCoursesInner.summaryfiles) &&
        Objects.equals(this.summaryformat, coreCourseGetCoursesByField200ResponseCoursesInner.summaryformat) &&
        Objects.equals(this.theme, coreCourseGetCoursesByField200ResponseCoursesInner.theme) &&
        Objects.equals(this.timecreated, coreCourseGetCoursesByField200ResponseCoursesInner.timecreated) &&
        Objects.equals(this.timemodified, coreCourseGetCoursesByField200ResponseCoursesInner.timemodified) &&
        Objects.equals(this.visible, coreCourseGetCoursesByField200ResponseCoursesInner.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacherev, calendartype, categoryid, categoryname, completionnotify, contacts, courseformatoptions, courseimage, customfields, defaultgroupingid, displayname, enablecompletion, enddate, enrollmentmethods, filters, format, fullname, groupmode, groupmodeforce, id, idnumber, lang, legacyfiles, marker, maxbytes, newsitems, overviewfiles, requested, shortname, showactivitydates, showcompletionconditions, showgrades, showreports, sortorder, startdate, summary, summaryfiles, summaryformat, theme, timecreated, timemodified, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreCourseGetCoursesByField200ResponseCoursesInner {\n");
    sb.append("    cacherev: ").append(toIndentedString(cacherev)).append("\n");
    sb.append("    calendartype: ").append(toIndentedString(calendartype)).append("\n");
    sb.append("    categoryid: ").append(toIndentedString(categoryid)).append("\n");
    sb.append("    categoryname: ").append(toIndentedString(categoryname)).append("\n");
    sb.append("    completionnotify: ").append(toIndentedString(completionnotify)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    courseformatoptions: ").append(toIndentedString(courseformatoptions)).append("\n");
    sb.append("    courseimage: ").append(toIndentedString(courseimage)).append("\n");
    sb.append("    customfields: ").append(toIndentedString(customfields)).append("\n");
    sb.append("    defaultgroupingid: ").append(toIndentedString(defaultgroupingid)).append("\n");
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    enablecompletion: ").append(toIndentedString(enablecompletion)).append("\n");
    sb.append("    enddate: ").append(toIndentedString(enddate)).append("\n");
    sb.append("    enrollmentmethods: ").append(toIndentedString(enrollmentmethods)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    groupmode: ").append(toIndentedString(groupmode)).append("\n");
    sb.append("    groupmodeforce: ").append(toIndentedString(groupmodeforce)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idnumber: ").append(toIndentedString(idnumber)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    legacyfiles: ").append(toIndentedString(legacyfiles)).append("\n");
    sb.append("    marker: ").append(toIndentedString(marker)).append("\n");
    sb.append("    maxbytes: ").append(toIndentedString(maxbytes)).append("\n");
    sb.append("    newsitems: ").append(toIndentedString(newsitems)).append("\n");
    sb.append("    overviewfiles: ").append(toIndentedString(overviewfiles)).append("\n");
    sb.append("    requested: ").append(toIndentedString(requested)).append("\n");
    sb.append("    shortname: ").append(toIndentedString(shortname)).append("\n");
    sb.append("    showactivitydates: ").append(toIndentedString(showactivitydates)).append("\n");
    sb.append("    showcompletionconditions: ").append(toIndentedString(showcompletionconditions)).append("\n");
    sb.append("    showgrades: ").append(toIndentedString(showgrades)).append("\n");
    sb.append("    showreports: ").append(toIndentedString(showreports)).append("\n");
    sb.append("    sortorder: ").append(toIndentedString(sortorder)).append("\n");
    sb.append("    startdate: ").append(toIndentedString(startdate)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    summaryfiles: ").append(toIndentedString(summaryfiles)).append("\n");
    sb.append("    summaryformat: ").append(toIndentedString(summaryformat)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    timecreated: ").append(toIndentedString(timecreated)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cacherev");
    openapiFields.add("calendartype");
    openapiFields.add("categoryid");
    openapiFields.add("categoryname");
    openapiFields.add("completionnotify");
    openapiFields.add("contacts");
    openapiFields.add("courseformatoptions");
    openapiFields.add("courseimage");
    openapiFields.add("customfields");
    openapiFields.add("defaultgroupingid");
    openapiFields.add("displayname");
    openapiFields.add("enablecompletion");
    openapiFields.add("enddate");
    openapiFields.add("enrollmentmethods");
    openapiFields.add("filters");
    openapiFields.add("format");
    openapiFields.add("fullname");
    openapiFields.add("groupmode");
    openapiFields.add("groupmodeforce");
    openapiFields.add("id");
    openapiFields.add("idnumber");
    openapiFields.add("lang");
    openapiFields.add("legacyfiles");
    openapiFields.add("marker");
    openapiFields.add("maxbytes");
    openapiFields.add("newsitems");
    openapiFields.add("overviewfiles");
    openapiFields.add("requested");
    openapiFields.add("shortname");
    openapiFields.add("showactivitydates");
    openapiFields.add("showcompletionconditions");
    openapiFields.add("showgrades");
    openapiFields.add("showreports");
    openapiFields.add("sortorder");
    openapiFields.add("startdate");
    openapiFields.add("summary");
    openapiFields.add("summaryfiles");
    openapiFields.add("summaryformat");
    openapiFields.add("theme");
    openapiFields.add("timecreated");
    openapiFields.add("timemodified");
    openapiFields.add("visible");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreCourseGetCoursesByField200ResponseCoursesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreCourseGetCoursesByField200ResponseCoursesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreCourseGetCoursesByField200ResponseCoursesInner is not found in the empty JSON string", CoreCourseGetCoursesByField200ResponseCoursesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreCourseGetCoursesByField200ResponseCoursesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreCourseGetCoursesByField200ResponseCoursesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("calendartype") != null && !jsonObj.get("calendartype").isJsonNull()) && !jsonObj.get("calendartype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `calendartype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("calendartype").toString()));
      }
      if ((jsonObj.get("categoryname") != null && !jsonObj.get("categoryname").isJsonNull()) && !jsonObj.get("categoryname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryname").toString()));
      }
      if (jsonObj.get("contacts") != null && !jsonObj.get("contacts").isJsonNull()) {
        JsonArray jsonArraycontacts = jsonObj.getAsJsonArray("contacts");
        if (jsonArraycontacts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("contacts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `contacts` to be an array in the JSON string but got `%s`", jsonObj.get("contacts").toString()));
          }

          // validate the optional field `contacts` (array)
          for (int i = 0; i < jsonArraycontacts.size(); i++) {
            CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner.validateJsonElement(jsonArraycontacts.get(i));
          };
        }
      }
      if (jsonObj.get("courseformatoptions") != null && !jsonObj.get("courseformatoptions").isJsonNull()) {
        JsonArray jsonArraycourseformatoptions = jsonObj.getAsJsonArray("courseformatoptions");
        if (jsonArraycourseformatoptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("courseformatoptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `courseformatoptions` to be an array in the JSON string but got `%s`", jsonObj.get("courseformatoptions").toString()));
          }

          // validate the optional field `courseformatoptions` (array)
          for (int i = 0; i < jsonArraycourseformatoptions.size(); i++) {
            CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner.validateJsonElement(jsonArraycourseformatoptions.get(i));
          };
        }
      }
      if ((jsonObj.get("courseimage") != null && !jsonObj.get("courseimage").isJsonNull()) && !jsonObj.get("courseimage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courseimage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courseimage").toString()));
      }
      if (jsonObj.get("customfields") != null && !jsonObj.get("customfields").isJsonNull()) {
        JsonArray jsonArraycustomfields = jsonObj.getAsJsonArray("customfields");
        if (jsonArraycustomfields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customfields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customfields` to be an array in the JSON string but got `%s`", jsonObj.get("customfields").toString()));
          }

          // validate the optional field `customfields` (array)
          for (int i = 0; i < jsonArraycustomfields.size(); i++) {
            CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner.validateJsonElement(jsonArraycustomfields.get(i));
          };
        }
      }
      if ((jsonObj.get("displayname") != null && !jsonObj.get("displayname").isJsonNull()) && !jsonObj.get("displayname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayname").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("enrollmentmethods") != null && !jsonObj.get("enrollmentmethods").isJsonNull() && !jsonObj.get("enrollmentmethods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentmethods` to be an array in the JSON string but got `%s`", jsonObj.get("enrollmentmethods").toString()));
      }
      if (jsonObj.get("filters") != null && !jsonObj.get("filters").isJsonNull()) {
        JsonArray jsonArrayfilters = jsonObj.getAsJsonArray("filters");
        if (jsonArrayfilters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("filters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `filters` to be an array in the JSON string but got `%s`", jsonObj.get("filters").toString()));
          }

          // validate the optional field `filters` (array)
          for (int i = 0; i < jsonArrayfilters.size(); i++) {
            CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner.validateJsonElement(jsonArrayfilters.get(i));
          };
        }
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      if ((jsonObj.get("fullname") != null && !jsonObj.get("fullname").isJsonNull()) && !jsonObj.get("fullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullname").toString()));
      }
      if ((jsonObj.get("idnumber") != null && !jsonObj.get("idnumber").isJsonNull()) && !jsonObj.get("idnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idnumber").toString()));
      }
      if ((jsonObj.get("lang") != null && !jsonObj.get("lang").isJsonNull()) && !jsonObj.get("lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang").toString()));
      }
      if (jsonObj.get("overviewfiles") != null && !jsonObj.get("overviewfiles").isJsonNull()) {
        JsonArray jsonArrayoverviewfiles = jsonObj.getAsJsonArray("overviewfiles");
        if (jsonArrayoverviewfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("overviewfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `overviewfiles` to be an array in the JSON string but got `%s`", jsonObj.get("overviewfiles").toString()));
          }

          // validate the optional field `overviewfiles` (array)
          for (int i = 0; i < jsonArrayoverviewfiles.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArrayoverviewfiles.get(i));
          };
        }
      }
      if ((jsonObj.get("shortname") != null && !jsonObj.get("shortname").isJsonNull()) && !jsonObj.get("shortname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortname").toString()));
      }
      if ((jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) && !jsonObj.get("summary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary").toString()));
      }
      if (jsonObj.get("summaryfiles") != null && !jsonObj.get("summaryfiles").isJsonNull()) {
        JsonArray jsonArraysummaryfiles = jsonObj.getAsJsonArray("summaryfiles");
        if (jsonArraysummaryfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("summaryfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `summaryfiles` to be an array in the JSON string but got `%s`", jsonObj.get("summaryfiles").toString()));
          }

          // validate the optional field `summaryfiles` (array)
          for (int i = 0; i < jsonArraysummaryfiles.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArraysummaryfiles.get(i));
          };
        }
      }
      if ((jsonObj.get("theme") != null && !jsonObj.get("theme").isJsonNull()) && !jsonObj.get("theme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `theme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("theme").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreCourseGetCoursesByField200ResponseCoursesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreCourseGetCoursesByField200ResponseCoursesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreCourseGetCoursesByField200ResponseCoursesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreCourseGetCoursesByField200ResponseCoursesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreCourseGetCoursesByField200ResponseCoursesInner>() {
           @Override
           public void write(JsonWriter out, CoreCourseGetCoursesByField200ResponseCoursesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreCourseGetCoursesByField200ResponseCoursesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreCourseGetCoursesByField200ResponseCoursesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreCourseGetCoursesByField200ResponseCoursesInner
  * @throws IOException if the JSON string is invalid with respect to CoreCourseGetCoursesByField200ResponseCoursesInner
  */
  public static CoreCourseGetCoursesByField200ResponseCoursesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreCourseGetCoursesByField200ResponseCoursesInner.class);
  }

 /**
  * Convert an instance of CoreCourseGetCoursesByField200ResponseCoursesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

