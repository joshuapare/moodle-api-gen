/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModDataGetEntry200ResponseRatinginfoRatingsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModDataGetEntry200ResponseRatinginfoRatingsInner {
  public static final String SERIALIZED_NAME_AGGREGATE = "aggregate";
  @SerializedName(SERIALIZED_NAME_AGGREGATE)
  private BigDecimal aggregate = new BigDecimal("null");

  public static final String SERIALIZED_NAME_AGGREGATELABEL = "aggregatelabel";
  @SerializedName(SERIALIZED_NAME_AGGREGATELABEL)
  private String aggregatelabel = "null";

  public static final String SERIALIZED_NAME_AGGREGATESTR = "aggregatestr";
  @SerializedName(SERIALIZED_NAME_AGGREGATESTR)
  private String aggregatestr = "null";

  public static final String SERIALIZED_NAME_CANRATE = "canrate";
  @SerializedName(SERIALIZED_NAME_CANRATE)
  private Boolean canrate = null;

  public static final String SERIALIZED_NAME_CANVIEWAGGREGATE = "canviewaggregate";
  @SerializedName(SERIALIZED_NAME_CANVIEWAGGREGATE)
  private Boolean canviewaggregate = null;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count = null;

  public static final String SERIALIZED_NAME_ITEMID = "itemid";
  @SerializedName(SERIALIZED_NAME_ITEMID)
  private Integer itemid = null;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private Integer rating = null;

  public static final String SERIALIZED_NAME_SCALEID = "scaleid";
  @SerializedName(SERIALIZED_NAME_SCALEID)
  private Integer scaleid = null;

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid = null;

  public ModDataGetEntry200ResponseRatinginfoRatingsInner() {
  }

  public ModDataGetEntry200ResponseRatinginfoRatingsInner aggregate(BigDecimal aggregate) {
    this.aggregate = aggregate;
    return this;
  }

   /**
   * Aggregated ratings grade.
   * @return aggregate
  **/
  @javax.annotation.Nullable
  public BigDecimal getAggregate() {
    return aggregate;
  }

  public void setAggregate(BigDecimal aggregate) {
    this.aggregate = aggregate;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner aggregatelabel(String aggregatelabel) {
    this.aggregatelabel = aggregatelabel;
    return this;
  }

   /**
   * The aggregation label.
   * @return aggregatelabel
  **/
  @javax.annotation.Nullable
  public String getAggregatelabel() {
    return aggregatelabel;
  }

  public void setAggregatelabel(String aggregatelabel) {
    this.aggregatelabel = aggregatelabel;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner aggregatestr(String aggregatestr) {
    this.aggregatestr = aggregatestr;
    return this;
  }

   /**
   * Aggregated ratings as string.
   * @return aggregatestr
  **/
  @javax.annotation.Nullable
  public String getAggregatestr() {
    return aggregatestr;
  }

  public void setAggregatestr(String aggregatestr) {
    this.aggregatestr = aggregatestr;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner canrate(Boolean canrate) {
    this.canrate = canrate;
    return this;
  }

   /**
   * Whether the user can rate the item.
   * @return canrate
  **/
  @javax.annotation.Nullable
  public Boolean getCanrate() {
    return canrate;
  }

  public void setCanrate(Boolean canrate) {
    this.canrate = canrate;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner canviewaggregate(Boolean canviewaggregate) {
    this.canviewaggregate = canviewaggregate;
    return this;
  }

   /**
   * Whether the user can view the aggregated grade.
   * @return canviewaggregate
  **/
  @javax.annotation.Nullable
  public Boolean getCanviewaggregate() {
    return canviewaggregate;
  }

  public void setCanviewaggregate(Boolean canviewaggregate) {
    this.canviewaggregate = canviewaggregate;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Ratings count (used when aggregating).
   * @return count
  **/
  @javax.annotation.Nullable
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner itemid(Integer itemid) {
    this.itemid = itemid;
    return this;
  }

   /**
   * Item id.
   * @return itemid
  **/
  @javax.annotation.Nullable
  public Integer getItemid() {
    return itemid;
  }

  public void setItemid(Integer itemid) {
    this.itemid = itemid;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner rating(Integer rating) {
    this.rating = rating;
    return this;
  }

   /**
   * The rating the user gave.
   * @return rating
  **/
  @javax.annotation.Nullable
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner scaleid(Integer scaleid) {
    this.scaleid = scaleid;
    return this;
  }

   /**
   * Scale id.
   * @return scaleid
  **/
  @javax.annotation.Nullable
  public Integer getScaleid() {
    return scaleid;
  }

  public void setScaleid(Integer scaleid) {
    this.scaleid = scaleid;
  }


  public ModDataGetEntry200ResponseRatinginfoRatingsInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * User who rated id.
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModDataGetEntry200ResponseRatinginfoRatingsInner modDataGetEntry200ResponseRatinginfoRatingsInner = (ModDataGetEntry200ResponseRatinginfoRatingsInner) o;
    return Objects.equals(this.aggregate, modDataGetEntry200ResponseRatinginfoRatingsInner.aggregate) &&
        Objects.equals(this.aggregatelabel, modDataGetEntry200ResponseRatinginfoRatingsInner.aggregatelabel) &&
        Objects.equals(this.aggregatestr, modDataGetEntry200ResponseRatinginfoRatingsInner.aggregatestr) &&
        Objects.equals(this.canrate, modDataGetEntry200ResponseRatinginfoRatingsInner.canrate) &&
        Objects.equals(this.canviewaggregate, modDataGetEntry200ResponseRatinginfoRatingsInner.canviewaggregate) &&
        Objects.equals(this.count, modDataGetEntry200ResponseRatinginfoRatingsInner.count) &&
        Objects.equals(this.itemid, modDataGetEntry200ResponseRatinginfoRatingsInner.itemid) &&
        Objects.equals(this.rating, modDataGetEntry200ResponseRatinginfoRatingsInner.rating) &&
        Objects.equals(this.scaleid, modDataGetEntry200ResponseRatinginfoRatingsInner.scaleid) &&
        Objects.equals(this.userid, modDataGetEntry200ResponseRatinginfoRatingsInner.userid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregate, aggregatelabel, aggregatestr, canrate, canviewaggregate, count, itemid, rating, scaleid, userid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModDataGetEntry200ResponseRatinginfoRatingsInner {\n");
    sb.append("    aggregate: ").append(toIndentedString(aggregate)).append("\n");
    sb.append("    aggregatelabel: ").append(toIndentedString(aggregatelabel)).append("\n");
    sb.append("    aggregatestr: ").append(toIndentedString(aggregatestr)).append("\n");
    sb.append("    canrate: ").append(toIndentedString(canrate)).append("\n");
    sb.append("    canviewaggregate: ").append(toIndentedString(canviewaggregate)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    itemid: ").append(toIndentedString(itemid)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    scaleid: ").append(toIndentedString(scaleid)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aggregate");
    openapiFields.add("aggregatelabel");
    openapiFields.add("aggregatestr");
    openapiFields.add("canrate");
    openapiFields.add("canviewaggregate");
    openapiFields.add("count");
    openapiFields.add("itemid");
    openapiFields.add("rating");
    openapiFields.add("scaleid");
    openapiFields.add("userid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModDataGetEntry200ResponseRatinginfoRatingsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModDataGetEntry200ResponseRatinginfoRatingsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModDataGetEntry200ResponseRatinginfoRatingsInner is not found in the empty JSON string", ModDataGetEntry200ResponseRatinginfoRatingsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModDataGetEntry200ResponseRatinginfoRatingsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModDataGetEntry200ResponseRatinginfoRatingsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aggregatelabel") != null && !jsonObj.get("aggregatelabel").isJsonNull()) && !jsonObj.get("aggregatelabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aggregatelabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aggregatelabel").toString()));
      }
      if ((jsonObj.get("aggregatestr") != null && !jsonObj.get("aggregatestr").isJsonNull()) && !jsonObj.get("aggregatestr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aggregatestr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aggregatestr").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModDataGetEntry200ResponseRatinginfoRatingsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModDataGetEntry200ResponseRatinginfoRatingsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModDataGetEntry200ResponseRatinginfoRatingsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModDataGetEntry200ResponseRatinginfoRatingsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModDataGetEntry200ResponseRatinginfoRatingsInner>() {
           @Override
           public void write(JsonWriter out, ModDataGetEntry200ResponseRatinginfoRatingsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModDataGetEntry200ResponseRatinginfoRatingsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModDataGetEntry200ResponseRatinginfoRatingsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModDataGetEntry200ResponseRatinginfoRatingsInner
  * @throws IOException if the JSON string is invalid with respect to ModDataGetEntry200ResponseRatinginfoRatingsInner
  */
  public static ModDataGetEntry200ResponseRatinginfoRatingsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModDataGetEntry200ResponseRatinginfoRatingsInner.class);
  }

 /**
  * Convert an instance of ModDataGetEntry200ResponseRatinginfoRatingsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

