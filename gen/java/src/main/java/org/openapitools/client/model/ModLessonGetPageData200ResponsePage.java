/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModLessonGetPageData200ResponsePage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModLessonGetPageData200ResponsePage {
  public static final String SERIALIZED_NAME_CONTENTS = "contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private String contents = "null";

  public static final String SERIALIZED_NAME_CONTENTSFORMAT = "contentsformat";
  @SerializedName(SERIALIZED_NAME_CONTENTSFORMAT)
  private Integer contentsformat = null;

  public static final String SERIALIZED_NAME_DISPLAY = "display";
  @SerializedName(SERIALIZED_NAME_DISPLAY)
  private Integer display = null;

  public static final String SERIALIZED_NAME_DISPLAYINMENUBLOCK = "displayinmenublock";
  @SerializedName(SERIALIZED_NAME_DISPLAYINMENUBLOCK)
  private Boolean displayinmenublock = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_LAYOUT = "layout";
  @SerializedName(SERIALIZED_NAME_LAYOUT)
  private Integer layout = null;

  public static final String SERIALIZED_NAME_LESSONID = "lessonid";
  @SerializedName(SERIALIZED_NAME_LESSONID)
  private Integer lessonid = null;

  public static final String SERIALIZED_NAME_NEXTPAGEID = "nextpageid";
  @SerializedName(SERIALIZED_NAME_NEXTPAGEID)
  private Integer nextpageid = null;

  public static final String SERIALIZED_NAME_PREVPAGEID = "prevpageid";
  @SerializedName(SERIALIZED_NAME_PREVPAGEID)
  private Integer prevpageid = null;

  public static final String SERIALIZED_NAME_QOPTION = "qoption";
  @SerializedName(SERIALIZED_NAME_QOPTION)
  private Integer qoption = null;

  public static final String SERIALIZED_NAME_QTYPE = "qtype";
  @SerializedName(SERIALIZED_NAME_QTYPE)
  private Integer qtype = null;

  public static final String SERIALIZED_NAME_TIMECREATED = "timecreated";
  @SerializedName(SERIALIZED_NAME_TIMECREATED)
  private Integer timecreated = null;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified = null;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title = "null";

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type = null;

  public static final String SERIALIZED_NAME_TYPEID = "typeid";
  @SerializedName(SERIALIZED_NAME_TYPEID)
  private Integer typeid = null;

  public static final String SERIALIZED_NAME_TYPESTRING = "typestring";
  @SerializedName(SERIALIZED_NAME_TYPESTRING)
  private String typestring = "null";

  public ModLessonGetPageData200ResponsePage() {
  }

  public ModLessonGetPageData200ResponsePage contents(String contents) {
    this.contents = contents;
    return this;
  }

   /**
   * The contents of this page
   * @return contents
  **/
  @javax.annotation.Nullable
  public String getContents() {
    return contents;
  }

  public void setContents(String contents) {
    this.contents = contents;
  }


  public ModLessonGetPageData200ResponsePage contentsformat(Integer contentsformat) {
    this.contentsformat = contentsformat;
    return this;
  }

   /**
   * contents format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return contentsformat
  **/
  @javax.annotation.Nullable
  public Integer getContentsformat() {
    return contentsformat;
  }

  public void setContentsformat(Integer contentsformat) {
    this.contentsformat = contentsformat;
  }


  public ModLessonGetPageData200ResponsePage display(Integer display) {
    this.display = display;
    return this;
  }

   /**
   * Used to record page specific display selections
   * @return display
  **/
  @javax.annotation.Nonnull
  public Integer getDisplay() {
    return display;
  }

  public void setDisplay(Integer display) {
    this.display = display;
  }


  public ModLessonGetPageData200ResponsePage displayinmenublock(Boolean displayinmenublock) {
    this.displayinmenublock = displayinmenublock;
    return this;
  }

   /**
   * Toggles display in the left menu block
   * @return displayinmenublock
  **/
  @javax.annotation.Nonnull
  public Boolean getDisplayinmenublock() {
    return displayinmenublock;
  }

  public void setDisplayinmenublock(Boolean displayinmenublock) {
    this.displayinmenublock = displayinmenublock;
  }


  public ModLessonGetPageData200ResponsePage id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The id of this lesson page
   * @return id
  **/
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModLessonGetPageData200ResponsePage layout(Integer layout) {
    this.layout = layout;
    return this;
  }

   /**
   * Used to record page specific layout selections
   * @return layout
  **/
  @javax.annotation.Nonnull
  public Integer getLayout() {
    return layout;
  }

  public void setLayout(Integer layout) {
    this.layout = layout;
  }


  public ModLessonGetPageData200ResponsePage lessonid(Integer lessonid) {
    this.lessonid = lessonid;
    return this;
  }

   /**
   * The id of the lesson this page belongs to
   * @return lessonid
  **/
  @javax.annotation.Nonnull
  public Integer getLessonid() {
    return lessonid;
  }

  public void setLessonid(Integer lessonid) {
    this.lessonid = lessonid;
  }


  public ModLessonGetPageData200ResponsePage nextpageid(Integer nextpageid) {
    this.nextpageid = nextpageid;
    return this;
  }

   /**
   * The id of the next page in the page sequence
   * @return nextpageid
  **/
  @javax.annotation.Nonnull
  public Integer getNextpageid() {
    return nextpageid;
  }

  public void setNextpageid(Integer nextpageid) {
    this.nextpageid = nextpageid;
  }


  public ModLessonGetPageData200ResponsePage prevpageid(Integer prevpageid) {
    this.prevpageid = prevpageid;
    return this;
  }

   /**
   * The id of the page before this one
   * @return prevpageid
  **/
  @javax.annotation.Nonnull
  public Integer getPrevpageid() {
    return prevpageid;
  }

  public void setPrevpageid(Integer prevpageid) {
    this.prevpageid = prevpageid;
  }


  public ModLessonGetPageData200ResponsePage qoption(Integer qoption) {
    this.qoption = qoption;
    return this;
  }

   /**
   * Used to record page type specific options
   * @return qoption
  **/
  @javax.annotation.Nonnull
  public Integer getQoption() {
    return qoption;
  }

  public void setQoption(Integer qoption) {
    this.qoption = qoption;
  }


  public ModLessonGetPageData200ResponsePage qtype(Integer qtype) {
    this.qtype = qtype;
    return this;
  }

   /**
   * Identifies the page type of this page
   * @return qtype
  **/
  @javax.annotation.Nonnull
  public Integer getQtype() {
    return qtype;
  }

  public void setQtype(Integer qtype) {
    this.qtype = qtype;
  }


  public ModLessonGetPageData200ResponsePage timecreated(Integer timecreated) {
    this.timecreated = timecreated;
    return this;
  }

   /**
   * Timestamp for when the page was created
   * @return timecreated
  **/
  @javax.annotation.Nonnull
  public Integer getTimecreated() {
    return timecreated;
  }

  public void setTimecreated(Integer timecreated) {
    this.timecreated = timecreated;
  }


  public ModLessonGetPageData200ResponsePage timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * Timestamp for when the page was last modified
   * @return timemodified
  **/
  @javax.annotation.Nonnull
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public ModLessonGetPageData200ResponsePage title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of this page
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ModLessonGetPageData200ResponsePage type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the page [question | structure]
   * @return type
  **/
  @javax.annotation.Nonnull
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public ModLessonGetPageData200ResponsePage typeid(Integer typeid) {
    this.typeid = typeid;
    return this;
  }

   /**
   * The unique identifier for the page type
   * @return typeid
  **/
  @javax.annotation.Nonnull
  public Integer getTypeid() {
    return typeid;
  }

  public void setTypeid(Integer typeid) {
    this.typeid = typeid;
  }


  public ModLessonGetPageData200ResponsePage typestring(String typestring) {
    this.typestring = typestring;
    return this;
  }

   /**
   * The string that describes this page type
   * @return typestring
  **/
  @javax.annotation.Nonnull
  public String getTypestring() {
    return typestring;
  }

  public void setTypestring(String typestring) {
    this.typestring = typestring;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModLessonGetPageData200ResponsePage modLessonGetPageData200ResponsePage = (ModLessonGetPageData200ResponsePage) o;
    return Objects.equals(this.contents, modLessonGetPageData200ResponsePage.contents) &&
        Objects.equals(this.contentsformat, modLessonGetPageData200ResponsePage.contentsformat) &&
        Objects.equals(this.display, modLessonGetPageData200ResponsePage.display) &&
        Objects.equals(this.displayinmenublock, modLessonGetPageData200ResponsePage.displayinmenublock) &&
        Objects.equals(this.id, modLessonGetPageData200ResponsePage.id) &&
        Objects.equals(this.layout, modLessonGetPageData200ResponsePage.layout) &&
        Objects.equals(this.lessonid, modLessonGetPageData200ResponsePage.lessonid) &&
        Objects.equals(this.nextpageid, modLessonGetPageData200ResponsePage.nextpageid) &&
        Objects.equals(this.prevpageid, modLessonGetPageData200ResponsePage.prevpageid) &&
        Objects.equals(this.qoption, modLessonGetPageData200ResponsePage.qoption) &&
        Objects.equals(this.qtype, modLessonGetPageData200ResponsePage.qtype) &&
        Objects.equals(this.timecreated, modLessonGetPageData200ResponsePage.timecreated) &&
        Objects.equals(this.timemodified, modLessonGetPageData200ResponsePage.timemodified) &&
        Objects.equals(this.title, modLessonGetPageData200ResponsePage.title) &&
        Objects.equals(this.type, modLessonGetPageData200ResponsePage.type) &&
        Objects.equals(this.typeid, modLessonGetPageData200ResponsePage.typeid) &&
        Objects.equals(this.typestring, modLessonGetPageData200ResponsePage.typestring);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contents, contentsformat, display, displayinmenublock, id, layout, lessonid, nextpageid, prevpageid, qoption, qtype, timecreated, timemodified, title, type, typeid, typestring);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModLessonGetPageData200ResponsePage {\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    contentsformat: ").append(toIndentedString(contentsformat)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    displayinmenublock: ").append(toIndentedString(displayinmenublock)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    lessonid: ").append(toIndentedString(lessonid)).append("\n");
    sb.append("    nextpageid: ").append(toIndentedString(nextpageid)).append("\n");
    sb.append("    prevpageid: ").append(toIndentedString(prevpageid)).append("\n");
    sb.append("    qoption: ").append(toIndentedString(qoption)).append("\n");
    sb.append("    qtype: ").append(toIndentedString(qtype)).append("\n");
    sb.append("    timecreated: ").append(toIndentedString(timecreated)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeid: ").append(toIndentedString(typeid)).append("\n");
    sb.append("    typestring: ").append(toIndentedString(typestring)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contents");
    openapiFields.add("contentsformat");
    openapiFields.add("display");
    openapiFields.add("displayinmenublock");
    openapiFields.add("id");
    openapiFields.add("layout");
    openapiFields.add("lessonid");
    openapiFields.add("nextpageid");
    openapiFields.add("prevpageid");
    openapiFields.add("qoption");
    openapiFields.add("qtype");
    openapiFields.add("timecreated");
    openapiFields.add("timemodified");
    openapiFields.add("title");
    openapiFields.add("type");
    openapiFields.add("typeid");
    openapiFields.add("typestring");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("display");
    openapiRequiredFields.add("displayinmenublock");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("layout");
    openapiRequiredFields.add("lessonid");
    openapiRequiredFields.add("nextpageid");
    openapiRequiredFields.add("prevpageid");
    openapiRequiredFields.add("qoption");
    openapiRequiredFields.add("qtype");
    openapiRequiredFields.add("timecreated");
    openapiRequiredFields.add("timemodified");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("typeid");
    openapiRequiredFields.add("typestring");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModLessonGetPageData200ResponsePage
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModLessonGetPageData200ResponsePage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModLessonGetPageData200ResponsePage is not found in the empty JSON string", ModLessonGetPageData200ResponsePage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModLessonGetPageData200ResponsePage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModLessonGetPageData200ResponsePage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModLessonGetPageData200ResponsePage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contents") != null && !jsonObj.get("contents").isJsonNull()) && !jsonObj.get("contents").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contents` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contents").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("typestring").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typestring` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typestring").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModLessonGetPageData200ResponsePage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModLessonGetPageData200ResponsePage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModLessonGetPageData200ResponsePage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModLessonGetPageData200ResponsePage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModLessonGetPageData200ResponsePage>() {
           @Override
           public void write(JsonWriter out, ModLessonGetPageData200ResponsePage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModLessonGetPageData200ResponsePage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModLessonGetPageData200ResponsePage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModLessonGetPageData200ResponsePage
  * @throws IOException if the JSON string is invalid with respect to ModLessonGetPageData200ResponsePage
  */
  public static ModLessonGetPageData200ResponsePage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModLessonGetPageData200ResponsePage.class);
  }

 /**
  * Convert an instance of ModLessonGetPageData200ResponsePage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

