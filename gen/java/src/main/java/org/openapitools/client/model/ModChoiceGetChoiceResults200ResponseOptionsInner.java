/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * Options
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModChoiceGetChoiceResults200ResponseOptionsInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MAXANSWER = "maxanswer";
  @SerializedName(SERIALIZED_NAME_MAXANSWER)
  private Integer maxanswer;

  public static final String SERIALIZED_NAME_NUMBEROFUSER = "numberofuser";
  @SerializedName(SERIALIZED_NAME_NUMBEROFUSER)
  private Integer numberofuser = null;

  public static final String SERIALIZED_NAME_PERCENTAGEAMOUNT = "percentageamount";
  @SerializedName(SERIALIZED_NAME_PERCENTAGEAMOUNT)
  private BigDecimal percentageamount = new BigDecimal("null");

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_USERRESPONSES = "userresponses";
  @SerializedName(SERIALIZED_NAME_USERRESPONSES)
  private List<ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner> userresponses = new ArrayList<>();

  public ModChoiceGetChoiceResults200ResponseOptionsInner() {
  }

  public ModChoiceGetChoiceResults200ResponseOptionsInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * choice instance id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModChoiceGetChoiceResults200ResponseOptionsInner maxanswer(Integer maxanswer) {
    this.maxanswer = maxanswer;
    return this;
  }

   /**
   * maximum number of answers
   * @return maxanswer
  **/
  @javax.annotation.Nullable
  public Integer getMaxanswer() {
    return maxanswer;
  }

  public void setMaxanswer(Integer maxanswer) {
    this.maxanswer = maxanswer;
  }


  public ModChoiceGetChoiceResults200ResponseOptionsInner numberofuser(Integer numberofuser) {
    this.numberofuser = numberofuser;
    return this;
  }

   /**
   * number of users answers
   * @return numberofuser
  **/
  @javax.annotation.Nullable
  public Integer getNumberofuser() {
    return numberofuser;
  }

  public void setNumberofuser(Integer numberofuser) {
    this.numberofuser = numberofuser;
  }


  public ModChoiceGetChoiceResults200ResponseOptionsInner percentageamount(BigDecimal percentageamount) {
    this.percentageamount = percentageamount;
    return this;
  }

   /**
   * percentage of users answers
   * @return percentageamount
  **/
  @javax.annotation.Nullable
  public BigDecimal getPercentageamount() {
    return percentageamount;
  }

  public void setPercentageamount(BigDecimal percentageamount) {
    this.percentageamount = percentageamount;
  }


  public ModChoiceGetChoiceResults200ResponseOptionsInner text(String text) {
    this.text = text;
    return this;
  }

   /**
   * text of the choice
   * @return text
  **/
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  public ModChoiceGetChoiceResults200ResponseOptionsInner userresponses(List<ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner> userresponses) {
    this.userresponses = userresponses;
    return this;
  }

  public ModChoiceGetChoiceResults200ResponseOptionsInner addUserresponsesItem(ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner userresponsesItem) {
    if (this.userresponses == null) {
      this.userresponses = new ArrayList<>();
    }
    this.userresponses.add(userresponsesItem);
    return this;
  }

   /**
   * Get userresponses
   * @return userresponses
  **/
  @javax.annotation.Nullable
  public List<ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner> getUserresponses() {
    return userresponses;
  }

  public void setUserresponses(List<ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner> userresponses) {
    this.userresponses = userresponses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModChoiceGetChoiceResults200ResponseOptionsInner modChoiceGetChoiceResults200ResponseOptionsInner = (ModChoiceGetChoiceResults200ResponseOptionsInner) o;
    return Objects.equals(this.id, modChoiceGetChoiceResults200ResponseOptionsInner.id) &&
        Objects.equals(this.maxanswer, modChoiceGetChoiceResults200ResponseOptionsInner.maxanswer) &&
        Objects.equals(this.numberofuser, modChoiceGetChoiceResults200ResponseOptionsInner.numberofuser) &&
        Objects.equals(this.percentageamount, modChoiceGetChoiceResults200ResponseOptionsInner.percentageamount) &&
        Objects.equals(this.text, modChoiceGetChoiceResults200ResponseOptionsInner.text) &&
        Objects.equals(this.userresponses, modChoiceGetChoiceResults200ResponseOptionsInner.userresponses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, maxanswer, numberofuser, percentageamount, text, userresponses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModChoiceGetChoiceResults200ResponseOptionsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxanswer: ").append(toIndentedString(maxanswer)).append("\n");
    sb.append("    numberofuser: ").append(toIndentedString(numberofuser)).append("\n");
    sb.append("    percentageamount: ").append(toIndentedString(percentageamount)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    userresponses: ").append(toIndentedString(userresponses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("maxanswer");
    openapiFields.add("numberofuser");
    openapiFields.add("percentageamount");
    openapiFields.add("text");
    openapiFields.add("userresponses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModChoiceGetChoiceResults200ResponseOptionsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModChoiceGetChoiceResults200ResponseOptionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModChoiceGetChoiceResults200ResponseOptionsInner is not found in the empty JSON string", ModChoiceGetChoiceResults200ResponseOptionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModChoiceGetChoiceResults200ResponseOptionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModChoiceGetChoiceResults200ResponseOptionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if (jsonObj.get("userresponses") != null && !jsonObj.get("userresponses").isJsonNull()) {
        JsonArray jsonArrayuserresponses = jsonObj.getAsJsonArray("userresponses");
        if (jsonArrayuserresponses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userresponses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userresponses` to be an array in the JSON string but got `%s`", jsonObj.get("userresponses").toString()));
          }

          // validate the optional field `userresponses` (array)
          for (int i = 0; i < jsonArrayuserresponses.size(); i++) {
            ModChoiceGetChoiceResults200ResponseOptionsInnerUserresponsesInner.validateJsonElement(jsonArrayuserresponses.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModChoiceGetChoiceResults200ResponseOptionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModChoiceGetChoiceResults200ResponseOptionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModChoiceGetChoiceResults200ResponseOptionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModChoiceGetChoiceResults200ResponseOptionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModChoiceGetChoiceResults200ResponseOptionsInner>() {
           @Override
           public void write(JsonWriter out, ModChoiceGetChoiceResults200ResponseOptionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModChoiceGetChoiceResults200ResponseOptionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModChoiceGetChoiceResults200ResponseOptionsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModChoiceGetChoiceResults200ResponseOptionsInner
  * @throws IOException if the JSON string is invalid with respect to ModChoiceGetChoiceResults200ResponseOptionsInner
  */
  public static ModChoiceGetChoiceResults200ResponseOptionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModChoiceGetChoiceResults200ResponseOptionsInner.class);
  }

 /**
  * Convert an instance of ModChoiceGetChoiceResults200ResponseOptionsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

