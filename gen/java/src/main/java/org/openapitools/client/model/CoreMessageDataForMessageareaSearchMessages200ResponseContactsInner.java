/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner {
  public static final String SERIALIZED_NAME_CONVERSATIONID = "conversationid";
  @SerializedName(SERIALIZED_NAME_CONVERSATIONID)
  private Integer conversationid = null;

  public static final String SERIALIZED_NAME_FULLNAME = "fullname";
  @SerializedName(SERIALIZED_NAME_FULLNAME)
  private String fullname = "null";

  public static final String SERIALIZED_NAME_ISBLOCKED = "isblocked";
  @SerializedName(SERIALIZED_NAME_ISBLOCKED)
  private Boolean isblocked = null;

  public static final String SERIALIZED_NAME_ISMESSAGING = "ismessaging";
  @SerializedName(SERIALIZED_NAME_ISMESSAGING)
  private Boolean ismessaging = null;

  public static final String SERIALIZED_NAME_ISONLINE = "isonline";
  @SerializedName(SERIALIZED_NAME_ISONLINE)
  private Boolean isonline = null;

  public static final String SERIALIZED_NAME_ISREAD = "isread";
  @SerializedName(SERIALIZED_NAME_ISREAD)
  private Boolean isread = null;

  public static final String SERIALIZED_NAME_LASTMESSAGE = "lastmessage";
  @SerializedName(SERIALIZED_NAME_LASTMESSAGE)
  private String lastmessage = "null";

  public static final String SERIALIZED_NAME_LASTMESSAGEDATE = "lastmessagedate";
  @SerializedName(SERIALIZED_NAME_LASTMESSAGEDATE)
  private Integer lastmessagedate = null;

  public static final String SERIALIZED_NAME_MESSAGEID = "messageid";
  @SerializedName(SERIALIZED_NAME_MESSAGEID)
  private Integer messageid = null;

  public static final String SERIALIZED_NAME_PROFILEIMAGEURL = "profileimageurl";
  @SerializedName(SERIALIZED_NAME_PROFILEIMAGEURL)
  private String profileimageurl = "null";

  public static final String SERIALIZED_NAME_PROFILEIMAGEURLSMALL = "profileimageurlsmall";
  @SerializedName(SERIALIZED_NAME_PROFILEIMAGEURLSMALL)
  private String profileimageurlsmall = "null";

  public static final String SERIALIZED_NAME_SENTFROMCURRENTUSER = "sentfromcurrentuser";
  @SerializedName(SERIALIZED_NAME_SENTFROMCURRENTUSER)
  private Boolean sentfromcurrentuser = null;

  public static final String SERIALIZED_NAME_SHOWONLINESTATUS = "showonlinestatus";
  @SerializedName(SERIALIZED_NAME_SHOWONLINESTATUS)
  private Boolean showonlinestatus = null;

  public static final String SERIALIZED_NAME_UNREADCOUNT = "unreadcount";
  @SerializedName(SERIALIZED_NAME_UNREADCOUNT)
  private Integer unreadcount = null;

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid = null;

  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner() {
  }

  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner conversationid(Integer conversationid) {
    this.conversationid = conversationid;
    return this;
  }

   /**
   * The id of the conversation
   * @return conversationid
  **/
  @javax.annotation.Nullable
  public Integer getConversationid() {
    return conversationid;
  }

  public void setConversationid(Integer conversationid) {
    this.conversationid = conversationid;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

   /**
   * The user&#39;s name
   * @return fullname
  **/
  @javax.annotation.Nullable
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner isblocked(Boolean isblocked) {
    this.isblocked = isblocked;
    return this;
  }

   /**
   * If the user has been blocked
   * @return isblocked
  **/
  @javax.annotation.Nullable
  public Boolean getIsblocked() {
    return isblocked;
  }

  public void setIsblocked(Boolean isblocked) {
    this.isblocked = isblocked;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner ismessaging(Boolean ismessaging) {
    this.ismessaging = ismessaging;
    return this;
  }

   /**
   * If we are messaging the user
   * @return ismessaging
  **/
  @javax.annotation.Nullable
  public Boolean getIsmessaging() {
    return ismessaging;
  }

  public void setIsmessaging(Boolean ismessaging) {
    this.ismessaging = ismessaging;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner isonline(Boolean isonline) {
    this.isonline = isonline;
    return this;
  }

   /**
   * The user&#39;s online status
   * @return isonline
  **/
  @javax.annotation.Nullable
  public Boolean getIsonline() {
    return isonline;
  }

  public void setIsonline(Boolean isonline) {
    this.isonline = isonline;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner isread(Boolean isread) {
    this.isread = isread;
    return this;
  }

   /**
   * If the user has read the message
   * @return isread
  **/
  @javax.annotation.Nullable
  public Boolean getIsread() {
    return isread;
  }

  public void setIsread(Boolean isread) {
    this.isread = isread;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner lastmessage(String lastmessage) {
    this.lastmessage = lastmessage;
    return this;
  }

   /**
   * The user&#39;s last message
   * @return lastmessage
  **/
  @javax.annotation.Nullable
  public String getLastmessage() {
    return lastmessage;
  }

  public void setLastmessage(String lastmessage) {
    this.lastmessage = lastmessage;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner lastmessagedate(Integer lastmessagedate) {
    this.lastmessagedate = lastmessagedate;
    return this;
  }

   /**
   * Timestamp for last message
   * @return lastmessagedate
  **/
  @javax.annotation.Nullable
  public Integer getLastmessagedate() {
    return lastmessagedate;
  }

  public void setLastmessagedate(Integer lastmessagedate) {
    this.lastmessagedate = lastmessagedate;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner messageid(Integer messageid) {
    this.messageid = messageid;
    return this;
  }

   /**
   * The unique search message id
   * @return messageid
  **/
  @javax.annotation.Nullable
  public Integer getMessageid() {
    return messageid;
  }

  public void setMessageid(Integer messageid) {
    this.messageid = messageid;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner profileimageurl(String profileimageurl) {
    this.profileimageurl = profileimageurl;
    return this;
  }

   /**
   * User picture URL
   * @return profileimageurl
  **/
  @javax.annotation.Nullable
  public String getProfileimageurl() {
    return profileimageurl;
  }

  public void setProfileimageurl(String profileimageurl) {
    this.profileimageurl = profileimageurl;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner profileimageurlsmall(String profileimageurlsmall) {
    this.profileimageurlsmall = profileimageurlsmall;
    return this;
  }

   /**
   * Small user picture URL
   * @return profileimageurlsmall
  **/
  @javax.annotation.Nullable
  public String getProfileimageurlsmall() {
    return profileimageurlsmall;
  }

  public void setProfileimageurlsmall(String profileimageurlsmall) {
    this.profileimageurlsmall = profileimageurlsmall;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner sentfromcurrentuser(Boolean sentfromcurrentuser) {
    this.sentfromcurrentuser = sentfromcurrentuser;
    return this;
  }

   /**
   * Was the last message sent from the current user?
   * @return sentfromcurrentuser
  **/
  @javax.annotation.Nullable
  public Boolean getSentfromcurrentuser() {
    return sentfromcurrentuser;
  }

  public void setSentfromcurrentuser(Boolean sentfromcurrentuser) {
    this.sentfromcurrentuser = sentfromcurrentuser;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner showonlinestatus(Boolean showonlinestatus) {
    this.showonlinestatus = showonlinestatus;
    return this;
  }

   /**
   * Show the user&#39;s online status?
   * @return showonlinestatus
  **/
  @javax.annotation.Nullable
  public Boolean getShowonlinestatus() {
    return showonlinestatus;
  }

  public void setShowonlinestatus(Boolean showonlinestatus) {
    this.showonlinestatus = showonlinestatus;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner unreadcount(Integer unreadcount) {
    this.unreadcount = unreadcount;
    return this;
  }

   /**
   * The number of unread messages in this conversation
   * @return unreadcount
  **/
  @javax.annotation.Nullable
  public Integer getUnreadcount() {
    return unreadcount;
  }

  public void setUnreadcount(Integer unreadcount) {
    this.unreadcount = unreadcount;
  }


  public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * The user&#39;s id
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner coreMessageDataForMessageareaSearchMessages200ResponseContactsInner = (CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner) o;
    return Objects.equals(this.conversationid, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.conversationid) &&
        Objects.equals(this.fullname, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.fullname) &&
        Objects.equals(this.isblocked, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.isblocked) &&
        Objects.equals(this.ismessaging, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.ismessaging) &&
        Objects.equals(this.isonline, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.isonline) &&
        Objects.equals(this.isread, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.isread) &&
        Objects.equals(this.lastmessage, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.lastmessage) &&
        Objects.equals(this.lastmessagedate, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.lastmessagedate) &&
        Objects.equals(this.messageid, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.messageid) &&
        Objects.equals(this.profileimageurl, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.profileimageurl) &&
        Objects.equals(this.profileimageurlsmall, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.profileimageurlsmall) &&
        Objects.equals(this.sentfromcurrentuser, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.sentfromcurrentuser) &&
        Objects.equals(this.showonlinestatus, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.showonlinestatus) &&
        Objects.equals(this.unreadcount, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.unreadcount) &&
        Objects.equals(this.userid, coreMessageDataForMessageareaSearchMessages200ResponseContactsInner.userid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversationid, fullname, isblocked, ismessaging, isonline, isread, lastmessage, lastmessagedate, messageid, profileimageurl, profileimageurlsmall, sentfromcurrentuser, showonlinestatus, unreadcount, userid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner {\n");
    sb.append("    conversationid: ").append(toIndentedString(conversationid)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    isblocked: ").append(toIndentedString(isblocked)).append("\n");
    sb.append("    ismessaging: ").append(toIndentedString(ismessaging)).append("\n");
    sb.append("    isonline: ").append(toIndentedString(isonline)).append("\n");
    sb.append("    isread: ").append(toIndentedString(isread)).append("\n");
    sb.append("    lastmessage: ").append(toIndentedString(lastmessage)).append("\n");
    sb.append("    lastmessagedate: ").append(toIndentedString(lastmessagedate)).append("\n");
    sb.append("    messageid: ").append(toIndentedString(messageid)).append("\n");
    sb.append("    profileimageurl: ").append(toIndentedString(profileimageurl)).append("\n");
    sb.append("    profileimageurlsmall: ").append(toIndentedString(profileimageurlsmall)).append("\n");
    sb.append("    sentfromcurrentuser: ").append(toIndentedString(sentfromcurrentuser)).append("\n");
    sb.append("    showonlinestatus: ").append(toIndentedString(showonlinestatus)).append("\n");
    sb.append("    unreadcount: ").append(toIndentedString(unreadcount)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("conversationid");
    openapiFields.add("fullname");
    openapiFields.add("isblocked");
    openapiFields.add("ismessaging");
    openapiFields.add("isonline");
    openapiFields.add("isread");
    openapiFields.add("lastmessage");
    openapiFields.add("lastmessagedate");
    openapiFields.add("messageid");
    openapiFields.add("profileimageurl");
    openapiFields.add("profileimageurlsmall");
    openapiFields.add("sentfromcurrentuser");
    openapiFields.add("showonlinestatus");
    openapiFields.add("unreadcount");
    openapiFields.add("userid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner is not found in the empty JSON string", CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("fullname") != null && !jsonObj.get("fullname").isJsonNull()) && !jsonObj.get("fullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullname").toString()));
      }
      if ((jsonObj.get("lastmessage") != null && !jsonObj.get("lastmessage").isJsonNull()) && !jsonObj.get("lastmessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastmessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastmessage").toString()));
      }
      if ((jsonObj.get("profileimageurl") != null && !jsonObj.get("profileimageurl").isJsonNull()) && !jsonObj.get("profileimageurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileimageurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileimageurl").toString()));
      }
      if ((jsonObj.get("profileimageurlsmall") != null && !jsonObj.get("profileimageurlsmall").isJsonNull()) && !jsonObj.get("profileimageurlsmall").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileimageurlsmall` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileimageurlsmall").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner>() {
           @Override
           public void write(JsonWriter out, CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
  * @throws IOException if the JSON string is invalid with respect to CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner
  */
  public static CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner.class);
  }

 /**
  * Convert an instance of CoreMessageDataForMessageareaSearchMessages200ResponseContactsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

