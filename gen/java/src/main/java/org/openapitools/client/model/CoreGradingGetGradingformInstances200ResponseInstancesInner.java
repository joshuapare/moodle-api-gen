/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CoreGradingGetGradingformInstances200ResponseInstancesInnerGuide;
import org.openapitools.client.model.CoreGradingGetGradingformInstances200ResponseInstancesInnerRubric;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreGradingGetGradingformInstances200ResponseInstancesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreGradingGetGradingformInstances200ResponseInstancesInner {
  public static final String SERIALIZED_NAME_FEEDBACK = "feedback";
  @SerializedName(SERIALIZED_NAME_FEEDBACK)
  private String feedback = "null";

  public static final String SERIALIZED_NAME_FEEDBACKFORMAT = "feedbackformat";
  @SerializedName(SERIALIZED_NAME_FEEDBACKFORMAT)
  private Integer feedbackformat = null;

  public static final String SERIALIZED_NAME_GUIDE = "guide";
  @SerializedName(SERIALIZED_NAME_GUIDE)
  private CoreGradingGetGradingformInstances200ResponseInstancesInnerGuide guide;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_ITEMID = "itemid";
  @SerializedName(SERIALIZED_NAME_ITEMID)
  private Integer itemid;

  public static final String SERIALIZED_NAME_RATERID = "raterid";
  @SerializedName(SERIALIZED_NAME_RATERID)
  private Integer raterid = null;

  public static final String SERIALIZED_NAME_RAWGRADE = "rawgrade";
  @SerializedName(SERIALIZED_NAME_RAWGRADE)
  private String rawgrade = "null";

  public static final String SERIALIZED_NAME_RUBRIC = "rubric";
  @SerializedName(SERIALIZED_NAME_RUBRIC)
  private CoreGradingGetGradingformInstances200ResponseInstancesInnerRubric rubric;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified = null;

  public CoreGradingGetGradingformInstances200ResponseInstancesInner() {
  }

  public CoreGradingGetGradingformInstances200ResponseInstancesInner feedback(String feedback) {
    this.feedback = feedback;
    return this;
  }

   /**
   * feedback
   * @return feedback
  **/
  @javax.annotation.Nullable
  public String getFeedback() {
    return feedback;
  }

  public void setFeedback(String feedback) {
    this.feedback = feedback;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner feedbackformat(Integer feedbackformat) {
    this.feedbackformat = feedbackformat;
    return this;
  }

   /**
   * feedback format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return feedbackformat
  **/
  @javax.annotation.Nullable
  public Integer getFeedbackformat() {
    return feedbackformat;
  }

  public void setFeedbackformat(Integer feedbackformat) {
    this.feedbackformat = feedbackformat;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner guide(CoreGradingGetGradingformInstances200ResponseInstancesInnerGuide guide) {
    this.guide = guide;
    return this;
  }

   /**
   * Get guide
   * @return guide
  **/
  @javax.annotation.Nullable
  public CoreGradingGetGradingformInstances200ResponseInstancesInnerGuide getGuide() {
    return guide;
  }

  public void setGuide(CoreGradingGetGradingformInstances200ResponseInstancesInnerGuide guide) {
    this.guide = guide;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * instance id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner itemid(Integer itemid) {
    this.itemid = itemid;
    return this;
  }

   /**
   * item id
   * @return itemid
  **/
  @javax.annotation.Nullable
  public Integer getItemid() {
    return itemid;
  }

  public void setItemid(Integer itemid) {
    this.itemid = itemid;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner raterid(Integer raterid) {
    this.raterid = raterid;
    return this;
  }

   /**
   * rater id
   * @return raterid
  **/
  @javax.annotation.Nullable
  public Integer getRaterid() {
    return raterid;
  }

  public void setRaterid(Integer raterid) {
    this.raterid = raterid;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner rawgrade(String rawgrade) {
    this.rawgrade = rawgrade;
    return this;
  }

   /**
   * raw grade
   * @return rawgrade
  **/
  @javax.annotation.Nullable
  public String getRawgrade() {
    return rawgrade;
  }

  public void setRawgrade(String rawgrade) {
    this.rawgrade = rawgrade;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner rubric(CoreGradingGetGradingformInstances200ResponseInstancesInnerRubric rubric) {
    this.rubric = rubric;
    return this;
  }

   /**
   * Get rubric
   * @return rubric
  **/
  @javax.annotation.Nullable
  public CoreGradingGetGradingformInstances200ResponseInstancesInnerRubric getRubric() {
    return rubric;
  }

  public void setRubric(CoreGradingGetGradingformInstances200ResponseInstancesInnerRubric rubric) {
    this.rubric = rubric;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * status
   * @return status
  **/
  @javax.annotation.Nullable
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }


  public CoreGradingGetGradingformInstances200ResponseInstancesInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * modified time
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreGradingGetGradingformInstances200ResponseInstancesInner coreGradingGetGradingformInstances200ResponseInstancesInner = (CoreGradingGetGradingformInstances200ResponseInstancesInner) o;
    return Objects.equals(this.feedback, coreGradingGetGradingformInstances200ResponseInstancesInner.feedback) &&
        Objects.equals(this.feedbackformat, coreGradingGetGradingformInstances200ResponseInstancesInner.feedbackformat) &&
        Objects.equals(this.guide, coreGradingGetGradingformInstances200ResponseInstancesInner.guide) &&
        Objects.equals(this.id, coreGradingGetGradingformInstances200ResponseInstancesInner.id) &&
        Objects.equals(this.itemid, coreGradingGetGradingformInstances200ResponseInstancesInner.itemid) &&
        Objects.equals(this.raterid, coreGradingGetGradingformInstances200ResponseInstancesInner.raterid) &&
        Objects.equals(this.rawgrade, coreGradingGetGradingformInstances200ResponseInstancesInner.rawgrade) &&
        Objects.equals(this.rubric, coreGradingGetGradingformInstances200ResponseInstancesInner.rubric) &&
        Objects.equals(this.status, coreGradingGetGradingformInstances200ResponseInstancesInner.status) &&
        Objects.equals(this.timemodified, coreGradingGetGradingformInstances200ResponseInstancesInner.timemodified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedback, feedbackformat, guide, id, itemid, raterid, rawgrade, rubric, status, timemodified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreGradingGetGradingformInstances200ResponseInstancesInner {\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    feedbackformat: ").append(toIndentedString(feedbackformat)).append("\n");
    sb.append("    guide: ").append(toIndentedString(guide)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    itemid: ").append(toIndentedString(itemid)).append("\n");
    sb.append("    raterid: ").append(toIndentedString(raterid)).append("\n");
    sb.append("    rawgrade: ").append(toIndentedString(rawgrade)).append("\n");
    sb.append("    rubric: ").append(toIndentedString(rubric)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("feedback");
    openapiFields.add("feedbackformat");
    openapiFields.add("guide");
    openapiFields.add("id");
    openapiFields.add("itemid");
    openapiFields.add("raterid");
    openapiFields.add("rawgrade");
    openapiFields.add("rubric");
    openapiFields.add("status");
    openapiFields.add("timemodified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreGradingGetGradingformInstances200ResponseInstancesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreGradingGetGradingformInstances200ResponseInstancesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreGradingGetGradingformInstances200ResponseInstancesInner is not found in the empty JSON string", CoreGradingGetGradingformInstances200ResponseInstancesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreGradingGetGradingformInstances200ResponseInstancesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreGradingGetGradingformInstances200ResponseInstancesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("feedback") != null && !jsonObj.get("feedback").isJsonNull()) && !jsonObj.get("feedback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedback").toString()));
      }
      // validate the optional field `guide`
      if (jsonObj.get("guide") != null && !jsonObj.get("guide").isJsonNull()) {
        CoreGradingGetGradingformInstances200ResponseInstancesInnerGuide.validateJsonElement(jsonObj.get("guide"));
      }
      if ((jsonObj.get("rawgrade") != null && !jsonObj.get("rawgrade").isJsonNull()) && !jsonObj.get("rawgrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rawgrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rawgrade").toString()));
      }
      // validate the optional field `rubric`
      if (jsonObj.get("rubric") != null && !jsonObj.get("rubric").isJsonNull()) {
        CoreGradingGetGradingformInstances200ResponseInstancesInnerRubric.validateJsonElement(jsonObj.get("rubric"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreGradingGetGradingformInstances200ResponseInstancesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreGradingGetGradingformInstances200ResponseInstancesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreGradingGetGradingformInstances200ResponseInstancesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreGradingGetGradingformInstances200ResponseInstancesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreGradingGetGradingformInstances200ResponseInstancesInner>() {
           @Override
           public void write(JsonWriter out, CoreGradingGetGradingformInstances200ResponseInstancesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreGradingGetGradingformInstances200ResponseInstancesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreGradingGetGradingformInstances200ResponseInstancesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreGradingGetGradingformInstances200ResponseInstancesInner
  * @throws IOException if the JSON string is invalid with respect to CoreGradingGetGradingformInstances200ResponseInstancesInner
  */
  public static CoreGradingGetGradingformInstances200ResponseInstancesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreGradingGetGradingformInstances200ResponseInstancesInner.class);
  }

 /**
  * Convert an instance of CoreGradingGetGradingformInstances200ResponseInstancesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

