/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModForumSetSubscriptionState200ResponseCapabilities
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModForumSetSubscriptionState200ResponseCapabilities {
  public static final String SERIALIZED_NAME_FAVOURITE = "favourite";
  @SerializedName(SERIALIZED_NAME_FAVOURITE)
  private Boolean favourite;

  public static final String SERIALIZED_NAME_MANAGE = "manage";
  @SerializedName(SERIALIZED_NAME_MANAGE)
  private Boolean manage;

  public static final String SERIALIZED_NAME_MOVE = "move";
  @SerializedName(SERIALIZED_NAME_MOVE)
  private Boolean move;

  public static final String SERIALIZED_NAME_PIN = "pin";
  @SerializedName(SERIALIZED_NAME_PIN)
  private Boolean pin;

  public static final String SERIALIZED_NAME_POST = "post";
  @SerializedName(SERIALIZED_NAME_POST)
  private Boolean post;

  public static final String SERIALIZED_NAME_SUBSCRIBE = "subscribe";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE)
  private Boolean subscribe;

  public ModForumSetSubscriptionState200ResponseCapabilities() {
  }

  public ModForumSetSubscriptionState200ResponseCapabilities favourite(Boolean favourite) {
    this.favourite = favourite;
    return this;
  }

   /**
   * favourite
   * @return favourite
  **/
  @javax.annotation.Nonnull
  public Boolean getFavourite() {
    return favourite;
  }

  public void setFavourite(Boolean favourite) {
    this.favourite = favourite;
  }


  public ModForumSetSubscriptionState200ResponseCapabilities manage(Boolean manage) {
    this.manage = manage;
    return this;
  }

   /**
   * manage
   * @return manage
  **/
  @javax.annotation.Nonnull
  public Boolean getManage() {
    return manage;
  }

  public void setManage(Boolean manage) {
    this.manage = manage;
  }


  public ModForumSetSubscriptionState200ResponseCapabilities move(Boolean move) {
    this.move = move;
    return this;
  }

   /**
   * move
   * @return move
  **/
  @javax.annotation.Nonnull
  public Boolean getMove() {
    return move;
  }

  public void setMove(Boolean move) {
    this.move = move;
  }


  public ModForumSetSubscriptionState200ResponseCapabilities pin(Boolean pin) {
    this.pin = pin;
    return this;
  }

   /**
   * pin
   * @return pin
  **/
  @javax.annotation.Nonnull
  public Boolean getPin() {
    return pin;
  }

  public void setPin(Boolean pin) {
    this.pin = pin;
  }


  public ModForumSetSubscriptionState200ResponseCapabilities post(Boolean post) {
    this.post = post;
    return this;
  }

   /**
   * post
   * @return post
  **/
  @javax.annotation.Nonnull
  public Boolean getPost() {
    return post;
  }

  public void setPost(Boolean post) {
    this.post = post;
  }


  public ModForumSetSubscriptionState200ResponseCapabilities subscribe(Boolean subscribe) {
    this.subscribe = subscribe;
    return this;
  }

   /**
   * subscribe
   * @return subscribe
  **/
  @javax.annotation.Nonnull
  public Boolean getSubscribe() {
    return subscribe;
  }

  public void setSubscribe(Boolean subscribe) {
    this.subscribe = subscribe;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModForumSetSubscriptionState200ResponseCapabilities modForumSetSubscriptionState200ResponseCapabilities = (ModForumSetSubscriptionState200ResponseCapabilities) o;
    return Objects.equals(this.favourite, modForumSetSubscriptionState200ResponseCapabilities.favourite) &&
        Objects.equals(this.manage, modForumSetSubscriptionState200ResponseCapabilities.manage) &&
        Objects.equals(this.move, modForumSetSubscriptionState200ResponseCapabilities.move) &&
        Objects.equals(this.pin, modForumSetSubscriptionState200ResponseCapabilities.pin) &&
        Objects.equals(this.post, modForumSetSubscriptionState200ResponseCapabilities.post) &&
        Objects.equals(this.subscribe, modForumSetSubscriptionState200ResponseCapabilities.subscribe);
  }

  @Override
  public int hashCode() {
    return Objects.hash(favourite, manage, move, pin, post, subscribe);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModForumSetSubscriptionState200ResponseCapabilities {\n");
    sb.append("    favourite: ").append(toIndentedString(favourite)).append("\n");
    sb.append("    manage: ").append(toIndentedString(manage)).append("\n");
    sb.append("    move: ").append(toIndentedString(move)).append("\n");
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    post: ").append(toIndentedString(post)).append("\n");
    sb.append("    subscribe: ").append(toIndentedString(subscribe)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("favourite");
    openapiFields.add("manage");
    openapiFields.add("move");
    openapiFields.add("pin");
    openapiFields.add("post");
    openapiFields.add("subscribe");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("favourite");
    openapiRequiredFields.add("manage");
    openapiRequiredFields.add("move");
    openapiRequiredFields.add("pin");
    openapiRequiredFields.add("post");
    openapiRequiredFields.add("subscribe");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModForumSetSubscriptionState200ResponseCapabilities
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModForumSetSubscriptionState200ResponseCapabilities.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModForumSetSubscriptionState200ResponseCapabilities is not found in the empty JSON string", ModForumSetSubscriptionState200ResponseCapabilities.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModForumSetSubscriptionState200ResponseCapabilities.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModForumSetSubscriptionState200ResponseCapabilities` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModForumSetSubscriptionState200ResponseCapabilities.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModForumSetSubscriptionState200ResponseCapabilities.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModForumSetSubscriptionState200ResponseCapabilities' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModForumSetSubscriptionState200ResponseCapabilities> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModForumSetSubscriptionState200ResponseCapabilities.class));

       return (TypeAdapter<T>) new TypeAdapter<ModForumSetSubscriptionState200ResponseCapabilities>() {
           @Override
           public void write(JsonWriter out, ModForumSetSubscriptionState200ResponseCapabilities value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModForumSetSubscriptionState200ResponseCapabilities read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModForumSetSubscriptionState200ResponseCapabilities given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModForumSetSubscriptionState200ResponseCapabilities
  * @throws IOException if the JSON string is invalid with respect to ModForumSetSubscriptionState200ResponseCapabilities
  */
  public static ModForumSetSubscriptionState200ResponseCapabilities fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModForumSetSubscriptionState200ResponseCapabilities.class);
  }

 /**
  * Convert an instance of ModForumSetSubscriptionState200ResponseCapabilities to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

