/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions {
  public static final String SERIALIZED_NAME_AGGREGATEONLYGRADED = "aggregateonlygraded";
  @SerializedName(SERIALIZED_NAME_AGGREGATEONLYGRADED)
  private Boolean aggregateonlygraded = null;

  public static final String SERIALIZED_NAME_AGGREGATEOUTCOMES = "aggregateoutcomes";
  @SerializedName(SERIALIZED_NAME_AGGREGATEOUTCOMES)
  private Boolean aggregateoutcomes = null;

  public static final String SERIALIZED_NAME_AGGREGATION = "aggregation";
  @SerializedName(SERIALIZED_NAME_AGGREGATION)
  private Integer aggregation = null;

  public static final String SERIALIZED_NAME_AGGREGATIONCOEF2 = "aggregationcoef2";
  @SerializedName(SERIALIZED_NAME_AGGREGATIONCOEF2)
  private String aggregationcoef2 = "null";

  public static final String SERIALIZED_NAME_DECIMALS = "decimals";
  @SerializedName(SERIALIZED_NAME_DECIMALS)
  private Integer decimals = null;

  public static final String SERIALIZED_NAME_DISPLAY = "display";
  @SerializedName(SERIALIZED_NAME_DISPLAY)
  private Integer display = null;

  public static final String SERIALIZED_NAME_DROPLOW = "droplow";
  @SerializedName(SERIALIZED_NAME_DROPLOW)
  private Integer droplow = null;

  public static final String SERIALIZED_NAME_GRADEMAX = "grademax";
  @SerializedName(SERIALIZED_NAME_GRADEMAX)
  private Integer grademax = null;

  public static final String SERIALIZED_NAME_GRADEMIN = "grademin";
  @SerializedName(SERIALIZED_NAME_GRADEMIN)
  private Integer grademin = null;

  public static final String SERIALIZED_NAME_GRADEPASS = "gradepass";
  @SerializedName(SERIALIZED_NAME_GRADEPASS)
  private Integer gradepass = null;

  public static final String SERIALIZED_NAME_GRADETYPE = "gradetype";
  @SerializedName(SERIALIZED_NAME_GRADETYPE)
  private Integer gradetype = null;

  public static final String SERIALIZED_NAME_HIDDENUNTIL = "hiddenuntil";
  @SerializedName(SERIALIZED_NAME_HIDDENUNTIL)
  private Integer hiddenuntil = null;

  public static final String SERIALIZED_NAME_IDNUMBER = "idnumber";
  @SerializedName(SERIALIZED_NAME_IDNUMBER)
  private String idnumber = "null";

  public static final String SERIALIZED_NAME_ITEMINFO = "iteminfo";
  @SerializedName(SERIALIZED_NAME_ITEMINFO)
  private String iteminfo = "null";

  public static final String SERIALIZED_NAME_ITEMNAME = "itemname";
  @SerializedName(SERIALIZED_NAME_ITEMNAME)
  private String itemname = "null";

  public static final String SERIALIZED_NAME_LOCKTIME = "locktime";
  @SerializedName(SERIALIZED_NAME_LOCKTIME)
  private Integer locktime = null;

  public static final String SERIALIZED_NAME_PARENTCATEGORYID = "parentcategoryid";
  @SerializedName(SERIALIZED_NAME_PARENTCATEGORYID)
  private Integer parentcategoryid = null;

  public static final String SERIALIZED_NAME_PARENTCATEGORYIDNUMBER = "parentcategoryidnumber";
  @SerializedName(SERIALIZED_NAME_PARENTCATEGORYIDNUMBER)
  private String parentcategoryidnumber = "null";

  public static final String SERIALIZED_NAME_WEIGHTOVERRIDE = "weightoverride";
  @SerializedName(SERIALIZED_NAME_WEIGHTOVERRIDE)
  private Boolean weightoverride = null;

  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions() {
  }

  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions aggregateonlygraded(Boolean aggregateonlygraded) {
    this.aggregateonlygraded = aggregateonlygraded;
    return this;
  }

   /**
   * exclude empty grades
   * @return aggregateonlygraded
  **/
  @javax.annotation.Nullable
  public Boolean getAggregateonlygraded() {
    return aggregateonlygraded;
  }

  public void setAggregateonlygraded(Boolean aggregateonlygraded) {
    this.aggregateonlygraded = aggregateonlygraded;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions aggregateoutcomes(Boolean aggregateoutcomes) {
    this.aggregateoutcomes = aggregateoutcomes;
    return this;
  }

   /**
   * aggregate outcomes
   * @return aggregateoutcomes
  **/
  @javax.annotation.Nullable
  public Boolean getAggregateoutcomes() {
    return aggregateoutcomes;
  }

  public void setAggregateoutcomes(Boolean aggregateoutcomes) {
    this.aggregateoutcomes = aggregateoutcomes;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions aggregation(Integer aggregation) {
    this.aggregation = aggregation;
    return this;
  }

   /**
   * aggregation method
   * @return aggregation
  **/
  @javax.annotation.Nullable
  public Integer getAggregation() {
    return aggregation;
  }

  public void setAggregation(Integer aggregation) {
    this.aggregation = aggregation;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions aggregationcoef2(String aggregationcoef2) {
    this.aggregationcoef2 = aggregationcoef2;
    return this;
  }

   /**
   * weight coefficient
   * @return aggregationcoef2
  **/
  @javax.annotation.Nullable
  public String getAggregationcoef2() {
    return aggregationcoef2;
  }

  public void setAggregationcoef2(String aggregationcoef2) {
    this.aggregationcoef2 = aggregationcoef2;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions decimals(Integer decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * the decimal count
   * @return decimals
  **/
  @javax.annotation.Nullable
  public Integer getDecimals() {
    return decimals;
  }

  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions display(Integer display) {
    this.display = display;
    return this;
  }

   /**
   * the display type
   * @return display
  **/
  @javax.annotation.Nullable
  public Integer getDisplay() {
    return display;
  }

  public void setDisplay(Integer display) {
    this.display = display;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions droplow(Integer droplow) {
    this.droplow = droplow;
    return this;
  }

   /**
   * drop low grades
   * @return droplow
  **/
  @javax.annotation.Nullable
  public Integer getDroplow() {
    return droplow;
  }

  public void setDroplow(Integer droplow) {
    this.droplow = droplow;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions grademax(Integer grademax) {
    this.grademax = grademax;
    return this;
  }

   /**
   * the grade max
   * @return grademax
  **/
  @javax.annotation.Nullable
  public Integer getGrademax() {
    return grademax;
  }

  public void setGrademax(Integer grademax) {
    this.grademax = grademax;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions grademin(Integer grademin) {
    this.grademin = grademin;
    return this;
  }

   /**
   * the grade min
   * @return grademin
  **/
  @javax.annotation.Nullable
  public Integer getGrademin() {
    return grademin;
  }

  public void setGrademin(Integer grademin) {
    this.grademin = grademin;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions gradepass(Integer gradepass) {
    this.gradepass = gradepass;
    return this;
  }

   /**
   * the grade to pass
   * @return gradepass
  **/
  @javax.annotation.Nullable
  public Integer getGradepass() {
    return gradepass;
  }

  public void setGradepass(Integer gradepass) {
    this.gradepass = gradepass;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions gradetype(Integer gradetype) {
    this.gradetype = gradetype;
    return this;
  }

   /**
   * the grade type
   * @return gradetype
  **/
  @javax.annotation.Nullable
  public Integer getGradetype() {
    return gradetype;
  }

  public void setGradetype(Integer gradetype) {
    this.gradetype = gradetype;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions hiddenuntil(Integer hiddenuntil) {
    this.hiddenuntil = hiddenuntil;
    return this;
  }

   /**
   * grades hidden until
   * @return hiddenuntil
  **/
  @javax.annotation.Nullable
  public Integer getHiddenuntil() {
    return hiddenuntil;
  }

  public void setHiddenuntil(Integer hiddenuntil) {
    this.hiddenuntil = hiddenuntil;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions idnumber(String idnumber) {
    this.idnumber = idnumber;
    return this;
  }

   /**
   * the category idnumber
   * @return idnumber
  **/
  @javax.annotation.Nullable
  public String getIdnumber() {
    return idnumber;
  }

  public void setIdnumber(String idnumber) {
    this.idnumber = idnumber;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions iteminfo(String iteminfo) {
    this.iteminfo = iteminfo;
    return this;
  }

   /**
   * the category iteminfo
   * @return iteminfo
  **/
  @javax.annotation.Nullable
  public String getIteminfo() {
    return iteminfo;
  }

  public void setIteminfo(String iteminfo) {
    this.iteminfo = iteminfo;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions itemname(String itemname) {
    this.itemname = itemname;
    return this;
  }

   /**
   * the category total name
   * @return itemname
  **/
  @javax.annotation.Nullable
  public String getItemname() {
    return itemname;
  }

  public void setItemname(String itemname) {
    this.itemname = itemname;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions locktime(Integer locktime) {
    this.locktime = locktime;
    return this;
  }

   /**
   * lock grades after
   * @return locktime
  **/
  @javax.annotation.Nullable
  public Integer getLocktime() {
    return locktime;
  }

  public void setLocktime(Integer locktime) {
    this.locktime = locktime;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions parentcategoryid(Integer parentcategoryid) {
    this.parentcategoryid = parentcategoryid;
    return this;
  }

   /**
   * The parent category id
   * @return parentcategoryid
  **/
  @javax.annotation.Nullable
  public Integer getParentcategoryid() {
    return parentcategoryid;
  }

  public void setParentcategoryid(Integer parentcategoryid) {
    this.parentcategoryid = parentcategoryid;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions parentcategoryidnumber(String parentcategoryidnumber) {
    this.parentcategoryidnumber = parentcategoryidnumber;
    return this;
  }

   /**
   * the parent category idnumber
   * @return parentcategoryidnumber
  **/
  @javax.annotation.Nullable
  public String getParentcategoryidnumber() {
    return parentcategoryidnumber;
  }

  public void setParentcategoryidnumber(String parentcategoryidnumber) {
    this.parentcategoryidnumber = parentcategoryidnumber;
  }


  public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions weightoverride(Boolean weightoverride) {
    this.weightoverride = weightoverride;
    return this;
  }

   /**
   * weight adjusted
   * @return weightoverride
  **/
  @javax.annotation.Nullable
  public Boolean getWeightoverride() {
    return weightoverride;
  }

  public void setWeightoverride(Boolean weightoverride) {
    this.weightoverride = weightoverride;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions coreGradesCreateGradecategoriesRequestCategoriesInnerOptions = (CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions) o;
    return Objects.equals(this.aggregateonlygraded, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.aggregateonlygraded) &&
        Objects.equals(this.aggregateoutcomes, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.aggregateoutcomes) &&
        Objects.equals(this.aggregation, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.aggregation) &&
        Objects.equals(this.aggregationcoef2, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.aggregationcoef2) &&
        Objects.equals(this.decimals, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.decimals) &&
        Objects.equals(this.display, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.display) &&
        Objects.equals(this.droplow, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.droplow) &&
        Objects.equals(this.grademax, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.grademax) &&
        Objects.equals(this.grademin, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.grademin) &&
        Objects.equals(this.gradepass, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.gradepass) &&
        Objects.equals(this.gradetype, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.gradetype) &&
        Objects.equals(this.hiddenuntil, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.hiddenuntil) &&
        Objects.equals(this.idnumber, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.idnumber) &&
        Objects.equals(this.iteminfo, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.iteminfo) &&
        Objects.equals(this.itemname, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.itemname) &&
        Objects.equals(this.locktime, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.locktime) &&
        Objects.equals(this.parentcategoryid, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.parentcategoryid) &&
        Objects.equals(this.parentcategoryidnumber, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.parentcategoryidnumber) &&
        Objects.equals(this.weightoverride, coreGradesCreateGradecategoriesRequestCategoriesInnerOptions.weightoverride);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregateonlygraded, aggregateoutcomes, aggregation, aggregationcoef2, decimals, display, droplow, grademax, grademin, gradepass, gradetype, hiddenuntil, idnumber, iteminfo, itemname, locktime, parentcategoryid, parentcategoryidnumber, weightoverride);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions {\n");
    sb.append("    aggregateonlygraded: ").append(toIndentedString(aggregateonlygraded)).append("\n");
    sb.append("    aggregateoutcomes: ").append(toIndentedString(aggregateoutcomes)).append("\n");
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("    aggregationcoef2: ").append(toIndentedString(aggregationcoef2)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    droplow: ").append(toIndentedString(droplow)).append("\n");
    sb.append("    grademax: ").append(toIndentedString(grademax)).append("\n");
    sb.append("    grademin: ").append(toIndentedString(grademin)).append("\n");
    sb.append("    gradepass: ").append(toIndentedString(gradepass)).append("\n");
    sb.append("    gradetype: ").append(toIndentedString(gradetype)).append("\n");
    sb.append("    hiddenuntil: ").append(toIndentedString(hiddenuntil)).append("\n");
    sb.append("    idnumber: ").append(toIndentedString(idnumber)).append("\n");
    sb.append("    iteminfo: ").append(toIndentedString(iteminfo)).append("\n");
    sb.append("    itemname: ").append(toIndentedString(itemname)).append("\n");
    sb.append("    locktime: ").append(toIndentedString(locktime)).append("\n");
    sb.append("    parentcategoryid: ").append(toIndentedString(parentcategoryid)).append("\n");
    sb.append("    parentcategoryidnumber: ").append(toIndentedString(parentcategoryidnumber)).append("\n");
    sb.append("    weightoverride: ").append(toIndentedString(weightoverride)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aggregateonlygraded");
    openapiFields.add("aggregateoutcomes");
    openapiFields.add("aggregation");
    openapiFields.add("aggregationcoef2");
    openapiFields.add("decimals");
    openapiFields.add("display");
    openapiFields.add("droplow");
    openapiFields.add("grademax");
    openapiFields.add("grademin");
    openapiFields.add("gradepass");
    openapiFields.add("gradetype");
    openapiFields.add("hiddenuntil");
    openapiFields.add("idnumber");
    openapiFields.add("iteminfo");
    openapiFields.add("itemname");
    openapiFields.add("locktime");
    openapiFields.add("parentcategoryid");
    openapiFields.add("parentcategoryidnumber");
    openapiFields.add("weightoverride");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions is not found in the empty JSON string", CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aggregationcoef2") != null && !jsonObj.get("aggregationcoef2").isJsonNull()) && !jsonObj.get("aggregationcoef2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aggregationcoef2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aggregationcoef2").toString()));
      }
      if ((jsonObj.get("idnumber") != null && !jsonObj.get("idnumber").isJsonNull()) && !jsonObj.get("idnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idnumber").toString()));
      }
      if ((jsonObj.get("iteminfo") != null && !jsonObj.get("iteminfo").isJsonNull()) && !jsonObj.get("iteminfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iteminfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iteminfo").toString()));
      }
      if ((jsonObj.get("itemname") != null && !jsonObj.get("itemname").isJsonNull()) && !jsonObj.get("itemname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemname").toString()));
      }
      if ((jsonObj.get("parentcategoryidnumber") != null && !jsonObj.get("parentcategoryidnumber").isJsonNull()) && !jsonObj.get("parentcategoryidnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentcategoryidnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentcategoryidnumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions>() {
           @Override
           public void write(JsonWriter out, CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions
  * @throws IOException if the JSON string is invalid with respect to CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions
  */
  public static CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions.class);
  }

 /**
  * Convert an instance of CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

