/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostAttachmentsInnerHtml;
import org.openapitools.client.model.ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModForumAddDiscussionPost200ResponsePostAttachmentsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModForumAddDiscussionPost200ResponsePostAttachmentsInner {
  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_COMPONENT = "component";
  @SerializedName(SERIALIZED_NAME_COMPONENT)
  private String component;

  public static final String SERIALIZED_NAME_CONTEXTID = "contextid";
  @SerializedName(SERIALIZED_NAME_CONTEXTID)
  private Integer contextid;

  public static final String SERIALIZED_NAME_FILEAREA = "filearea";
  @SerializedName(SERIALIZED_NAME_FILEAREA)
  private String filearea;

  public static final String SERIALIZED_NAME_FILENAME = "filename";
  @SerializedName(SERIALIZED_NAME_FILENAME)
  private String filename;

  public static final String SERIALIZED_NAME_FILENAMESHORT = "filenameshort";
  @SerializedName(SERIALIZED_NAME_FILENAMESHORT)
  private String filenameshort;

  public static final String SERIALIZED_NAME_FILEPATH = "filepath";
  @SerializedName(SERIALIZED_NAME_FILEPATH)
  private String filepath;

  public static final String SERIALIZED_NAME_FILESIZE = "filesize";
  @SerializedName(SERIALIZED_NAME_FILESIZE)
  private Integer filesize;

  public static final String SERIALIZED_NAME_FILESIZEFORMATTED = "filesizeformatted";
  @SerializedName(SERIALIZED_NAME_FILESIZEFORMATTED)
  private String filesizeformatted;

  public static final String SERIALIZED_NAME_HTML = "html";
  @SerializedName(SERIALIZED_NAME_HTML)
  private ModForumAddDiscussionPost200ResponsePostAttachmentsInnerHtml html;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private String icon;

  public static final String SERIALIZED_NAME_ISDIR = "isdir";
  @SerializedName(SERIALIZED_NAME_ISDIR)
  private Boolean isdir;

  public static final String SERIALIZED_NAME_ISIMAGE = "isimage";
  @SerializedName(SERIALIZED_NAME_ISIMAGE)
  private Boolean isimage;

  public static final String SERIALIZED_NAME_ITEMID = "itemid";
  @SerializedName(SERIALIZED_NAME_ITEMID)
  private Integer itemid;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private String license;

  public static final String SERIALIZED_NAME_TIMECREATED = "timecreated";
  @SerializedName(SERIALIZED_NAME_TIMECREATED)
  private Integer timecreated;

  public static final String SERIALIZED_NAME_TIMECREATEDFORMATTED = "timecreatedformatted";
  @SerializedName(SERIALIZED_NAME_TIMECREATEDFORMATTED)
  private String timecreatedformatted;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified;

  public static final String SERIALIZED_NAME_TIMEMODIFIEDFORMATTED = "timemodifiedformatted";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIEDFORMATTED)
  private String timemodifiedformatted;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_URLS = "urls";
  @SerializedName(SERIALIZED_NAME_URLS)
  private ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls urls;

  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner() {
  }

  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner author(String author) {
    this.author = author;
    return this;
  }

   /**
   * author
   * @return author
  **/
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner component(String component) {
    this.component = component;
    return this;
  }

   /**
   * component
   * @return component
  **/
  @javax.annotation.Nullable
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner contextid(Integer contextid) {
    this.contextid = contextid;
    return this;
  }

   /**
   * contextid
   * @return contextid
  **/
  @javax.annotation.Nullable
  public Integer getContextid() {
    return contextid;
  }

  public void setContextid(Integer contextid) {
    this.contextid = contextid;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner filearea(String filearea) {
    this.filearea = filearea;
    return this;
  }

   /**
   * filearea
   * @return filearea
  **/
  @javax.annotation.Nullable
  public String getFilearea() {
    return filearea;
  }

  public void setFilearea(String filearea) {
    this.filearea = filearea;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * filename
   * @return filename
  **/
  @javax.annotation.Nullable
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner filenameshort(String filenameshort) {
    this.filenameshort = filenameshort;
    return this;
  }

   /**
   * filenameshort
   * @return filenameshort
  **/
  @javax.annotation.Nullable
  public String getFilenameshort() {
    return filenameshort;
  }

  public void setFilenameshort(String filenameshort) {
    this.filenameshort = filenameshort;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner filepath(String filepath) {
    this.filepath = filepath;
    return this;
  }

   /**
   * filepath
   * @return filepath
  **/
  @javax.annotation.Nullable
  public String getFilepath() {
    return filepath;
  }

  public void setFilepath(String filepath) {
    this.filepath = filepath;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner filesize(Integer filesize) {
    this.filesize = filesize;
    return this;
  }

   /**
   * filesize
   * @return filesize
  **/
  @javax.annotation.Nullable
  public Integer getFilesize() {
    return filesize;
  }

  public void setFilesize(Integer filesize) {
    this.filesize = filesize;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner filesizeformatted(String filesizeformatted) {
    this.filesizeformatted = filesizeformatted;
    return this;
  }

   /**
   * filesizeformatted
   * @return filesizeformatted
  **/
  @javax.annotation.Nullable
  public String getFilesizeformatted() {
    return filesizeformatted;
  }

  public void setFilesizeformatted(String filesizeformatted) {
    this.filesizeformatted = filesizeformatted;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner html(ModForumAddDiscussionPost200ResponsePostAttachmentsInnerHtml html) {
    this.html = html;
    return this;
  }

   /**
   * Get html
   * @return html
  **/
  @javax.annotation.Nullable
  public ModForumAddDiscussionPost200ResponsePostAttachmentsInnerHtml getHtml() {
    return html;
  }

  public void setHtml(ModForumAddDiscussionPost200ResponsePostAttachmentsInnerHtml html) {
    this.html = html;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * icon
   * @return icon
  **/
  @javax.annotation.Nullable
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner isdir(Boolean isdir) {
    this.isdir = isdir;
    return this;
  }

   /**
   * isdir
   * @return isdir
  **/
  @javax.annotation.Nullable
  public Boolean getIsdir() {
    return isdir;
  }

  public void setIsdir(Boolean isdir) {
    this.isdir = isdir;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner isimage(Boolean isimage) {
    this.isimage = isimage;
    return this;
  }

   /**
   * isimage
   * @return isimage
  **/
  @javax.annotation.Nullable
  public Boolean getIsimage() {
    return isimage;
  }

  public void setIsimage(Boolean isimage) {
    this.isimage = isimage;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner itemid(Integer itemid) {
    this.itemid = itemid;
    return this;
  }

   /**
   * itemid
   * @return itemid
  **/
  @javax.annotation.Nullable
  public Integer getItemid() {
    return itemid;
  }

  public void setItemid(Integer itemid) {
    this.itemid = itemid;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner license(String license) {
    this.license = license;
    return this;
  }

   /**
   * license
   * @return license
  **/
  @javax.annotation.Nullable
  public String getLicense() {
    return license;
  }

  public void setLicense(String license) {
    this.license = license;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner timecreated(Integer timecreated) {
    this.timecreated = timecreated;
    return this;
  }

   /**
   * timecreated
   * @return timecreated
  **/
  @javax.annotation.Nullable
  public Integer getTimecreated() {
    return timecreated;
  }

  public void setTimecreated(Integer timecreated) {
    this.timecreated = timecreated;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner timecreatedformatted(String timecreatedformatted) {
    this.timecreatedformatted = timecreatedformatted;
    return this;
  }

   /**
   * timecreatedformatted
   * @return timecreatedformatted
  **/
  @javax.annotation.Nullable
  public String getTimecreatedformatted() {
    return timecreatedformatted;
  }

  public void setTimecreatedformatted(String timecreatedformatted) {
    this.timecreatedformatted = timecreatedformatted;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * timemodified
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner timemodifiedformatted(String timemodifiedformatted) {
    this.timemodifiedformatted = timemodifiedformatted;
    return this;
  }

   /**
   * timemodifiedformatted
   * @return timemodifiedformatted
  **/
  @javax.annotation.Nullable
  public String getTimemodifiedformatted() {
    return timemodifiedformatted;
  }

  public void setTimemodifiedformatted(String timemodifiedformatted) {
    this.timemodifiedformatted = timemodifiedformatted;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner url(String url) {
    this.url = url;
    return this;
  }

   /**
   * url
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public ModForumAddDiscussionPost200ResponsePostAttachmentsInner urls(ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls urls) {
    this.urls = urls;
    return this;
  }

   /**
   * Get urls
   * @return urls
  **/
  @javax.annotation.Nullable
  public ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls getUrls() {
    return urls;
  }

  public void setUrls(ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls urls) {
    this.urls = urls;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModForumAddDiscussionPost200ResponsePostAttachmentsInner modForumAddDiscussionPost200ResponsePostAttachmentsInner = (ModForumAddDiscussionPost200ResponsePostAttachmentsInner) o;
    return Objects.equals(this.author, modForumAddDiscussionPost200ResponsePostAttachmentsInner.author) &&
        Objects.equals(this.component, modForumAddDiscussionPost200ResponsePostAttachmentsInner.component) &&
        Objects.equals(this.contextid, modForumAddDiscussionPost200ResponsePostAttachmentsInner.contextid) &&
        Objects.equals(this.filearea, modForumAddDiscussionPost200ResponsePostAttachmentsInner.filearea) &&
        Objects.equals(this.filename, modForumAddDiscussionPost200ResponsePostAttachmentsInner.filename) &&
        Objects.equals(this.filenameshort, modForumAddDiscussionPost200ResponsePostAttachmentsInner.filenameshort) &&
        Objects.equals(this.filepath, modForumAddDiscussionPost200ResponsePostAttachmentsInner.filepath) &&
        Objects.equals(this.filesize, modForumAddDiscussionPost200ResponsePostAttachmentsInner.filesize) &&
        Objects.equals(this.filesizeformatted, modForumAddDiscussionPost200ResponsePostAttachmentsInner.filesizeformatted) &&
        Objects.equals(this.html, modForumAddDiscussionPost200ResponsePostAttachmentsInner.html) &&
        Objects.equals(this.icon, modForumAddDiscussionPost200ResponsePostAttachmentsInner.icon) &&
        Objects.equals(this.isdir, modForumAddDiscussionPost200ResponsePostAttachmentsInner.isdir) &&
        Objects.equals(this.isimage, modForumAddDiscussionPost200ResponsePostAttachmentsInner.isimage) &&
        Objects.equals(this.itemid, modForumAddDiscussionPost200ResponsePostAttachmentsInner.itemid) &&
        Objects.equals(this.license, modForumAddDiscussionPost200ResponsePostAttachmentsInner.license) &&
        Objects.equals(this.timecreated, modForumAddDiscussionPost200ResponsePostAttachmentsInner.timecreated) &&
        Objects.equals(this.timecreatedformatted, modForumAddDiscussionPost200ResponsePostAttachmentsInner.timecreatedformatted) &&
        Objects.equals(this.timemodified, modForumAddDiscussionPost200ResponsePostAttachmentsInner.timemodified) &&
        Objects.equals(this.timemodifiedformatted, modForumAddDiscussionPost200ResponsePostAttachmentsInner.timemodifiedformatted) &&
        Objects.equals(this.url, modForumAddDiscussionPost200ResponsePostAttachmentsInner.url) &&
        Objects.equals(this.urls, modForumAddDiscussionPost200ResponsePostAttachmentsInner.urls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, component, contextid, filearea, filename, filenameshort, filepath, filesize, filesizeformatted, html, icon, isdir, isimage, itemid, license, timecreated, timecreatedformatted, timemodified, timemodifiedformatted, url, urls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModForumAddDiscussionPost200ResponsePostAttachmentsInner {\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    contextid: ").append(toIndentedString(contextid)).append("\n");
    sb.append("    filearea: ").append(toIndentedString(filearea)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    filenameshort: ").append(toIndentedString(filenameshort)).append("\n");
    sb.append("    filepath: ").append(toIndentedString(filepath)).append("\n");
    sb.append("    filesize: ").append(toIndentedString(filesize)).append("\n");
    sb.append("    filesizeformatted: ").append(toIndentedString(filesizeformatted)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    isdir: ").append(toIndentedString(isdir)).append("\n");
    sb.append("    isimage: ").append(toIndentedString(isimage)).append("\n");
    sb.append("    itemid: ").append(toIndentedString(itemid)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    timecreated: ").append(toIndentedString(timecreated)).append("\n");
    sb.append("    timecreatedformatted: ").append(toIndentedString(timecreatedformatted)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    timemodifiedformatted: ").append(toIndentedString(timemodifiedformatted)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("author");
    openapiFields.add("component");
    openapiFields.add("contextid");
    openapiFields.add("filearea");
    openapiFields.add("filename");
    openapiFields.add("filenameshort");
    openapiFields.add("filepath");
    openapiFields.add("filesize");
    openapiFields.add("filesizeformatted");
    openapiFields.add("html");
    openapiFields.add("icon");
    openapiFields.add("isdir");
    openapiFields.add("isimage");
    openapiFields.add("itemid");
    openapiFields.add("license");
    openapiFields.add("timecreated");
    openapiFields.add("timecreatedformatted");
    openapiFields.add("timemodified");
    openapiFields.add("timemodifiedformatted");
    openapiFields.add("url");
    openapiFields.add("urls");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModForumAddDiscussionPost200ResponsePostAttachmentsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModForumAddDiscussionPost200ResponsePostAttachmentsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModForumAddDiscussionPost200ResponsePostAttachmentsInner is not found in the empty JSON string", ModForumAddDiscussionPost200ResponsePostAttachmentsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModForumAddDiscussionPost200ResponsePostAttachmentsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModForumAddDiscussionPost200ResponsePostAttachmentsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      if ((jsonObj.get("component") != null && !jsonObj.get("component").isJsonNull()) && !jsonObj.get("component").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `component` to be a primitive type in the JSON string but got `%s`", jsonObj.get("component").toString()));
      }
      if ((jsonObj.get("filearea") != null && !jsonObj.get("filearea").isJsonNull()) && !jsonObj.get("filearea").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filearea` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filearea").toString()));
      }
      if ((jsonObj.get("filename") != null && !jsonObj.get("filename").isJsonNull()) && !jsonObj.get("filename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filename").toString()));
      }
      if ((jsonObj.get("filenameshort") != null && !jsonObj.get("filenameshort").isJsonNull()) && !jsonObj.get("filenameshort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filenameshort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filenameshort").toString()));
      }
      if ((jsonObj.get("filepath") != null && !jsonObj.get("filepath").isJsonNull()) && !jsonObj.get("filepath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filepath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filepath").toString()));
      }
      if ((jsonObj.get("filesizeformatted") != null && !jsonObj.get("filesizeformatted").isJsonNull()) && !jsonObj.get("filesizeformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filesizeformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filesizeformatted").toString()));
      }
      // validate the optional field `html`
      if (jsonObj.get("html") != null && !jsonObj.get("html").isJsonNull()) {
        ModForumAddDiscussionPost200ResponsePostAttachmentsInnerHtml.validateJsonElement(jsonObj.get("html"));
      }
      if ((jsonObj.get("icon") != null && !jsonObj.get("icon").isJsonNull()) && !jsonObj.get("icon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icon").toString()));
      }
      if ((jsonObj.get("license") != null && !jsonObj.get("license").isJsonNull()) && !jsonObj.get("license").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license").toString()));
      }
      if ((jsonObj.get("timecreatedformatted") != null && !jsonObj.get("timecreatedformatted").isJsonNull()) && !jsonObj.get("timecreatedformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timecreatedformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timecreatedformatted").toString()));
      }
      if ((jsonObj.get("timemodifiedformatted") != null && !jsonObj.get("timemodifiedformatted").isJsonNull()) && !jsonObj.get("timemodifiedformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timemodifiedformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timemodifiedformatted").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      // validate the optional field `urls`
      if (jsonObj.get("urls") != null && !jsonObj.get("urls").isJsonNull()) {
        ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls.validateJsonElement(jsonObj.get("urls"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModForumAddDiscussionPost200ResponsePostAttachmentsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModForumAddDiscussionPost200ResponsePostAttachmentsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModForumAddDiscussionPost200ResponsePostAttachmentsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModForumAddDiscussionPost200ResponsePostAttachmentsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModForumAddDiscussionPost200ResponsePostAttachmentsInner>() {
           @Override
           public void write(JsonWriter out, ModForumAddDiscussionPost200ResponsePostAttachmentsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModForumAddDiscussionPost200ResponsePostAttachmentsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModForumAddDiscussionPost200ResponsePostAttachmentsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModForumAddDiscussionPost200ResponsePostAttachmentsInner
  * @throws IOException if the JSON string is invalid with respect to ModForumAddDiscussionPost200ResponsePostAttachmentsInner
  */
  public static ModForumAddDiscussionPost200ResponsePostAttachmentsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModForumAddDiscussionPost200ResponsePostAttachmentsInner.class);
  }

 /**
  * Convert an instance of ModForumAddDiscussionPost200ResponsePostAttachmentsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

