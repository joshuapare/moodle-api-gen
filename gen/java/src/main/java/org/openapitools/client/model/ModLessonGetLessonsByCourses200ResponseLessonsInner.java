/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModLessonGetLessonsByCourses200ResponseLessonsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModLessonGetLessonsByCourses200ResponseLessonsInner {
  public static final String SERIALIZED_NAME_ACTIVITYLINK = "activitylink";
  @SerializedName(SERIALIZED_NAME_ACTIVITYLINK)
  private Integer activitylink;

  public static final String SERIALIZED_NAME_ALLOWOFFLINEATTEMPTS = "allowofflineattempts";
  @SerializedName(SERIALIZED_NAME_ALLOWOFFLINEATTEMPTS)
  private Boolean allowofflineattempts;

  public static final String SERIALIZED_NAME_AVAILABLE = "available";
  @SerializedName(SERIALIZED_NAME_AVAILABLE)
  private Integer available;

  public static final String SERIALIZED_NAME_BGCOLOR = "bgcolor";
  @SerializedName(SERIALIZED_NAME_BGCOLOR)
  private String bgcolor;

  public static final String SERIALIZED_NAME_COMPLETIONENDREACHED = "completionendreached";
  @SerializedName(SERIALIZED_NAME_COMPLETIONENDREACHED)
  private Integer completionendreached;

  public static final String SERIALIZED_NAME_COMPLETIONTIMESPENT = "completiontimespent";
  @SerializedName(SERIALIZED_NAME_COMPLETIONTIMESPENT)
  private Integer completiontimespent;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private String conditions;

  public static final String SERIALIZED_NAME_COURSE = "course";
  @SerializedName(SERIALIZED_NAME_COURSE)
  private Integer course;

  public static final String SERIALIZED_NAME_COURSEMODULE = "coursemodule";
  @SerializedName(SERIALIZED_NAME_COURSEMODULE)
  private Integer coursemodule;

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private Boolean custom;

  public static final String SERIALIZED_NAME_DEADLINE = "deadline";
  @SerializedName(SERIALIZED_NAME_DEADLINE)
  private Integer deadline;

  public static final String SERIALIZED_NAME_DEPENDENCY = "dependency";
  @SerializedName(SERIALIZED_NAME_DEPENDENCY)
  private Integer dependency;

  public static final String SERIALIZED_NAME_DISPLAYLEFT = "displayleft";
  @SerializedName(SERIALIZED_NAME_DISPLAYLEFT)
  private Boolean displayleft;

  public static final String SERIALIZED_NAME_DISPLAYLEFTIF = "displayleftif";
  @SerializedName(SERIALIZED_NAME_DISPLAYLEFTIF)
  private Integer displayleftif;

  public static final String SERIALIZED_NAME_FEEDBACK = "feedback";
  @SerializedName(SERIALIZED_NAME_FEEDBACK)
  private Boolean feedback;

  public static final String SERIALIZED_NAME_GRADE = "grade";
  @SerializedName(SERIALIZED_NAME_GRADE)
  private Integer grade;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INTRO = "intro";
  @SerializedName(SERIALIZED_NAME_INTRO)
  private String intro;

  public static final String SERIALIZED_NAME_INTROFILES = "introfiles";
  @SerializedName(SERIALIZED_NAME_INTROFILES)
  private List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> introfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_INTROFORMAT = "introformat";
  @SerializedName(SERIALIZED_NAME_INTROFORMAT)
  private Integer introformat = 0;

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang;

  public static final String SERIALIZED_NAME_MAXANSWERS = "maxanswers";
  @SerializedName(SERIALIZED_NAME_MAXANSWERS)
  private Integer maxanswers;

  public static final String SERIALIZED_NAME_MAXATTEMPTS = "maxattempts";
  @SerializedName(SERIALIZED_NAME_MAXATTEMPTS)
  private Integer maxattempts;

  public static final String SERIALIZED_NAME_MAXPAGES = "maxpages";
  @SerializedName(SERIALIZED_NAME_MAXPAGES)
  private Integer maxpages;

  public static final String SERIALIZED_NAME_MEDIACLOSE = "mediaclose";
  @SerializedName(SERIALIZED_NAME_MEDIACLOSE)
  private Integer mediaclose;

  public static final String SERIALIZED_NAME_MEDIAFILE = "mediafile";
  @SerializedName(SERIALIZED_NAME_MEDIAFILE)
  private String mediafile;

  public static final String SERIALIZED_NAME_MEDIAFILES = "mediafiles";
  @SerializedName(SERIALIZED_NAME_MEDIAFILES)
  private List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> mediafiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEDIAHEIGHT = "mediaheight";
  @SerializedName(SERIALIZED_NAME_MEDIAHEIGHT)
  private Integer mediaheight;

  public static final String SERIALIZED_NAME_MEDIAWIDTH = "mediawidth";
  @SerializedName(SERIALIZED_NAME_MEDIAWIDTH)
  private Integer mediawidth;

  public static final String SERIALIZED_NAME_MINQUESTIONS = "minquestions";
  @SerializedName(SERIALIZED_NAME_MINQUESTIONS)
  private Integer minquestions;

  public static final String SERIALIZED_NAME_MODATTEMPTS = "modattempts";
  @SerializedName(SERIALIZED_NAME_MODATTEMPTS)
  private Boolean modattempts;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEXTPAGEDEFAULT = "nextpagedefault";
  @SerializedName(SERIALIZED_NAME_NEXTPAGEDEFAULT)
  private Integer nextpagedefault;

  public static final String SERIALIZED_NAME_ONGOING = "ongoing";
  @SerializedName(SERIALIZED_NAME_ONGOING)
  private Boolean ongoing;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PRACTICE = "practice";
  @SerializedName(SERIALIZED_NAME_PRACTICE)
  private Boolean practice;

  public static final String SERIALIZED_NAME_PROGRESSBAR = "progressbar";
  @SerializedName(SERIALIZED_NAME_PROGRESSBAR)
  private Boolean progressbar;

  public static final String SERIALIZED_NAME_RETAKE = "retake";
  @SerializedName(SERIALIZED_NAME_RETAKE)
  private Boolean retake;

  public static final String SERIALIZED_NAME_REVIEW = "review";
  @SerializedName(SERIALIZED_NAME_REVIEW)
  private Boolean review;

  public static final String SERIALIZED_NAME_SLIDESHOW = "slideshow";
  @SerializedName(SERIALIZED_NAME_SLIDESHOW)
  private Boolean slideshow;

  public static final String SERIALIZED_NAME_TIMELIMIT = "timelimit";
  @SerializedName(SERIALIZED_NAME_TIMELIMIT)
  private Integer timelimit;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified;

  public static final String SERIALIZED_NAME_USEMAXGRADE = "usemaxgrade";
  @SerializedName(SERIALIZED_NAME_USEMAXGRADE)
  private Integer usemaxgrade;

  public static final String SERIALIZED_NAME_USEPASSWORD = "usepassword";
  @SerializedName(SERIALIZED_NAME_USEPASSWORD)
  private Boolean usepassword;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Integer width;

  public ModLessonGetLessonsByCourses200ResponseLessonsInner() {
  }

  public ModLessonGetLessonsByCourses200ResponseLessonsInner activitylink(Integer activitylink) {
    this.activitylink = activitylink;
    return this;
  }

   /**
   * Id of the next activity to be linked once the lesson is completed
   * @return activitylink
  **/
  @javax.annotation.Nullable
  public Integer getActivitylink() {
    return activitylink;
  }

  public void setActivitylink(Integer activitylink) {
    this.activitylink = activitylink;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner allowofflineattempts(Boolean allowofflineattempts) {
    this.allowofflineattempts = allowofflineattempts;
    return this;
  }

   /**
   * Whether to allow the lesson to be attempted offline in the mobile app
   * @return allowofflineattempts
  **/
  @javax.annotation.Nullable
  public Boolean getAllowofflineattempts() {
    return allowofflineattempts;
  }

  public void setAllowofflineattempts(Boolean allowofflineattempts) {
    this.allowofflineattempts = allowofflineattempts;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner available(Integer available) {
    this.available = available;
    return this;
  }

   /**
   * Available from
   * @return available
  **/
  @javax.annotation.Nullable
  public Integer getAvailable() {
    return available;
  }

  public void setAvailable(Integer available) {
    this.available = available;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner bgcolor(String bgcolor) {
    this.bgcolor = bgcolor;
    return this;
  }

   /**
   * Slideshow bgcolor
   * @return bgcolor
  **/
  @javax.annotation.Nullable
  public String getBgcolor() {
    return bgcolor;
  }

  public void setBgcolor(String bgcolor) {
    this.bgcolor = bgcolor;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner completionendreached(Integer completionendreached) {
    this.completionendreached = completionendreached;
    return this;
  }

   /**
   * Require end reached for completion?
   * @return completionendreached
  **/
  @javax.annotation.Nullable
  public Integer getCompletionendreached() {
    return completionendreached;
  }

  public void setCompletionendreached(Integer completionendreached) {
    this.completionendreached = completionendreached;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner completiontimespent(Integer completiontimespent) {
    this.completiontimespent = completiontimespent;
    return this;
  }

   /**
   * Student must do this activity at least for
   * @return completiontimespent
  **/
  @javax.annotation.Nullable
  public Integer getCompletiontimespent() {
    return completiontimespent;
  }

  public void setCompletiontimespent(Integer completiontimespent) {
    this.completiontimespent = completiontimespent;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner conditions(String conditions) {
    this.conditions = conditions;
    return this;
  }

   /**
   * Conditions to enable the lesson
   * @return conditions
  **/
  @javax.annotation.Nullable
  public String getConditions() {
    return conditions;
  }

  public void setConditions(String conditions) {
    this.conditions = conditions;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner course(Integer course) {
    this.course = course;
    return this;
  }

   /**
   * Foreign key reference to the course this lesson is part of.
   * @return course
  **/
  @javax.annotation.Nullable
  public Integer getCourse() {
    return course;
  }

  public void setCourse(Integer course) {
    this.course = course;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner coursemodule(Integer coursemodule) {
    this.coursemodule = coursemodule;
    return this;
  }

   /**
   * Course module id.
   * @return coursemodule
  **/
  @javax.annotation.Nullable
  public Integer getCoursemodule() {
    return coursemodule;
  }

  public void setCoursemodule(Integer coursemodule) {
    this.coursemodule = coursemodule;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner custom(Boolean custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Custom scoring?
   * @return custom
  **/
  @javax.annotation.Nullable
  public Boolean getCustom() {
    return custom;
  }

  public void setCustom(Boolean custom) {
    this.custom = custom;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner deadline(Integer deadline) {
    this.deadline = deadline;
    return this;
  }

   /**
   * Available until
   * @return deadline
  **/
  @javax.annotation.Nullable
  public Integer getDeadline() {
    return deadline;
  }

  public void setDeadline(Integer deadline) {
    this.deadline = deadline;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner dependency(Integer dependency) {
    this.dependency = dependency;
    return this;
  }

   /**
   * Dependent on (another lesson id)
   * @return dependency
  **/
  @javax.annotation.Nullable
  public Integer getDependency() {
    return dependency;
  }

  public void setDependency(Integer dependency) {
    this.dependency = dependency;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner displayleft(Boolean displayleft) {
    this.displayleft = displayleft;
    return this;
  }

   /**
   * Display left pages menu?
   * @return displayleft
  **/
  @javax.annotation.Nullable
  public Boolean getDisplayleft() {
    return displayleft;
  }

  public void setDisplayleft(Boolean displayleft) {
    this.displayleft = displayleft;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner displayleftif(Integer displayleftif) {
    this.displayleftif = displayleftif;
    return this;
  }

   /**
   * Minimum grade to display menu
   * @return displayleftif
  **/
  @javax.annotation.Nullable
  public Integer getDisplayleftif() {
    return displayleftif;
  }

  public void setDisplayleftif(Integer displayleftif) {
    this.displayleftif = displayleftif;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner feedback(Boolean feedback) {
    this.feedback = feedback;
    return this;
  }

   /**
   * Display default feedback
   * @return feedback
  **/
  @javax.annotation.Nullable
  public Boolean getFeedback() {
    return feedback;
  }

  public void setFeedback(Boolean feedback) {
    this.feedback = feedback;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner grade(Integer grade) {
    this.grade = grade;
    return this;
  }

   /**
   * The total that the grade is scaled to be out of
   * @return grade
  **/
  @javax.annotation.Nullable
  public Integer getGrade() {
    return grade;
  }

  public void setGrade(Integer grade) {
    this.grade = grade;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Slideshow height
   * @return height
  **/
  @javax.annotation.Nullable
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Standard Moodle primary key.
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner intro(String intro) {
    this.intro = intro;
    return this;
  }

   /**
   * Lesson introduction text.
   * @return intro
  **/
  @javax.annotation.Nullable
  public String getIntro() {
    return intro;
  }

  public void setIntro(String intro) {
    this.intro = intro;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner introfiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> introfiles) {
    this.introfiles = introfiles;
    return this;
  }

  public ModLessonGetLessonsByCourses200ResponseLessonsInner addIntrofilesItem(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner introfilesItem) {
    if (this.introfiles == null) {
      this.introfiles = new ArrayList<>();
    }
    this.introfiles.add(introfilesItem);
    return this;
  }

   /**
   * Get introfiles
   * @return introfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> getIntrofiles() {
    return introfiles;
  }

  public void setIntrofiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> introfiles) {
    this.introfiles = introfiles;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner introformat(Integer introformat) {
    this.introformat = introformat;
    return this;
  }

   /**
   * intro format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return introformat
  **/
  @javax.annotation.Nullable
  public Integer getIntroformat() {
    return introformat;
  }

  public void setIntroformat(Integer introformat) {
    this.introformat = introformat;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner lang(String lang) {
    this.lang = lang;
    return this;
  }

   /**
   * Forced activity language
   * @return lang
  **/
  @javax.annotation.Nullable
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner maxanswers(Integer maxanswers) {
    this.maxanswers = maxanswers;
    return this;
  }

   /**
   * Maximum answers per page
   * @return maxanswers
  **/
  @javax.annotation.Nullable
  public Integer getMaxanswers() {
    return maxanswers;
  }

  public void setMaxanswers(Integer maxanswers) {
    this.maxanswers = maxanswers;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner maxattempts(Integer maxattempts) {
    this.maxattempts = maxattempts;
    return this;
  }

   /**
   * Maximum attempts
   * @return maxattempts
  **/
  @javax.annotation.Nullable
  public Integer getMaxattempts() {
    return maxattempts;
  }

  public void setMaxattempts(Integer maxattempts) {
    this.maxattempts = maxattempts;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner maxpages(Integer maxpages) {
    this.maxpages = maxpages;
    return this;
  }

   /**
   * Number of pages to show
   * @return maxpages
  **/
  @javax.annotation.Nullable
  public Integer getMaxpages() {
    return maxpages;
  }

  public void setMaxpages(Integer maxpages) {
    this.maxpages = maxpages;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner mediaclose(Integer mediaclose) {
    this.mediaclose = mediaclose;
    return this;
  }

   /**
   * Display a close button in the popup?
   * @return mediaclose
  **/
  @javax.annotation.Nullable
  public Integer getMediaclose() {
    return mediaclose;
  }

  public void setMediaclose(Integer mediaclose) {
    this.mediaclose = mediaclose;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner mediafile(String mediafile) {
    this.mediafile = mediafile;
    return this;
  }

   /**
   * Local file path or full external URL
   * @return mediafile
  **/
  @javax.annotation.Nullable
  public String getMediafile() {
    return mediafile;
  }

  public void setMediafile(String mediafile) {
    this.mediafile = mediafile;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner mediafiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> mediafiles) {
    this.mediafiles = mediafiles;
    return this;
  }

  public ModLessonGetLessonsByCourses200ResponseLessonsInner addMediafilesItem(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner mediafilesItem) {
    if (this.mediafiles == null) {
      this.mediafiles = new ArrayList<>();
    }
    this.mediafiles.add(mediafilesItem);
    return this;
  }

   /**
   * Get mediafiles
   * @return mediafiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> getMediafiles() {
    return mediafiles;
  }

  public void setMediafiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> mediafiles) {
    this.mediafiles = mediafiles;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner mediaheight(Integer mediaheight) {
    this.mediaheight = mediaheight;
    return this;
  }

   /**
   * Popup for media file height
   * @return mediaheight
  **/
  @javax.annotation.Nullable
  public Integer getMediaheight() {
    return mediaheight;
  }

  public void setMediaheight(Integer mediaheight) {
    this.mediaheight = mediaheight;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner mediawidth(Integer mediawidth) {
    this.mediawidth = mediawidth;
    return this;
  }

   /**
   * Popup for media with
   * @return mediawidth
  **/
  @javax.annotation.Nullable
  public Integer getMediawidth() {
    return mediawidth;
  }

  public void setMediawidth(Integer mediawidth) {
    this.mediawidth = mediawidth;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner minquestions(Integer minquestions) {
    this.minquestions = minquestions;
    return this;
  }

   /**
   * Minimum number of questions
   * @return minquestions
  **/
  @javax.annotation.Nullable
  public Integer getMinquestions() {
    return minquestions;
  }

  public void setMinquestions(Integer minquestions) {
    this.minquestions = minquestions;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner modattempts(Boolean modattempts) {
    this.modattempts = modattempts;
    return this;
  }

   /**
   * Allow student review?
   * @return modattempts
  **/
  @javax.annotation.Nullable
  public Boolean getModattempts() {
    return modattempts;
  }

  public void setModattempts(Boolean modattempts) {
    this.modattempts = modattempts;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Lesson name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner nextpagedefault(Integer nextpagedefault) {
    this.nextpagedefault = nextpagedefault;
    return this;
  }

   /**
   * Action for a correct answer
   * @return nextpagedefault
  **/
  @javax.annotation.Nullable
  public Integer getNextpagedefault() {
    return nextpagedefault;
  }

  public void setNextpagedefault(Integer nextpagedefault) {
    this.nextpagedefault = nextpagedefault;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner ongoing(Boolean ongoing) {
    this.ongoing = ongoing;
    return this;
  }

   /**
   * Display ongoing score?
   * @return ongoing
  **/
  @javax.annotation.Nullable
  public Boolean getOngoing() {
    return ongoing;
  }

  public void setOngoing(Boolean ongoing) {
    this.ongoing = ongoing;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password
   * @return password
  **/
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner practice(Boolean practice) {
    this.practice = practice;
    return this;
  }

   /**
   * Practice lesson?
   * @return practice
  **/
  @javax.annotation.Nullable
  public Boolean getPractice() {
    return practice;
  }

  public void setPractice(Boolean practice) {
    this.practice = practice;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner progressbar(Boolean progressbar) {
    this.progressbar = progressbar;
    return this;
  }

   /**
   * Display progress bar?
   * @return progressbar
  **/
  @javax.annotation.Nullable
  public Boolean getProgressbar() {
    return progressbar;
  }

  public void setProgressbar(Boolean progressbar) {
    this.progressbar = progressbar;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner retake(Boolean retake) {
    this.retake = retake;
    return this;
  }

   /**
   * Re-takes allowed
   * @return retake
  **/
  @javax.annotation.Nullable
  public Boolean getRetake() {
    return retake;
  }

  public void setRetake(Boolean retake) {
    this.retake = retake;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner review(Boolean review) {
    this.review = review;
    return this;
  }

   /**
   * Provide option to try a question again
   * @return review
  **/
  @javax.annotation.Nullable
  public Boolean getReview() {
    return review;
  }

  public void setReview(Boolean review) {
    this.review = review;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner slideshow(Boolean slideshow) {
    this.slideshow = slideshow;
    return this;
  }

   /**
   * Display lesson as slideshow
   * @return slideshow
  **/
  @javax.annotation.Nullable
  public Boolean getSlideshow() {
    return slideshow;
  }

  public void setSlideshow(Boolean slideshow) {
    this.slideshow = slideshow;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner timelimit(Integer timelimit) {
    this.timelimit = timelimit;
    return this;
  }

   /**
   * Time limit
   * @return timelimit
  **/
  @javax.annotation.Nullable
  public Integer getTimelimit() {
    return timelimit;
  }

  public void setTimelimit(Integer timelimit) {
    this.timelimit = timelimit;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * Last time settings were updated
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner usemaxgrade(Integer usemaxgrade) {
    this.usemaxgrade = usemaxgrade;
    return this;
  }

   /**
   * How to calculate the final grade
   * @return usemaxgrade
  **/
  @javax.annotation.Nullable
  public Integer getUsemaxgrade() {
    return usemaxgrade;
  }

  public void setUsemaxgrade(Integer usemaxgrade) {
    this.usemaxgrade = usemaxgrade;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner usepassword(Boolean usepassword) {
    this.usepassword = usepassword;
    return this;
  }

   /**
   * Password protected lesson?
   * @return usepassword
  **/
  @javax.annotation.Nullable
  public Boolean getUsepassword() {
    return usepassword;
  }

  public void setUsepassword(Boolean usepassword) {
    this.usepassword = usepassword;
  }


  public ModLessonGetLessonsByCourses200ResponseLessonsInner width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Slideshow width
   * @return width
  **/
  @javax.annotation.Nullable
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModLessonGetLessonsByCourses200ResponseLessonsInner modLessonGetLessonsByCourses200ResponseLessonsInner = (ModLessonGetLessonsByCourses200ResponseLessonsInner) o;
    return Objects.equals(this.activitylink, modLessonGetLessonsByCourses200ResponseLessonsInner.activitylink) &&
        Objects.equals(this.allowofflineattempts, modLessonGetLessonsByCourses200ResponseLessonsInner.allowofflineattempts) &&
        Objects.equals(this.available, modLessonGetLessonsByCourses200ResponseLessonsInner.available) &&
        Objects.equals(this.bgcolor, modLessonGetLessonsByCourses200ResponseLessonsInner.bgcolor) &&
        Objects.equals(this.completionendreached, modLessonGetLessonsByCourses200ResponseLessonsInner.completionendreached) &&
        Objects.equals(this.completiontimespent, modLessonGetLessonsByCourses200ResponseLessonsInner.completiontimespent) &&
        Objects.equals(this.conditions, modLessonGetLessonsByCourses200ResponseLessonsInner.conditions) &&
        Objects.equals(this.course, modLessonGetLessonsByCourses200ResponseLessonsInner.course) &&
        Objects.equals(this.coursemodule, modLessonGetLessonsByCourses200ResponseLessonsInner.coursemodule) &&
        Objects.equals(this.custom, modLessonGetLessonsByCourses200ResponseLessonsInner.custom) &&
        Objects.equals(this.deadline, modLessonGetLessonsByCourses200ResponseLessonsInner.deadline) &&
        Objects.equals(this.dependency, modLessonGetLessonsByCourses200ResponseLessonsInner.dependency) &&
        Objects.equals(this.displayleft, modLessonGetLessonsByCourses200ResponseLessonsInner.displayleft) &&
        Objects.equals(this.displayleftif, modLessonGetLessonsByCourses200ResponseLessonsInner.displayleftif) &&
        Objects.equals(this.feedback, modLessonGetLessonsByCourses200ResponseLessonsInner.feedback) &&
        Objects.equals(this.grade, modLessonGetLessonsByCourses200ResponseLessonsInner.grade) &&
        Objects.equals(this.height, modLessonGetLessonsByCourses200ResponseLessonsInner.height) &&
        Objects.equals(this.id, modLessonGetLessonsByCourses200ResponseLessonsInner.id) &&
        Objects.equals(this.intro, modLessonGetLessonsByCourses200ResponseLessonsInner.intro) &&
        Objects.equals(this.introfiles, modLessonGetLessonsByCourses200ResponseLessonsInner.introfiles) &&
        Objects.equals(this.introformat, modLessonGetLessonsByCourses200ResponseLessonsInner.introformat) &&
        Objects.equals(this.lang, modLessonGetLessonsByCourses200ResponseLessonsInner.lang) &&
        Objects.equals(this.maxanswers, modLessonGetLessonsByCourses200ResponseLessonsInner.maxanswers) &&
        Objects.equals(this.maxattempts, modLessonGetLessonsByCourses200ResponseLessonsInner.maxattempts) &&
        Objects.equals(this.maxpages, modLessonGetLessonsByCourses200ResponseLessonsInner.maxpages) &&
        Objects.equals(this.mediaclose, modLessonGetLessonsByCourses200ResponseLessonsInner.mediaclose) &&
        Objects.equals(this.mediafile, modLessonGetLessonsByCourses200ResponseLessonsInner.mediafile) &&
        Objects.equals(this.mediafiles, modLessonGetLessonsByCourses200ResponseLessonsInner.mediafiles) &&
        Objects.equals(this.mediaheight, modLessonGetLessonsByCourses200ResponseLessonsInner.mediaheight) &&
        Objects.equals(this.mediawidth, modLessonGetLessonsByCourses200ResponseLessonsInner.mediawidth) &&
        Objects.equals(this.minquestions, modLessonGetLessonsByCourses200ResponseLessonsInner.minquestions) &&
        Objects.equals(this.modattempts, modLessonGetLessonsByCourses200ResponseLessonsInner.modattempts) &&
        Objects.equals(this.name, modLessonGetLessonsByCourses200ResponseLessonsInner.name) &&
        Objects.equals(this.nextpagedefault, modLessonGetLessonsByCourses200ResponseLessonsInner.nextpagedefault) &&
        Objects.equals(this.ongoing, modLessonGetLessonsByCourses200ResponseLessonsInner.ongoing) &&
        Objects.equals(this.password, modLessonGetLessonsByCourses200ResponseLessonsInner.password) &&
        Objects.equals(this.practice, modLessonGetLessonsByCourses200ResponseLessonsInner.practice) &&
        Objects.equals(this.progressbar, modLessonGetLessonsByCourses200ResponseLessonsInner.progressbar) &&
        Objects.equals(this.retake, modLessonGetLessonsByCourses200ResponseLessonsInner.retake) &&
        Objects.equals(this.review, modLessonGetLessonsByCourses200ResponseLessonsInner.review) &&
        Objects.equals(this.slideshow, modLessonGetLessonsByCourses200ResponseLessonsInner.slideshow) &&
        Objects.equals(this.timelimit, modLessonGetLessonsByCourses200ResponseLessonsInner.timelimit) &&
        Objects.equals(this.timemodified, modLessonGetLessonsByCourses200ResponseLessonsInner.timemodified) &&
        Objects.equals(this.usemaxgrade, modLessonGetLessonsByCourses200ResponseLessonsInner.usemaxgrade) &&
        Objects.equals(this.usepassword, modLessonGetLessonsByCourses200ResponseLessonsInner.usepassword) &&
        Objects.equals(this.width, modLessonGetLessonsByCourses200ResponseLessonsInner.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activitylink, allowofflineattempts, available, bgcolor, completionendreached, completiontimespent, conditions, course, coursemodule, custom, deadline, dependency, displayleft, displayleftif, feedback, grade, height, id, intro, introfiles, introformat, lang, maxanswers, maxattempts, maxpages, mediaclose, mediafile, mediafiles, mediaheight, mediawidth, minquestions, modattempts, name, nextpagedefault, ongoing, password, practice, progressbar, retake, review, slideshow, timelimit, timemodified, usemaxgrade, usepassword, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModLessonGetLessonsByCourses200ResponseLessonsInner {\n");
    sb.append("    activitylink: ").append(toIndentedString(activitylink)).append("\n");
    sb.append("    allowofflineattempts: ").append(toIndentedString(allowofflineattempts)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    bgcolor: ").append(toIndentedString(bgcolor)).append("\n");
    sb.append("    completionendreached: ").append(toIndentedString(completionendreached)).append("\n");
    sb.append("    completiontimespent: ").append(toIndentedString(completiontimespent)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    coursemodule: ").append(toIndentedString(coursemodule)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    dependency: ").append(toIndentedString(dependency)).append("\n");
    sb.append("    displayleft: ").append(toIndentedString(displayleft)).append("\n");
    sb.append("    displayleftif: ").append(toIndentedString(displayleftif)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    grade: ").append(toIndentedString(grade)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    intro: ").append(toIndentedString(intro)).append("\n");
    sb.append("    introfiles: ").append(toIndentedString(introfiles)).append("\n");
    sb.append("    introformat: ").append(toIndentedString(introformat)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    maxanswers: ").append(toIndentedString(maxanswers)).append("\n");
    sb.append("    maxattempts: ").append(toIndentedString(maxattempts)).append("\n");
    sb.append("    maxpages: ").append(toIndentedString(maxpages)).append("\n");
    sb.append("    mediaclose: ").append(toIndentedString(mediaclose)).append("\n");
    sb.append("    mediafile: ").append(toIndentedString(mediafile)).append("\n");
    sb.append("    mediafiles: ").append(toIndentedString(mediafiles)).append("\n");
    sb.append("    mediaheight: ").append(toIndentedString(mediaheight)).append("\n");
    sb.append("    mediawidth: ").append(toIndentedString(mediawidth)).append("\n");
    sb.append("    minquestions: ").append(toIndentedString(minquestions)).append("\n");
    sb.append("    modattempts: ").append(toIndentedString(modattempts)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextpagedefault: ").append(toIndentedString(nextpagedefault)).append("\n");
    sb.append("    ongoing: ").append(toIndentedString(ongoing)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    practice: ").append(toIndentedString(practice)).append("\n");
    sb.append("    progressbar: ").append(toIndentedString(progressbar)).append("\n");
    sb.append("    retake: ").append(toIndentedString(retake)).append("\n");
    sb.append("    review: ").append(toIndentedString(review)).append("\n");
    sb.append("    slideshow: ").append(toIndentedString(slideshow)).append("\n");
    sb.append("    timelimit: ").append(toIndentedString(timelimit)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    usemaxgrade: ").append(toIndentedString(usemaxgrade)).append("\n");
    sb.append("    usepassword: ").append(toIndentedString(usepassword)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activitylink");
    openapiFields.add("allowofflineattempts");
    openapiFields.add("available");
    openapiFields.add("bgcolor");
    openapiFields.add("completionendreached");
    openapiFields.add("completiontimespent");
    openapiFields.add("conditions");
    openapiFields.add("course");
    openapiFields.add("coursemodule");
    openapiFields.add("custom");
    openapiFields.add("deadline");
    openapiFields.add("dependency");
    openapiFields.add("displayleft");
    openapiFields.add("displayleftif");
    openapiFields.add("feedback");
    openapiFields.add("grade");
    openapiFields.add("height");
    openapiFields.add("id");
    openapiFields.add("intro");
    openapiFields.add("introfiles");
    openapiFields.add("introformat");
    openapiFields.add("lang");
    openapiFields.add("maxanswers");
    openapiFields.add("maxattempts");
    openapiFields.add("maxpages");
    openapiFields.add("mediaclose");
    openapiFields.add("mediafile");
    openapiFields.add("mediafiles");
    openapiFields.add("mediaheight");
    openapiFields.add("mediawidth");
    openapiFields.add("minquestions");
    openapiFields.add("modattempts");
    openapiFields.add("name");
    openapiFields.add("nextpagedefault");
    openapiFields.add("ongoing");
    openapiFields.add("password");
    openapiFields.add("practice");
    openapiFields.add("progressbar");
    openapiFields.add("retake");
    openapiFields.add("review");
    openapiFields.add("slideshow");
    openapiFields.add("timelimit");
    openapiFields.add("timemodified");
    openapiFields.add("usemaxgrade");
    openapiFields.add("usepassword");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModLessonGetLessonsByCourses200ResponseLessonsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModLessonGetLessonsByCourses200ResponseLessonsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModLessonGetLessonsByCourses200ResponseLessonsInner is not found in the empty JSON string", ModLessonGetLessonsByCourses200ResponseLessonsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModLessonGetLessonsByCourses200ResponseLessonsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModLessonGetLessonsByCourses200ResponseLessonsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bgcolor") != null && !jsonObj.get("bgcolor").isJsonNull()) && !jsonObj.get("bgcolor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bgcolor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bgcolor").toString()));
      }
      if ((jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) && !jsonObj.get("conditions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conditions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
      }
      if ((jsonObj.get("intro") != null && !jsonObj.get("intro").isJsonNull()) && !jsonObj.get("intro").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intro` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intro").toString()));
      }
      if (jsonObj.get("introfiles") != null && !jsonObj.get("introfiles").isJsonNull()) {
        JsonArray jsonArrayintrofiles = jsonObj.getAsJsonArray("introfiles");
        if (jsonArrayintrofiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("introfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `introfiles` to be an array in the JSON string but got `%s`", jsonObj.get("introfiles").toString()));
          }

          // validate the optional field `introfiles` (array)
          for (int i = 0; i < jsonArrayintrofiles.size(); i++) {
            CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner.validateJsonElement(jsonArrayintrofiles.get(i));
          };
        }
      }
      if ((jsonObj.get("lang") != null && !jsonObj.get("lang").isJsonNull()) && !jsonObj.get("lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang").toString()));
      }
      if ((jsonObj.get("mediafile") != null && !jsonObj.get("mediafile").isJsonNull()) && !jsonObj.get("mediafile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mediafile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediafile").toString()));
      }
      if (jsonObj.get("mediafiles") != null && !jsonObj.get("mediafiles").isJsonNull()) {
        JsonArray jsonArraymediafiles = jsonObj.getAsJsonArray("mediafiles");
        if (jsonArraymediafiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mediafiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mediafiles` to be an array in the JSON string but got `%s`", jsonObj.get("mediafiles").toString()));
          }

          // validate the optional field `mediafiles` (array)
          for (int i = 0; i < jsonArraymediafiles.size(); i++) {
            CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner.validateJsonElement(jsonArraymediafiles.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModLessonGetLessonsByCourses200ResponseLessonsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModLessonGetLessonsByCourses200ResponseLessonsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModLessonGetLessonsByCourses200ResponseLessonsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModLessonGetLessonsByCourses200ResponseLessonsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModLessonGetLessonsByCourses200ResponseLessonsInner>() {
           @Override
           public void write(JsonWriter out, ModLessonGetLessonsByCourses200ResponseLessonsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModLessonGetLessonsByCourses200ResponseLessonsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModLessonGetLessonsByCourses200ResponseLessonsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModLessonGetLessonsByCourses200ResponseLessonsInner
  * @throws IOException if the JSON string is invalid with respect to ModLessonGetLessonsByCourses200ResponseLessonsInner
  */
  public static ModLessonGetLessonsByCourses200ResponseLessonsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModLessonGetLessonsByCourses200ResponseLessonsInner.class);
  }

 /**
  * Convert an instance of ModLessonGetLessonsByCourses200ResponseLessonsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

