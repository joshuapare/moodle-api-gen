/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_MAX = "max";
  @SerializedName(SERIALIZED_NAME_MAX)
  private BigDecimal max = new BigDecimal("null");

  public static final String SERIALIZED_NAME_MIN = "min";
  @SerializedName(SERIALIZED_NAME_MIN)
  private BigDecimal min = new BigDecimal("null");

  public static final String SERIALIZED_NAME_SCALE = "scale";
  @SerializedName(SERIALIZED_NAME_SCALE)
  private String scale = "null";

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private String weight = "null";

  public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner() {
  }

  public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Dimension id.
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner max(BigDecimal max) {
    this.max = max;
    return this;
  }

   /**
   * Maximum grade for the dimension.
   * @return max
  **/
  @javax.annotation.Nullable
  public BigDecimal getMax() {
    return max;
  }

  public void setMax(BigDecimal max) {
    this.max = max;
  }


  public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner min(BigDecimal min) {
    this.min = min;
    return this;
  }

   /**
   * Minimum grade for the dimension.
   * @return min
  **/
  @javax.annotation.Nullable
  public BigDecimal getMin() {
    return min;
  }

  public void setMin(BigDecimal min) {
    this.min = min;
  }


  public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner scale(String scale) {
    this.scale = scale;
    return this;
  }

   /**
   * Scale items (if used).
   * @return scale
  **/
  @javax.annotation.Nullable
  public String getScale() {
    return scale;
  }

  public void setScale(String scale) {
    this.scale = scale;
  }


  public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner weight(String weight) {
    this.weight = weight;
    return this;
  }

   /**
   * The weight of the dimension.
   * @return weight
  **/
  @javax.annotation.Nullable
  public String getWeight() {
    return weight;
  }

  public void setWeight(String weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner modWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner = (ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner) o;
    return Objects.equals(this.id, modWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.id) &&
        Objects.equals(this.max, modWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.max) &&
        Objects.equals(this.min, modWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.min) &&
        Objects.equals(this.scale, modWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.scale) &&
        Objects.equals(this.weight, modWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, max, min, scale, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("max");
    openapiFields.add("min");
    openapiFields.add("scale");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner is not found in the empty JSON string", ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("scale") != null && !jsonObj.get("scale").isJsonNull()) && !jsonObj.get("scale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scale").toString()));
      }
      if ((jsonObj.get("weight") != null && !jsonObj.get("weight").isJsonNull()) && !jsonObj.get("weight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weight").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner>() {
           @Override
           public void write(JsonWriter out, ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner
  * @throws IOException if the JSON string is invalid with respect to ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner
  */
  public static ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner.class);
  }

 /**
  * Convert an instance of ModWorkshopGetAssessmentFormDefinition200ResponseDimensionsinfoInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

