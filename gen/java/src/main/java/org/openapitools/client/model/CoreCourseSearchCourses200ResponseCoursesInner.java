/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner;
import org.openapitools.client.model.CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner;
import org.openapitools.client.model.CoreCourseSearchCourses200ResponseCoursesInnerContactsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreCourseSearchCourses200ResponseCoursesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreCourseSearchCourses200ResponseCoursesInner {
  public static final String SERIALIZED_NAME_CATEGORYID = "categoryid";
  @SerializedName(SERIALIZED_NAME_CATEGORYID)
  private Integer categoryid;

  public static final String SERIALIZED_NAME_CATEGORYNAME = "categoryname";
  @SerializedName(SERIALIZED_NAME_CATEGORYNAME)
  private String categoryname;

  public static final String SERIALIZED_NAME_CONTACTS = "contacts";
  @SerializedName(SERIALIZED_NAME_CONTACTS)
  private List<CoreCourseSearchCourses200ResponseCoursesInnerContactsInner> contacts = new ArrayList<>();

  public static final String SERIALIZED_NAME_COURSEIMAGE = "courseimage";
  @SerializedName(SERIALIZED_NAME_COURSEIMAGE)
  private String courseimage;

  public static final String SERIALIZED_NAME_CUSTOMFIELDS = "customfields";
  @SerializedName(SERIALIZED_NAME_CUSTOMFIELDS)
  private List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> customfields = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAYNAME = "displayname";
  @SerializedName(SERIALIZED_NAME_DISPLAYNAME)
  private String displayname;

  public static final String SERIALIZED_NAME_ENROLLMENTMETHODS = "enrollmentmethods";
  @SerializedName(SERIALIZED_NAME_ENROLLMENTMETHODS)
  private List<Object> enrollmentmethods = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULLNAME = "fullname";
  @SerializedName(SERIALIZED_NAME_FULLNAME)
  private String fullname;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_OVERVIEWFILES = "overviewfiles";
  @SerializedName(SERIALIZED_NAME_OVERVIEWFILES)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> overviewfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHORTNAME = "shortname";
  @SerializedName(SERIALIZED_NAME_SHORTNAME)
  private String shortname;

  public static final String SERIALIZED_NAME_SHOWACTIVITYDATES = "showactivitydates";
  @SerializedName(SERIALIZED_NAME_SHOWACTIVITYDATES)
  private Boolean showactivitydates;

  public static final String SERIALIZED_NAME_SHOWCOMPLETIONCONDITIONS = "showcompletionconditions";
  @SerializedName(SERIALIZED_NAME_SHOWCOMPLETIONCONDITIONS)
  private Boolean showcompletionconditions;

  public static final String SERIALIZED_NAME_SORTORDER = "sortorder";
  @SerializedName(SERIALIZED_NAME_SORTORDER)
  private Integer sortorder;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public static final String SERIALIZED_NAME_SUMMARYFILES = "summaryfiles";
  @SerializedName(SERIALIZED_NAME_SUMMARYFILES)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> summaryfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUMMARYFORMAT = "summaryformat";
  @SerializedName(SERIALIZED_NAME_SUMMARYFORMAT)
  private Integer summaryformat;

  public CoreCourseSearchCourses200ResponseCoursesInner() {
  }

  public CoreCourseSearchCourses200ResponseCoursesInner categoryid(Integer categoryid) {
    this.categoryid = categoryid;
    return this;
  }

   /**
   * category id
   * @return categoryid
  **/
  @javax.annotation.Nullable
  public Integer getCategoryid() {
    return categoryid;
  }

  public void setCategoryid(Integer categoryid) {
    this.categoryid = categoryid;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner categoryname(String categoryname) {
    this.categoryname = categoryname;
    return this;
  }

   /**
   * category name
   * @return categoryname
  **/
  @javax.annotation.Nullable
  public String getCategoryname() {
    return categoryname;
  }

  public void setCategoryname(String categoryname) {
    this.categoryname = categoryname;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner contacts(List<CoreCourseSearchCourses200ResponseCoursesInnerContactsInner> contacts) {
    this.contacts = contacts;
    return this;
  }

  public CoreCourseSearchCourses200ResponseCoursesInner addContactsItem(CoreCourseSearchCourses200ResponseCoursesInnerContactsInner contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @javax.annotation.Nullable
  public List<CoreCourseSearchCourses200ResponseCoursesInnerContactsInner> getContacts() {
    return contacts;
  }

  public void setContacts(List<CoreCourseSearchCourses200ResponseCoursesInnerContactsInner> contacts) {
    this.contacts = contacts;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner courseimage(String courseimage) {
    this.courseimage = courseimage;
    return this;
  }

   /**
   * Course image
   * @return courseimage
  **/
  @javax.annotation.Nullable
  public String getCourseimage() {
    return courseimage;
  }

  public void setCourseimage(String courseimage) {
    this.courseimage = courseimage;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner customfields(List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> customfields) {
    this.customfields = customfields;
    return this;
  }

  public CoreCourseSearchCourses200ResponseCoursesInner addCustomfieldsItem(CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner customfieldsItem) {
    if (this.customfields == null) {
      this.customfields = new ArrayList<>();
    }
    this.customfields.add(customfieldsItem);
    return this;
  }

   /**
   * Get customfields
   * @return customfields
  **/
  @javax.annotation.Nullable
  public List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> getCustomfields() {
    return customfields;
  }

  public void setCustomfields(List<CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner> customfields) {
    this.customfields = customfields;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner displayname(String displayname) {
    this.displayname = displayname;
    return this;
  }

   /**
   * course display name
   * @return displayname
  **/
  @javax.annotation.Nullable
  public String getDisplayname() {
    return displayname;
  }

  public void setDisplayname(String displayname) {
    this.displayname = displayname;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner enrollmentmethods(List<Object> enrollmentmethods) {
    this.enrollmentmethods = enrollmentmethods;
    return this;
  }

  public CoreCourseSearchCourses200ResponseCoursesInner addEnrollmentmethodsItem(Object enrollmentmethodsItem) {
    if (this.enrollmentmethods == null) {
      this.enrollmentmethods = new ArrayList<>();
    }
    this.enrollmentmethods.add(enrollmentmethodsItem);
    return this;
  }

   /**
   * Get enrollmentmethods
   * @return enrollmentmethods
  **/
  @javax.annotation.Nullable
  public List<Object> getEnrollmentmethods() {
    return enrollmentmethods;
  }

  public void setEnrollmentmethods(List<Object> enrollmentmethods) {
    this.enrollmentmethods = enrollmentmethods;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

   /**
   * course full name
   * @return fullname
  **/
  @javax.annotation.Nullable
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * course id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner overviewfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> overviewfiles) {
    this.overviewfiles = overviewfiles;
    return this;
  }

  public CoreCourseSearchCourses200ResponseCoursesInner addOverviewfilesItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner overviewfilesItem) {
    if (this.overviewfiles == null) {
      this.overviewfiles = new ArrayList<>();
    }
    this.overviewfiles.add(overviewfilesItem);
    return this;
  }

   /**
   * Get overviewfiles
   * @return overviewfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getOverviewfiles() {
    return overviewfiles;
  }

  public void setOverviewfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> overviewfiles) {
    this.overviewfiles = overviewfiles;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner shortname(String shortname) {
    this.shortname = shortname;
    return this;
  }

   /**
   * course short name
   * @return shortname
  **/
  @javax.annotation.Nullable
  public String getShortname() {
    return shortname;
  }

  public void setShortname(String shortname) {
    this.shortname = shortname;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner showactivitydates(Boolean showactivitydates) {
    this.showactivitydates = showactivitydates;
    return this;
  }

   /**
   * Whether the activity dates are shown or not
   * @return showactivitydates
  **/
  @javax.annotation.Nullable
  public Boolean getShowactivitydates() {
    return showactivitydates;
  }

  public void setShowactivitydates(Boolean showactivitydates) {
    this.showactivitydates = showactivitydates;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner showcompletionconditions(Boolean showcompletionconditions) {
    this.showcompletionconditions = showcompletionconditions;
    return this;
  }

   /**
   * Whether the activity completion conditions are shown or not
   * @return showcompletionconditions
  **/
  @javax.annotation.Nullable
  public Boolean getShowcompletionconditions() {
    return showcompletionconditions;
  }

  public void setShowcompletionconditions(Boolean showcompletionconditions) {
    this.showcompletionconditions = showcompletionconditions;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner sortorder(Integer sortorder) {
    this.sortorder = sortorder;
    return this;
  }

   /**
   * Sort order in the category
   * @return sortorder
  **/
  @javax.annotation.Nullable
  public Integer getSortorder() {
    return sortorder;
  }

  public void setSortorder(Integer sortorder) {
    this.sortorder = sortorder;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * summary
   * @return summary
  **/
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner summaryfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> summaryfiles) {
    this.summaryfiles = summaryfiles;
    return this;
  }

  public CoreCourseSearchCourses200ResponseCoursesInner addSummaryfilesItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner summaryfilesItem) {
    if (this.summaryfiles == null) {
      this.summaryfiles = new ArrayList<>();
    }
    this.summaryfiles.add(summaryfilesItem);
    return this;
  }

   /**
   * Get summaryfiles
   * @return summaryfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getSummaryfiles() {
    return summaryfiles;
  }

  public void setSummaryfiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> summaryfiles) {
    this.summaryfiles = summaryfiles;
  }


  public CoreCourseSearchCourses200ResponseCoursesInner summaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
    return this;
  }

   /**
   * summary format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return summaryformat
  **/
  @javax.annotation.Nullable
  public Integer getSummaryformat() {
    return summaryformat;
  }

  public void setSummaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreCourseSearchCourses200ResponseCoursesInner coreCourseSearchCourses200ResponseCoursesInner = (CoreCourseSearchCourses200ResponseCoursesInner) o;
    return Objects.equals(this.categoryid, coreCourseSearchCourses200ResponseCoursesInner.categoryid) &&
        Objects.equals(this.categoryname, coreCourseSearchCourses200ResponseCoursesInner.categoryname) &&
        Objects.equals(this.contacts, coreCourseSearchCourses200ResponseCoursesInner.contacts) &&
        Objects.equals(this.courseimage, coreCourseSearchCourses200ResponseCoursesInner.courseimage) &&
        Objects.equals(this.customfields, coreCourseSearchCourses200ResponseCoursesInner.customfields) &&
        Objects.equals(this.displayname, coreCourseSearchCourses200ResponseCoursesInner.displayname) &&
        Objects.equals(this.enrollmentmethods, coreCourseSearchCourses200ResponseCoursesInner.enrollmentmethods) &&
        Objects.equals(this.fullname, coreCourseSearchCourses200ResponseCoursesInner.fullname) &&
        Objects.equals(this.id, coreCourseSearchCourses200ResponseCoursesInner.id) &&
        Objects.equals(this.overviewfiles, coreCourseSearchCourses200ResponseCoursesInner.overviewfiles) &&
        Objects.equals(this.shortname, coreCourseSearchCourses200ResponseCoursesInner.shortname) &&
        Objects.equals(this.showactivitydates, coreCourseSearchCourses200ResponseCoursesInner.showactivitydates) &&
        Objects.equals(this.showcompletionconditions, coreCourseSearchCourses200ResponseCoursesInner.showcompletionconditions) &&
        Objects.equals(this.sortorder, coreCourseSearchCourses200ResponseCoursesInner.sortorder) &&
        Objects.equals(this.summary, coreCourseSearchCourses200ResponseCoursesInner.summary) &&
        Objects.equals(this.summaryfiles, coreCourseSearchCourses200ResponseCoursesInner.summaryfiles) &&
        Objects.equals(this.summaryformat, coreCourseSearchCourses200ResponseCoursesInner.summaryformat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryid, categoryname, contacts, courseimage, customfields, displayname, enrollmentmethods, fullname, id, overviewfiles, shortname, showactivitydates, showcompletionconditions, sortorder, summary, summaryfiles, summaryformat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreCourseSearchCourses200ResponseCoursesInner {\n");
    sb.append("    categoryid: ").append(toIndentedString(categoryid)).append("\n");
    sb.append("    categoryname: ").append(toIndentedString(categoryname)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    courseimage: ").append(toIndentedString(courseimage)).append("\n");
    sb.append("    customfields: ").append(toIndentedString(customfields)).append("\n");
    sb.append("    displayname: ").append(toIndentedString(displayname)).append("\n");
    sb.append("    enrollmentmethods: ").append(toIndentedString(enrollmentmethods)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    overviewfiles: ").append(toIndentedString(overviewfiles)).append("\n");
    sb.append("    shortname: ").append(toIndentedString(shortname)).append("\n");
    sb.append("    showactivitydates: ").append(toIndentedString(showactivitydates)).append("\n");
    sb.append("    showcompletionconditions: ").append(toIndentedString(showcompletionconditions)).append("\n");
    sb.append("    sortorder: ").append(toIndentedString(sortorder)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    summaryfiles: ").append(toIndentedString(summaryfiles)).append("\n");
    sb.append("    summaryformat: ").append(toIndentedString(summaryformat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categoryid");
    openapiFields.add("categoryname");
    openapiFields.add("contacts");
    openapiFields.add("courseimage");
    openapiFields.add("customfields");
    openapiFields.add("displayname");
    openapiFields.add("enrollmentmethods");
    openapiFields.add("fullname");
    openapiFields.add("id");
    openapiFields.add("overviewfiles");
    openapiFields.add("shortname");
    openapiFields.add("showactivitydates");
    openapiFields.add("showcompletionconditions");
    openapiFields.add("sortorder");
    openapiFields.add("summary");
    openapiFields.add("summaryfiles");
    openapiFields.add("summaryformat");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreCourseSearchCourses200ResponseCoursesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreCourseSearchCourses200ResponseCoursesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreCourseSearchCourses200ResponseCoursesInner is not found in the empty JSON string", CoreCourseSearchCourses200ResponseCoursesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreCourseSearchCourses200ResponseCoursesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreCourseSearchCourses200ResponseCoursesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("categoryname") != null && !jsonObj.get("categoryname").isJsonNull()) && !jsonObj.get("categoryname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryname").toString()));
      }
      if (jsonObj.get("contacts") != null && !jsonObj.get("contacts").isJsonNull()) {
        JsonArray jsonArraycontacts = jsonObj.getAsJsonArray("contacts");
        if (jsonArraycontacts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("contacts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `contacts` to be an array in the JSON string but got `%s`", jsonObj.get("contacts").toString()));
          }

          // validate the optional field `contacts` (array)
          for (int i = 0; i < jsonArraycontacts.size(); i++) {
            CoreCourseSearchCourses200ResponseCoursesInnerContactsInner.validateJsonElement(jsonArraycontacts.get(i));
          };
        }
      }
      if ((jsonObj.get("courseimage") != null && !jsonObj.get("courseimage").isJsonNull()) && !jsonObj.get("courseimage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courseimage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courseimage").toString()));
      }
      if (jsonObj.get("customfields") != null && !jsonObj.get("customfields").isJsonNull()) {
        JsonArray jsonArraycustomfields = jsonObj.getAsJsonArray("customfields");
        if (jsonArraycustomfields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customfields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customfields` to be an array in the JSON string but got `%s`", jsonObj.get("customfields").toString()));
          }

          // validate the optional field `customfields` (array)
          for (int i = 0; i < jsonArraycustomfields.size(); i++) {
            CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner.validateJsonElement(jsonArraycustomfields.get(i));
          };
        }
      }
      if ((jsonObj.get("displayname") != null && !jsonObj.get("displayname").isJsonNull()) && !jsonObj.get("displayname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayname").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("enrollmentmethods") != null && !jsonObj.get("enrollmentmethods").isJsonNull() && !jsonObj.get("enrollmentmethods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentmethods` to be an array in the JSON string but got `%s`", jsonObj.get("enrollmentmethods").toString()));
      }
      if ((jsonObj.get("fullname") != null && !jsonObj.get("fullname").isJsonNull()) && !jsonObj.get("fullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullname").toString()));
      }
      if (jsonObj.get("overviewfiles") != null && !jsonObj.get("overviewfiles").isJsonNull()) {
        JsonArray jsonArrayoverviewfiles = jsonObj.getAsJsonArray("overviewfiles");
        if (jsonArrayoverviewfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("overviewfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `overviewfiles` to be an array in the JSON string but got `%s`", jsonObj.get("overviewfiles").toString()));
          }

          // validate the optional field `overviewfiles` (array)
          for (int i = 0; i < jsonArrayoverviewfiles.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArrayoverviewfiles.get(i));
          };
        }
      }
      if ((jsonObj.get("shortname") != null && !jsonObj.get("shortname").isJsonNull()) && !jsonObj.get("shortname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortname").toString()));
      }
      if ((jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) && !jsonObj.get("summary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary").toString()));
      }
      if (jsonObj.get("summaryfiles") != null && !jsonObj.get("summaryfiles").isJsonNull()) {
        JsonArray jsonArraysummaryfiles = jsonObj.getAsJsonArray("summaryfiles");
        if (jsonArraysummaryfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("summaryfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `summaryfiles` to be an array in the JSON string but got `%s`", jsonObj.get("summaryfiles").toString()));
          }

          // validate the optional field `summaryfiles` (array)
          for (int i = 0; i < jsonArraysummaryfiles.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArraysummaryfiles.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreCourseSearchCourses200ResponseCoursesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreCourseSearchCourses200ResponseCoursesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreCourseSearchCourses200ResponseCoursesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreCourseSearchCourses200ResponseCoursesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreCourseSearchCourses200ResponseCoursesInner>() {
           @Override
           public void write(JsonWriter out, CoreCourseSearchCourses200ResponseCoursesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreCourseSearchCourses200ResponseCoursesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreCourseSearchCourses200ResponseCoursesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreCourseSearchCourses200ResponseCoursesInner
  * @throws IOException if the JSON string is invalid with respect to CoreCourseSearchCourses200ResponseCoursesInner
  */
  public static CoreCourseSearchCourses200ResponseCoursesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreCourseSearchCourses200ResponseCoursesInner.class);
  }

 /**
  * Convert an instance of CoreCourseSearchCourses200ResponseCoursesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

