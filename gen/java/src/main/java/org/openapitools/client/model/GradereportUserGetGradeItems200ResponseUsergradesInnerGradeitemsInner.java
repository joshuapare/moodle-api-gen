/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * Grade items
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner {
  public static final String SERIALIZED_NAME_AVERAGEFORMATTED = "averageformatted";
  @SerializedName(SERIALIZED_NAME_AVERAGEFORMATTED)
  private String averageformatted = "null";

  public static final String SERIALIZED_NAME_CATEGORYID = "categoryid";
  @SerializedName(SERIALIZED_NAME_CATEGORYID)
  private Integer categoryid = null;

  public static final String SERIALIZED_NAME_CMID = "cmid";
  @SerializedName(SERIALIZED_NAME_CMID)
  private Integer cmid = null;

  public static final String SERIALIZED_NAME_FEEDBACK = "feedback";
  @SerializedName(SERIALIZED_NAME_FEEDBACK)
  private String feedback = "null";

  public static final String SERIALIZED_NAME_FEEDBACKFORMAT = "feedbackformat";
  @SerializedName(SERIALIZED_NAME_FEEDBACKFORMAT)
  private Integer feedbackformat;

  public static final String SERIALIZED_NAME_GRADEDATEGRADED = "gradedategraded";
  @SerializedName(SERIALIZED_NAME_GRADEDATEGRADED)
  private Integer gradedategraded = null;

  public static final String SERIALIZED_NAME_GRADEDATESUBMITTED = "gradedatesubmitted";
  @SerializedName(SERIALIZED_NAME_GRADEDATESUBMITTED)
  private Integer gradedatesubmitted = null;

  public static final String SERIALIZED_NAME_GRADEFORMATTED = "gradeformatted";
  @SerializedName(SERIALIZED_NAME_GRADEFORMATTED)
  private String gradeformatted = "null";

  public static final String SERIALIZED_NAME_GRADEHIDDENBYDATE = "gradehiddenbydate";
  @SerializedName(SERIALIZED_NAME_GRADEHIDDENBYDATE)
  private Boolean gradehiddenbydate = null;

  public static final String SERIALIZED_NAME_GRADEISHIDDEN = "gradeishidden";
  @SerializedName(SERIALIZED_NAME_GRADEISHIDDEN)
  private Boolean gradeishidden = null;

  public static final String SERIALIZED_NAME_GRADEISLOCKED = "gradeislocked";
  @SerializedName(SERIALIZED_NAME_GRADEISLOCKED)
  private Boolean gradeislocked = null;

  public static final String SERIALIZED_NAME_GRADEISOVERRIDDEN = "gradeisoverridden";
  @SerializedName(SERIALIZED_NAME_GRADEISOVERRIDDEN)
  private Boolean gradeisoverridden = null;

  public static final String SERIALIZED_NAME_GRADEMAX = "grademax";
  @SerializedName(SERIALIZED_NAME_GRADEMAX)
  private BigDecimal grademax = new BigDecimal("null");

  public static final String SERIALIZED_NAME_GRADEMIN = "grademin";
  @SerializedName(SERIALIZED_NAME_GRADEMIN)
  private BigDecimal grademin = new BigDecimal("null");

  public static final String SERIALIZED_NAME_GRADENEEDSUPDATE = "gradeneedsupdate";
  @SerializedName(SERIALIZED_NAME_GRADENEEDSUPDATE)
  private Boolean gradeneedsupdate = null;

  public static final String SERIALIZED_NAME_GRADERAW = "graderaw";
  @SerializedName(SERIALIZED_NAME_GRADERAW)
  private BigDecimal graderaw = new BigDecimal("null");

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_IDNUMBER = "idnumber";
  @SerializedName(SERIALIZED_NAME_IDNUMBER)
  private String idnumber = "null";

  public static final String SERIALIZED_NAME_ITEMINSTANCE = "iteminstance";
  @SerializedName(SERIALIZED_NAME_ITEMINSTANCE)
  private Integer iteminstance = null;

  public static final String SERIALIZED_NAME_ITEMMODULE = "itemmodule";
  @SerializedName(SERIALIZED_NAME_ITEMMODULE)
  private String itemmodule = "null";

  public static final String SERIALIZED_NAME_ITEMNAME = "itemname";
  @SerializedName(SERIALIZED_NAME_ITEMNAME)
  private String itemname = "null";

  public static final String SERIALIZED_NAME_ITEMNUMBER = "itemnumber";
  @SerializedName(SERIALIZED_NAME_ITEMNUMBER)
  private Integer itemnumber = null;

  public static final String SERIALIZED_NAME_ITEMTYPE = "itemtype";
  @SerializedName(SERIALIZED_NAME_ITEMTYPE)
  private String itemtype = "null";

  public static final String SERIALIZED_NAME_LETTERGRADEFORMATTED = "lettergradeformatted";
  @SerializedName(SERIALIZED_NAME_LETTERGRADEFORMATTED)
  private String lettergradeformatted = "null";

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked = null;

  public static final String SERIALIZED_NAME_NUMUSERS = "numusers";
  @SerializedName(SERIALIZED_NAME_NUMUSERS)
  private Integer numusers = null;

  public static final String SERIALIZED_NAME_OUTCOMEID = "outcomeid";
  @SerializedName(SERIALIZED_NAME_OUTCOMEID)
  private Integer outcomeid = null;

  public static final String SERIALIZED_NAME_PERCENTAGEFORMATTED = "percentageformatted";
  @SerializedName(SERIALIZED_NAME_PERCENTAGEFORMATTED)
  private String percentageformatted = "null";

  public static final String SERIALIZED_NAME_RANGEFORMATTED = "rangeformatted";
  @SerializedName(SERIALIZED_NAME_RANGEFORMATTED)
  private String rangeformatted = "null";

  public static final String SERIALIZED_NAME_RANK = "rank";
  @SerializedName(SERIALIZED_NAME_RANK)
  private Integer rank = null;

  public static final String SERIALIZED_NAME_SCALEID = "scaleid";
  @SerializedName(SERIALIZED_NAME_SCALEID)
  private Integer scaleid = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status = "null";

  public static final String SERIALIZED_NAME_WEIGHTFORMATTED = "weightformatted";
  @SerializedName(SERIALIZED_NAME_WEIGHTFORMATTED)
  private String weightformatted = "null";

  public static final String SERIALIZED_NAME_WEIGHTRAW = "weightraw";
  @SerializedName(SERIALIZED_NAME_WEIGHTRAW)
  private BigDecimal weightraw = new BigDecimal("null");

  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner() {
  }

  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner averageformatted(String averageformatted) {
    this.averageformatted = averageformatted;
    return this;
  }

   /**
   * Grade average
   * @return averageformatted
  **/
  @javax.annotation.Nullable
  public String getAverageformatted() {
    return averageformatted;
  }

  public void setAverageformatted(String averageformatted) {
    this.averageformatted = averageformatted;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner categoryid(Integer categoryid) {
    this.categoryid = categoryid;
    return this;
  }

   /**
   * Grade item category id
   * @return categoryid
  **/
  @javax.annotation.Nullable
  public Integer getCategoryid() {
    return categoryid;
  }

  public void setCategoryid(Integer categoryid) {
    this.categoryid = categoryid;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner cmid(Integer cmid) {
    this.cmid = cmid;
    return this;
  }

   /**
   * Course module id (if type mod)
   * @return cmid
  **/
  @javax.annotation.Nullable
  public Integer getCmid() {
    return cmid;
  }

  public void setCmid(Integer cmid) {
    this.cmid = cmid;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner feedback(String feedback) {
    this.feedback = feedback;
    return this;
  }

   /**
   * Grade feedback
   * @return feedback
  **/
  @javax.annotation.Nullable
  public String getFeedback() {
    return feedback;
  }

  public void setFeedback(String feedback) {
    this.feedback = feedback;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner feedbackformat(Integer feedbackformat) {
    this.feedbackformat = feedbackformat;
    return this;
  }

   /**
   * feedback format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return feedbackformat
  **/
  @javax.annotation.Nullable
  public Integer getFeedbackformat() {
    return feedbackformat;
  }

  public void setFeedbackformat(Integer feedbackformat) {
    this.feedbackformat = feedbackformat;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradedategraded(Integer gradedategraded) {
    this.gradedategraded = gradedategraded;
    return this;
  }

   /**
   * Grade graded date
   * @return gradedategraded
  **/
  @javax.annotation.Nullable
  public Integer getGradedategraded() {
    return gradedategraded;
  }

  public void setGradedategraded(Integer gradedategraded) {
    this.gradedategraded = gradedategraded;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradedatesubmitted(Integer gradedatesubmitted) {
    this.gradedatesubmitted = gradedatesubmitted;
    return this;
  }

   /**
   * Grade submit date
   * @return gradedatesubmitted
  **/
  @javax.annotation.Nullable
  public Integer getGradedatesubmitted() {
    return gradedatesubmitted;
  }

  public void setGradedatesubmitted(Integer gradedatesubmitted) {
    this.gradedatesubmitted = gradedatesubmitted;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradeformatted(String gradeformatted) {
    this.gradeformatted = gradeformatted;
    return this;
  }

   /**
   * The grade formatted
   * @return gradeformatted
  **/
  @javax.annotation.Nullable
  public String getGradeformatted() {
    return gradeformatted;
  }

  public void setGradeformatted(String gradeformatted) {
    this.gradeformatted = gradeformatted;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradehiddenbydate(Boolean gradehiddenbydate) {
    this.gradehiddenbydate = gradehiddenbydate;
    return this;
  }

   /**
   * Grade hidden by date?
   * @return gradehiddenbydate
  **/
  @javax.annotation.Nullable
  public Boolean getGradehiddenbydate() {
    return gradehiddenbydate;
  }

  public void setGradehiddenbydate(Boolean gradehiddenbydate) {
    this.gradehiddenbydate = gradehiddenbydate;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradeishidden(Boolean gradeishidden) {
    this.gradeishidden = gradeishidden;
    return this;
  }

   /**
   * Grade is hidden?
   * @return gradeishidden
  **/
  @javax.annotation.Nullable
  public Boolean getGradeishidden() {
    return gradeishidden;
  }

  public void setGradeishidden(Boolean gradeishidden) {
    this.gradeishidden = gradeishidden;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradeislocked(Boolean gradeislocked) {
    this.gradeislocked = gradeislocked;
    return this;
  }

   /**
   * Grade is locked?
   * @return gradeislocked
  **/
  @javax.annotation.Nullable
  public Boolean getGradeislocked() {
    return gradeislocked;
  }

  public void setGradeislocked(Boolean gradeislocked) {
    this.gradeislocked = gradeislocked;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradeisoverridden(Boolean gradeisoverridden) {
    this.gradeisoverridden = gradeisoverridden;
    return this;
  }

   /**
   * Grade overridden?
   * @return gradeisoverridden
  **/
  @javax.annotation.Nullable
  public Boolean getGradeisoverridden() {
    return gradeisoverridden;
  }

  public void setGradeisoverridden(Boolean gradeisoverridden) {
    this.gradeisoverridden = gradeisoverridden;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner grademax(BigDecimal grademax) {
    this.grademax = grademax;
    return this;
  }

   /**
   * Grade max
   * @return grademax
  **/
  @javax.annotation.Nullable
  public BigDecimal getGrademax() {
    return grademax;
  }

  public void setGrademax(BigDecimal grademax) {
    this.grademax = grademax;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner grademin(BigDecimal grademin) {
    this.grademin = grademin;
    return this;
  }

   /**
   * Grade min
   * @return grademin
  **/
  @javax.annotation.Nullable
  public BigDecimal getGrademin() {
    return grademin;
  }

  public void setGrademin(BigDecimal grademin) {
    this.grademin = grademin;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradeneedsupdate(Boolean gradeneedsupdate) {
    this.gradeneedsupdate = gradeneedsupdate;
    return this;
  }

   /**
   * Grade needs update?
   * @return gradeneedsupdate
  **/
  @javax.annotation.Nullable
  public Boolean getGradeneedsupdate() {
    return gradeneedsupdate;
  }

  public void setGradeneedsupdate(Boolean gradeneedsupdate) {
    this.gradeneedsupdate = gradeneedsupdate;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner graderaw(BigDecimal graderaw) {
    this.graderaw = graderaw;
    return this;
  }

   /**
   * Grade raw
   * @return graderaw
  **/
  @javax.annotation.Nullable
  public BigDecimal getGraderaw() {
    return graderaw;
  }

  public void setGraderaw(BigDecimal graderaw) {
    this.graderaw = graderaw;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Grade item id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner idnumber(String idnumber) {
    this.idnumber = idnumber;
    return this;
  }

   /**
   * Grade item idnumber
   * @return idnumber
  **/
  @javax.annotation.Nullable
  public String getIdnumber() {
    return idnumber;
  }

  public void setIdnumber(String idnumber) {
    this.idnumber = idnumber;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner iteminstance(Integer iteminstance) {
    this.iteminstance = iteminstance;
    return this;
  }

   /**
   * Grade item instance
   * @return iteminstance
  **/
  @javax.annotation.Nullable
  public Integer getIteminstance() {
    return iteminstance;
  }

  public void setIteminstance(Integer iteminstance) {
    this.iteminstance = iteminstance;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner itemmodule(String itemmodule) {
    this.itemmodule = itemmodule;
    return this;
  }

   /**
   * Grade item module
   * @return itemmodule
  **/
  @javax.annotation.Nullable
  public String getItemmodule() {
    return itemmodule;
  }

  public void setItemmodule(String itemmodule) {
    this.itemmodule = itemmodule;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner itemname(String itemname) {
    this.itemname = itemname;
    return this;
  }

   /**
   * Grade item name
   * @return itemname
  **/
  @javax.annotation.Nullable
  public String getItemname() {
    return itemname;
  }

  public void setItemname(String itemname) {
    this.itemname = itemname;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner itemnumber(Integer itemnumber) {
    this.itemnumber = itemnumber;
    return this;
  }

   /**
   * Grade item item number
   * @return itemnumber
  **/
  @javax.annotation.Nullable
  public Integer getItemnumber() {
    return itemnumber;
  }

  public void setItemnumber(Integer itemnumber) {
    this.itemnumber = itemnumber;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner itemtype(String itemtype) {
    this.itemtype = itemtype;
    return this;
  }

   /**
   * Grade item type
   * @return itemtype
  **/
  @javax.annotation.Nullable
  public String getItemtype() {
    return itemtype;
  }

  public void setItemtype(String itemtype) {
    this.itemtype = itemtype;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner lettergradeformatted(String lettergradeformatted) {
    this.lettergradeformatted = lettergradeformatted;
    return this;
  }

   /**
   * Letter grade
   * @return lettergradeformatted
  **/
  @javax.annotation.Nullable
  public String getLettergradeformatted() {
    return lettergradeformatted;
  }

  public void setLettergradeformatted(String lettergradeformatted) {
    this.lettergradeformatted = lettergradeformatted;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Grade item for user locked?
   * @return locked
  **/
  @javax.annotation.Nullable
  public Boolean getLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner numusers(Integer numusers) {
    this.numusers = numusers;
    return this;
  }

   /**
   * Num users in course
   * @return numusers
  **/
  @javax.annotation.Nullable
  public Integer getNumusers() {
    return numusers;
  }

  public void setNumusers(Integer numusers) {
    this.numusers = numusers;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner outcomeid(Integer outcomeid) {
    this.outcomeid = outcomeid;
    return this;
  }

   /**
   * Outcome id
   * @return outcomeid
  **/
  @javax.annotation.Nullable
  public Integer getOutcomeid() {
    return outcomeid;
  }

  public void setOutcomeid(Integer outcomeid) {
    this.outcomeid = outcomeid;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner percentageformatted(String percentageformatted) {
    this.percentageformatted = percentageformatted;
    return this;
  }

   /**
   * Percentage
   * @return percentageformatted
  **/
  @javax.annotation.Nullable
  public String getPercentageformatted() {
    return percentageformatted;
  }

  public void setPercentageformatted(String percentageformatted) {
    this.percentageformatted = percentageformatted;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner rangeformatted(String rangeformatted) {
    this.rangeformatted = rangeformatted;
    return this;
  }

   /**
   * Range formatted
   * @return rangeformatted
  **/
  @javax.annotation.Nullable
  public String getRangeformatted() {
    return rangeformatted;
  }

  public void setRangeformatted(String rangeformatted) {
    this.rangeformatted = rangeformatted;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner rank(Integer rank) {
    this.rank = rank;
    return this;
  }

   /**
   * Rank in the course
   * @return rank
  **/
  @javax.annotation.Nullable
  public Integer getRank() {
    return rank;
  }

  public void setRank(Integer rank) {
    this.rank = rank;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner scaleid(Integer scaleid) {
    this.scaleid = scaleid;
    return this;
  }

   /**
   * Scale id
   * @return scaleid
  **/
  @javax.annotation.Nullable
  public Integer getScaleid() {
    return scaleid;
  }

  public void setScaleid(Integer scaleid) {
    this.scaleid = scaleid;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner weightformatted(String weightformatted) {
    this.weightformatted = weightformatted;
    return this;
  }

   /**
   * Weight
   * @return weightformatted
  **/
  @javax.annotation.Nullable
  public String getWeightformatted() {
    return weightformatted;
  }

  public void setWeightformatted(String weightformatted) {
    this.weightformatted = weightformatted;
  }


  public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner weightraw(BigDecimal weightraw) {
    this.weightraw = weightraw;
    return this;
  }

   /**
   * Weight raw
   * @return weightraw
  **/
  @javax.annotation.Nullable
  public BigDecimal getWeightraw() {
    return weightraw;
  }

  public void setWeightraw(BigDecimal weightraw) {
    this.weightraw = weightraw;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner = (GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner) o;
    return Objects.equals(this.averageformatted, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.averageformatted) &&
        Objects.equals(this.categoryid, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.categoryid) &&
        Objects.equals(this.cmid, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.cmid) &&
        Objects.equals(this.feedback, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.feedback) &&
        Objects.equals(this.feedbackformat, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.feedbackformat) &&
        Objects.equals(this.gradedategraded, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradedategraded) &&
        Objects.equals(this.gradedatesubmitted, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradedatesubmitted) &&
        Objects.equals(this.gradeformatted, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradeformatted) &&
        Objects.equals(this.gradehiddenbydate, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradehiddenbydate) &&
        Objects.equals(this.gradeishidden, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradeishidden) &&
        Objects.equals(this.gradeislocked, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradeislocked) &&
        Objects.equals(this.gradeisoverridden, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradeisoverridden) &&
        Objects.equals(this.grademax, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.grademax) &&
        Objects.equals(this.grademin, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.grademin) &&
        Objects.equals(this.gradeneedsupdate, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.gradeneedsupdate) &&
        Objects.equals(this.graderaw, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.graderaw) &&
        Objects.equals(this.id, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.id) &&
        Objects.equals(this.idnumber, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.idnumber) &&
        Objects.equals(this.iteminstance, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.iteminstance) &&
        Objects.equals(this.itemmodule, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.itemmodule) &&
        Objects.equals(this.itemname, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.itemname) &&
        Objects.equals(this.itemnumber, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.itemnumber) &&
        Objects.equals(this.itemtype, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.itemtype) &&
        Objects.equals(this.lettergradeformatted, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.lettergradeformatted) &&
        Objects.equals(this.locked, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.locked) &&
        Objects.equals(this.numusers, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.numusers) &&
        Objects.equals(this.outcomeid, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.outcomeid) &&
        Objects.equals(this.percentageformatted, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.percentageformatted) &&
        Objects.equals(this.rangeformatted, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.rangeformatted) &&
        Objects.equals(this.rank, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.rank) &&
        Objects.equals(this.scaleid, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.scaleid) &&
        Objects.equals(this.status, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.status) &&
        Objects.equals(this.weightformatted, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.weightformatted) &&
        Objects.equals(this.weightraw, gradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.weightraw);
  }

  @Override
  public int hashCode() {
    return Objects.hash(averageformatted, categoryid, cmid, feedback, feedbackformat, gradedategraded, gradedatesubmitted, gradeformatted, gradehiddenbydate, gradeishidden, gradeislocked, gradeisoverridden, grademax, grademin, gradeneedsupdate, graderaw, id, idnumber, iteminstance, itemmodule, itemname, itemnumber, itemtype, lettergradeformatted, locked, numusers, outcomeid, percentageformatted, rangeformatted, rank, scaleid, status, weightformatted, weightraw);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner {\n");
    sb.append("    averageformatted: ").append(toIndentedString(averageformatted)).append("\n");
    sb.append("    categoryid: ").append(toIndentedString(categoryid)).append("\n");
    sb.append("    cmid: ").append(toIndentedString(cmid)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    feedbackformat: ").append(toIndentedString(feedbackformat)).append("\n");
    sb.append("    gradedategraded: ").append(toIndentedString(gradedategraded)).append("\n");
    sb.append("    gradedatesubmitted: ").append(toIndentedString(gradedatesubmitted)).append("\n");
    sb.append("    gradeformatted: ").append(toIndentedString(gradeformatted)).append("\n");
    sb.append("    gradehiddenbydate: ").append(toIndentedString(gradehiddenbydate)).append("\n");
    sb.append("    gradeishidden: ").append(toIndentedString(gradeishidden)).append("\n");
    sb.append("    gradeislocked: ").append(toIndentedString(gradeislocked)).append("\n");
    sb.append("    gradeisoverridden: ").append(toIndentedString(gradeisoverridden)).append("\n");
    sb.append("    grademax: ").append(toIndentedString(grademax)).append("\n");
    sb.append("    grademin: ").append(toIndentedString(grademin)).append("\n");
    sb.append("    gradeneedsupdate: ").append(toIndentedString(gradeneedsupdate)).append("\n");
    sb.append("    graderaw: ").append(toIndentedString(graderaw)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idnumber: ").append(toIndentedString(idnumber)).append("\n");
    sb.append("    iteminstance: ").append(toIndentedString(iteminstance)).append("\n");
    sb.append("    itemmodule: ").append(toIndentedString(itemmodule)).append("\n");
    sb.append("    itemname: ").append(toIndentedString(itemname)).append("\n");
    sb.append("    itemnumber: ").append(toIndentedString(itemnumber)).append("\n");
    sb.append("    itemtype: ").append(toIndentedString(itemtype)).append("\n");
    sb.append("    lettergradeformatted: ").append(toIndentedString(lettergradeformatted)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    numusers: ").append(toIndentedString(numusers)).append("\n");
    sb.append("    outcomeid: ").append(toIndentedString(outcomeid)).append("\n");
    sb.append("    percentageformatted: ").append(toIndentedString(percentageformatted)).append("\n");
    sb.append("    rangeformatted: ").append(toIndentedString(rangeformatted)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    scaleid: ").append(toIndentedString(scaleid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    weightformatted: ").append(toIndentedString(weightformatted)).append("\n");
    sb.append("    weightraw: ").append(toIndentedString(weightraw)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("averageformatted");
    openapiFields.add("categoryid");
    openapiFields.add("cmid");
    openapiFields.add("feedback");
    openapiFields.add("feedbackformat");
    openapiFields.add("gradedategraded");
    openapiFields.add("gradedatesubmitted");
    openapiFields.add("gradeformatted");
    openapiFields.add("gradehiddenbydate");
    openapiFields.add("gradeishidden");
    openapiFields.add("gradeislocked");
    openapiFields.add("gradeisoverridden");
    openapiFields.add("grademax");
    openapiFields.add("grademin");
    openapiFields.add("gradeneedsupdate");
    openapiFields.add("graderaw");
    openapiFields.add("id");
    openapiFields.add("idnumber");
    openapiFields.add("iteminstance");
    openapiFields.add("itemmodule");
    openapiFields.add("itemname");
    openapiFields.add("itemnumber");
    openapiFields.add("itemtype");
    openapiFields.add("lettergradeformatted");
    openapiFields.add("locked");
    openapiFields.add("numusers");
    openapiFields.add("outcomeid");
    openapiFields.add("percentageformatted");
    openapiFields.add("rangeformatted");
    openapiFields.add("rank");
    openapiFields.add("scaleid");
    openapiFields.add("status");
    openapiFields.add("weightformatted");
    openapiFields.add("weightraw");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner is not found in the empty JSON string", GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("averageformatted") != null && !jsonObj.get("averageformatted").isJsonNull()) && !jsonObj.get("averageformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `averageformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("averageformatted").toString()));
      }
      if ((jsonObj.get("feedback") != null && !jsonObj.get("feedback").isJsonNull()) && !jsonObj.get("feedback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedback").toString()));
      }
      if ((jsonObj.get("gradeformatted") != null && !jsonObj.get("gradeformatted").isJsonNull()) && !jsonObj.get("gradeformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gradeformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gradeformatted").toString()));
      }
      if ((jsonObj.get("idnumber") != null && !jsonObj.get("idnumber").isJsonNull()) && !jsonObj.get("idnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idnumber").toString()));
      }
      if ((jsonObj.get("itemmodule") != null && !jsonObj.get("itemmodule").isJsonNull()) && !jsonObj.get("itemmodule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemmodule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemmodule").toString()));
      }
      if ((jsonObj.get("itemname") != null && !jsonObj.get("itemname").isJsonNull()) && !jsonObj.get("itemname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemname").toString()));
      }
      if ((jsonObj.get("itemtype") != null && !jsonObj.get("itemtype").isJsonNull()) && !jsonObj.get("itemtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemtype").toString()));
      }
      if ((jsonObj.get("lettergradeformatted") != null && !jsonObj.get("lettergradeformatted").isJsonNull()) && !jsonObj.get("lettergradeformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lettergradeformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lettergradeformatted").toString()));
      }
      if ((jsonObj.get("percentageformatted") != null && !jsonObj.get("percentageformatted").isJsonNull()) && !jsonObj.get("percentageformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `percentageformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("percentageformatted").toString()));
      }
      if ((jsonObj.get("rangeformatted") != null && !jsonObj.get("rangeformatted").isJsonNull()) && !jsonObj.get("rangeformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rangeformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rangeformatted").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("weightformatted") != null && !jsonObj.get("weightformatted").isJsonNull()) && !jsonObj.get("weightformatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weightformatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weightformatted").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner>() {
           @Override
           public void write(JsonWriter out, GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner
  * @throws IOException if the JSON string is invalid with respect to GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner
  */
  public static GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner.class);
  }

 /**
  * Convert an instance of GradereportUserGetGradeItems200ResponseUsergradesInnerGradeitemsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

