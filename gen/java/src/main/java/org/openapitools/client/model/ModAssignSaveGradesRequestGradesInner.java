/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.ModAssignSaveGradeRequestAdvancedgradingdata;
import org.openapitools.client.model.ModAssignSaveGradesRequestGradesInnerPlugindata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModAssignSaveGradesRequestGradesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModAssignSaveGradesRequestGradesInner {
  public static final String SERIALIZED_NAME_ADDATTEMPT = "addattempt";
  @SerializedName(SERIALIZED_NAME_ADDATTEMPT)
  private Boolean addattempt = null;

  public static final String SERIALIZED_NAME_ADVANCEDGRADINGDATA = "advancedgradingdata";
  @SerializedName(SERIALIZED_NAME_ADVANCEDGRADINGDATA)
  private ModAssignSaveGradeRequestAdvancedgradingdata advancedgradingdata;

  public static final String SERIALIZED_NAME_ATTEMPTNUMBER = "attemptnumber";
  @SerializedName(SERIALIZED_NAME_ATTEMPTNUMBER)
  private Integer attemptnumber;

  public static final String SERIALIZED_NAME_GRADE = "grade";
  @SerializedName(SERIALIZED_NAME_GRADE)
  private BigDecimal grade;

  public static final String SERIALIZED_NAME_PLUGINDATA = "plugindata";
  @SerializedName(SERIALIZED_NAME_PLUGINDATA)
  private ModAssignSaveGradesRequestGradesInnerPlugindata plugindata;

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid;

  public static final String SERIALIZED_NAME_WORKFLOWSTATE = "workflowstate";
  @SerializedName(SERIALIZED_NAME_WORKFLOWSTATE)
  private String workflowstate;

  public ModAssignSaveGradesRequestGradesInner() {
  }

  public ModAssignSaveGradesRequestGradesInner addattempt(Boolean addattempt) {
    this.addattempt = addattempt;
    return this;
  }

   /**
   * Allow another attempt if manual attempt reopen method
   * @return addattempt
  **/
  @javax.annotation.Nullable
  public Boolean getAddattempt() {
    return addattempt;
  }

  public void setAddattempt(Boolean addattempt) {
    this.addattempt = addattempt;
  }


  public ModAssignSaveGradesRequestGradesInner advancedgradingdata(ModAssignSaveGradeRequestAdvancedgradingdata advancedgradingdata) {
    this.advancedgradingdata = advancedgradingdata;
    return this;
  }

   /**
   * Get advancedgradingdata
   * @return advancedgradingdata
  **/
  @javax.annotation.Nullable
  public ModAssignSaveGradeRequestAdvancedgradingdata getAdvancedgradingdata() {
    return advancedgradingdata;
  }

  public void setAdvancedgradingdata(ModAssignSaveGradeRequestAdvancedgradingdata advancedgradingdata) {
    this.advancedgradingdata = advancedgradingdata;
  }


  public ModAssignSaveGradesRequestGradesInner attemptnumber(Integer attemptnumber) {
    this.attemptnumber = attemptnumber;
    return this;
  }

   /**
   * The attempt number (-1 means latest attempt)
   * @return attemptnumber
  **/
  @javax.annotation.Nullable
  public Integer getAttemptnumber() {
    return attemptnumber;
  }

  public void setAttemptnumber(Integer attemptnumber) {
    this.attemptnumber = attemptnumber;
  }


  public ModAssignSaveGradesRequestGradesInner grade(BigDecimal grade) {
    this.grade = grade;
    return this;
  }

   /**
   * The new grade for this user. Ignored if advanced grading used
   * @return grade
  **/
  @javax.annotation.Nullable
  public BigDecimal getGrade() {
    return grade;
  }

  public void setGrade(BigDecimal grade) {
    this.grade = grade;
  }


  public ModAssignSaveGradesRequestGradesInner plugindata(ModAssignSaveGradesRequestGradesInnerPlugindata plugindata) {
    this.plugindata = plugindata;
    return this;
  }

   /**
   * Get plugindata
   * @return plugindata
  **/
  @javax.annotation.Nullable
  public ModAssignSaveGradesRequestGradesInnerPlugindata getPlugindata() {
    return plugindata;
  }

  public void setPlugindata(ModAssignSaveGradesRequestGradesInnerPlugindata plugindata) {
    this.plugindata = plugindata;
  }


  public ModAssignSaveGradesRequestGradesInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * The student id to operate on
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }


  public ModAssignSaveGradesRequestGradesInner workflowstate(String workflowstate) {
    this.workflowstate = workflowstate;
    return this;
  }

   /**
   * The next marking workflow state
   * @return workflowstate
  **/
  @javax.annotation.Nullable
  public String getWorkflowstate() {
    return workflowstate;
  }

  public void setWorkflowstate(String workflowstate) {
    this.workflowstate = workflowstate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModAssignSaveGradesRequestGradesInner modAssignSaveGradesRequestGradesInner = (ModAssignSaveGradesRequestGradesInner) o;
    return Objects.equals(this.addattempt, modAssignSaveGradesRequestGradesInner.addattempt) &&
        Objects.equals(this.advancedgradingdata, modAssignSaveGradesRequestGradesInner.advancedgradingdata) &&
        Objects.equals(this.attemptnumber, modAssignSaveGradesRequestGradesInner.attemptnumber) &&
        Objects.equals(this.grade, modAssignSaveGradesRequestGradesInner.grade) &&
        Objects.equals(this.plugindata, modAssignSaveGradesRequestGradesInner.plugindata) &&
        Objects.equals(this.userid, modAssignSaveGradesRequestGradesInner.userid) &&
        Objects.equals(this.workflowstate, modAssignSaveGradesRequestGradesInner.workflowstate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addattempt, advancedgradingdata, attemptnumber, grade, plugindata, userid, workflowstate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModAssignSaveGradesRequestGradesInner {\n");
    sb.append("    addattempt: ").append(toIndentedString(addattempt)).append("\n");
    sb.append("    advancedgradingdata: ").append(toIndentedString(advancedgradingdata)).append("\n");
    sb.append("    attemptnumber: ").append(toIndentedString(attemptnumber)).append("\n");
    sb.append("    grade: ").append(toIndentedString(grade)).append("\n");
    sb.append("    plugindata: ").append(toIndentedString(plugindata)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    workflowstate: ").append(toIndentedString(workflowstate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addattempt");
    openapiFields.add("advancedgradingdata");
    openapiFields.add("attemptnumber");
    openapiFields.add("grade");
    openapiFields.add("plugindata");
    openapiFields.add("userid");
    openapiFields.add("workflowstate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModAssignSaveGradesRequestGradesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModAssignSaveGradesRequestGradesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModAssignSaveGradesRequestGradesInner is not found in the empty JSON string", ModAssignSaveGradesRequestGradesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModAssignSaveGradesRequestGradesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModAssignSaveGradesRequestGradesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `advancedgradingdata`
      if (jsonObj.get("advancedgradingdata") != null && !jsonObj.get("advancedgradingdata").isJsonNull()) {
        ModAssignSaveGradeRequestAdvancedgradingdata.validateJsonElement(jsonObj.get("advancedgradingdata"));
      }
      // validate the optional field `plugindata`
      if (jsonObj.get("plugindata") != null && !jsonObj.get("plugindata").isJsonNull()) {
        ModAssignSaveGradesRequestGradesInnerPlugindata.validateJsonElement(jsonObj.get("plugindata"));
      }
      if ((jsonObj.get("workflowstate") != null && !jsonObj.get("workflowstate").isJsonNull()) && !jsonObj.get("workflowstate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workflowstate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workflowstate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModAssignSaveGradesRequestGradesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModAssignSaveGradesRequestGradesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModAssignSaveGradesRequestGradesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModAssignSaveGradesRequestGradesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModAssignSaveGradesRequestGradesInner>() {
           @Override
           public void write(JsonWriter out, ModAssignSaveGradesRequestGradesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModAssignSaveGradesRequestGradesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModAssignSaveGradesRequestGradesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModAssignSaveGradesRequestGradesInner
  * @throws IOException if the JSON string is invalid with respect to ModAssignSaveGradesRequestGradesInner
  */
  public static ModAssignSaveGradesRequestGradesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModAssignSaveGradesRequestGradesInner.class);
  }

 /**
  * Convert an instance of ModAssignSaveGradesRequestGradesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

