/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModScormGetScormScoes200ResponseScoesInnerExtradataInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * SCORM SCO data
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModScormGetScormScoes200ResponseScoesInner {
  public static final String SERIALIZED_NAME_EXTRADATA = "extradata";
  @SerializedName(SERIALIZED_NAME_EXTRADATA)
  private List<ModScormGetScormScoes200ResponseScoesInnerExtradataInner> extradata = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier = "null";

  public static final String SERIALIZED_NAME_LAUNCH = "launch";
  @SerializedName(SERIALIZED_NAME_LAUNCH)
  private String launch = "null";

  public static final String SERIALIZED_NAME_MANIFEST = "manifest";
  @SerializedName(SERIALIZED_NAME_MANIFEST)
  private String manifest = "null";

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization = "null";

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private String parent = "null";

  public static final String SERIALIZED_NAME_SCORM = "scorm";
  @SerializedName(SERIALIZED_NAME_SCORM)
  private Integer scorm = null;

  public static final String SERIALIZED_NAME_SCORMTYPE = "scormtype";
  @SerializedName(SERIALIZED_NAME_SCORMTYPE)
  private String scormtype = "null";

  public static final String SERIALIZED_NAME_SORTORDER = "sortorder";
  @SerializedName(SERIALIZED_NAME_SORTORDER)
  private Integer sortorder = null;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title = "null";

  public ModScormGetScormScoes200ResponseScoesInner() {
  }

  public ModScormGetScormScoes200ResponseScoesInner extradata(List<ModScormGetScormScoes200ResponseScoesInnerExtradataInner> extradata) {
    this.extradata = extradata;
    return this;
  }

  public ModScormGetScormScoes200ResponseScoesInner addExtradataItem(ModScormGetScormScoes200ResponseScoesInnerExtradataInner extradataItem) {
    if (this.extradata == null) {
      this.extradata = new ArrayList<>();
    }
    this.extradata.add(extradataItem);
    return this;
  }

   /**
   * Get extradata
   * @return extradata
  **/
  @javax.annotation.Nullable
  public List<ModScormGetScormScoes200ResponseScoesInnerExtradataInner> getExtradata() {
    return extradata;
  }

  public void setExtradata(List<ModScormGetScormScoes200ResponseScoesInnerExtradataInner> extradata) {
    this.extradata = extradata;
  }


  public ModScormGetScormScoes200ResponseScoesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * sco id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModScormGetScormScoes200ResponseScoesInner identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public ModScormGetScormScoes200ResponseScoesInner launch(String launch) {
    this.launch = launch;
    return this;
  }

   /**
   * launch file
   * @return launch
  **/
  @javax.annotation.Nullable
  public String getLaunch() {
    return launch;
  }

  public void setLaunch(String launch) {
    this.launch = launch;
  }


  public ModScormGetScormScoes200ResponseScoesInner manifest(String manifest) {
    this.manifest = manifest;
    return this;
  }

   /**
   * manifest id
   * @return manifest
  **/
  @javax.annotation.Nullable
  public String getManifest() {
    return manifest;
  }

  public void setManifest(String manifest) {
    this.manifest = manifest;
  }


  public ModScormGetScormScoes200ResponseScoesInner organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * organization id
   * @return organization
  **/
  @javax.annotation.Nullable
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }


  public ModScormGetScormScoes200ResponseScoesInner parent(String parent) {
    this.parent = parent;
    return this;
  }

   /**
   * parent
   * @return parent
  **/
  @javax.annotation.Nullable
  public String getParent() {
    return parent;
  }

  public void setParent(String parent) {
    this.parent = parent;
  }


  public ModScormGetScormScoes200ResponseScoesInner scorm(Integer scorm) {
    this.scorm = scorm;
    return this;
  }

   /**
   * scorm id
   * @return scorm
  **/
  @javax.annotation.Nullable
  public Integer getScorm() {
    return scorm;
  }

  public void setScorm(Integer scorm) {
    this.scorm = scorm;
  }


  public ModScormGetScormScoes200ResponseScoesInner scormtype(String scormtype) {
    this.scormtype = scormtype;
    return this;
  }

   /**
   * scorm type (asset, sco)
   * @return scormtype
  **/
  @javax.annotation.Nullable
  public String getScormtype() {
    return scormtype;
  }

  public void setScormtype(String scormtype) {
    this.scormtype = scormtype;
  }


  public ModScormGetScormScoes200ResponseScoesInner sortorder(Integer sortorder) {
    this.sortorder = sortorder;
    return this;
  }

   /**
   * sort order
   * @return sortorder
  **/
  @javax.annotation.Nullable
  public Integer getSortorder() {
    return sortorder;
  }

  public void setSortorder(Integer sortorder) {
    this.sortorder = sortorder;
  }


  public ModScormGetScormScoes200ResponseScoesInner title(String title) {
    this.title = title;
    return this;
  }

   /**
   * sco title
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModScormGetScormScoes200ResponseScoesInner modScormGetScormScoes200ResponseScoesInner = (ModScormGetScormScoes200ResponseScoesInner) o;
    return Objects.equals(this.extradata, modScormGetScormScoes200ResponseScoesInner.extradata) &&
        Objects.equals(this.id, modScormGetScormScoes200ResponseScoesInner.id) &&
        Objects.equals(this.identifier, modScormGetScormScoes200ResponseScoesInner.identifier) &&
        Objects.equals(this.launch, modScormGetScormScoes200ResponseScoesInner.launch) &&
        Objects.equals(this.manifest, modScormGetScormScoes200ResponseScoesInner.manifest) &&
        Objects.equals(this.organization, modScormGetScormScoes200ResponseScoesInner.organization) &&
        Objects.equals(this.parent, modScormGetScormScoes200ResponseScoesInner.parent) &&
        Objects.equals(this.scorm, modScormGetScormScoes200ResponseScoesInner.scorm) &&
        Objects.equals(this.scormtype, modScormGetScormScoes200ResponseScoesInner.scormtype) &&
        Objects.equals(this.sortorder, modScormGetScormScoes200ResponseScoesInner.sortorder) &&
        Objects.equals(this.title, modScormGetScormScoes200ResponseScoesInner.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extradata, id, identifier, launch, manifest, organization, parent, scorm, scormtype, sortorder, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModScormGetScormScoes200ResponseScoesInner {\n");
    sb.append("    extradata: ").append(toIndentedString(extradata)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    launch: ").append(toIndentedString(launch)).append("\n");
    sb.append("    manifest: ").append(toIndentedString(manifest)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    scorm: ").append(toIndentedString(scorm)).append("\n");
    sb.append("    scormtype: ").append(toIndentedString(scormtype)).append("\n");
    sb.append("    sortorder: ").append(toIndentedString(sortorder)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("extradata");
    openapiFields.add("id");
    openapiFields.add("identifier");
    openapiFields.add("launch");
    openapiFields.add("manifest");
    openapiFields.add("organization");
    openapiFields.add("parent");
    openapiFields.add("scorm");
    openapiFields.add("scormtype");
    openapiFields.add("sortorder");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModScormGetScormScoes200ResponseScoesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModScormGetScormScoes200ResponseScoesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModScormGetScormScoes200ResponseScoesInner is not found in the empty JSON string", ModScormGetScormScoes200ResponseScoesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModScormGetScormScoes200ResponseScoesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModScormGetScormScoes200ResponseScoesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("extradata") != null && !jsonObj.get("extradata").isJsonNull()) {
        JsonArray jsonArrayextradata = jsonObj.getAsJsonArray("extradata");
        if (jsonArrayextradata != null) {
          // ensure the json data is an array
          if (!jsonObj.get("extradata").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `extradata` to be an array in the JSON string but got `%s`", jsonObj.get("extradata").toString()));
          }

          // validate the optional field `extradata` (array)
          for (int i = 0; i < jsonArrayextradata.size(); i++) {
            ModScormGetScormScoes200ResponseScoesInnerExtradataInner.validateJsonElement(jsonArrayextradata.get(i));
          };
        }
      }
      if ((jsonObj.get("identifier") != null && !jsonObj.get("identifier").isJsonNull()) && !jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      if ((jsonObj.get("launch") != null && !jsonObj.get("launch").isJsonNull()) && !jsonObj.get("launch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `launch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("launch").toString()));
      }
      if ((jsonObj.get("manifest") != null && !jsonObj.get("manifest").isJsonNull()) && !jsonObj.get("manifest").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manifest` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manifest").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      if ((jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) && !jsonObj.get("parent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent").toString()));
      }
      if ((jsonObj.get("scormtype") != null && !jsonObj.get("scormtype").isJsonNull()) && !jsonObj.get("scormtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scormtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scormtype").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModScormGetScormScoes200ResponseScoesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModScormGetScormScoes200ResponseScoesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModScormGetScormScoes200ResponseScoesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModScormGetScormScoes200ResponseScoesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModScormGetScormScoes200ResponseScoesInner>() {
           @Override
           public void write(JsonWriter out, ModScormGetScormScoes200ResponseScoesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModScormGetScormScoes200ResponseScoesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModScormGetScormScoes200ResponseScoesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModScormGetScormScoes200ResponseScoesInner
  * @throws IOException if the JSON string is invalid with respect to ModScormGetScormScoes200ResponseScoesInner
  */
  public static ModScormGetScormScoes200ResponseScoesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModScormGetScormScoes200ResponseScoesInner.class);
  }

 /**
  * Convert an instance of ModScormGetScormScoes200ResponseScoesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

