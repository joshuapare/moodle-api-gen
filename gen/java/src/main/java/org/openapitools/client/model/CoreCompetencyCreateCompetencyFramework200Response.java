/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreCompetencyCreateCompetencyFramework200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreCompetencyCreateCompetencyFramework200Response {
  public static final String SERIALIZED_NAME_CANMANAGE = "canmanage";
  @SerializedName(SERIALIZED_NAME_CANMANAGE)
  private Boolean canmanage = null;

  public static final String SERIALIZED_NAME_COMPETENCIESCOUNT = "competenciescount";
  @SerializedName(SERIALIZED_NAME_COMPETENCIESCOUNT)
  private Integer competenciescount = null;

  public static final String SERIALIZED_NAME_CONTEXTID = "contextid";
  @SerializedName(SERIALIZED_NAME_CONTEXTID)
  private Integer contextid = null;

  public static final String SERIALIZED_NAME_CONTEXTNAME = "contextname";
  @SerializedName(SERIALIZED_NAME_CONTEXTNAME)
  private String contextname = "null";

  public static final String SERIALIZED_NAME_CONTEXTNAMENOPREFIX = "contextnamenoprefix";
  @SerializedName(SERIALIZED_NAME_CONTEXTNAMENOPREFIX)
  private String contextnamenoprefix = "null";

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description = "";

  public static final String SERIALIZED_NAME_DESCRIPTIONFORMAT = "descriptionformat";
  @SerializedName(SERIALIZED_NAME_DESCRIPTIONFORMAT)
  private Integer descriptionformat = 1;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = 0;

  public static final String SERIALIZED_NAME_IDNUMBER = "idnumber";
  @SerializedName(SERIALIZED_NAME_IDNUMBER)
  private String idnumber;

  public static final String SERIALIZED_NAME_SCALECONFIGURATION = "scaleconfiguration";
  @SerializedName(SERIALIZED_NAME_SCALECONFIGURATION)
  private String scaleconfiguration;

  public static final String SERIALIZED_NAME_SCALEID = "scaleid";
  @SerializedName(SERIALIZED_NAME_SCALEID)
  private Integer scaleid;

  public static final String SERIALIZED_NAME_SHORTNAME = "shortname";
  @SerializedName(SERIALIZED_NAME_SHORTNAME)
  private String shortname;

  public static final String SERIALIZED_NAME_TAXONOMIES = "taxonomies";
  @SerializedName(SERIALIZED_NAME_TAXONOMIES)
  private String taxonomies = "";

  public static final String SERIALIZED_NAME_TIMECREATED = "timecreated";
  @SerializedName(SERIALIZED_NAME_TIMECREATED)
  private Integer timecreated = 0;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified = 0;

  public static final String SERIALIZED_NAME_USERMODIFIED = "usermodified";
  @SerializedName(SERIALIZED_NAME_USERMODIFIED)
  private Integer usermodified = 0;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Boolean visible = 1;

  public CoreCompetencyCreateCompetencyFramework200Response() {
  }

  public CoreCompetencyCreateCompetencyFramework200Response canmanage(Boolean canmanage) {
    this.canmanage = canmanage;
    return this;
  }

   /**
   * canmanage
   * @return canmanage
  **/
  @javax.annotation.Nonnull
  public Boolean getCanmanage() {
    return canmanage;
  }

  public void setCanmanage(Boolean canmanage) {
    this.canmanage = canmanage;
  }


  public CoreCompetencyCreateCompetencyFramework200Response competenciescount(Integer competenciescount) {
    this.competenciescount = competenciescount;
    return this;
  }

   /**
   * competenciescount
   * @return competenciescount
  **/
  @javax.annotation.Nonnull
  public Integer getCompetenciescount() {
    return competenciescount;
  }

  public void setCompetenciescount(Integer competenciescount) {
    this.competenciescount = competenciescount;
  }


  public CoreCompetencyCreateCompetencyFramework200Response contextid(Integer contextid) {
    this.contextid = contextid;
    return this;
  }

   /**
   * contextid
   * @return contextid
  **/
  @javax.annotation.Nonnull
  public Integer getContextid() {
    return contextid;
  }

  public void setContextid(Integer contextid) {
    this.contextid = contextid;
  }


  public CoreCompetencyCreateCompetencyFramework200Response contextname(String contextname) {
    this.contextname = contextname;
    return this;
  }

   /**
   * contextname
   * @return contextname
  **/
  @javax.annotation.Nonnull
  public String getContextname() {
    return contextname;
  }

  public void setContextname(String contextname) {
    this.contextname = contextname;
  }


  public CoreCompetencyCreateCompetencyFramework200Response contextnamenoprefix(String contextnamenoprefix) {
    this.contextnamenoprefix = contextnamenoprefix;
    return this;
  }

   /**
   * contextnamenoprefix
   * @return contextnamenoprefix
  **/
  @javax.annotation.Nonnull
  public String getContextnamenoprefix() {
    return contextnamenoprefix;
  }

  public void setContextnamenoprefix(String contextnamenoprefix) {
    this.contextnamenoprefix = contextnamenoprefix;
  }


  public CoreCompetencyCreateCompetencyFramework200Response description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description
   * @return description
  **/
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CoreCompetencyCreateCompetencyFramework200Response descriptionformat(Integer descriptionformat) {
    this.descriptionformat = descriptionformat;
    return this;
  }

   /**
   * description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return descriptionformat
  **/
  @javax.annotation.Nullable
  public Integer getDescriptionformat() {
    return descriptionformat;
  }

  public void setDescriptionformat(Integer descriptionformat) {
    this.descriptionformat = descriptionformat;
  }


  public CoreCompetencyCreateCompetencyFramework200Response id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * id
   * @return id
  **/
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreCompetencyCreateCompetencyFramework200Response idnumber(String idnumber) {
    this.idnumber = idnumber;
    return this;
  }

   /**
   * idnumber
   * @return idnumber
  **/
  @javax.annotation.Nonnull
  public String getIdnumber() {
    return idnumber;
  }

  public void setIdnumber(String idnumber) {
    this.idnumber = idnumber;
  }


  public CoreCompetencyCreateCompetencyFramework200Response scaleconfiguration(String scaleconfiguration) {
    this.scaleconfiguration = scaleconfiguration;
    return this;
  }

   /**
   * scaleconfiguration
   * @return scaleconfiguration
  **/
  @javax.annotation.Nonnull
  public String getScaleconfiguration() {
    return scaleconfiguration;
  }

  public void setScaleconfiguration(String scaleconfiguration) {
    this.scaleconfiguration = scaleconfiguration;
  }


  public CoreCompetencyCreateCompetencyFramework200Response scaleid(Integer scaleid) {
    this.scaleid = scaleid;
    return this;
  }

   /**
   * scaleid
   * @return scaleid
  **/
  @javax.annotation.Nonnull
  public Integer getScaleid() {
    return scaleid;
  }

  public void setScaleid(Integer scaleid) {
    this.scaleid = scaleid;
  }


  public CoreCompetencyCreateCompetencyFramework200Response shortname(String shortname) {
    this.shortname = shortname;
    return this;
  }

   /**
   * shortname
   * @return shortname
  **/
  @javax.annotation.Nonnull
  public String getShortname() {
    return shortname;
  }

  public void setShortname(String shortname) {
    this.shortname = shortname;
  }


  public CoreCompetencyCreateCompetencyFramework200Response taxonomies(String taxonomies) {
    this.taxonomies = taxonomies;
    return this;
  }

   /**
   * taxonomies
   * @return taxonomies
  **/
  @javax.annotation.Nonnull
  public String getTaxonomies() {
    return taxonomies;
  }

  public void setTaxonomies(String taxonomies) {
    this.taxonomies = taxonomies;
  }


  public CoreCompetencyCreateCompetencyFramework200Response timecreated(Integer timecreated) {
    this.timecreated = timecreated;
    return this;
  }

   /**
   * timecreated
   * @return timecreated
  **/
  @javax.annotation.Nonnull
  public Integer getTimecreated() {
    return timecreated;
  }

  public void setTimecreated(Integer timecreated) {
    this.timecreated = timecreated;
  }


  public CoreCompetencyCreateCompetencyFramework200Response timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * timemodified
   * @return timemodified
  **/
  @javax.annotation.Nonnull
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public CoreCompetencyCreateCompetencyFramework200Response usermodified(Integer usermodified) {
    this.usermodified = usermodified;
    return this;
  }

   /**
   * usermodified
   * @return usermodified
  **/
  @javax.annotation.Nonnull
  public Integer getUsermodified() {
    return usermodified;
  }

  public void setUsermodified(Integer usermodified) {
    this.usermodified = usermodified;
  }


  public CoreCompetencyCreateCompetencyFramework200Response visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * visible
   * @return visible
  **/
  @javax.annotation.Nonnull
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreCompetencyCreateCompetencyFramework200Response coreCompetencyCreateCompetencyFramework200Response = (CoreCompetencyCreateCompetencyFramework200Response) o;
    return Objects.equals(this.canmanage, coreCompetencyCreateCompetencyFramework200Response.canmanage) &&
        Objects.equals(this.competenciescount, coreCompetencyCreateCompetencyFramework200Response.competenciescount) &&
        Objects.equals(this.contextid, coreCompetencyCreateCompetencyFramework200Response.contextid) &&
        Objects.equals(this.contextname, coreCompetencyCreateCompetencyFramework200Response.contextname) &&
        Objects.equals(this.contextnamenoprefix, coreCompetencyCreateCompetencyFramework200Response.contextnamenoprefix) &&
        Objects.equals(this.description, coreCompetencyCreateCompetencyFramework200Response.description) &&
        Objects.equals(this.descriptionformat, coreCompetencyCreateCompetencyFramework200Response.descriptionformat) &&
        Objects.equals(this.id, coreCompetencyCreateCompetencyFramework200Response.id) &&
        Objects.equals(this.idnumber, coreCompetencyCreateCompetencyFramework200Response.idnumber) &&
        Objects.equals(this.scaleconfiguration, coreCompetencyCreateCompetencyFramework200Response.scaleconfiguration) &&
        Objects.equals(this.scaleid, coreCompetencyCreateCompetencyFramework200Response.scaleid) &&
        Objects.equals(this.shortname, coreCompetencyCreateCompetencyFramework200Response.shortname) &&
        Objects.equals(this.taxonomies, coreCompetencyCreateCompetencyFramework200Response.taxonomies) &&
        Objects.equals(this.timecreated, coreCompetencyCreateCompetencyFramework200Response.timecreated) &&
        Objects.equals(this.timemodified, coreCompetencyCreateCompetencyFramework200Response.timemodified) &&
        Objects.equals(this.usermodified, coreCompetencyCreateCompetencyFramework200Response.usermodified) &&
        Objects.equals(this.visible, coreCompetencyCreateCompetencyFramework200Response.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canmanage, competenciescount, contextid, contextname, contextnamenoprefix, description, descriptionformat, id, idnumber, scaleconfiguration, scaleid, shortname, taxonomies, timecreated, timemodified, usermodified, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreCompetencyCreateCompetencyFramework200Response {\n");
    sb.append("    canmanage: ").append(toIndentedString(canmanage)).append("\n");
    sb.append("    competenciescount: ").append(toIndentedString(competenciescount)).append("\n");
    sb.append("    contextid: ").append(toIndentedString(contextid)).append("\n");
    sb.append("    contextname: ").append(toIndentedString(contextname)).append("\n");
    sb.append("    contextnamenoprefix: ").append(toIndentedString(contextnamenoprefix)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionformat: ").append(toIndentedString(descriptionformat)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idnumber: ").append(toIndentedString(idnumber)).append("\n");
    sb.append("    scaleconfiguration: ").append(toIndentedString(scaleconfiguration)).append("\n");
    sb.append("    scaleid: ").append(toIndentedString(scaleid)).append("\n");
    sb.append("    shortname: ").append(toIndentedString(shortname)).append("\n");
    sb.append("    taxonomies: ").append(toIndentedString(taxonomies)).append("\n");
    sb.append("    timecreated: ").append(toIndentedString(timecreated)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    usermodified: ").append(toIndentedString(usermodified)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("canmanage");
    openapiFields.add("competenciescount");
    openapiFields.add("contextid");
    openapiFields.add("contextname");
    openapiFields.add("contextnamenoprefix");
    openapiFields.add("description");
    openapiFields.add("descriptionformat");
    openapiFields.add("id");
    openapiFields.add("idnumber");
    openapiFields.add("scaleconfiguration");
    openapiFields.add("scaleid");
    openapiFields.add("shortname");
    openapiFields.add("taxonomies");
    openapiFields.add("timecreated");
    openapiFields.add("timemodified");
    openapiFields.add("usermodified");
    openapiFields.add("visible");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("canmanage");
    openapiRequiredFields.add("competenciescount");
    openapiRequiredFields.add("contextid");
    openapiRequiredFields.add("contextname");
    openapiRequiredFields.add("contextnamenoprefix");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("idnumber");
    openapiRequiredFields.add("scaleconfiguration");
    openapiRequiredFields.add("scaleid");
    openapiRequiredFields.add("shortname");
    openapiRequiredFields.add("taxonomies");
    openapiRequiredFields.add("timecreated");
    openapiRequiredFields.add("timemodified");
    openapiRequiredFields.add("usermodified");
    openapiRequiredFields.add("visible");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreCompetencyCreateCompetencyFramework200Response
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreCompetencyCreateCompetencyFramework200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreCompetencyCreateCompetencyFramework200Response is not found in the empty JSON string", CoreCompetencyCreateCompetencyFramework200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreCompetencyCreateCompetencyFramework200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreCompetencyCreateCompetencyFramework200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CoreCompetencyCreateCompetencyFramework200Response.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("contextname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contextname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contextname").toString()));
      }
      if (!jsonObj.get("contextnamenoprefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contextnamenoprefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contextnamenoprefix").toString()));
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("idnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idnumber").toString()));
      }
      if (!jsonObj.get("scaleconfiguration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scaleconfiguration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scaleconfiguration").toString()));
      }
      if (!jsonObj.get("shortname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortname").toString()));
      }
      if (!jsonObj.get("taxonomies").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxonomies` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxonomies").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreCompetencyCreateCompetencyFramework200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreCompetencyCreateCompetencyFramework200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreCompetencyCreateCompetencyFramework200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreCompetencyCreateCompetencyFramework200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreCompetencyCreateCompetencyFramework200Response>() {
           @Override
           public void write(JsonWriter out, CoreCompetencyCreateCompetencyFramework200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreCompetencyCreateCompetencyFramework200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreCompetencyCreateCompetencyFramework200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreCompetencyCreateCompetencyFramework200Response
  * @throws IOException if the JSON string is invalid with respect to CoreCompetencyCreateCompetencyFramework200Response
  */
  public static CoreCompetencyCreateCompetencyFramework200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreCompetencyCreateCompetencyFramework200Response.class);
  }

 /**
  * Convert an instance of CoreCompetencyCreateCompetencyFramework200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

