/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer {
  public static final String SERIALIZED_NAME_ANSWER = "answer";
  @SerializedName(SERIALIZED_NAME_ANSWER)
  private String answer;

  public static final String SERIALIZED_NAME_CHECKED = "checked";
  @SerializedName(SERIALIZED_NAME_CHECKED)
  private Boolean checked;

  public static final String SERIALIZED_NAME_CORRECT = "correct";
  @SerializedName(SERIALIZED_NAME_CORRECT)
  private Boolean correct;

  public static final String SERIALIZED_NAME_FAIL = "fail";
  @SerializedName(SERIALIZED_NAME_FAIL)
  private Boolean fail;

  public static final String SERIALIZED_NAME_INCORRECT = "incorrect";
  @SerializedName(SERIALIZED_NAME_INCORRECT)
  private Boolean incorrect;

  public static final String SERIALIZED_NAME_PASS = "pass";
  @SerializedName(SERIALIZED_NAME_PASS)
  private Boolean pass;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private Boolean text;

  public static final String SERIALIZED_NAME_UNCHECKED = "unchecked";
  @SerializedName(SERIALIZED_NAME_UNCHECKED)
  private Boolean unchecked;

  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer() {
  }

  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer answer(String answer) {
    this.answer = answer;
    return this;
  }

   /**
   * Option text value
   * @return answer
  **/
  @javax.annotation.Nullable
  public String getAnswer() {
    return answer;
  }

  public void setAnswer(String answer) {
    this.answer = answer;
  }


  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer checked(Boolean checked) {
    this.checked = checked;
    return this;
  }

   /**
   * If has to be displayed as a checked option
   * @return checked
  **/
  @javax.annotation.Nullable
  public Boolean getChecked() {
    return checked;
  }

  public void setChecked(Boolean checked) {
    this.checked = checked;
  }


  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer correct(Boolean correct) {
    this.correct = correct;
    return this;
  }

   /**
   * If has to be displayed as correct
   * @return correct
  **/
  @javax.annotation.Nullable
  public Boolean getCorrect() {
    return correct;
  }

  public void setCorrect(Boolean correct) {
    this.correct = correct;
  }


  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer fail(Boolean fail) {
    this.fail = fail;
    return this;
  }

   /**
   * If has to be displayed as failed
   * @return fail
  **/
  @javax.annotation.Nullable
  public Boolean getFail() {
    return fail;
  }

  public void setFail(Boolean fail) {
    this.fail = fail;
  }


  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer incorrect(Boolean incorrect) {
    this.incorrect = incorrect;
    return this;
  }

   /**
   * If has to be displayed as incorrect
   * @return incorrect
  **/
  @javax.annotation.Nullable
  public Boolean getIncorrect() {
    return incorrect;
  }

  public void setIncorrect(Boolean incorrect) {
    this.incorrect = incorrect;
  }


  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer pass(Boolean pass) {
    this.pass = pass;
    return this;
  }

   /**
   * If has to be displayed as passed
   * @return pass
  **/
  @javax.annotation.Nullable
  public Boolean getPass() {
    return pass;
  }

  public void setPass(Boolean pass) {
    this.pass = pass;
  }


  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer text(Boolean text) {
    this.text = text;
    return this;
  }

   /**
   * If has to be displayed as simple text
   * @return text
  **/
  @javax.annotation.Nullable
  public Boolean getText() {
    return text;
  }

  public void setText(Boolean text) {
    this.text = text;
  }


  public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer unchecked(Boolean unchecked) {
    this.unchecked = unchecked;
    return this;
  }

   /**
   * If has to be displayed as a unchecked option
   * @return unchecked
  **/
  @javax.annotation.Nullable
  public Boolean getUnchecked() {
    return unchecked;
  }

  public void setUnchecked(Boolean unchecked) {
    this.unchecked = unchecked;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer = (ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer) o;
    return Objects.equals(this.answer, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.answer) &&
        Objects.equals(this.checked, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.checked) &&
        Objects.equals(this.correct, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.correct) &&
        Objects.equals(this.fail, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.fail) &&
        Objects.equals(this.incorrect, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.incorrect) &&
        Objects.equals(this.pass, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.pass) &&
        Objects.equals(this.text, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.text) &&
        Objects.equals(this.unchecked, modH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.unchecked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answer, checked, correct, fail, incorrect, pass, text, unchecked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer {\n");
    sb.append("    answer: ").append(toIndentedString(answer)).append("\n");
    sb.append("    checked: ").append(toIndentedString(checked)).append("\n");
    sb.append("    correct: ").append(toIndentedString(correct)).append("\n");
    sb.append("    fail: ").append(toIndentedString(fail)).append("\n");
    sb.append("    incorrect: ").append(toIndentedString(incorrect)).append("\n");
    sb.append("    pass: ").append(toIndentedString(pass)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    unchecked: ").append(toIndentedString(unchecked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("answer");
    openapiFields.add("checked");
    openapiFields.add("correct");
    openapiFields.add("fail");
    openapiFields.add("incorrect");
    openapiFields.add("pass");
    openapiFields.add("text");
    openapiFields.add("unchecked");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer is not found in the empty JSON string", ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("answer") != null && !jsonObj.get("answer").isJsonNull()) && !jsonObj.get("answer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answer").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.class));

       return (TypeAdapter<T>) new TypeAdapter<ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer>() {
           @Override
           public void write(JsonWriter out, ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer
  * @throws IOException if the JSON string is invalid with respect to ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer
  */
  public static ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer.class);
  }

 /**
  * Convert an instance of ModH5pactivityGetResults200ResponseAttemptsInnerResultsInnerOptionsInnerUseranswer to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

