/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreTagGetTagCollections200ResponseCollectionsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreTagGetTagCollections200ResponseCollectionsInner {
  public static final String SERIALIZED_NAME_COMPONENT = "component";
  @SerializedName(SERIALIZED_NAME_COMPONENT)
  private String component = "null";

  public static final String SERIALIZED_NAME_CUSTOMURL = "customurl";
  @SerializedName(SERIALIZED_NAME_CUSTOMURL)
  private String customurl = "null";

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_ISDEFAULT = "isdefault";
  @SerializedName(SERIALIZED_NAME_ISDEFAULT)
  private Boolean isdefault = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = "null";

  public static final String SERIALIZED_NAME_SEARCHABLE = "searchable";
  @SerializedName(SERIALIZED_NAME_SEARCHABLE)
  private Boolean searchable = true;

  public static final String SERIALIZED_NAME_SORTORDER = "sortorder";
  @SerializedName(SERIALIZED_NAME_SORTORDER)
  private Integer sortorder = null;

  public CoreTagGetTagCollections200ResponseCollectionsInner() {
  }

  public CoreTagGetTagCollections200ResponseCollectionsInner component(String component) {
    this.component = component;
    return this;
  }

   /**
   * Component the collection is related to.
   * @return component
  **/
  @javax.annotation.Nullable
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }


  public CoreTagGetTagCollections200ResponseCollectionsInner customurl(String customurl) {
    this.customurl = customurl;
    return this;
  }

   /**
   * Custom URL for the tag page instead of /tag/index.php.
   * @return customurl
  **/
  @javax.annotation.Nullable
  public String getCustomurl() {
    return customurl;
  }

  public void setCustomurl(String customurl) {
    this.customurl = customurl;
  }


  public CoreTagGetTagCollections200ResponseCollectionsInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Collection id.
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreTagGetTagCollections200ResponseCollectionsInner isdefault(Boolean isdefault) {
    this.isdefault = isdefault;
    return this;
  }

   /**
   * Whether is the default collection.
   * @return isdefault
  **/
  @javax.annotation.Nullable
  public Boolean getIsdefault() {
    return isdefault;
  }

  public void setIsdefault(Boolean isdefault) {
    this.isdefault = isdefault;
  }


  public CoreTagGetTagCollections200ResponseCollectionsInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Collection name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CoreTagGetTagCollections200ResponseCollectionsInner searchable(Boolean searchable) {
    this.searchable = searchable;
    return this;
  }

   /**
   * Whether the tag collection is searchable.
   * @return searchable
  **/
  @javax.annotation.Nullable
  public Boolean getSearchable() {
    return searchable;
  }

  public void setSearchable(Boolean searchable) {
    this.searchable = searchable;
  }


  public CoreTagGetTagCollections200ResponseCollectionsInner sortorder(Integer sortorder) {
    this.sortorder = sortorder;
    return this;
  }

   /**
   * Collection ordering in the list.
   * @return sortorder
  **/
  @javax.annotation.Nullable
  public Integer getSortorder() {
    return sortorder;
  }

  public void setSortorder(Integer sortorder) {
    this.sortorder = sortorder;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreTagGetTagCollections200ResponseCollectionsInner coreTagGetTagCollections200ResponseCollectionsInner = (CoreTagGetTagCollections200ResponseCollectionsInner) o;
    return Objects.equals(this.component, coreTagGetTagCollections200ResponseCollectionsInner.component) &&
        Objects.equals(this.customurl, coreTagGetTagCollections200ResponseCollectionsInner.customurl) &&
        Objects.equals(this.id, coreTagGetTagCollections200ResponseCollectionsInner.id) &&
        Objects.equals(this.isdefault, coreTagGetTagCollections200ResponseCollectionsInner.isdefault) &&
        Objects.equals(this.name, coreTagGetTagCollections200ResponseCollectionsInner.name) &&
        Objects.equals(this.searchable, coreTagGetTagCollections200ResponseCollectionsInner.searchable) &&
        Objects.equals(this.sortorder, coreTagGetTagCollections200ResponseCollectionsInner.sortorder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(component, customurl, id, isdefault, name, searchable, sortorder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreTagGetTagCollections200ResponseCollectionsInner {\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    customurl: ").append(toIndentedString(customurl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isdefault: ").append(toIndentedString(isdefault)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    searchable: ").append(toIndentedString(searchable)).append("\n");
    sb.append("    sortorder: ").append(toIndentedString(sortorder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("component");
    openapiFields.add("customurl");
    openapiFields.add("id");
    openapiFields.add("isdefault");
    openapiFields.add("name");
    openapiFields.add("searchable");
    openapiFields.add("sortorder");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreTagGetTagCollections200ResponseCollectionsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreTagGetTagCollections200ResponseCollectionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreTagGetTagCollections200ResponseCollectionsInner is not found in the empty JSON string", CoreTagGetTagCollections200ResponseCollectionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreTagGetTagCollections200ResponseCollectionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreTagGetTagCollections200ResponseCollectionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("component") != null && !jsonObj.get("component").isJsonNull()) && !jsonObj.get("component").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `component` to be a primitive type in the JSON string but got `%s`", jsonObj.get("component").toString()));
      }
      if ((jsonObj.get("customurl") != null && !jsonObj.get("customurl").isJsonNull()) && !jsonObj.get("customurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customurl").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreTagGetTagCollections200ResponseCollectionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreTagGetTagCollections200ResponseCollectionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreTagGetTagCollections200ResponseCollectionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreTagGetTagCollections200ResponseCollectionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreTagGetTagCollections200ResponseCollectionsInner>() {
           @Override
           public void write(JsonWriter out, CoreTagGetTagCollections200ResponseCollectionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreTagGetTagCollections200ResponseCollectionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreTagGetTagCollections200ResponseCollectionsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreTagGetTagCollections200ResponseCollectionsInner
  * @throws IOException if the JSON string is invalid with respect to CoreTagGetTagCollections200ResponseCollectionsInner
  */
  public static CoreTagGetTagCollections200ResponseCollectionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreTagGetTagCollections200ResponseCollectionsInner.class);
  }

 /**
  * Convert an instance of CoreTagGetTagCollections200ResponseCollectionsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

