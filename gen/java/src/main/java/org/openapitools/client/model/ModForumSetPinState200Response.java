/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ModForumSetPinState200ResponseCapabilities;
import org.openapitools.client.model.ModForumSetPinState200ResponseGroup;
import org.openapitools.client.model.ModForumSetPinState200ResponseTimed;
import org.openapitools.client.model.ModForumSetPinState200ResponseTimes;
import org.openapitools.client.model.ModForumSetPinState200ResponseUrls;
import org.openapitools.client.model.ModForumSetPinState200ResponseUserstate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModForumSetPinState200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModForumSetPinState200Response {
  public static final String SERIALIZED_NAME_CAPABILITIES = "capabilities";
  @SerializedName(SERIALIZED_NAME_CAPABILITIES)
  private ModForumSetPinState200ResponseCapabilities capabilities;

  public static final String SERIALIZED_NAME_FIRSTPOSTID = "firstpostid";
  @SerializedName(SERIALIZED_NAME_FIRSTPOSTID)
  private Integer firstpostid = null;

  public static final String SERIALIZED_NAME_FORUMID = "forumid";
  @SerializedName(SERIALIZED_NAME_FORUMID)
  private Integer forumid = null;

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private ModForumSetPinState200ResponseGroup group;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_ISTIMELOCKED = "istimelocked";
  @SerializedName(SERIALIZED_NAME_ISTIMELOCKED)
  private Boolean istimelocked = null;

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PINNED = "pinned";
  @SerializedName(SERIALIZED_NAME_PINNED)
  private Boolean pinned = null;

  public static final String SERIALIZED_NAME_TIMED = "timed";
  @SerializedName(SERIALIZED_NAME_TIMED)
  private ModForumSetPinState200ResponseTimed timed;

  public static final String SERIALIZED_NAME_TIMES = "times";
  @SerializedName(SERIALIZED_NAME_TIMES)
  private ModForumSetPinState200ResponseTimes times;

  public static final String SERIALIZED_NAME_URLS = "urls";
  @SerializedName(SERIALIZED_NAME_URLS)
  private ModForumSetPinState200ResponseUrls urls;

  public static final String SERIALIZED_NAME_USERSTATE = "userstate";
  @SerializedName(SERIALIZED_NAME_USERSTATE)
  private ModForumSetPinState200ResponseUserstate userstate;

  public ModForumSetPinState200Response() {
  }

  public ModForumSetPinState200Response capabilities(ModForumSetPinState200ResponseCapabilities capabilities) {
    this.capabilities = capabilities;
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @javax.annotation.Nonnull
  public ModForumSetPinState200ResponseCapabilities getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(ModForumSetPinState200ResponseCapabilities capabilities) {
    this.capabilities = capabilities;
  }


  public ModForumSetPinState200Response firstpostid(Integer firstpostid) {
    this.firstpostid = firstpostid;
    return this;
  }

   /**
   * firstpostid
   * @return firstpostid
  **/
  @javax.annotation.Nonnull
  public Integer getFirstpostid() {
    return firstpostid;
  }

  public void setFirstpostid(Integer firstpostid) {
    this.firstpostid = firstpostid;
  }


  public ModForumSetPinState200Response forumid(Integer forumid) {
    this.forumid = forumid;
    return this;
  }

   /**
   * forumid
   * @return forumid
  **/
  @javax.annotation.Nonnull
  public Integer getForumid() {
    return forumid;
  }

  public void setForumid(Integer forumid) {
    this.forumid = forumid;
  }


  public ModForumSetPinState200Response group(ModForumSetPinState200ResponseGroup group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  public ModForumSetPinState200ResponseGroup getGroup() {
    return group;
  }

  public void setGroup(ModForumSetPinState200ResponseGroup group) {
    this.group = group;
  }


  public ModForumSetPinState200Response id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * id
   * @return id
  **/
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModForumSetPinState200Response istimelocked(Boolean istimelocked) {
    this.istimelocked = istimelocked;
    return this;
  }

   /**
   * istimelocked
   * @return istimelocked
  **/
  @javax.annotation.Nonnull
  public Boolean getIstimelocked() {
    return istimelocked;
  }

  public void setIstimelocked(Boolean istimelocked) {
    this.istimelocked = istimelocked;
  }


  public ModForumSetPinState200Response locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * locked
   * @return locked
  **/
  @javax.annotation.Nonnull
  public Boolean getLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public ModForumSetPinState200Response name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ModForumSetPinState200Response pinned(Boolean pinned) {
    this.pinned = pinned;
    return this;
  }

   /**
   * pinned
   * @return pinned
  **/
  @javax.annotation.Nonnull
  public Boolean getPinned() {
    return pinned;
  }

  public void setPinned(Boolean pinned) {
    this.pinned = pinned;
  }


  public ModForumSetPinState200Response timed(ModForumSetPinState200ResponseTimed timed) {
    this.timed = timed;
    return this;
  }

   /**
   * Get timed
   * @return timed
  **/
  @javax.annotation.Nonnull
  public ModForumSetPinState200ResponseTimed getTimed() {
    return timed;
  }

  public void setTimed(ModForumSetPinState200ResponseTimed timed) {
    this.timed = timed;
  }


  public ModForumSetPinState200Response times(ModForumSetPinState200ResponseTimes times) {
    this.times = times;
    return this;
  }

   /**
   * Get times
   * @return times
  **/
  @javax.annotation.Nonnull
  public ModForumSetPinState200ResponseTimes getTimes() {
    return times;
  }

  public void setTimes(ModForumSetPinState200ResponseTimes times) {
    this.times = times;
  }


  public ModForumSetPinState200Response urls(ModForumSetPinState200ResponseUrls urls) {
    this.urls = urls;
    return this;
  }

   /**
   * Get urls
   * @return urls
  **/
  @javax.annotation.Nonnull
  public ModForumSetPinState200ResponseUrls getUrls() {
    return urls;
  }

  public void setUrls(ModForumSetPinState200ResponseUrls urls) {
    this.urls = urls;
  }


  public ModForumSetPinState200Response userstate(ModForumSetPinState200ResponseUserstate userstate) {
    this.userstate = userstate;
    return this;
  }

   /**
   * Get userstate
   * @return userstate
  **/
  @javax.annotation.Nonnull
  public ModForumSetPinState200ResponseUserstate getUserstate() {
    return userstate;
  }

  public void setUserstate(ModForumSetPinState200ResponseUserstate userstate) {
    this.userstate = userstate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModForumSetPinState200Response modForumSetPinState200Response = (ModForumSetPinState200Response) o;
    return Objects.equals(this.capabilities, modForumSetPinState200Response.capabilities) &&
        Objects.equals(this.firstpostid, modForumSetPinState200Response.firstpostid) &&
        Objects.equals(this.forumid, modForumSetPinState200Response.forumid) &&
        Objects.equals(this.group, modForumSetPinState200Response.group) &&
        Objects.equals(this.id, modForumSetPinState200Response.id) &&
        Objects.equals(this.istimelocked, modForumSetPinState200Response.istimelocked) &&
        Objects.equals(this.locked, modForumSetPinState200Response.locked) &&
        Objects.equals(this.name, modForumSetPinState200Response.name) &&
        Objects.equals(this.pinned, modForumSetPinState200Response.pinned) &&
        Objects.equals(this.timed, modForumSetPinState200Response.timed) &&
        Objects.equals(this.times, modForumSetPinState200Response.times) &&
        Objects.equals(this.urls, modForumSetPinState200Response.urls) &&
        Objects.equals(this.userstate, modForumSetPinState200Response.userstate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capabilities, firstpostid, forumid, group, id, istimelocked, locked, name, pinned, timed, times, urls, userstate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModForumSetPinState200Response {\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    firstpostid: ").append(toIndentedString(firstpostid)).append("\n");
    sb.append("    forumid: ").append(toIndentedString(forumid)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    istimelocked: ").append(toIndentedString(istimelocked)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
    sb.append("    timed: ").append(toIndentedString(timed)).append("\n");
    sb.append("    times: ").append(toIndentedString(times)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("    userstate: ").append(toIndentedString(userstate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("capabilities");
    openapiFields.add("firstpostid");
    openapiFields.add("forumid");
    openapiFields.add("group");
    openapiFields.add("id");
    openapiFields.add("istimelocked");
    openapiFields.add("locked");
    openapiFields.add("name");
    openapiFields.add("pinned");
    openapiFields.add("timed");
    openapiFields.add("times");
    openapiFields.add("urls");
    openapiFields.add("userstate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("capabilities");
    openapiRequiredFields.add("firstpostid");
    openapiRequiredFields.add("forumid");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("istimelocked");
    openapiRequiredFields.add("locked");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("pinned");
    openapiRequiredFields.add("timed");
    openapiRequiredFields.add("times");
    openapiRequiredFields.add("urls");
    openapiRequiredFields.add("userstate");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModForumSetPinState200Response
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModForumSetPinState200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModForumSetPinState200Response is not found in the empty JSON string", ModForumSetPinState200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModForumSetPinState200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModForumSetPinState200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModForumSetPinState200Response.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `capabilities`
      ModForumSetPinState200ResponseCapabilities.validateJsonElement(jsonObj.get("capabilities"));
      // validate the optional field `group`
      if (jsonObj.get("group") != null && !jsonObj.get("group").isJsonNull()) {
        ModForumSetPinState200ResponseGroup.validateJsonElement(jsonObj.get("group"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the required field `timed`
      ModForumSetPinState200ResponseTimed.validateJsonElement(jsonObj.get("timed"));
      // validate the required field `times`
      ModForumSetPinState200ResponseTimes.validateJsonElement(jsonObj.get("times"));
      // validate the required field `urls`
      ModForumSetPinState200ResponseUrls.validateJsonElement(jsonObj.get("urls"));
      // validate the required field `userstate`
      ModForumSetPinState200ResponseUserstate.validateJsonElement(jsonObj.get("userstate"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModForumSetPinState200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModForumSetPinState200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModForumSetPinState200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModForumSetPinState200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<ModForumSetPinState200Response>() {
           @Override
           public void write(JsonWriter out, ModForumSetPinState200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModForumSetPinState200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModForumSetPinState200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModForumSetPinState200Response
  * @throws IOException if the JSON string is invalid with respect to ModForumSetPinState200Response
  */
  public static ModForumSetPinState200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModForumSetPinState200Response.class);
  }

 /**
  * Convert an instance of ModForumSetPinState200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

