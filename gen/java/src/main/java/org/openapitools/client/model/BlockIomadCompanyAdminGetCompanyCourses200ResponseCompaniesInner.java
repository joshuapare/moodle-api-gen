/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInnerCoursesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address = "null";

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city = "null";

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code = "null";

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country = "null";

  public static final String SERIALIZED_NAME_COURSES = "courses";
  @SerializedName(SERIALIZED_NAME_COURSES)
  private List<BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInnerCoursesInner> courses = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOM1 = "custom1";
  @SerializedName(SERIALIZED_NAME_CUSTOM1)
  private String custom1 = "null";

  public static final String SERIALIZED_NAME_CUSTOM2 = "custom2";
  @SerializedName(SERIALIZED_NAME_CUSTOM2)
  private String custom2 = "null";

  public static final String SERIALIZED_NAME_CUSTOM3 = "custom3";
  @SerializedName(SERIALIZED_NAME_CUSTOM3)
  private String custom3 = "null";

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = "null";

  public static final String SERIALIZED_NAME_POSTCODE = "postcode";
  @SerializedName(SERIALIZED_NAME_POSTCODE)
  private String postcode = "null";

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region = "null";

  public static final String SERIALIZED_NAME_SHORTNAME = "shortname";
  @SerializedName(SERIALIZED_NAME_SHORTNAME)
  private String shortname = "null";

  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner() {
  }

  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Company address
   * @return address
  **/
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Company city
   * @return city
  **/
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Company code
   * @return code
  **/
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Company country
   * @return country
  **/
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner courses(List<BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInnerCoursesInner> courses) {
    this.courses = courses;
    return this;
  }

  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner addCoursesItem(BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInnerCoursesInner coursesItem) {
    if (this.courses == null) {
      this.courses = new ArrayList<>();
    }
    this.courses.add(coursesItem);
    return this;
  }

   /**
   * Get courses
   * @return courses
  **/
  @javax.annotation.Nullable
  public List<BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInnerCoursesInner> getCourses() {
    return courses;
  }

  public void setCourses(List<BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInnerCoursesInner> courses) {
    this.courses = courses;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner custom1(String custom1) {
    this.custom1 = custom1;
    return this;
  }

   /**
   * Company custom1
   * @return custom1
  **/
  @javax.annotation.Nullable
  public String getCustom1() {
    return custom1;
  }

  public void setCustom1(String custom1) {
    this.custom1 = custom1;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner custom2(String custom2) {
    this.custom2 = custom2;
    return this;
  }

   /**
   * Company custom2
   * @return custom2
  **/
  @javax.annotation.Nullable
  public String getCustom2() {
    return custom2;
  }

  public void setCustom2(String custom2) {
    this.custom2 = custom2;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner custom3(String custom3) {
    this.custom3 = custom3;
    return this;
  }

   /**
   * Company custom3
   * @return custom3
  **/
  @javax.annotation.Nullable
  public String getCustom3() {
    return custom3;
  }

  public void setCustom3(String custom3) {
    this.custom3 = custom3;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Company ID
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Company name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner postcode(String postcode) {
    this.postcode = postcode;
    return this;
  }

   /**
   * Company postcode
   * @return postcode
  **/
  @javax.annotation.Nullable
  public String getPostcode() {
    return postcode;
  }

  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Company region
   * @return region
  **/
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner shortname(String shortname) {
    this.shortname = shortname;
    return this;
  }

   /**
   * Company shortname
   * @return shortname
  **/
  @javax.annotation.Nullable
  public String getShortname() {
    return shortname;
  }

  public void setShortname(String shortname) {
    this.shortname = shortname;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner = (BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner) o;
    return Objects.equals(this.address, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.address) &&
        Objects.equals(this.city, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.city) &&
        Objects.equals(this.code, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.code) &&
        Objects.equals(this.country, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.country) &&
        Objects.equals(this.courses, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.courses) &&
        Objects.equals(this.custom1, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.custom1) &&
        Objects.equals(this.custom2, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.custom2) &&
        Objects.equals(this.custom3, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.custom3) &&
        Objects.equals(this.id, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.id) &&
        Objects.equals(this.name, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.name) &&
        Objects.equals(this.postcode, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.postcode) &&
        Objects.equals(this.region, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.region) &&
        Objects.equals(this.shortname, blockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.shortname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, city, code, country, courses, custom1, custom2, custom3, id, name, postcode, region, shortname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    courses: ").append(toIndentedString(courses)).append("\n");
    sb.append("    custom1: ").append(toIndentedString(custom1)).append("\n");
    sb.append("    custom2: ").append(toIndentedString(custom2)).append("\n");
    sb.append("    custom3: ").append(toIndentedString(custom3)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    shortname: ").append(toIndentedString(shortname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("city");
    openapiFields.add("code");
    openapiFields.add("country");
    openapiFields.add("courses");
    openapiFields.add("custom1");
    openapiFields.add("custom2");
    openapiFields.add("custom3");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("postcode");
    openapiFields.add("region");
    openapiFields.add("shortname");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner is not found in the empty JSON string", BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if (jsonObj.get("courses") != null && !jsonObj.get("courses").isJsonNull()) {
        JsonArray jsonArraycourses = jsonObj.getAsJsonArray("courses");
        if (jsonArraycourses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("courses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `courses` to be an array in the JSON string but got `%s`", jsonObj.get("courses").toString()));
          }

          // validate the optional field `courses` (array)
          for (int i = 0; i < jsonArraycourses.size(); i++) {
            BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInnerCoursesInner.validateJsonElement(jsonArraycourses.get(i));
          };
        }
      }
      if ((jsonObj.get("custom1") != null && !jsonObj.get("custom1").isJsonNull()) && !jsonObj.get("custom1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom1").toString()));
      }
      if ((jsonObj.get("custom2") != null && !jsonObj.get("custom2").isJsonNull()) && !jsonObj.get("custom2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom2").toString()));
      }
      if ((jsonObj.get("custom3") != null && !jsonObj.get("custom3").isJsonNull()) && !jsonObj.get("custom3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom3").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("postcode") != null && !jsonObj.get("postcode").isJsonNull()) && !jsonObj.get("postcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcode").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("shortname") != null && !jsonObj.get("shortname").isJsonNull()) && !jsonObj.get("shortname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortname").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner>() {
           @Override
           public void write(JsonWriter out, BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner
  * @throws IOException if the JSON string is invalid with respect to BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner
  */
  public static BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner.class);
  }

 /**
  * Convert an instance of BlockIomadCompanyAdminGetCompanyCourses200ResponseCompaniesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

