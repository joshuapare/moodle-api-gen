/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * post
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModForumGetForumDiscussions200ResponseDiscussionsInner {
  public static final String SERIALIZED_NAME_ATTACHMENT = "attachment";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT)
  private String attachment = "null";

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> attachments = new ArrayList<>();

  public static final String SERIALIZED_NAME_CANFAVOURITE = "canfavourite";
  @SerializedName(SERIALIZED_NAME_CANFAVOURITE)
  private Boolean canfavourite = null;

  public static final String SERIALIZED_NAME_CANLOCK = "canlock";
  @SerializedName(SERIALIZED_NAME_CANLOCK)
  private Boolean canlock = null;

  public static final String SERIALIZED_NAME_CANREPLY = "canreply";
  @SerializedName(SERIALIZED_NAME_CANREPLY)
  private Boolean canreply = null;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private Integer created = null;

  public static final String SERIALIZED_NAME_DISCUSSION = "discussion";
  @SerializedName(SERIALIZED_NAME_DISCUSSION)
  private Integer discussion = null;

  public static final String SERIALIZED_NAME_GROUPID = "groupid";
  @SerializedName(SERIALIZED_NAME_GROUPID)
  private Integer groupid;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked = null;

  public static final String SERIALIZED_NAME_MAILED = "mailed";
  @SerializedName(SERIALIZED_NAME_MAILED)
  private Integer mailed = null;

  public static final String SERIALIZED_NAME_MAILNOW = "mailnow";
  @SerializedName(SERIALIZED_NAME_MAILNOW)
  private Integer mailnow = null;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message = "null";

  public static final String SERIALIZED_NAME_MESSAGEFORMAT = "messageformat";
  @SerializedName(SERIALIZED_NAME_MESSAGEFORMAT)
  private Integer messageformat;

  public static final String SERIALIZED_NAME_MESSAGEINLINEFILES = "messageinlinefiles";
  @SerializedName(SERIALIZED_NAME_MESSAGEINLINEFILES)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> messageinlinefiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_MESSAGETRUST = "messagetrust";
  @SerializedName(SERIALIZED_NAME_MESSAGETRUST)
  private Integer messagetrust = null;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private Integer modified;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = "null";

  public static final String SERIALIZED_NAME_NUMREPLIES = "numreplies";
  @SerializedName(SERIALIZED_NAME_NUMREPLIES)
  private Integer numreplies = null;

  public static final String SERIALIZED_NAME_NUMUNREAD = "numunread";
  @SerializedName(SERIALIZED_NAME_NUMUNREAD)
  private Integer numunread = null;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private Integer parent = null;

  public static final String SERIALIZED_NAME_PINNED = "pinned";
  @SerializedName(SERIALIZED_NAME_PINNED)
  private Boolean pinned = null;

  public static final String SERIALIZED_NAME_STARRED = "starred";
  @SerializedName(SERIALIZED_NAME_STARRED)
  private Boolean starred = null;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject = "null";

  public static final String SERIALIZED_NAME_TIMEEND = "timeend";
  @SerializedName(SERIALIZED_NAME_TIMEEND)
  private Integer timeend = null;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified;

  public static final String SERIALIZED_NAME_TIMESTART = "timestart";
  @SerializedName(SERIALIZED_NAME_TIMESTART)
  private Integer timestart = null;

  public static final String SERIALIZED_NAME_TOTALSCORE = "totalscore";
  @SerializedName(SERIALIZED_NAME_TOTALSCORE)
  private Integer totalscore = null;

  public static final String SERIALIZED_NAME_USERFULLNAME = "userfullname";
  @SerializedName(SERIALIZED_NAME_USERFULLNAME)
  private String userfullname = "null";

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid = null;

  public static final String SERIALIZED_NAME_USERMODIFIED = "usermodified";
  @SerializedName(SERIALIZED_NAME_USERMODIFIED)
  private Integer usermodified = null;

  public static final String SERIALIZED_NAME_USERMODIFIEDFULLNAME = "usermodifiedfullname";
  @SerializedName(SERIALIZED_NAME_USERMODIFIEDFULLNAME)
  private String usermodifiedfullname = "null";

  public static final String SERIALIZED_NAME_USERMODIFIEDPICTUREURL = "usermodifiedpictureurl";
  @SerializedName(SERIALIZED_NAME_USERMODIFIEDPICTUREURL)
  private String usermodifiedpictureurl = "null";

  public static final String SERIALIZED_NAME_USERPICTUREURL = "userpictureurl";
  @SerializedName(SERIALIZED_NAME_USERPICTUREURL)
  private String userpictureurl = "null";

  public ModForumGetForumDiscussions200ResponseDiscussionsInner() {
  }

  public ModForumGetForumDiscussions200ResponseDiscussionsInner attachment(String attachment) {
    this.attachment = attachment;
    return this;
  }

   /**
   * Has attachments?
   * @return attachment
  **/
  @javax.annotation.Nullable
  public String getAttachment() {
    return attachment;
  }

  public void setAttachment(String attachment) {
    this.attachment = attachment;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner attachments(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> attachments) {
    this.attachments = attachments;
    return this;
  }

  public ModForumGetForumDiscussions200ResponseDiscussionsInner addAttachmentsItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> attachments) {
    this.attachments = attachments;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner canfavourite(Boolean canfavourite) {
    this.canfavourite = canfavourite;
    return this;
  }

   /**
   * Can the user star the discussion
   * @return canfavourite
  **/
  @javax.annotation.Nullable
  public Boolean getCanfavourite() {
    return canfavourite;
  }

  public void setCanfavourite(Boolean canfavourite) {
    this.canfavourite = canfavourite;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner canlock(Boolean canlock) {
    this.canlock = canlock;
    return this;
  }

   /**
   * Can the user lock the discussion
   * @return canlock
  **/
  @javax.annotation.Nullable
  public Boolean getCanlock() {
    return canlock;
  }

  public void setCanlock(Boolean canlock) {
    this.canlock = canlock;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner canreply(Boolean canreply) {
    this.canreply = canreply;
    return this;
  }

   /**
   * Can the user reply to the discussion
   * @return canreply
  **/
  @javax.annotation.Nullable
  public Boolean getCanreply() {
    return canreply;
  }

  public void setCanreply(Boolean canreply) {
    this.canreply = canreply;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * Creation time
   * @return created
  **/
  @javax.annotation.Nullable
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner discussion(Integer discussion) {
    this.discussion = discussion;
    return this;
  }

   /**
   * Discussion id
   * @return discussion
  **/
  @javax.annotation.Nullable
  public Integer getDiscussion() {
    return discussion;
  }

  public void setDiscussion(Integer discussion) {
    this.discussion = discussion;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner groupid(Integer groupid) {
    this.groupid = groupid;
    return this;
  }

   /**
   * Group id
   * @return groupid
  **/
  @javax.annotation.Nullable
  public Integer getGroupid() {
    return groupid;
  }

  public void setGroupid(Integer groupid) {
    this.groupid = groupid;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Post id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Is the discussion locked
   * @return locked
  **/
  @javax.annotation.Nullable
  public Boolean getLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner mailed(Integer mailed) {
    this.mailed = mailed;
    return this;
  }

   /**
   * Mailed?
   * @return mailed
  **/
  @javax.annotation.Nullable
  public Integer getMailed() {
    return mailed;
  }

  public void setMailed(Integer mailed) {
    this.mailed = mailed;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner mailnow(Integer mailnow) {
    this.mailnow = mailnow;
    return this;
  }

   /**
   * Mail now?
   * @return mailnow
  **/
  @javax.annotation.Nullable
  public Integer getMailnow() {
    return mailnow;
  }

  public void setMailnow(Integer mailnow) {
    this.mailnow = mailnow;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner message(String message) {
    this.message = message;
    return this;
  }

   /**
   * The post message
   * @return message
  **/
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner messageformat(Integer messageformat) {
    this.messageformat = messageformat;
    return this;
  }

   /**
   * message format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return messageformat
  **/
  @javax.annotation.Nullable
  public Integer getMessageformat() {
    return messageformat;
  }

  public void setMessageformat(Integer messageformat) {
    this.messageformat = messageformat;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner messageinlinefiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> messageinlinefiles) {
    this.messageinlinefiles = messageinlinefiles;
    return this;
  }

  public ModForumGetForumDiscussions200ResponseDiscussionsInner addMessageinlinefilesItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner messageinlinefilesItem) {
    if (this.messageinlinefiles == null) {
      this.messageinlinefiles = new ArrayList<>();
    }
    this.messageinlinefiles.add(messageinlinefilesItem);
    return this;
  }

   /**
   * Get messageinlinefiles
   * @return messageinlinefiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getMessageinlinefiles() {
    return messageinlinefiles;
  }

  public void setMessageinlinefiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> messageinlinefiles) {
    this.messageinlinefiles = messageinlinefiles;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner messagetrust(Integer messagetrust) {
    this.messagetrust = messagetrust;
    return this;
  }

   /**
   * Can we trust?
   * @return messagetrust
  **/
  @javax.annotation.Nullable
  public Integer getMessagetrust() {
    return messagetrust;
  }

  public void setMessagetrust(Integer messagetrust) {
    this.messagetrust = messagetrust;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner modified(Integer modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Time modified
   * @return modified
  **/
  @javax.annotation.Nullable
  public Integer getModified() {
    return modified;
  }

  public void setModified(Integer modified) {
    this.modified = modified;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Discussion name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner numreplies(Integer numreplies) {
    this.numreplies = numreplies;
    return this;
  }

   /**
   * The number of replies in the discussion
   * @return numreplies
  **/
  @javax.annotation.Nullable
  public Integer getNumreplies() {
    return numreplies;
  }

  public void setNumreplies(Integer numreplies) {
    this.numreplies = numreplies;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner numunread(Integer numunread) {
    this.numunread = numunread;
    return this;
  }

   /**
   * The number of unread discussions.
   * @return numunread
  **/
  @javax.annotation.Nullable
  public Integer getNumunread() {
    return numunread;
  }

  public void setNumunread(Integer numunread) {
    this.numunread = numunread;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner parent(Integer parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Parent id
   * @return parent
  **/
  @javax.annotation.Nullable
  public Integer getParent() {
    return parent;
  }

  public void setParent(Integer parent) {
    this.parent = parent;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner pinned(Boolean pinned) {
    this.pinned = pinned;
    return this;
  }

   /**
   * Is the discussion pinned
   * @return pinned
  **/
  @javax.annotation.Nullable
  public Boolean getPinned() {
    return pinned;
  }

  public void setPinned(Boolean pinned) {
    this.pinned = pinned;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner starred(Boolean starred) {
    this.starred = starred;
    return this;
  }

   /**
   * Is the discussion starred
   * @return starred
  **/
  @javax.annotation.Nullable
  public Boolean getStarred() {
    return starred;
  }

  public void setStarred(Boolean starred) {
    this.starred = starred;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * The post subject
   * @return subject
  **/
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner timeend(Integer timeend) {
    this.timeend = timeend;
    return this;
  }

   /**
   * Time discussion ends
   * @return timeend
  **/
  @javax.annotation.Nullable
  public Integer getTimeend() {
    return timeend;
  }

  public void setTimeend(Integer timeend) {
    this.timeend = timeend;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * Time modified
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner timestart(Integer timestart) {
    this.timestart = timestart;
    return this;
  }

   /**
   * Time discussion can start
   * @return timestart
  **/
  @javax.annotation.Nullable
  public Integer getTimestart() {
    return timestart;
  }

  public void setTimestart(Integer timestart) {
    this.timestart = timestart;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner totalscore(Integer totalscore) {
    this.totalscore = totalscore;
    return this;
  }

   /**
   * The post message total score
   * @return totalscore
  **/
  @javax.annotation.Nullable
  public Integer getTotalscore() {
    return totalscore;
  }

  public void setTotalscore(Integer totalscore) {
    this.totalscore = totalscore;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner userfullname(String userfullname) {
    this.userfullname = userfullname;
    return this;
  }

   /**
   * Post author full name
   * @return userfullname
  **/
  @javax.annotation.Nullable
  public String getUserfullname() {
    return userfullname;
  }

  public void setUserfullname(String userfullname) {
    this.userfullname = userfullname;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * User who started the discussion id
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner usermodified(Integer usermodified) {
    this.usermodified = usermodified;
    return this;
  }

   /**
   * The id of the user who last modified
   * @return usermodified
  **/
  @javax.annotation.Nullable
  public Integer getUsermodified() {
    return usermodified;
  }

  public void setUsermodified(Integer usermodified) {
    this.usermodified = usermodified;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner usermodifiedfullname(String usermodifiedfullname) {
    this.usermodifiedfullname = usermodifiedfullname;
    return this;
  }

   /**
   * Post modifier full name
   * @return usermodifiedfullname
  **/
  @javax.annotation.Nullable
  public String getUsermodifiedfullname() {
    return usermodifiedfullname;
  }

  public void setUsermodifiedfullname(String usermodifiedfullname) {
    this.usermodifiedfullname = usermodifiedfullname;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner usermodifiedpictureurl(String usermodifiedpictureurl) {
    this.usermodifiedpictureurl = usermodifiedpictureurl;
    return this;
  }

   /**
   * Post modifier picture.
   * @return usermodifiedpictureurl
  **/
  @javax.annotation.Nullable
  public String getUsermodifiedpictureurl() {
    return usermodifiedpictureurl;
  }

  public void setUsermodifiedpictureurl(String usermodifiedpictureurl) {
    this.usermodifiedpictureurl = usermodifiedpictureurl;
  }


  public ModForumGetForumDiscussions200ResponseDiscussionsInner userpictureurl(String userpictureurl) {
    this.userpictureurl = userpictureurl;
    return this;
  }

   /**
   * Post author picture.
   * @return userpictureurl
  **/
  @javax.annotation.Nullable
  public String getUserpictureurl() {
    return userpictureurl;
  }

  public void setUserpictureurl(String userpictureurl) {
    this.userpictureurl = userpictureurl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModForumGetForumDiscussions200ResponseDiscussionsInner modForumGetForumDiscussions200ResponseDiscussionsInner = (ModForumGetForumDiscussions200ResponseDiscussionsInner) o;
    return Objects.equals(this.attachment, modForumGetForumDiscussions200ResponseDiscussionsInner.attachment) &&
        Objects.equals(this.attachments, modForumGetForumDiscussions200ResponseDiscussionsInner.attachments) &&
        Objects.equals(this.canfavourite, modForumGetForumDiscussions200ResponseDiscussionsInner.canfavourite) &&
        Objects.equals(this.canlock, modForumGetForumDiscussions200ResponseDiscussionsInner.canlock) &&
        Objects.equals(this.canreply, modForumGetForumDiscussions200ResponseDiscussionsInner.canreply) &&
        Objects.equals(this.created, modForumGetForumDiscussions200ResponseDiscussionsInner.created) &&
        Objects.equals(this.discussion, modForumGetForumDiscussions200ResponseDiscussionsInner.discussion) &&
        Objects.equals(this.groupid, modForumGetForumDiscussions200ResponseDiscussionsInner.groupid) &&
        Objects.equals(this.id, modForumGetForumDiscussions200ResponseDiscussionsInner.id) &&
        Objects.equals(this.locked, modForumGetForumDiscussions200ResponseDiscussionsInner.locked) &&
        Objects.equals(this.mailed, modForumGetForumDiscussions200ResponseDiscussionsInner.mailed) &&
        Objects.equals(this.mailnow, modForumGetForumDiscussions200ResponseDiscussionsInner.mailnow) &&
        Objects.equals(this.message, modForumGetForumDiscussions200ResponseDiscussionsInner.message) &&
        Objects.equals(this.messageformat, modForumGetForumDiscussions200ResponseDiscussionsInner.messageformat) &&
        Objects.equals(this.messageinlinefiles, modForumGetForumDiscussions200ResponseDiscussionsInner.messageinlinefiles) &&
        Objects.equals(this.messagetrust, modForumGetForumDiscussions200ResponseDiscussionsInner.messagetrust) &&
        Objects.equals(this.modified, modForumGetForumDiscussions200ResponseDiscussionsInner.modified) &&
        Objects.equals(this.name, modForumGetForumDiscussions200ResponseDiscussionsInner.name) &&
        Objects.equals(this.numreplies, modForumGetForumDiscussions200ResponseDiscussionsInner.numreplies) &&
        Objects.equals(this.numunread, modForumGetForumDiscussions200ResponseDiscussionsInner.numunread) &&
        Objects.equals(this.parent, modForumGetForumDiscussions200ResponseDiscussionsInner.parent) &&
        Objects.equals(this.pinned, modForumGetForumDiscussions200ResponseDiscussionsInner.pinned) &&
        Objects.equals(this.starred, modForumGetForumDiscussions200ResponseDiscussionsInner.starred) &&
        Objects.equals(this.subject, modForumGetForumDiscussions200ResponseDiscussionsInner.subject) &&
        Objects.equals(this.timeend, modForumGetForumDiscussions200ResponseDiscussionsInner.timeend) &&
        Objects.equals(this.timemodified, modForumGetForumDiscussions200ResponseDiscussionsInner.timemodified) &&
        Objects.equals(this.timestart, modForumGetForumDiscussions200ResponseDiscussionsInner.timestart) &&
        Objects.equals(this.totalscore, modForumGetForumDiscussions200ResponseDiscussionsInner.totalscore) &&
        Objects.equals(this.userfullname, modForumGetForumDiscussions200ResponseDiscussionsInner.userfullname) &&
        Objects.equals(this.userid, modForumGetForumDiscussions200ResponseDiscussionsInner.userid) &&
        Objects.equals(this.usermodified, modForumGetForumDiscussions200ResponseDiscussionsInner.usermodified) &&
        Objects.equals(this.usermodifiedfullname, modForumGetForumDiscussions200ResponseDiscussionsInner.usermodifiedfullname) &&
        Objects.equals(this.usermodifiedpictureurl, modForumGetForumDiscussions200ResponseDiscussionsInner.usermodifiedpictureurl) &&
        Objects.equals(this.userpictureurl, modForumGetForumDiscussions200ResponseDiscussionsInner.userpictureurl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachment, attachments, canfavourite, canlock, canreply, created, discussion, groupid, id, locked, mailed, mailnow, message, messageformat, messageinlinefiles, messagetrust, modified, name, numreplies, numunread, parent, pinned, starred, subject, timeend, timemodified, timestart, totalscore, userfullname, userid, usermodified, usermodifiedfullname, usermodifiedpictureurl, userpictureurl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModForumGetForumDiscussions200ResponseDiscussionsInner {\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    canfavourite: ").append(toIndentedString(canfavourite)).append("\n");
    sb.append("    canlock: ").append(toIndentedString(canlock)).append("\n");
    sb.append("    canreply: ").append(toIndentedString(canreply)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    discussion: ").append(toIndentedString(discussion)).append("\n");
    sb.append("    groupid: ").append(toIndentedString(groupid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    mailed: ").append(toIndentedString(mailed)).append("\n");
    sb.append("    mailnow: ").append(toIndentedString(mailnow)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messageformat: ").append(toIndentedString(messageformat)).append("\n");
    sb.append("    messageinlinefiles: ").append(toIndentedString(messageinlinefiles)).append("\n");
    sb.append("    messagetrust: ").append(toIndentedString(messagetrust)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numreplies: ").append(toIndentedString(numreplies)).append("\n");
    sb.append("    numunread: ").append(toIndentedString(numunread)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
    sb.append("    starred: ").append(toIndentedString(starred)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    timeend: ").append(toIndentedString(timeend)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    timestart: ").append(toIndentedString(timestart)).append("\n");
    sb.append("    totalscore: ").append(toIndentedString(totalscore)).append("\n");
    sb.append("    userfullname: ").append(toIndentedString(userfullname)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    usermodified: ").append(toIndentedString(usermodified)).append("\n");
    sb.append("    usermodifiedfullname: ").append(toIndentedString(usermodifiedfullname)).append("\n");
    sb.append("    usermodifiedpictureurl: ").append(toIndentedString(usermodifiedpictureurl)).append("\n");
    sb.append("    userpictureurl: ").append(toIndentedString(userpictureurl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attachment");
    openapiFields.add("attachments");
    openapiFields.add("canfavourite");
    openapiFields.add("canlock");
    openapiFields.add("canreply");
    openapiFields.add("created");
    openapiFields.add("discussion");
    openapiFields.add("groupid");
    openapiFields.add("id");
    openapiFields.add("locked");
    openapiFields.add("mailed");
    openapiFields.add("mailnow");
    openapiFields.add("message");
    openapiFields.add("messageformat");
    openapiFields.add("messageinlinefiles");
    openapiFields.add("messagetrust");
    openapiFields.add("modified");
    openapiFields.add("name");
    openapiFields.add("numreplies");
    openapiFields.add("numunread");
    openapiFields.add("parent");
    openapiFields.add("pinned");
    openapiFields.add("starred");
    openapiFields.add("subject");
    openapiFields.add("timeend");
    openapiFields.add("timemodified");
    openapiFields.add("timestart");
    openapiFields.add("totalscore");
    openapiFields.add("userfullname");
    openapiFields.add("userid");
    openapiFields.add("usermodified");
    openapiFields.add("usermodifiedfullname");
    openapiFields.add("usermodifiedpictureurl");
    openapiFields.add("userpictureurl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModForumGetForumDiscussions200ResponseDiscussionsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModForumGetForumDiscussions200ResponseDiscussionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModForumGetForumDiscussions200ResponseDiscussionsInner is not found in the empty JSON string", ModForumGetForumDiscussions200ResponseDiscussionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModForumGetForumDiscussions200ResponseDiscussionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModForumGetForumDiscussions200ResponseDiscussionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attachment") != null && !jsonObj.get("attachment").isJsonNull()) && !jsonObj.get("attachment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attachment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attachment").toString()));
      }
      if (jsonObj.get("attachments") != null && !jsonObj.get("attachments").isJsonNull()) {
        JsonArray jsonArrayattachments = jsonObj.getAsJsonArray("attachments");
        if (jsonArrayattachments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachments` to be an array in the JSON string but got `%s`", jsonObj.get("attachments").toString()));
          }

          // validate the optional field `attachments` (array)
          for (int i = 0; i < jsonArrayattachments.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArrayattachments.get(i));
          };
        }
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if (jsonObj.get("messageinlinefiles") != null && !jsonObj.get("messageinlinefiles").isJsonNull()) {
        JsonArray jsonArraymessageinlinefiles = jsonObj.getAsJsonArray("messageinlinefiles");
        if (jsonArraymessageinlinefiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messageinlinefiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messageinlinefiles` to be an array in the JSON string but got `%s`", jsonObj.get("messageinlinefiles").toString()));
          }

          // validate the optional field `messageinlinefiles` (array)
          for (int i = 0; i < jsonArraymessageinlinefiles.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArraymessageinlinefiles.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      if ((jsonObj.get("userfullname") != null && !jsonObj.get("userfullname").isJsonNull()) && !jsonObj.get("userfullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userfullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userfullname").toString()));
      }
      if ((jsonObj.get("usermodifiedfullname") != null && !jsonObj.get("usermodifiedfullname").isJsonNull()) && !jsonObj.get("usermodifiedfullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usermodifiedfullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usermodifiedfullname").toString()));
      }
      if ((jsonObj.get("usermodifiedpictureurl") != null && !jsonObj.get("usermodifiedpictureurl").isJsonNull()) && !jsonObj.get("usermodifiedpictureurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usermodifiedpictureurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usermodifiedpictureurl").toString()));
      }
      if ((jsonObj.get("userpictureurl") != null && !jsonObj.get("userpictureurl").isJsonNull()) && !jsonObj.get("userpictureurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userpictureurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userpictureurl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModForumGetForumDiscussions200ResponseDiscussionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModForumGetForumDiscussions200ResponseDiscussionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModForumGetForumDiscussions200ResponseDiscussionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModForumGetForumDiscussions200ResponseDiscussionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModForumGetForumDiscussions200ResponseDiscussionsInner>() {
           @Override
           public void write(JsonWriter out, ModForumGetForumDiscussions200ResponseDiscussionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModForumGetForumDiscussions200ResponseDiscussionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModForumGetForumDiscussions200ResponseDiscussionsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModForumGetForumDiscussions200ResponseDiscussionsInner
  * @throws IOException if the JSON string is invalid with respect to ModForumGetForumDiscussions200ResponseDiscussionsInner
  */
  public static ModForumGetForumDiscussions200ResponseDiscussionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModForumGetForumDiscussions200ResponseDiscussionsInner.class);
  }

 /**
  * Convert an instance of ModForumGetForumDiscussions200ResponseDiscussionsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

