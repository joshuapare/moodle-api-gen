/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CoreCompetencyGradeCompetency200ResponseActionuser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ToolDataprivacyGetDataRequest200ResponseResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ToolDataprivacyGetDataRequest200ResponseResult {
  public static final String SERIALIZED_NAME_ALLOWFILTERING = "allowfiltering";
  @SerializedName(SERIALIZED_NAME_ALLOWFILTERING)
  private Boolean allowfiltering = false;

  public static final String SERIALIZED_NAME_APPROVEDENY = "approvedeny";
  @SerializedName(SERIALIZED_NAME_APPROVEDENY)
  private Boolean approvedeny = false;

  public static final String SERIALIZED_NAME_CANMARKCOMPLETE = "canmarkcomplete";
  @SerializedName(SERIALIZED_NAME_CANMARKCOMPLETE)
  private Boolean canmarkcomplete = false;

  public static final String SERIALIZED_NAME_CANREVIEW = "canreview";
  @SerializedName(SERIALIZED_NAME_CANREVIEW)
  private Boolean canreview = false;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments = "";

  public static final String SERIALIZED_NAME_COMMENTSFORMAT = "commentsformat";
  @SerializedName(SERIALIZED_NAME_COMMENTSFORMAT)
  private Integer commentsformat = 2;

  public static final String SERIALIZED_NAME_CREATIONMETHOD = "creationmethod";
  @SerializedName(SERIALIZED_NAME_CREATIONMETHOD)
  private Integer creationmethod = 0;

  public static final String SERIALIZED_NAME_DPO = "dpo";
  @SerializedName(SERIALIZED_NAME_DPO)
  private Integer dpo = 0;

  public static final String SERIALIZED_NAME_DPOCOMMENT = "dpocomment";
  @SerializedName(SERIALIZED_NAME_DPOCOMMENT)
  private String dpocomment = "";

  public static final String SERIALIZED_NAME_DPOCOMMENTFORMAT = "dpocommentformat";
  @SerializedName(SERIALIZED_NAME_DPOCOMMENTFORMAT)
  private Integer dpocommentformat = 2;

  public static final String SERIALIZED_NAME_DPOUSER = "dpouser";
  @SerializedName(SERIALIZED_NAME_DPOUSER)
  private CoreCompetencyGradeCompetency200ResponseActionuser dpouser;

  public static final String SERIALIZED_NAME_FORUSER = "foruser";
  @SerializedName(SERIALIZED_NAME_FORUSER)
  private CoreCompetencyGradeCompetency200ResponseActionuser foruser;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = 0;

  public static final String SERIALIZED_NAME_MESSAGEHTML = "messagehtml";
  @SerializedName(SERIALIZED_NAME_MESSAGEHTML)
  private String messagehtml = "null";

  public static final String SERIALIZED_NAME_REQUESTEDBY = "requestedby";
  @SerializedName(SERIALIZED_NAME_REQUESTEDBY)
  private Integer requestedby = 0;

  public static final String SERIALIZED_NAME_REQUESTEDBYUSER = "requestedbyuser";
  @SerializedName(SERIALIZED_NAME_REQUESTEDBYUSER)
  private CoreCompetencyGradeCompetency200ResponseActionuser requestedbyuser;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status = 2;

  public static final String SERIALIZED_NAME_STATUSLABEL = "statuslabel";
  @SerializedName(SERIALIZED_NAME_STATUSLABEL)
  private String statuslabel = "null";

  public static final String SERIALIZED_NAME_STATUSLABELCLASS = "statuslabelclass";
  @SerializedName(SERIALIZED_NAME_STATUSLABELCLASS)
  private String statuslabelclass = "null";

  public static final String SERIALIZED_NAME_SYSTEMAPPROVED = "systemapproved";
  @SerializedName(SERIALIZED_NAME_SYSTEMAPPROVED)
  private Boolean systemapproved = false;

  public static final String SERIALIZED_NAME_TIMECREATED = "timecreated";
  @SerializedName(SERIALIZED_NAME_TIMECREATED)
  private Integer timecreated = 0;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified = 0;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_TYPENAME = "typename";
  @SerializedName(SERIALIZED_NAME_TYPENAME)
  private String typename = "null";

  public static final String SERIALIZED_NAME_TYPENAMESHORT = "typenameshort";
  @SerializedName(SERIALIZED_NAME_TYPENAMESHORT)
  private String typenameshort = "null";

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid = {};

  public static final String SERIALIZED_NAME_USERMODIFIED = "usermodified";
  @SerializedName(SERIALIZED_NAME_USERMODIFIED)
  private Integer usermodified = 0;

  public ToolDataprivacyGetDataRequest200ResponseResult() {
  }

  public ToolDataprivacyGetDataRequest200ResponseResult allowfiltering(Boolean allowfiltering) {
    this.allowfiltering = allowfiltering;
    return this;
  }

   /**
   * allowfiltering
   * @return allowfiltering
  **/
  @javax.annotation.Nullable
  public Boolean getAllowfiltering() {
    return allowfiltering;
  }

  public void setAllowfiltering(Boolean allowfiltering) {
    this.allowfiltering = allowfiltering;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult approvedeny(Boolean approvedeny) {
    this.approvedeny = approvedeny;
    return this;
  }

   /**
   * approvedeny
   * @return approvedeny
  **/
  @javax.annotation.Nullable
  public Boolean getApprovedeny() {
    return approvedeny;
  }

  public void setApprovedeny(Boolean approvedeny) {
    this.approvedeny = approvedeny;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult canmarkcomplete(Boolean canmarkcomplete) {
    this.canmarkcomplete = canmarkcomplete;
    return this;
  }

   /**
   * canmarkcomplete
   * @return canmarkcomplete
  **/
  @javax.annotation.Nullable
  public Boolean getCanmarkcomplete() {
    return canmarkcomplete;
  }

  public void setCanmarkcomplete(Boolean canmarkcomplete) {
    this.canmarkcomplete = canmarkcomplete;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult canreview(Boolean canreview) {
    this.canreview = canreview;
    return this;
  }

   /**
   * canreview
   * @return canreview
  **/
  @javax.annotation.Nullable
  public Boolean getCanreview() {
    return canreview;
  }

  public void setCanreview(Boolean canreview) {
    this.canreview = canreview;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * comments
   * @return comments
  **/
  @javax.annotation.Nonnull
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult commentsformat(Integer commentsformat) {
    this.commentsformat = commentsformat;
    return this;
  }

   /**
   * commentsformat
   * @return commentsformat
  **/
  @javax.annotation.Nonnull
  public Integer getCommentsformat() {
    return commentsformat;
  }

  public void setCommentsformat(Integer commentsformat) {
    this.commentsformat = commentsformat;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult creationmethod(Integer creationmethod) {
    this.creationmethod = creationmethod;
    return this;
  }

   /**
   * creationmethod
   * @return creationmethod
  **/
  @javax.annotation.Nonnull
  public Integer getCreationmethod() {
    return creationmethod;
  }

  public void setCreationmethod(Integer creationmethod) {
    this.creationmethod = creationmethod;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult dpo(Integer dpo) {
    this.dpo = dpo;
    return this;
  }

   /**
   * dpo
   * @return dpo
  **/
  @javax.annotation.Nonnull
  public Integer getDpo() {
    return dpo;
  }

  public void setDpo(Integer dpo) {
    this.dpo = dpo;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult dpocomment(String dpocomment) {
    this.dpocomment = dpocomment;
    return this;
  }

   /**
   * dpocomment
   * @return dpocomment
  **/
  @javax.annotation.Nonnull
  public String getDpocomment() {
    return dpocomment;
  }

  public void setDpocomment(String dpocomment) {
    this.dpocomment = dpocomment;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult dpocommentformat(Integer dpocommentformat) {
    this.dpocommentformat = dpocommentformat;
    return this;
  }

   /**
   * dpocommentformat
   * @return dpocommentformat
  **/
  @javax.annotation.Nonnull
  public Integer getDpocommentformat() {
    return dpocommentformat;
  }

  public void setDpocommentformat(Integer dpocommentformat) {
    this.dpocommentformat = dpocommentformat;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult dpouser(CoreCompetencyGradeCompetency200ResponseActionuser dpouser) {
    this.dpouser = dpouser;
    return this;
  }

   /**
   * Get dpouser
   * @return dpouser
  **/
  @javax.annotation.Nullable
  public CoreCompetencyGradeCompetency200ResponseActionuser getDpouser() {
    return dpouser;
  }

  public void setDpouser(CoreCompetencyGradeCompetency200ResponseActionuser dpouser) {
    this.dpouser = dpouser;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult foruser(CoreCompetencyGradeCompetency200ResponseActionuser foruser) {
    this.foruser = foruser;
    return this;
  }

   /**
   * Get foruser
   * @return foruser
  **/
  @javax.annotation.Nonnull
  public CoreCompetencyGradeCompetency200ResponseActionuser getForuser() {
    return foruser;
  }

  public void setForuser(CoreCompetencyGradeCompetency200ResponseActionuser foruser) {
    this.foruser = foruser;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * id
   * @return id
  **/
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult messagehtml(String messagehtml) {
    this.messagehtml = messagehtml;
    return this;
  }

   /**
   * messagehtml
   * @return messagehtml
  **/
  @javax.annotation.Nullable
  public String getMessagehtml() {
    return messagehtml;
  }

  public void setMessagehtml(String messagehtml) {
    this.messagehtml = messagehtml;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult requestedby(Integer requestedby) {
    this.requestedby = requestedby;
    return this;
  }

   /**
   * requestedby
   * @return requestedby
  **/
  @javax.annotation.Nonnull
  public Integer getRequestedby() {
    return requestedby;
  }

  public void setRequestedby(Integer requestedby) {
    this.requestedby = requestedby;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult requestedbyuser(CoreCompetencyGradeCompetency200ResponseActionuser requestedbyuser) {
    this.requestedbyuser = requestedbyuser;
    return this;
  }

   /**
   * Get requestedbyuser
   * @return requestedbyuser
  **/
  @javax.annotation.Nullable
  public CoreCompetencyGradeCompetency200ResponseActionuser getRequestedbyuser() {
    return requestedbyuser;
  }

  public void setRequestedbyuser(CoreCompetencyGradeCompetency200ResponseActionuser requestedbyuser) {
    this.requestedbyuser = requestedbyuser;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * status
   * @return status
  **/
  @javax.annotation.Nonnull
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult statuslabel(String statuslabel) {
    this.statuslabel = statuslabel;
    return this;
  }

   /**
   * statuslabel
   * @return statuslabel
  **/
  @javax.annotation.Nonnull
  public String getStatuslabel() {
    return statuslabel;
  }

  public void setStatuslabel(String statuslabel) {
    this.statuslabel = statuslabel;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult statuslabelclass(String statuslabelclass) {
    this.statuslabelclass = statuslabelclass;
    return this;
  }

   /**
   * statuslabelclass
   * @return statuslabelclass
  **/
  @javax.annotation.Nonnull
  public String getStatuslabelclass() {
    return statuslabelclass;
  }

  public void setStatuslabelclass(String statuslabelclass) {
    this.statuslabelclass = statuslabelclass;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult systemapproved(Boolean systemapproved) {
    this.systemapproved = systemapproved;
    return this;
  }

   /**
   * systemapproved
   * @return systemapproved
  **/
  @javax.annotation.Nonnull
  public Boolean getSystemapproved() {
    return systemapproved;
  }

  public void setSystemapproved(Boolean systemapproved) {
    this.systemapproved = systemapproved;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult timecreated(Integer timecreated) {
    this.timecreated = timecreated;
    return this;
  }

   /**
   * timecreated
   * @return timecreated
  **/
  @javax.annotation.Nonnull
  public Integer getTimecreated() {
    return timecreated;
  }

  public void setTimecreated(Integer timecreated) {
    this.timecreated = timecreated;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * timemodified
   * @return timemodified
  **/
  @javax.annotation.Nonnull
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * type
   * @return type
  **/
  @javax.annotation.Nonnull
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult typename(String typename) {
    this.typename = typename;
    return this;
  }

   /**
   * typename
   * @return typename
  **/
  @javax.annotation.Nonnull
  public String getTypename() {
    return typename;
  }

  public void setTypename(String typename) {
    this.typename = typename;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult typenameshort(String typenameshort) {
    this.typenameshort = typenameshort;
    return this;
  }

   /**
   * typenameshort
   * @return typenameshort
  **/
  @javax.annotation.Nonnull
  public String getTypenameshort() {
    return typenameshort;
  }

  public void setTypenameshort(String typenameshort) {
    this.typenameshort = typenameshort;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * userid
   * @return userid
  **/
  @javax.annotation.Nonnull
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }


  public ToolDataprivacyGetDataRequest200ResponseResult usermodified(Integer usermodified) {
    this.usermodified = usermodified;
    return this;
  }

   /**
   * usermodified
   * @return usermodified
  **/
  @javax.annotation.Nonnull
  public Integer getUsermodified() {
    return usermodified;
  }

  public void setUsermodified(Integer usermodified) {
    this.usermodified = usermodified;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ToolDataprivacyGetDataRequest200ResponseResult toolDataprivacyGetDataRequest200ResponseResult = (ToolDataprivacyGetDataRequest200ResponseResult) o;
    return Objects.equals(this.allowfiltering, toolDataprivacyGetDataRequest200ResponseResult.allowfiltering) &&
        Objects.equals(this.approvedeny, toolDataprivacyGetDataRequest200ResponseResult.approvedeny) &&
        Objects.equals(this.canmarkcomplete, toolDataprivacyGetDataRequest200ResponseResult.canmarkcomplete) &&
        Objects.equals(this.canreview, toolDataprivacyGetDataRequest200ResponseResult.canreview) &&
        Objects.equals(this.comments, toolDataprivacyGetDataRequest200ResponseResult.comments) &&
        Objects.equals(this.commentsformat, toolDataprivacyGetDataRequest200ResponseResult.commentsformat) &&
        Objects.equals(this.creationmethod, toolDataprivacyGetDataRequest200ResponseResult.creationmethod) &&
        Objects.equals(this.dpo, toolDataprivacyGetDataRequest200ResponseResult.dpo) &&
        Objects.equals(this.dpocomment, toolDataprivacyGetDataRequest200ResponseResult.dpocomment) &&
        Objects.equals(this.dpocommentformat, toolDataprivacyGetDataRequest200ResponseResult.dpocommentformat) &&
        Objects.equals(this.dpouser, toolDataprivacyGetDataRequest200ResponseResult.dpouser) &&
        Objects.equals(this.foruser, toolDataprivacyGetDataRequest200ResponseResult.foruser) &&
        Objects.equals(this.id, toolDataprivacyGetDataRequest200ResponseResult.id) &&
        Objects.equals(this.messagehtml, toolDataprivacyGetDataRequest200ResponseResult.messagehtml) &&
        Objects.equals(this.requestedby, toolDataprivacyGetDataRequest200ResponseResult.requestedby) &&
        Objects.equals(this.requestedbyuser, toolDataprivacyGetDataRequest200ResponseResult.requestedbyuser) &&
        Objects.equals(this.status, toolDataprivacyGetDataRequest200ResponseResult.status) &&
        Objects.equals(this.statuslabel, toolDataprivacyGetDataRequest200ResponseResult.statuslabel) &&
        Objects.equals(this.statuslabelclass, toolDataprivacyGetDataRequest200ResponseResult.statuslabelclass) &&
        Objects.equals(this.systemapproved, toolDataprivacyGetDataRequest200ResponseResult.systemapproved) &&
        Objects.equals(this.timecreated, toolDataprivacyGetDataRequest200ResponseResult.timecreated) &&
        Objects.equals(this.timemodified, toolDataprivacyGetDataRequest200ResponseResult.timemodified) &&
        Objects.equals(this.type, toolDataprivacyGetDataRequest200ResponseResult.type) &&
        Objects.equals(this.typename, toolDataprivacyGetDataRequest200ResponseResult.typename) &&
        Objects.equals(this.typenameshort, toolDataprivacyGetDataRequest200ResponseResult.typenameshort) &&
        Objects.equals(this.userid, toolDataprivacyGetDataRequest200ResponseResult.userid) &&
        Objects.equals(this.usermodified, toolDataprivacyGetDataRequest200ResponseResult.usermodified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowfiltering, approvedeny, canmarkcomplete, canreview, comments, commentsformat, creationmethod, dpo, dpocomment, dpocommentformat, dpouser, foruser, id, messagehtml, requestedby, requestedbyuser, status, statuslabel, statuslabelclass, systemapproved, timecreated, timemodified, type, typename, typenameshort, userid, usermodified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ToolDataprivacyGetDataRequest200ResponseResult {\n");
    sb.append("    allowfiltering: ").append(toIndentedString(allowfiltering)).append("\n");
    sb.append("    approvedeny: ").append(toIndentedString(approvedeny)).append("\n");
    sb.append("    canmarkcomplete: ").append(toIndentedString(canmarkcomplete)).append("\n");
    sb.append("    canreview: ").append(toIndentedString(canreview)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    commentsformat: ").append(toIndentedString(commentsformat)).append("\n");
    sb.append("    creationmethod: ").append(toIndentedString(creationmethod)).append("\n");
    sb.append("    dpo: ").append(toIndentedString(dpo)).append("\n");
    sb.append("    dpocomment: ").append(toIndentedString(dpocomment)).append("\n");
    sb.append("    dpocommentformat: ").append(toIndentedString(dpocommentformat)).append("\n");
    sb.append("    dpouser: ").append(toIndentedString(dpouser)).append("\n");
    sb.append("    foruser: ").append(toIndentedString(foruser)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    messagehtml: ").append(toIndentedString(messagehtml)).append("\n");
    sb.append("    requestedby: ").append(toIndentedString(requestedby)).append("\n");
    sb.append("    requestedbyuser: ").append(toIndentedString(requestedbyuser)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statuslabel: ").append(toIndentedString(statuslabel)).append("\n");
    sb.append("    statuslabelclass: ").append(toIndentedString(statuslabelclass)).append("\n");
    sb.append("    systemapproved: ").append(toIndentedString(systemapproved)).append("\n");
    sb.append("    timecreated: ").append(toIndentedString(timecreated)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typename: ").append(toIndentedString(typename)).append("\n");
    sb.append("    typenameshort: ").append(toIndentedString(typenameshort)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    usermodified: ").append(toIndentedString(usermodified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowfiltering");
    openapiFields.add("approvedeny");
    openapiFields.add("canmarkcomplete");
    openapiFields.add("canreview");
    openapiFields.add("comments");
    openapiFields.add("commentsformat");
    openapiFields.add("creationmethod");
    openapiFields.add("dpo");
    openapiFields.add("dpocomment");
    openapiFields.add("dpocommentformat");
    openapiFields.add("dpouser");
    openapiFields.add("foruser");
    openapiFields.add("id");
    openapiFields.add("messagehtml");
    openapiFields.add("requestedby");
    openapiFields.add("requestedbyuser");
    openapiFields.add("status");
    openapiFields.add("statuslabel");
    openapiFields.add("statuslabelclass");
    openapiFields.add("systemapproved");
    openapiFields.add("timecreated");
    openapiFields.add("timemodified");
    openapiFields.add("type");
    openapiFields.add("typename");
    openapiFields.add("typenameshort");
    openapiFields.add("userid");
    openapiFields.add("usermodified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("comments");
    openapiRequiredFields.add("commentsformat");
    openapiRequiredFields.add("creationmethod");
    openapiRequiredFields.add("dpo");
    openapiRequiredFields.add("dpocomment");
    openapiRequiredFields.add("dpocommentformat");
    openapiRequiredFields.add("foruser");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("requestedby");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("statuslabel");
    openapiRequiredFields.add("statuslabelclass");
    openapiRequiredFields.add("systemapproved");
    openapiRequiredFields.add("timecreated");
    openapiRequiredFields.add("timemodified");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("typename");
    openapiRequiredFields.add("typenameshort");
    openapiRequiredFields.add("userid");
    openapiRequiredFields.add("usermodified");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ToolDataprivacyGetDataRequest200ResponseResult
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ToolDataprivacyGetDataRequest200ResponseResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ToolDataprivacyGetDataRequest200ResponseResult is not found in the empty JSON string", ToolDataprivacyGetDataRequest200ResponseResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ToolDataprivacyGetDataRequest200ResponseResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ToolDataprivacyGetDataRequest200ResponseResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ToolDataprivacyGetDataRequest200ResponseResult.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (!jsonObj.get("dpocomment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dpocomment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dpocomment").toString()));
      }
      // validate the optional field `dpouser`
      if (jsonObj.get("dpouser") != null && !jsonObj.get("dpouser").isJsonNull()) {
        CoreCompetencyGradeCompetency200ResponseActionuser.validateJsonElement(jsonObj.get("dpouser"));
      }
      // validate the required field `foruser`
      CoreCompetencyGradeCompetency200ResponseActionuser.validateJsonElement(jsonObj.get("foruser"));
      if ((jsonObj.get("messagehtml") != null && !jsonObj.get("messagehtml").isJsonNull()) && !jsonObj.get("messagehtml").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messagehtml` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messagehtml").toString()));
      }
      // validate the optional field `requestedbyuser`
      if (jsonObj.get("requestedbyuser") != null && !jsonObj.get("requestedbyuser").isJsonNull()) {
        CoreCompetencyGradeCompetency200ResponseActionuser.validateJsonElement(jsonObj.get("requestedbyuser"));
      }
      if (!jsonObj.get("statuslabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statuslabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statuslabel").toString()));
      }
      if (!jsonObj.get("statuslabelclass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statuslabelclass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statuslabelclass").toString()));
      }
      if (!jsonObj.get("typename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typename").toString()));
      }
      if (!jsonObj.get("typenameshort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typenameshort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typenameshort").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ToolDataprivacyGetDataRequest200ResponseResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ToolDataprivacyGetDataRequest200ResponseResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ToolDataprivacyGetDataRequest200ResponseResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ToolDataprivacyGetDataRequest200ResponseResult.class));

       return (TypeAdapter<T>) new TypeAdapter<ToolDataprivacyGetDataRequest200ResponseResult>() {
           @Override
           public void write(JsonWriter out, ToolDataprivacyGetDataRequest200ResponseResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ToolDataprivacyGetDataRequest200ResponseResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ToolDataprivacyGetDataRequest200ResponseResult given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ToolDataprivacyGetDataRequest200ResponseResult
  * @throws IOException if the JSON string is invalid with respect to ToolDataprivacyGetDataRequest200ResponseResult
  */
  public static ToolDataprivacyGetDataRequest200ResponseResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ToolDataprivacyGetDataRequest200ResponseResult.class);
  }

 /**
  * Convert an instance of ToolDataprivacyGetDataRequest200ResponseResult to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

