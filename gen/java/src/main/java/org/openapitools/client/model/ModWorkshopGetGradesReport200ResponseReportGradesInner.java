/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner;
import org.openapitools.client.model.ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModWorkshopGetGradesReport200ResponseReportGradesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModWorkshopGetGradesReport200ResponseReportGradesInner {
  public static final String SERIALIZED_NAME_GRADINGGRADE = "gradinggrade";
  @SerializedName(SERIALIZED_NAME_GRADINGGRADE)
  private BigDecimal gradinggrade = new BigDecimal("null");

  public static final String SERIALIZED_NAME_REVIEWEDBY = "reviewedby";
  @SerializedName(SERIALIZED_NAME_REVIEWEDBY)
  private List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner> reviewedby = new ArrayList<>();

  public static final String SERIALIZED_NAME_REVIEWEROF = "reviewerof";
  @SerializedName(SERIALIZED_NAME_REVIEWEROF)
  private List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner> reviewerof = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBMISSIONGRADE = "submissiongrade";
  @SerializedName(SERIALIZED_NAME_SUBMISSIONGRADE)
  private BigDecimal submissiongrade = new BigDecimal("null");

  public static final String SERIALIZED_NAME_SUBMISSIONGRADEOVER = "submissiongradeover";
  @SerializedName(SERIALIZED_NAME_SUBMISSIONGRADEOVER)
  private BigDecimal submissiongradeover = new BigDecimal("null");

  public static final String SERIALIZED_NAME_SUBMISSIONGRADEOVERBY = "submissiongradeoverby";
  @SerializedName(SERIALIZED_NAME_SUBMISSIONGRADEOVERBY)
  private Integer submissiongradeoverby = null;

  public static final String SERIALIZED_NAME_SUBMISSIONID = "submissionid";
  @SerializedName(SERIALIZED_NAME_SUBMISSIONID)
  private Integer submissionid = null;

  public static final String SERIALIZED_NAME_SUBMISSIONMODIFIED = "submissionmodified";
  @SerializedName(SERIALIZED_NAME_SUBMISSIONMODIFIED)
  private Integer submissionmodified = null;

  public static final String SERIALIZED_NAME_SUBMISSIONPUBLISHED = "submissionpublished";
  @SerializedName(SERIALIZED_NAME_SUBMISSIONPUBLISHED)
  private Integer submissionpublished = null;

  public static final String SERIALIZED_NAME_SUBMISSIONTITLE = "submissiontitle";
  @SerializedName(SERIALIZED_NAME_SUBMISSIONTITLE)
  private String submissiontitle = "null";

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid = null;

  public ModWorkshopGetGradesReport200ResponseReportGradesInner() {
  }

  public ModWorkshopGetGradesReport200ResponseReportGradesInner gradinggrade(BigDecimal gradinggrade) {
    this.gradinggrade = gradinggrade;
    return this;
  }

   /**
   * Computed grade for the assessment.
   * @return gradinggrade
  **/
  @javax.annotation.Nullable
  public BigDecimal getGradinggrade() {
    return gradinggrade;
  }

  public void setGradinggrade(BigDecimal gradinggrade) {
    this.gradinggrade = gradinggrade;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner reviewedby(List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner> reviewedby) {
    this.reviewedby = reviewedby;
    return this;
  }

  public ModWorkshopGetGradesReport200ResponseReportGradesInner addReviewedbyItem(ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner reviewedbyItem) {
    if (this.reviewedby == null) {
      this.reviewedby = new ArrayList<>();
    }
    this.reviewedby.add(reviewedbyItem);
    return this;
  }

   /**
   * Get reviewedby
   * @return reviewedby
  **/
  @javax.annotation.Nullable
  public List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner> getReviewedby() {
    return reviewedby;
  }

  public void setReviewedby(List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner> reviewedby) {
    this.reviewedby = reviewedby;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner reviewerof(List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner> reviewerof) {
    this.reviewerof = reviewerof;
    return this;
  }

  public ModWorkshopGetGradesReport200ResponseReportGradesInner addReviewerofItem(ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner reviewerofItem) {
    if (this.reviewerof == null) {
      this.reviewerof = new ArrayList<>();
    }
    this.reviewerof.add(reviewerofItem);
    return this;
  }

   /**
   * Get reviewerof
   * @return reviewerof
  **/
  @javax.annotation.Nullable
  public List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner> getReviewerof() {
    return reviewerof;
  }

  public void setReviewerof(List<ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner> reviewerof) {
    this.reviewerof = reviewerof;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner submissiongrade(BigDecimal submissiongrade) {
    this.submissiongrade = submissiongrade;
    return this;
  }

   /**
   * Aggregated grade for the submission.
   * @return submissiongrade
  **/
  @javax.annotation.Nullable
  public BigDecimal getSubmissiongrade() {
    return submissiongrade;
  }

  public void setSubmissiongrade(BigDecimal submissiongrade) {
    this.submissiongrade = submissiongrade;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner submissiongradeover(BigDecimal submissiongradeover) {
    this.submissiongradeover = submissiongradeover;
    return this;
  }

   /**
   * Grade for the assessment overrided                                         by the teacher.
   * @return submissiongradeover
  **/
  @javax.annotation.Nullable
  public BigDecimal getSubmissiongradeover() {
    return submissiongradeover;
  }

  public void setSubmissiongradeover(BigDecimal submissiongradeover) {
    this.submissiongradeover = submissiongradeover;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner submissiongradeoverby(Integer submissiongradeoverby) {
    this.submissiongradeoverby = submissiongradeoverby;
    return this;
  }

   /**
   * The id of the user who overrided                                         the grade.
   * @return submissiongradeoverby
  **/
  @javax.annotation.Nullable
  public Integer getSubmissiongradeoverby() {
    return submissiongradeoverby;
  }

  public void setSubmissiongradeoverby(Integer submissiongradeoverby) {
    this.submissiongradeoverby = submissiongradeoverby;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner submissionid(Integer submissionid) {
    this.submissionid = submissionid;
    return this;
  }

   /**
   * Submission id.
   * @return submissionid
  **/
  @javax.annotation.Nullable
  public Integer getSubmissionid() {
    return submissionid;
  }

  public void setSubmissionid(Integer submissionid) {
    this.submissionid = submissionid;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner submissionmodified(Integer submissionmodified) {
    this.submissionmodified = submissionmodified;
    return this;
  }

   /**
   * Timestamp submission was updated.
   * @return submissionmodified
  **/
  @javax.annotation.Nullable
  public Integer getSubmissionmodified() {
    return submissionmodified;
  }

  public void setSubmissionmodified(Integer submissionmodified) {
    this.submissionmodified = submissionmodified;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner submissionpublished(Integer submissionpublished) {
    this.submissionpublished = submissionpublished;
    return this;
  }

   /**
   * Whether is a submission published.
   * @return submissionpublished
  **/
  @javax.annotation.Nullable
  public Integer getSubmissionpublished() {
    return submissionpublished;
  }

  public void setSubmissionpublished(Integer submissionpublished) {
    this.submissionpublished = submissionpublished;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner submissiontitle(String submissiontitle) {
    this.submissiontitle = submissiontitle;
    return this;
  }

   /**
   * Submission title.
   * @return submissiontitle
  **/
  @javax.annotation.Nullable
  public String getSubmissiontitle() {
    return submissiontitle;
  }

  public void setSubmissiontitle(String submissiontitle) {
    this.submissiontitle = submissiontitle;
  }


  public ModWorkshopGetGradesReport200ResponseReportGradesInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * The id of the user being displayed in the report.
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModWorkshopGetGradesReport200ResponseReportGradesInner modWorkshopGetGradesReport200ResponseReportGradesInner = (ModWorkshopGetGradesReport200ResponseReportGradesInner) o;
    return Objects.equals(this.gradinggrade, modWorkshopGetGradesReport200ResponseReportGradesInner.gradinggrade) &&
        Objects.equals(this.reviewedby, modWorkshopGetGradesReport200ResponseReportGradesInner.reviewedby) &&
        Objects.equals(this.reviewerof, modWorkshopGetGradesReport200ResponseReportGradesInner.reviewerof) &&
        Objects.equals(this.submissiongrade, modWorkshopGetGradesReport200ResponseReportGradesInner.submissiongrade) &&
        Objects.equals(this.submissiongradeover, modWorkshopGetGradesReport200ResponseReportGradesInner.submissiongradeover) &&
        Objects.equals(this.submissiongradeoverby, modWorkshopGetGradesReport200ResponseReportGradesInner.submissiongradeoverby) &&
        Objects.equals(this.submissionid, modWorkshopGetGradesReport200ResponseReportGradesInner.submissionid) &&
        Objects.equals(this.submissionmodified, modWorkshopGetGradesReport200ResponseReportGradesInner.submissionmodified) &&
        Objects.equals(this.submissionpublished, modWorkshopGetGradesReport200ResponseReportGradesInner.submissionpublished) &&
        Objects.equals(this.submissiontitle, modWorkshopGetGradesReport200ResponseReportGradesInner.submissiontitle) &&
        Objects.equals(this.userid, modWorkshopGetGradesReport200ResponseReportGradesInner.userid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gradinggrade, reviewedby, reviewerof, submissiongrade, submissiongradeover, submissiongradeoverby, submissionid, submissionmodified, submissionpublished, submissiontitle, userid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModWorkshopGetGradesReport200ResponseReportGradesInner {\n");
    sb.append("    gradinggrade: ").append(toIndentedString(gradinggrade)).append("\n");
    sb.append("    reviewedby: ").append(toIndentedString(reviewedby)).append("\n");
    sb.append("    reviewerof: ").append(toIndentedString(reviewerof)).append("\n");
    sb.append("    submissiongrade: ").append(toIndentedString(submissiongrade)).append("\n");
    sb.append("    submissiongradeover: ").append(toIndentedString(submissiongradeover)).append("\n");
    sb.append("    submissiongradeoverby: ").append(toIndentedString(submissiongradeoverby)).append("\n");
    sb.append("    submissionid: ").append(toIndentedString(submissionid)).append("\n");
    sb.append("    submissionmodified: ").append(toIndentedString(submissionmodified)).append("\n");
    sb.append("    submissionpublished: ").append(toIndentedString(submissionpublished)).append("\n");
    sb.append("    submissiontitle: ").append(toIndentedString(submissiontitle)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gradinggrade");
    openapiFields.add("reviewedby");
    openapiFields.add("reviewerof");
    openapiFields.add("submissiongrade");
    openapiFields.add("submissiongradeover");
    openapiFields.add("submissiongradeoverby");
    openapiFields.add("submissionid");
    openapiFields.add("submissionmodified");
    openapiFields.add("submissionpublished");
    openapiFields.add("submissiontitle");
    openapiFields.add("userid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModWorkshopGetGradesReport200ResponseReportGradesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModWorkshopGetGradesReport200ResponseReportGradesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModWorkshopGetGradesReport200ResponseReportGradesInner is not found in the empty JSON string", ModWorkshopGetGradesReport200ResponseReportGradesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModWorkshopGetGradesReport200ResponseReportGradesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModWorkshopGetGradesReport200ResponseReportGradesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("reviewedby") != null && !jsonObj.get("reviewedby").isJsonNull()) {
        JsonArray jsonArrayreviewedby = jsonObj.getAsJsonArray("reviewedby");
        if (jsonArrayreviewedby != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reviewedby").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reviewedby` to be an array in the JSON string but got `%s`", jsonObj.get("reviewedby").toString()));
          }

          // validate the optional field `reviewedby` (array)
          for (int i = 0; i < jsonArrayreviewedby.size(); i++) {
            ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewedbyInner.validateJsonElement(jsonArrayreviewedby.get(i));
          };
        }
      }
      if (jsonObj.get("reviewerof") != null && !jsonObj.get("reviewerof").isJsonNull()) {
        JsonArray jsonArrayreviewerof = jsonObj.getAsJsonArray("reviewerof");
        if (jsonArrayreviewerof != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reviewerof").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reviewerof` to be an array in the JSON string but got `%s`", jsonObj.get("reviewerof").toString()));
          }

          // validate the optional field `reviewerof` (array)
          for (int i = 0; i < jsonArrayreviewerof.size(); i++) {
            ModWorkshopGetGradesReport200ResponseReportGradesInnerReviewerofInner.validateJsonElement(jsonArrayreviewerof.get(i));
          };
        }
      }
      if ((jsonObj.get("submissiontitle") != null && !jsonObj.get("submissiontitle").isJsonNull()) && !jsonObj.get("submissiontitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `submissiontitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("submissiontitle").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModWorkshopGetGradesReport200ResponseReportGradesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModWorkshopGetGradesReport200ResponseReportGradesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModWorkshopGetGradesReport200ResponseReportGradesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModWorkshopGetGradesReport200ResponseReportGradesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModWorkshopGetGradesReport200ResponseReportGradesInner>() {
           @Override
           public void write(JsonWriter out, ModWorkshopGetGradesReport200ResponseReportGradesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModWorkshopGetGradesReport200ResponseReportGradesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModWorkshopGetGradesReport200ResponseReportGradesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModWorkshopGetGradesReport200ResponseReportGradesInner
  * @throws IOException if the JSON string is invalid with respect to ModWorkshopGetGradesReport200ResponseReportGradesInner
  */
  public static ModWorkshopGetGradesReport200ResponseReportGradesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModWorkshopGetGradesReport200ResponseReportGradesInner.class);
  }

 /**
  * Convert an instance of ModWorkshopGetGradesReport200ResponseReportGradesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

