/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction;
import org.openapitools.client.model.CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory;
import org.openapitools.client.model.CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse;
import org.openapitools.client.model.CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon;
import org.openapitools.client.model.CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction action;

  public static final String SERIALIZED_NAME_ACTIVITYNAME = "activityname";
  @SerializedName(SERIALIZED_NAME_ACTIVITYNAME)
  private String activityname;

  public static final String SERIALIZED_NAME_ACTIVITYSTR = "activitystr";
  @SerializedName(SERIALIZED_NAME_ACTIVITYSTR)
  private String activitystr;

  public static final String SERIALIZED_NAME_CANDELETE = "candelete";
  @SerializedName(SERIALIZED_NAME_CANDELETE)
  private Boolean candelete;

  public static final String SERIALIZED_NAME_CANEDIT = "canedit";
  @SerializedName(SERIALIZED_NAME_CANEDIT)
  private Boolean canedit;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory category;

  public static final String SERIALIZED_NAME_CATEGORYID = "categoryid";
  @SerializedName(SERIALIZED_NAME_CATEGORYID)
  private Integer categoryid;

  public static final String SERIALIZED_NAME_COMPONENT = "component";
  @SerializedName(SERIALIZED_NAME_COMPONENT)
  private String component;

  public static final String SERIALIZED_NAME_COURSE = "course";
  @SerializedName(SERIALIZED_NAME_COURSE)
  private CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse course;

  public static final String SERIALIZED_NAME_DELETEURL = "deleteurl";
  @SerializedName(SERIALIZED_NAME_DELETEURL)
  private String deleteurl;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DESCRIPTIONFORMAT = "descriptionformat";
  @SerializedName(SERIALIZED_NAME_DESCRIPTIONFORMAT)
  private Integer descriptionformat = 1;

  public static final String SERIALIZED_NAME_DRAGGABLE = "draggable";
  @SerializedName(SERIALIZED_NAME_DRAGGABLE)
  private Boolean draggable = false;

  public static final String SERIALIZED_NAME_EDITURL = "editurl";
  @SerializedName(SERIALIZED_NAME_EDITURL)
  private String editurl;

  public static final String SERIALIZED_NAME_EVENTCOUNT = "eventcount";
  @SerializedName(SERIALIZED_NAME_EVENTCOUNT)
  private Integer eventcount;

  public static final String SERIALIZED_NAME_EVENTTYPE = "eventtype";
  @SerializedName(SERIALIZED_NAME_EVENTTYPE)
  private String eventtype;

  public static final String SERIALIZED_NAME_FORMATTEDLOCATION = "formattedlocation";
  @SerializedName(SERIALIZED_NAME_FORMATTEDLOCATION)
  private String formattedlocation;

  public static final String SERIALIZED_NAME_FORMATTEDTIME = "formattedtime";
  @SerializedName(SERIALIZED_NAME_FORMATTEDTIME)
  private String formattedtime;

  public static final String SERIALIZED_NAME_GROUPID = "groupid";
  @SerializedName(SERIALIZED_NAME_GROUPID)
  private Integer groupid;

  public static final String SERIALIZED_NAME_GROUPNAME = "groupname";
  @SerializedName(SERIALIZED_NAME_GROUPNAME)
  private String groupname;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon icon;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INSTANCE = "instance";
  @SerializedName(SERIALIZED_NAME_INSTANCE)
  private Integer instance;

  public static final String SERIALIZED_NAME_ISACTIONEVENT = "isactionevent";
  @SerializedName(SERIALIZED_NAME_ISACTIONEVENT)
  private Boolean isactionevent;

  public static final String SERIALIZED_NAME_ISCATEGORYEVENT = "iscategoryevent";
  @SerializedName(SERIALIZED_NAME_ISCATEGORYEVENT)
  private Boolean iscategoryevent;

  public static final String SERIALIZED_NAME_ISCOURSEEVENT = "iscourseevent";
  @SerializedName(SERIALIZED_NAME_ISCOURSEEVENT)
  private Boolean iscourseevent;

  public static final String SERIALIZED_NAME_ISLASTDAY = "islastday";
  @SerializedName(SERIALIZED_NAME_ISLASTDAY)
  private Boolean islastday = false;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_MAXDAYERROR = "maxdayerror";
  @SerializedName(SERIALIZED_NAME_MAXDAYERROR)
  private String maxdayerror;

  public static final String SERIALIZED_NAME_MAXDAYTIMESTAMP = "maxdaytimestamp";
  @SerializedName(SERIALIZED_NAME_MAXDAYTIMESTAMP)
  private Integer maxdaytimestamp;

  public static final String SERIALIZED_NAME_MINDAYERROR = "mindayerror";
  @SerializedName(SERIALIZED_NAME_MINDAYERROR)
  private String mindayerror;

  public static final String SERIALIZED_NAME_MINDAYTIMESTAMP = "mindaytimestamp";
  @SerializedName(SERIALIZED_NAME_MINDAYTIMESTAMP)
  private Integer mindaytimestamp;

  public static final String SERIALIZED_NAME_MODULENAME = "modulename";
  @SerializedName(SERIALIZED_NAME_MODULENAME)
  private String modulename;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NORMALISEDEVENTTYPE = "normalisedeventtype";
  @SerializedName(SERIALIZED_NAME_NORMALISEDEVENTTYPE)
  private String normalisedeventtype;

  public static final String SERIALIZED_NAME_NORMALISEDEVENTTYPETEXT = "normalisedeventtypetext";
  @SerializedName(SERIALIZED_NAME_NORMALISEDEVENTTYPETEXT)
  private String normalisedeventtypetext;

  public static final String SERIALIZED_NAME_OVERDUE = "overdue";
  @SerializedName(SERIALIZED_NAME_OVERDUE)
  private Boolean overdue = false;

  public static final String SERIALIZED_NAME_POPUPNAME = "popupname";
  @SerializedName(SERIALIZED_NAME_POPUPNAME)
  private String popupname;

  public static final String SERIALIZED_NAME_PURPOSE = "purpose";
  @SerializedName(SERIALIZED_NAME_PURPOSE)
  private String purpose;

  public static final String SERIALIZED_NAME_REPEATID = "repeatid";
  @SerializedName(SERIALIZED_NAME_REPEATID)
  private Integer repeatid;

  public static final String SERIALIZED_NAME_SUBSCRIPTION = "subscription";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION)
  private CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription subscription;

  public static final String SERIALIZED_NAME_TIMEDURATION = "timeduration";
  @SerializedName(SERIALIZED_NAME_TIMEDURATION)
  private Integer timeduration;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified;

  public static final String SERIALIZED_NAME_TIMESORT = "timesort";
  @SerializedName(SERIALIZED_NAME_TIMESORT)
  private Integer timesort;

  public static final String SERIALIZED_NAME_TIMESTART = "timestart";
  @SerializedName(SERIALIZED_NAME_TIMESTART)
  private Integer timestart;

  public static final String SERIALIZED_NAME_TIMEUSERMIDNIGHT = "timeusermidnight";
  @SerializedName(SERIALIZED_NAME_TIMEUSERMIDNIGHT)
  private Integer timeusermidnight;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid;

  public static final String SERIALIZED_NAME_VIEWURL = "viewurl";
  @SerializedName(SERIALIZED_NAME_VIEWURL)
  private String viewurl;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Integer visible;

  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner() {
  }

  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner action(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @javax.annotation.Nullable
  public CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction getAction() {
    return action;
  }

  public void setAction(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction action) {
    this.action = action;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner activityname(String activityname) {
    this.activityname = activityname;
    return this;
  }

   /**
   * activityname
   * @return activityname
  **/
  @javax.annotation.Nullable
  public String getActivityname() {
    return activityname;
  }

  public void setActivityname(String activityname) {
    this.activityname = activityname;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner activitystr(String activitystr) {
    this.activitystr = activitystr;
    return this;
  }

   /**
   * activitystr
   * @return activitystr
  **/
  @javax.annotation.Nullable
  public String getActivitystr() {
    return activitystr;
  }

  public void setActivitystr(String activitystr) {
    this.activitystr = activitystr;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner candelete(Boolean candelete) {
    this.candelete = candelete;
    return this;
  }

   /**
   * candelete
   * @return candelete
  **/
  @javax.annotation.Nullable
  public Boolean getCandelete() {
    return candelete;
  }

  public void setCandelete(Boolean candelete) {
    this.candelete = candelete;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner canedit(Boolean canedit) {
    this.canedit = canedit;
    return this;
  }

   /**
   * canedit
   * @return canedit
  **/
  @javax.annotation.Nullable
  public Boolean getCanedit() {
    return canedit;
  }

  public void setCanedit(Boolean canedit) {
    this.canedit = canedit;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner category(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  public CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory getCategory() {
    return category;
  }

  public void setCategory(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory category) {
    this.category = category;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner categoryid(Integer categoryid) {
    this.categoryid = categoryid;
    return this;
  }

   /**
   * categoryid
   * @return categoryid
  **/
  @javax.annotation.Nullable
  public Integer getCategoryid() {
    return categoryid;
  }

  public void setCategoryid(Integer categoryid) {
    this.categoryid = categoryid;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner component(String component) {
    this.component = component;
    return this;
  }

   /**
   * component
   * @return component
  **/
  @javax.annotation.Nullable
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner course(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse course) {
    this.course = course;
    return this;
  }

   /**
   * Get course
   * @return course
  **/
  @javax.annotation.Nullable
  public CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse getCourse() {
    return course;
  }

  public void setCourse(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse course) {
    this.course = course;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner deleteurl(String deleteurl) {
    this.deleteurl = deleteurl;
    return this;
  }

   /**
   * deleteurl
   * @return deleteurl
  **/
  @javax.annotation.Nullable
  public String getDeleteurl() {
    return deleteurl;
  }

  public void setDeleteurl(String deleteurl) {
    this.deleteurl = deleteurl;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner descriptionformat(Integer descriptionformat) {
    this.descriptionformat = descriptionformat;
    return this;
  }

   /**
   * description format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return descriptionformat
  **/
  @javax.annotation.Nullable
  public Integer getDescriptionformat() {
    return descriptionformat;
  }

  public void setDescriptionformat(Integer descriptionformat) {
    this.descriptionformat = descriptionformat;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner draggable(Boolean draggable) {
    this.draggable = draggable;
    return this;
  }

   /**
   * draggable
   * @return draggable
  **/
  @javax.annotation.Nullable
  public Boolean getDraggable() {
    return draggable;
  }

  public void setDraggable(Boolean draggable) {
    this.draggable = draggable;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner editurl(String editurl) {
    this.editurl = editurl;
    return this;
  }

   /**
   * editurl
   * @return editurl
  **/
  @javax.annotation.Nullable
  public String getEditurl() {
    return editurl;
  }

  public void setEditurl(String editurl) {
    this.editurl = editurl;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner eventcount(Integer eventcount) {
    this.eventcount = eventcount;
    return this;
  }

   /**
   * eventcount
   * @return eventcount
  **/
  @javax.annotation.Nullable
  public Integer getEventcount() {
    return eventcount;
  }

  public void setEventcount(Integer eventcount) {
    this.eventcount = eventcount;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner eventtype(String eventtype) {
    this.eventtype = eventtype;
    return this;
  }

   /**
   * eventtype
   * @return eventtype
  **/
  @javax.annotation.Nullable
  public String getEventtype() {
    return eventtype;
  }

  public void setEventtype(String eventtype) {
    this.eventtype = eventtype;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner formattedlocation(String formattedlocation) {
    this.formattedlocation = formattedlocation;
    return this;
  }

   /**
   * formattedlocation
   * @return formattedlocation
  **/
  @javax.annotation.Nullable
  public String getFormattedlocation() {
    return formattedlocation;
  }

  public void setFormattedlocation(String formattedlocation) {
    this.formattedlocation = formattedlocation;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner formattedtime(String formattedtime) {
    this.formattedtime = formattedtime;
    return this;
  }

   /**
   * formattedtime
   * @return formattedtime
  **/
  @javax.annotation.Nullable
  public String getFormattedtime() {
    return formattedtime;
  }

  public void setFormattedtime(String formattedtime) {
    this.formattedtime = formattedtime;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner groupid(Integer groupid) {
    this.groupid = groupid;
    return this;
  }

   /**
   * groupid
   * @return groupid
  **/
  @javax.annotation.Nullable
  public Integer getGroupid() {
    return groupid;
  }

  public void setGroupid(Integer groupid) {
    this.groupid = groupid;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner groupname(String groupname) {
    this.groupname = groupname;
    return this;
  }

   /**
   * groupname
   * @return groupname
  **/
  @javax.annotation.Nullable
  public String getGroupname() {
    return groupname;
  }

  public void setGroupname(String groupname) {
    this.groupname = groupname;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner icon(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  public CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon getIcon() {
    return icon;
  }

  public void setIcon(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon icon) {
    this.icon = icon;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner instance(Integer instance) {
    this.instance = instance;
    return this;
  }

   /**
   * instance
   * @return instance
  **/
  @javax.annotation.Nullable
  public Integer getInstance() {
    return instance;
  }

  public void setInstance(Integer instance) {
    this.instance = instance;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner isactionevent(Boolean isactionevent) {
    this.isactionevent = isactionevent;
    return this;
  }

   /**
   * isactionevent
   * @return isactionevent
  **/
  @javax.annotation.Nullable
  public Boolean getIsactionevent() {
    return isactionevent;
  }

  public void setIsactionevent(Boolean isactionevent) {
    this.isactionevent = isactionevent;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner iscategoryevent(Boolean iscategoryevent) {
    this.iscategoryevent = iscategoryevent;
    return this;
  }

   /**
   * iscategoryevent
   * @return iscategoryevent
  **/
  @javax.annotation.Nullable
  public Boolean getIscategoryevent() {
    return iscategoryevent;
  }

  public void setIscategoryevent(Boolean iscategoryevent) {
    this.iscategoryevent = iscategoryevent;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner iscourseevent(Boolean iscourseevent) {
    this.iscourseevent = iscourseevent;
    return this;
  }

   /**
   * iscourseevent
   * @return iscourseevent
  **/
  @javax.annotation.Nullable
  public Boolean getIscourseevent() {
    return iscourseevent;
  }

  public void setIscourseevent(Boolean iscourseevent) {
    this.iscourseevent = iscourseevent;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner islastday(Boolean islastday) {
    this.islastday = islastday;
    return this;
  }

   /**
   * islastday
   * @return islastday
  **/
  @javax.annotation.Nullable
  public Boolean getIslastday() {
    return islastday;
  }

  public void setIslastday(Boolean islastday) {
    this.islastday = islastday;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner location(String location) {
    this.location = location;
    return this;
  }

   /**
   * location
   * @return location
  **/
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner maxdayerror(String maxdayerror) {
    this.maxdayerror = maxdayerror;
    return this;
  }

   /**
   * maxdayerror
   * @return maxdayerror
  **/
  @javax.annotation.Nullable
  public String getMaxdayerror() {
    return maxdayerror;
  }

  public void setMaxdayerror(String maxdayerror) {
    this.maxdayerror = maxdayerror;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner maxdaytimestamp(Integer maxdaytimestamp) {
    this.maxdaytimestamp = maxdaytimestamp;
    return this;
  }

   /**
   * maxdaytimestamp
   * @return maxdaytimestamp
  **/
  @javax.annotation.Nullable
  public Integer getMaxdaytimestamp() {
    return maxdaytimestamp;
  }

  public void setMaxdaytimestamp(Integer maxdaytimestamp) {
    this.maxdaytimestamp = maxdaytimestamp;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner mindayerror(String mindayerror) {
    this.mindayerror = mindayerror;
    return this;
  }

   /**
   * mindayerror
   * @return mindayerror
  **/
  @javax.annotation.Nullable
  public String getMindayerror() {
    return mindayerror;
  }

  public void setMindayerror(String mindayerror) {
    this.mindayerror = mindayerror;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner mindaytimestamp(Integer mindaytimestamp) {
    this.mindaytimestamp = mindaytimestamp;
    return this;
  }

   /**
   * mindaytimestamp
   * @return mindaytimestamp
  **/
  @javax.annotation.Nullable
  public Integer getMindaytimestamp() {
    return mindaytimestamp;
  }

  public void setMindaytimestamp(Integer mindaytimestamp) {
    this.mindaytimestamp = mindaytimestamp;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner modulename(String modulename) {
    this.modulename = modulename;
    return this;
  }

   /**
   * modulename
   * @return modulename
  **/
  @javax.annotation.Nullable
  public String getModulename() {
    return modulename;
  }

  public void setModulename(String modulename) {
    this.modulename = modulename;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner normalisedeventtype(String normalisedeventtype) {
    this.normalisedeventtype = normalisedeventtype;
    return this;
  }

   /**
   * normalisedeventtype
   * @return normalisedeventtype
  **/
  @javax.annotation.Nullable
  public String getNormalisedeventtype() {
    return normalisedeventtype;
  }

  public void setNormalisedeventtype(String normalisedeventtype) {
    this.normalisedeventtype = normalisedeventtype;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner normalisedeventtypetext(String normalisedeventtypetext) {
    this.normalisedeventtypetext = normalisedeventtypetext;
    return this;
  }

   /**
   * normalisedeventtypetext
   * @return normalisedeventtypetext
  **/
  @javax.annotation.Nullable
  public String getNormalisedeventtypetext() {
    return normalisedeventtypetext;
  }

  public void setNormalisedeventtypetext(String normalisedeventtypetext) {
    this.normalisedeventtypetext = normalisedeventtypetext;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner overdue(Boolean overdue) {
    this.overdue = overdue;
    return this;
  }

   /**
   * overdue
   * @return overdue
  **/
  @javax.annotation.Nullable
  public Boolean getOverdue() {
    return overdue;
  }

  public void setOverdue(Boolean overdue) {
    this.overdue = overdue;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner popupname(String popupname) {
    this.popupname = popupname;
    return this;
  }

   /**
   * popupname
   * @return popupname
  **/
  @javax.annotation.Nullable
  public String getPopupname() {
    return popupname;
  }

  public void setPopupname(String popupname) {
    this.popupname = popupname;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * purpose
   * @return purpose
  **/
  @javax.annotation.Nullable
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner repeatid(Integer repeatid) {
    this.repeatid = repeatid;
    return this;
  }

   /**
   * repeatid
   * @return repeatid
  **/
  @javax.annotation.Nullable
  public Integer getRepeatid() {
    return repeatid;
  }

  public void setRepeatid(Integer repeatid) {
    this.repeatid = repeatid;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner subscription(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription subscription) {
    this.subscription = subscription;
    return this;
  }

   /**
   * Get subscription
   * @return subscription
  **/
  @javax.annotation.Nullable
  public CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription getSubscription() {
    return subscription;
  }

  public void setSubscription(CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription subscription) {
    this.subscription = subscription;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner timeduration(Integer timeduration) {
    this.timeduration = timeduration;
    return this;
  }

   /**
   * timeduration
   * @return timeduration
  **/
  @javax.annotation.Nullable
  public Integer getTimeduration() {
    return timeduration;
  }

  public void setTimeduration(Integer timeduration) {
    this.timeduration = timeduration;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * timemodified
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner timesort(Integer timesort) {
    this.timesort = timesort;
    return this;
  }

   /**
   * timesort
   * @return timesort
  **/
  @javax.annotation.Nullable
  public Integer getTimesort() {
    return timesort;
  }

  public void setTimesort(Integer timesort) {
    this.timesort = timesort;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner timestart(Integer timestart) {
    this.timestart = timestart;
    return this;
  }

   /**
   * timestart
   * @return timestart
  **/
  @javax.annotation.Nullable
  public Integer getTimestart() {
    return timestart;
  }

  public void setTimestart(Integer timestart) {
    this.timestart = timestart;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner timeusermidnight(Integer timeusermidnight) {
    this.timeusermidnight = timeusermidnight;
    return this;
  }

   /**
   * timeusermidnight
   * @return timeusermidnight
  **/
  @javax.annotation.Nullable
  public Integer getTimeusermidnight() {
    return timeusermidnight;
  }

  public void setTimeusermidnight(Integer timeusermidnight) {
    this.timeusermidnight = timeusermidnight;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner url(String url) {
    this.url = url;
    return this;
  }

   /**
   * url
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * userid
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner viewurl(String viewurl) {
    this.viewurl = viewurl;
    return this;
  }

   /**
   * viewurl
   * @return viewurl
  **/
  @javax.annotation.Nullable
  public String getViewurl() {
    return viewurl;
  }

  public void setViewurl(String viewurl) {
    this.viewurl = viewurl;
  }


  public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner visible(Integer visible) {
    this.visible = visible;
    return this;
  }

   /**
   * visible
   * @return visible
  **/
  @javax.annotation.Nullable
  public Integer getVisible() {
    return visible;
  }

  public void setVisible(Integer visible) {
    this.visible = visible;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner = (CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner) o;
    return Objects.equals(this.action, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.action) &&
        Objects.equals(this.activityname, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.activityname) &&
        Objects.equals(this.activitystr, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.activitystr) &&
        Objects.equals(this.candelete, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.candelete) &&
        Objects.equals(this.canedit, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.canedit) &&
        Objects.equals(this.category, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.category) &&
        Objects.equals(this.categoryid, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.categoryid) &&
        Objects.equals(this.component, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.component) &&
        Objects.equals(this.course, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.course) &&
        Objects.equals(this.deleteurl, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.deleteurl) &&
        Objects.equals(this.description, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.description) &&
        Objects.equals(this.descriptionformat, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.descriptionformat) &&
        Objects.equals(this.draggable, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.draggable) &&
        Objects.equals(this.editurl, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.editurl) &&
        Objects.equals(this.eventcount, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.eventcount) &&
        Objects.equals(this.eventtype, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.eventtype) &&
        Objects.equals(this.formattedlocation, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.formattedlocation) &&
        Objects.equals(this.formattedtime, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.formattedtime) &&
        Objects.equals(this.groupid, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.groupid) &&
        Objects.equals(this.groupname, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.groupname) &&
        Objects.equals(this.icon, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.icon) &&
        Objects.equals(this.id, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.id) &&
        Objects.equals(this.instance, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.instance) &&
        Objects.equals(this.isactionevent, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.isactionevent) &&
        Objects.equals(this.iscategoryevent, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.iscategoryevent) &&
        Objects.equals(this.iscourseevent, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.iscourseevent) &&
        Objects.equals(this.islastday, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.islastday) &&
        Objects.equals(this.location, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.location) &&
        Objects.equals(this.maxdayerror, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.maxdayerror) &&
        Objects.equals(this.maxdaytimestamp, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.maxdaytimestamp) &&
        Objects.equals(this.mindayerror, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.mindayerror) &&
        Objects.equals(this.mindaytimestamp, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.mindaytimestamp) &&
        Objects.equals(this.modulename, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.modulename) &&
        Objects.equals(this.name, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.name) &&
        Objects.equals(this.normalisedeventtype, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.normalisedeventtype) &&
        Objects.equals(this.normalisedeventtypetext, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.normalisedeventtypetext) &&
        Objects.equals(this.overdue, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.overdue) &&
        Objects.equals(this.popupname, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.popupname) &&
        Objects.equals(this.purpose, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.purpose) &&
        Objects.equals(this.repeatid, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.repeatid) &&
        Objects.equals(this.subscription, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.subscription) &&
        Objects.equals(this.timeduration, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.timeduration) &&
        Objects.equals(this.timemodified, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.timemodified) &&
        Objects.equals(this.timesort, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.timesort) &&
        Objects.equals(this.timestart, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.timestart) &&
        Objects.equals(this.timeusermidnight, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.timeusermidnight) &&
        Objects.equals(this.url, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.url) &&
        Objects.equals(this.userid, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.userid) &&
        Objects.equals(this.viewurl, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.viewurl) &&
        Objects.equals(this.visible, coreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, activityname, activitystr, candelete, canedit, category, categoryid, component, course, deleteurl, description, descriptionformat, draggable, editurl, eventcount, eventtype, formattedlocation, formattedtime, groupid, groupname, icon, id, instance, isactionevent, iscategoryevent, iscourseevent, islastday, location, maxdayerror, maxdaytimestamp, mindayerror, mindaytimestamp, modulename, name, normalisedeventtype, normalisedeventtypetext, overdue, popupname, purpose, repeatid, subscription, timeduration, timemodified, timesort, timestart, timeusermidnight, url, userid, viewurl, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    activityname: ").append(toIndentedString(activityname)).append("\n");
    sb.append("    activitystr: ").append(toIndentedString(activitystr)).append("\n");
    sb.append("    candelete: ").append(toIndentedString(candelete)).append("\n");
    sb.append("    canedit: ").append(toIndentedString(canedit)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    categoryid: ").append(toIndentedString(categoryid)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    deleteurl: ").append(toIndentedString(deleteurl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionformat: ").append(toIndentedString(descriptionformat)).append("\n");
    sb.append("    draggable: ").append(toIndentedString(draggable)).append("\n");
    sb.append("    editurl: ").append(toIndentedString(editurl)).append("\n");
    sb.append("    eventcount: ").append(toIndentedString(eventcount)).append("\n");
    sb.append("    eventtype: ").append(toIndentedString(eventtype)).append("\n");
    sb.append("    formattedlocation: ").append(toIndentedString(formattedlocation)).append("\n");
    sb.append("    formattedtime: ").append(toIndentedString(formattedtime)).append("\n");
    sb.append("    groupid: ").append(toIndentedString(groupid)).append("\n");
    sb.append("    groupname: ").append(toIndentedString(groupname)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("    isactionevent: ").append(toIndentedString(isactionevent)).append("\n");
    sb.append("    iscategoryevent: ").append(toIndentedString(iscategoryevent)).append("\n");
    sb.append("    iscourseevent: ").append(toIndentedString(iscourseevent)).append("\n");
    sb.append("    islastday: ").append(toIndentedString(islastday)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    maxdayerror: ").append(toIndentedString(maxdayerror)).append("\n");
    sb.append("    maxdaytimestamp: ").append(toIndentedString(maxdaytimestamp)).append("\n");
    sb.append("    mindayerror: ").append(toIndentedString(mindayerror)).append("\n");
    sb.append("    mindaytimestamp: ").append(toIndentedString(mindaytimestamp)).append("\n");
    sb.append("    modulename: ").append(toIndentedString(modulename)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    normalisedeventtype: ").append(toIndentedString(normalisedeventtype)).append("\n");
    sb.append("    normalisedeventtypetext: ").append(toIndentedString(normalisedeventtypetext)).append("\n");
    sb.append("    overdue: ").append(toIndentedString(overdue)).append("\n");
    sb.append("    popupname: ").append(toIndentedString(popupname)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    repeatid: ").append(toIndentedString(repeatid)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    timeduration: ").append(toIndentedString(timeduration)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    timesort: ").append(toIndentedString(timesort)).append("\n");
    sb.append("    timestart: ").append(toIndentedString(timestart)).append("\n");
    sb.append("    timeusermidnight: ").append(toIndentedString(timeusermidnight)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    viewurl: ").append(toIndentedString(viewurl)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("activityname");
    openapiFields.add("activitystr");
    openapiFields.add("candelete");
    openapiFields.add("canedit");
    openapiFields.add("category");
    openapiFields.add("categoryid");
    openapiFields.add("component");
    openapiFields.add("course");
    openapiFields.add("deleteurl");
    openapiFields.add("description");
    openapiFields.add("descriptionformat");
    openapiFields.add("draggable");
    openapiFields.add("editurl");
    openapiFields.add("eventcount");
    openapiFields.add("eventtype");
    openapiFields.add("formattedlocation");
    openapiFields.add("formattedtime");
    openapiFields.add("groupid");
    openapiFields.add("groupname");
    openapiFields.add("icon");
    openapiFields.add("id");
    openapiFields.add("instance");
    openapiFields.add("isactionevent");
    openapiFields.add("iscategoryevent");
    openapiFields.add("iscourseevent");
    openapiFields.add("islastday");
    openapiFields.add("location");
    openapiFields.add("maxdayerror");
    openapiFields.add("maxdaytimestamp");
    openapiFields.add("mindayerror");
    openapiFields.add("mindaytimestamp");
    openapiFields.add("modulename");
    openapiFields.add("name");
    openapiFields.add("normalisedeventtype");
    openapiFields.add("normalisedeventtypetext");
    openapiFields.add("overdue");
    openapiFields.add("popupname");
    openapiFields.add("purpose");
    openapiFields.add("repeatid");
    openapiFields.add("subscription");
    openapiFields.add("timeduration");
    openapiFields.add("timemodified");
    openapiFields.add("timesort");
    openapiFields.add("timestart");
    openapiFields.add("timeusermidnight");
    openapiFields.add("url");
    openapiFields.add("userid");
    openapiFields.add("viewurl");
    openapiFields.add("visible");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner is not found in the empty JSON string", CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `action`
      if (jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) {
        CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction.validateJsonElement(jsonObj.get("action"));
      }
      if ((jsonObj.get("activityname") != null && !jsonObj.get("activityname").isJsonNull()) && !jsonObj.get("activityname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityname").toString()));
      }
      if ((jsonObj.get("activitystr") != null && !jsonObj.get("activitystr").isJsonNull()) && !jsonObj.get("activitystr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activitystr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activitystr").toString()));
      }
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory.validateJsonElement(jsonObj.get("category"));
      }
      if ((jsonObj.get("component") != null && !jsonObj.get("component").isJsonNull()) && !jsonObj.get("component").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `component` to be a primitive type in the JSON string but got `%s`", jsonObj.get("component").toString()));
      }
      // validate the optional field `course`
      if (jsonObj.get("course") != null && !jsonObj.get("course").isJsonNull()) {
        CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse.validateJsonElement(jsonObj.get("course"));
      }
      if ((jsonObj.get("deleteurl") != null && !jsonObj.get("deleteurl").isJsonNull()) && !jsonObj.get("deleteurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deleteurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deleteurl").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("editurl") != null && !jsonObj.get("editurl").isJsonNull()) && !jsonObj.get("editurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `editurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("editurl").toString()));
      }
      if ((jsonObj.get("eventtype") != null && !jsonObj.get("eventtype").isJsonNull()) && !jsonObj.get("eventtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventtype").toString()));
      }
      if ((jsonObj.get("formattedlocation") != null && !jsonObj.get("formattedlocation").isJsonNull()) && !jsonObj.get("formattedlocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formattedlocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formattedlocation").toString()));
      }
      if ((jsonObj.get("formattedtime") != null && !jsonObj.get("formattedtime").isJsonNull()) && !jsonObj.get("formattedtime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formattedtime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formattedtime").toString()));
      }
      if ((jsonObj.get("groupname") != null && !jsonObj.get("groupname").isJsonNull()) && !jsonObj.get("groupname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupname").toString()));
      }
      // validate the optional field `icon`
      if (jsonObj.get("icon") != null && !jsonObj.get("icon").isJsonNull()) {
        CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon.validateJsonElement(jsonObj.get("icon"));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("maxdayerror") != null && !jsonObj.get("maxdayerror").isJsonNull()) && !jsonObj.get("maxdayerror").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxdayerror` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxdayerror").toString()));
      }
      if ((jsonObj.get("mindayerror") != null && !jsonObj.get("mindayerror").isJsonNull()) && !jsonObj.get("mindayerror").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mindayerror` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mindayerror").toString()));
      }
      if ((jsonObj.get("modulename") != null && !jsonObj.get("modulename").isJsonNull()) && !jsonObj.get("modulename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modulename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modulename").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("normalisedeventtype") != null && !jsonObj.get("normalisedeventtype").isJsonNull()) && !jsonObj.get("normalisedeventtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalisedeventtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalisedeventtype").toString()));
      }
      if ((jsonObj.get("normalisedeventtypetext") != null && !jsonObj.get("normalisedeventtypetext").isJsonNull()) && !jsonObj.get("normalisedeventtypetext").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalisedeventtypetext` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalisedeventtypetext").toString()));
      }
      if ((jsonObj.get("popupname") != null && !jsonObj.get("popupname").isJsonNull()) && !jsonObj.get("popupname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `popupname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("popupname").toString()));
      }
      if ((jsonObj.get("purpose") != null && !jsonObj.get("purpose").isJsonNull()) && !jsonObj.get("purpose").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purpose` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purpose").toString()));
      }
      // validate the optional field `subscription`
      if (jsonObj.get("subscription") != null && !jsonObj.get("subscription").isJsonNull()) {
        CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription.validateJsonElement(jsonObj.get("subscription"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("viewurl") != null && !jsonObj.get("viewurl").isJsonNull()) && !jsonObj.get("viewurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewurl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner>() {
           @Override
           public void write(JsonWriter out, CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
  * @throws IOException if the JSON string is invalid with respect to CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner
  */
  public static CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner.class);
  }

 /**
  * Convert an instance of CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInnerEventsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

