/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner;
import org.openapitools.client.model.ModDataGetEntries200ResponseEntriesInnerTagsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModGlossaryGetEntriesByAuthor200ResponseEntriesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModGlossaryGetEntriesByAuthor200ResponseEntriesInner {
  public static final String SERIALIZED_NAME_APPROVED = "approved";
  @SerializedName(SERIALIZED_NAME_APPROVED)
  private Boolean approved = null;

  public static final String SERIALIZED_NAME_ATTACHMENT = "attachment";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT)
  private Boolean attachment = null;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> attachments = new ArrayList<>();

  public static final String SERIALIZED_NAME_CASESENSITIVE = "casesensitive";
  @SerializedName(SERIALIZED_NAME_CASESENSITIVE)
  private Boolean casesensitive = null;

  public static final String SERIALIZED_NAME_CONCEPT = "concept";
  @SerializedName(SERIALIZED_NAME_CONCEPT)
  private String concept = "null";

  public static final String SERIALIZED_NAME_DEFINITION = "definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private String definition = "null";

  public static final String SERIALIZED_NAME_DEFINITIONFORMAT = "definitionformat";
  @SerializedName(SERIALIZED_NAME_DEFINITIONFORMAT)
  private Integer definitionformat;

  public static final String SERIALIZED_NAME_DEFINITIONINLINEFILES = "definitioninlinefiles";
  @SerializedName(SERIALIZED_NAME_DEFINITIONINLINEFILES)
  private List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> definitioninlinefiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFINITIONTRUST = "definitiontrust";
  @SerializedName(SERIALIZED_NAME_DEFINITIONTRUST)
  private Boolean definitiontrust = null;

  public static final String SERIALIZED_NAME_FULLMATCH = "fullmatch";
  @SerializedName(SERIALIZED_NAME_FULLMATCH)
  private Boolean fullmatch = null;

  public static final String SERIALIZED_NAME_GLOSSARYID = "glossaryid";
  @SerializedName(SERIALIZED_NAME_GLOSSARYID)
  private Integer glossaryid;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_SOURCEGLOSSARYID = "sourceglossaryid";
  @SerializedName(SERIALIZED_NAME_SOURCEGLOSSARYID)
  private Integer sourceglossaryid = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<ModDataGetEntries200ResponseEntriesInnerTagsInner> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEACHERENTRY = "teacherentry";
  @SerializedName(SERIALIZED_NAME_TEACHERENTRY)
  private Boolean teacherentry = null;

  public static final String SERIALIZED_NAME_TIMECREATED = "timecreated";
  @SerializedName(SERIALIZED_NAME_TIMECREATED)
  private Integer timecreated;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified;

  public static final String SERIALIZED_NAME_USEDYNALINK = "usedynalink";
  @SerializedName(SERIALIZED_NAME_USEDYNALINK)
  private Boolean usedynalink = null;

  public static final String SERIALIZED_NAME_USERFULLNAME = "userfullname";
  @SerializedName(SERIALIZED_NAME_USERFULLNAME)
  private String userfullname = "null";

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid = null;

  public static final String SERIALIZED_NAME_USERPICTUREURL = "userpictureurl";
  @SerializedName(SERIALIZED_NAME_USERPICTUREURL)
  private String userpictureurl = "null";

  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner() {
  }

  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner approved(Boolean approved) {
    this.approved = approved;
    return this;
  }

   /**
   * Whether the entry was approved
   * @return approved
  **/
  @javax.annotation.Nullable
  public Boolean getApproved() {
    return approved;
  }

  public void setApproved(Boolean approved) {
    this.approved = approved;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner attachment(Boolean attachment) {
    this.attachment = attachment;
    return this;
  }

   /**
   * Whether or not the entry has attachments
   * @return attachment
  **/
  @javax.annotation.Nullable
  public Boolean getAttachment() {
    return attachment;
  }

  public void setAttachment(Boolean attachment) {
    this.attachment = attachment;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner attachments(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> attachments) {
    this.attachments = attachments;
    return this;
  }

  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner addAttachmentsItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> attachments) {
    this.attachments = attachments;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner casesensitive(Boolean casesensitive) {
    this.casesensitive = casesensitive;
    return this;
  }

   /**
   * When true, the matching is case sensitive
   * @return casesensitive
  **/
  @javax.annotation.Nullable
  public Boolean getCasesensitive() {
    return casesensitive;
  }

  public void setCasesensitive(Boolean casesensitive) {
    this.casesensitive = casesensitive;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner concept(String concept) {
    this.concept = concept;
    return this;
  }

   /**
   * The concept
   * @return concept
  **/
  @javax.annotation.Nullable
  public String getConcept() {
    return concept;
  }

  public void setConcept(String concept) {
    this.concept = concept;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner definition(String definition) {
    this.definition = definition;
    return this;
  }

   /**
   * The definition
   * @return definition
  **/
  @javax.annotation.Nullable
  public String getDefinition() {
    return definition;
  }

  public void setDefinition(String definition) {
    this.definition = definition;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner definitionformat(Integer definitionformat) {
    this.definitionformat = definitionformat;
    return this;
  }

   /**
   * definition format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return definitionformat
  **/
  @javax.annotation.Nullable
  public Integer getDefinitionformat() {
    return definitionformat;
  }

  public void setDefinitionformat(Integer definitionformat) {
    this.definitionformat = definitionformat;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner definitioninlinefiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> definitioninlinefiles) {
    this.definitioninlinefiles = definitioninlinefiles;
    return this;
  }

  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner addDefinitioninlinefilesItem(CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner definitioninlinefilesItem) {
    if (this.definitioninlinefiles == null) {
      this.definitioninlinefiles = new ArrayList<>();
    }
    this.definitioninlinefiles.add(definitioninlinefilesItem);
    return this;
  }

   /**
   * Get definitioninlinefiles
   * @return definitioninlinefiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> getDefinitioninlinefiles() {
    return definitioninlinefiles;
  }

  public void setDefinitioninlinefiles(List<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner> definitioninlinefiles) {
    this.definitioninlinefiles = definitioninlinefiles;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner definitiontrust(Boolean definitiontrust) {
    this.definitiontrust = definitiontrust;
    return this;
  }

   /**
   * The definition trust flag
   * @return definitiontrust
  **/
  @javax.annotation.Nullable
  public Boolean getDefinitiontrust() {
    return definitiontrust;
  }

  public void setDefinitiontrust(Boolean definitiontrust) {
    this.definitiontrust = definitiontrust;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner fullmatch(Boolean fullmatch) {
    this.fullmatch = fullmatch;
    return this;
  }

   /**
   * When true, the matching is done on full words only
   * @return fullmatch
  **/
  @javax.annotation.Nullable
  public Boolean getFullmatch() {
    return fullmatch;
  }

  public void setFullmatch(Boolean fullmatch) {
    this.fullmatch = fullmatch;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner glossaryid(Integer glossaryid) {
    this.glossaryid = glossaryid;
    return this;
  }

   /**
   * The glossary ID
   * @return glossaryid
  **/
  @javax.annotation.Nullable
  public Integer getGlossaryid() {
    return glossaryid;
  }

  public void setGlossaryid(Integer glossaryid) {
    this.glossaryid = glossaryid;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The entry ID
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner sourceglossaryid(Integer sourceglossaryid) {
    this.sourceglossaryid = sourceglossaryid;
    return this;
  }

   /**
   * The source glossary ID
   * @return sourceglossaryid
  **/
  @javax.annotation.Nullable
  public Integer getSourceglossaryid() {
    return sourceglossaryid;
  }

  public void setSourceglossaryid(Integer sourceglossaryid) {
    this.sourceglossaryid = sourceglossaryid;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner tags(List<ModDataGetEntries200ResponseEntriesInnerTagsInner> tags) {
    this.tags = tags;
    return this;
  }

  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner addTagsItem(ModDataGetEntries200ResponseEntriesInnerTagsInner tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<ModDataGetEntries200ResponseEntriesInnerTagsInner> getTags() {
    return tags;
  }

  public void setTags(List<ModDataGetEntries200ResponseEntriesInnerTagsInner> tags) {
    this.tags = tags;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner teacherentry(Boolean teacherentry) {
    this.teacherentry = teacherentry;
    return this;
  }

   /**
   * The entry was created by a teacher, or equivalent.
   * @return teacherentry
  **/
  @javax.annotation.Nullable
  public Boolean getTeacherentry() {
    return teacherentry;
  }

  public void setTeacherentry(Boolean teacherentry) {
    this.teacherentry = teacherentry;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner timecreated(Integer timecreated) {
    this.timecreated = timecreated;
    return this;
  }

   /**
   * Time created
   * @return timecreated
  **/
  @javax.annotation.Nullable
  public Integer getTimecreated() {
    return timecreated;
  }

  public void setTimecreated(Integer timecreated) {
    this.timecreated = timecreated;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * Time modified
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner usedynalink(Boolean usedynalink) {
    this.usedynalink = usedynalink;
    return this;
  }

   /**
   * Whether the concept should be automatically linked
   * @return usedynalink
  **/
  @javax.annotation.Nullable
  public Boolean getUsedynalink() {
    return usedynalink;
  }

  public void setUsedynalink(Boolean usedynalink) {
    this.usedynalink = usedynalink;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner userfullname(String userfullname) {
    this.userfullname = userfullname;
    return this;
  }

   /**
   * Author full name
   * @return userfullname
  **/
  @javax.annotation.Nullable
  public String getUserfullname() {
    return userfullname;
  }

  public void setUserfullname(String userfullname) {
    this.userfullname = userfullname;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * Author ID
   * @return userid
  **/
  @javax.annotation.Nullable
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }


  public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner userpictureurl(String userpictureurl) {
    this.userpictureurl = userpictureurl;
    return this;
  }

   /**
   * Author picture
   * @return userpictureurl
  **/
  @javax.annotation.Nullable
  public String getUserpictureurl() {
    return userpictureurl;
  }

  public void setUserpictureurl(String userpictureurl) {
    this.userpictureurl = userpictureurl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModGlossaryGetEntriesByAuthor200ResponseEntriesInner modGlossaryGetEntriesByAuthor200ResponseEntriesInner = (ModGlossaryGetEntriesByAuthor200ResponseEntriesInner) o;
    return Objects.equals(this.approved, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.approved) &&
        Objects.equals(this.attachment, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.attachment) &&
        Objects.equals(this.attachments, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.attachments) &&
        Objects.equals(this.casesensitive, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.casesensitive) &&
        Objects.equals(this.concept, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.concept) &&
        Objects.equals(this.definition, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.definition) &&
        Objects.equals(this.definitionformat, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.definitionformat) &&
        Objects.equals(this.definitioninlinefiles, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.definitioninlinefiles) &&
        Objects.equals(this.definitiontrust, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.definitiontrust) &&
        Objects.equals(this.fullmatch, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.fullmatch) &&
        Objects.equals(this.glossaryid, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.glossaryid) &&
        Objects.equals(this.id, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.id) &&
        Objects.equals(this.sourceglossaryid, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.sourceglossaryid) &&
        Objects.equals(this.tags, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.tags) &&
        Objects.equals(this.teacherentry, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.teacherentry) &&
        Objects.equals(this.timecreated, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.timecreated) &&
        Objects.equals(this.timemodified, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.timemodified) &&
        Objects.equals(this.usedynalink, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.usedynalink) &&
        Objects.equals(this.userfullname, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.userfullname) &&
        Objects.equals(this.userid, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.userid) &&
        Objects.equals(this.userpictureurl, modGlossaryGetEntriesByAuthor200ResponseEntriesInner.userpictureurl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approved, attachment, attachments, casesensitive, concept, definition, definitionformat, definitioninlinefiles, definitiontrust, fullmatch, glossaryid, id, sourceglossaryid, tags, teacherentry, timecreated, timemodified, usedynalink, userfullname, userid, userpictureurl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModGlossaryGetEntriesByAuthor200ResponseEntriesInner {\n");
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    casesensitive: ").append(toIndentedString(casesensitive)).append("\n");
    sb.append("    concept: ").append(toIndentedString(concept)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    definitionformat: ").append(toIndentedString(definitionformat)).append("\n");
    sb.append("    definitioninlinefiles: ").append(toIndentedString(definitioninlinefiles)).append("\n");
    sb.append("    definitiontrust: ").append(toIndentedString(definitiontrust)).append("\n");
    sb.append("    fullmatch: ").append(toIndentedString(fullmatch)).append("\n");
    sb.append("    glossaryid: ").append(toIndentedString(glossaryid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sourceglossaryid: ").append(toIndentedString(sourceglossaryid)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    teacherentry: ").append(toIndentedString(teacherentry)).append("\n");
    sb.append("    timecreated: ").append(toIndentedString(timecreated)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    usedynalink: ").append(toIndentedString(usedynalink)).append("\n");
    sb.append("    userfullname: ").append(toIndentedString(userfullname)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    userpictureurl: ").append(toIndentedString(userpictureurl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approved");
    openapiFields.add("attachment");
    openapiFields.add("attachments");
    openapiFields.add("casesensitive");
    openapiFields.add("concept");
    openapiFields.add("definition");
    openapiFields.add("definitionformat");
    openapiFields.add("definitioninlinefiles");
    openapiFields.add("definitiontrust");
    openapiFields.add("fullmatch");
    openapiFields.add("glossaryid");
    openapiFields.add("id");
    openapiFields.add("sourceglossaryid");
    openapiFields.add("tags");
    openapiFields.add("teacherentry");
    openapiFields.add("timecreated");
    openapiFields.add("timemodified");
    openapiFields.add("usedynalink");
    openapiFields.add("userfullname");
    openapiFields.add("userid");
    openapiFields.add("userpictureurl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModGlossaryGetEntriesByAuthor200ResponseEntriesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModGlossaryGetEntriesByAuthor200ResponseEntriesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModGlossaryGetEntriesByAuthor200ResponseEntriesInner is not found in the empty JSON string", ModGlossaryGetEntriesByAuthor200ResponseEntriesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModGlossaryGetEntriesByAuthor200ResponseEntriesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModGlossaryGetEntriesByAuthor200ResponseEntriesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("attachments") != null && !jsonObj.get("attachments").isJsonNull()) {
        JsonArray jsonArrayattachments = jsonObj.getAsJsonArray("attachments");
        if (jsonArrayattachments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachments` to be an array in the JSON string but got `%s`", jsonObj.get("attachments").toString()));
          }

          // validate the optional field `attachments` (array)
          for (int i = 0; i < jsonArrayattachments.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArrayattachments.get(i));
          };
        }
      }
      if ((jsonObj.get("concept") != null && !jsonObj.get("concept").isJsonNull()) && !jsonObj.get("concept").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `concept` to be a primitive type in the JSON string but got `%s`", jsonObj.get("concept").toString()));
      }
      if ((jsonObj.get("definition") != null && !jsonObj.get("definition").isJsonNull()) && !jsonObj.get("definition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `definition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("definition").toString()));
      }
      if (jsonObj.get("definitioninlinefiles") != null && !jsonObj.get("definitioninlinefiles").isJsonNull()) {
        JsonArray jsonArraydefinitioninlinefiles = jsonObj.getAsJsonArray("definitioninlinefiles");
        if (jsonArraydefinitioninlinefiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("definitioninlinefiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `definitioninlinefiles` to be an array in the JSON string but got `%s`", jsonObj.get("definitioninlinefiles").toString()));
          }

          // validate the optional field `definitioninlinefiles` (array)
          for (int i = 0; i < jsonArraydefinitioninlinefiles.size(); i++) {
            CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner.validateJsonElement(jsonArraydefinitioninlinefiles.get(i));
          };
        }
      }
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
          }

          // validate the optional field `tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            ModDataGetEntries200ResponseEntriesInnerTagsInner.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if ((jsonObj.get("userfullname") != null && !jsonObj.get("userfullname").isJsonNull()) && !jsonObj.get("userfullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userfullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userfullname").toString()));
      }
      if ((jsonObj.get("userpictureurl") != null && !jsonObj.get("userpictureurl").isJsonNull()) && !jsonObj.get("userpictureurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userpictureurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userpictureurl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModGlossaryGetEntriesByAuthor200ResponseEntriesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModGlossaryGetEntriesByAuthor200ResponseEntriesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModGlossaryGetEntriesByAuthor200ResponseEntriesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModGlossaryGetEntriesByAuthor200ResponseEntriesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModGlossaryGetEntriesByAuthor200ResponseEntriesInner>() {
           @Override
           public void write(JsonWriter out, ModGlossaryGetEntriesByAuthor200ResponseEntriesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModGlossaryGetEntriesByAuthor200ResponseEntriesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModGlossaryGetEntriesByAuthor200ResponseEntriesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModGlossaryGetEntriesByAuthor200ResponseEntriesInner
  * @throws IOException if the JSON string is invalid with respect to ModGlossaryGetEntriesByAuthor200ResponseEntriesInner
  */
  public static ModGlossaryGetEntriesByAuthor200ResponseEntriesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModGlossaryGetEntriesByAuthor200ResponseEntriesInner.class);
  }

 /**
  * Convert an instance of ModGlossaryGetEntriesByAuthor200ResponseEntriesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

