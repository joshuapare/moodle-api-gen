/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreCohortUpdateCohortsRequestCohortsInnerCustomfieldsInner;
import org.openapitools.client.model.CoreCourseUpdateCoursesRequestCoursesInnerCourseformatoptionsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreCourseUpdateCoursesRequestCoursesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreCourseUpdateCoursesRequestCoursesInner {
  public static final String SERIALIZED_NAME_CATEGORYID = "categoryid";
  @SerializedName(SERIALIZED_NAME_CATEGORYID)
  private Integer categoryid;

  public static final String SERIALIZED_NAME_COMPLETIONNOTIFY = "completionnotify";
  @SerializedName(SERIALIZED_NAME_COMPLETIONNOTIFY)
  private Integer completionnotify;

  public static final String SERIALIZED_NAME_COURSEFORMATOPTIONS = "courseformatoptions";
  @SerializedName(SERIALIZED_NAME_COURSEFORMATOPTIONS)
  private List<CoreCourseUpdateCoursesRequestCoursesInnerCourseformatoptionsInner> courseformatoptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOMFIELDS = "customfields";
  @SerializedName(SERIALIZED_NAME_CUSTOMFIELDS)
  private List<CoreCohortUpdateCohortsRequestCohortsInnerCustomfieldsInner> customfields = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULTGROUPINGID = "defaultgroupingid";
  @SerializedName(SERIALIZED_NAME_DEFAULTGROUPINGID)
  private Integer defaultgroupingid;

  public static final String SERIALIZED_NAME_ENABLECOMPLETION = "enablecompletion";
  @SerializedName(SERIALIZED_NAME_ENABLECOMPLETION)
  private Integer enablecompletion;

  public static final String SERIALIZED_NAME_ENDDATE = "enddate";
  @SerializedName(SERIALIZED_NAME_ENDDATE)
  private Integer enddate;

  public static final String SERIALIZED_NAME_FORCETHEME = "forcetheme";
  @SerializedName(SERIALIZED_NAME_FORCETHEME)
  private String forcetheme;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format = "null";

  public static final String SERIALIZED_NAME_FULLNAME = "fullname";
  @SerializedName(SERIALIZED_NAME_FULLNAME)
  private String fullname;

  public static final String SERIALIZED_NAME_GROUPMODE = "groupmode";
  @SerializedName(SERIALIZED_NAME_GROUPMODE)
  private Integer groupmode;

  public static final String SERIALIZED_NAME_GROUPMODEFORCE = "groupmodeforce";
  @SerializedName(SERIALIZED_NAME_GROUPMODEFORCE)
  private Integer groupmodeforce;

  public static final String SERIALIZED_NAME_HIDDENSECTIONS = "hiddensections";
  @SerializedName(SERIALIZED_NAME_HIDDENSECTIONS)
  private Integer hiddensections = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IDNUMBER = "idnumber";
  @SerializedName(SERIALIZED_NAME_IDNUMBER)
  private String idnumber;

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang;

  public static final String SERIALIZED_NAME_MAXBYTES = "maxbytes";
  @SerializedName(SERIALIZED_NAME_MAXBYTES)
  private Integer maxbytes = null;

  public static final String SERIALIZED_NAME_NEWSITEMS = "newsitems";
  @SerializedName(SERIALIZED_NAME_NEWSITEMS)
  private Integer newsitems = null;

  public static final String SERIALIZED_NAME_NUMSECTIONS = "numsections";
  @SerializedName(SERIALIZED_NAME_NUMSECTIONS)
  private Integer numsections;

  public static final String SERIALIZED_NAME_SHORTNAME = "shortname";
  @SerializedName(SERIALIZED_NAME_SHORTNAME)
  private String shortname;

  public static final String SERIALIZED_NAME_SHOWGRADES = "showgrades";
  @SerializedName(SERIALIZED_NAME_SHOWGRADES)
  private Integer showgrades;

  public static final String SERIALIZED_NAME_SHOWREPORTS = "showreports";
  @SerializedName(SERIALIZED_NAME_SHOWREPORTS)
  private Integer showreports = null;

  public static final String SERIALIZED_NAME_STARTDATE = "startdate";
  @SerializedName(SERIALIZED_NAME_STARTDATE)
  private Integer startdate;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public static final String SERIALIZED_NAME_SUMMARYFORMAT = "summaryformat";
  @SerializedName(SERIALIZED_NAME_SUMMARYFORMAT)
  private Integer summaryformat;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Integer visible;

  public CoreCourseUpdateCoursesRequestCoursesInner() {
  }

  public CoreCourseUpdateCoursesRequestCoursesInner categoryid(Integer categoryid) {
    this.categoryid = categoryid;
    return this;
  }

   /**
   * category id
   * @return categoryid
  **/
  @javax.annotation.Nullable
  public Integer getCategoryid() {
    return categoryid;
  }

  public void setCategoryid(Integer categoryid) {
    this.categoryid = categoryid;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner completionnotify(Integer completionnotify) {
    this.completionnotify = completionnotify;
    return this;
  }

   /**
   * 1: yes 0: no
   * @return completionnotify
  **/
  @javax.annotation.Nullable
  public Integer getCompletionnotify() {
    return completionnotify;
  }

  public void setCompletionnotify(Integer completionnotify) {
    this.completionnotify = completionnotify;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner courseformatoptions(List<CoreCourseUpdateCoursesRequestCoursesInnerCourseformatoptionsInner> courseformatoptions) {
    this.courseformatoptions = courseformatoptions;
    return this;
  }

  public CoreCourseUpdateCoursesRequestCoursesInner addCourseformatoptionsItem(CoreCourseUpdateCoursesRequestCoursesInnerCourseformatoptionsInner courseformatoptionsItem) {
    if (this.courseformatoptions == null) {
      this.courseformatoptions = new ArrayList<>();
    }
    this.courseformatoptions.add(courseformatoptionsItem);
    return this;
  }

   /**
   * Get courseformatoptions
   * @return courseformatoptions
  **/
  @javax.annotation.Nullable
  public List<CoreCourseUpdateCoursesRequestCoursesInnerCourseformatoptionsInner> getCourseformatoptions() {
    return courseformatoptions;
  }

  public void setCourseformatoptions(List<CoreCourseUpdateCoursesRequestCoursesInnerCourseformatoptionsInner> courseformatoptions) {
    this.courseformatoptions = courseformatoptions;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner customfields(List<CoreCohortUpdateCohortsRequestCohortsInnerCustomfieldsInner> customfields) {
    this.customfields = customfields;
    return this;
  }

  public CoreCourseUpdateCoursesRequestCoursesInner addCustomfieldsItem(CoreCohortUpdateCohortsRequestCohortsInnerCustomfieldsInner customfieldsItem) {
    if (this.customfields == null) {
      this.customfields = new ArrayList<>();
    }
    this.customfields.add(customfieldsItem);
    return this;
  }

   /**
   * Get customfields
   * @return customfields
  **/
  @javax.annotation.Nullable
  public List<CoreCohortUpdateCohortsRequestCohortsInnerCustomfieldsInner> getCustomfields() {
    return customfields;
  }

  public void setCustomfields(List<CoreCohortUpdateCohortsRequestCohortsInnerCustomfieldsInner> customfields) {
    this.customfields = customfields;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner defaultgroupingid(Integer defaultgroupingid) {
    this.defaultgroupingid = defaultgroupingid;
    return this;
  }

   /**
   * default grouping id
   * @return defaultgroupingid
  **/
  @javax.annotation.Nullable
  public Integer getDefaultgroupingid() {
    return defaultgroupingid;
  }

  public void setDefaultgroupingid(Integer defaultgroupingid) {
    this.defaultgroupingid = defaultgroupingid;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner enablecompletion(Integer enablecompletion) {
    this.enablecompletion = enablecompletion;
    return this;
  }

   /**
   * Enabled, control via completion and activity settings. Disabled,                                         not shown in activity settings.
   * @return enablecompletion
  **/
  @javax.annotation.Nullable
  public Integer getEnablecompletion() {
    return enablecompletion;
  }

  public void setEnablecompletion(Integer enablecompletion) {
    this.enablecompletion = enablecompletion;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner enddate(Integer enddate) {
    this.enddate = enddate;
    return this;
  }

   /**
   * timestamp when the course end
   * @return enddate
  **/
  @javax.annotation.Nullable
  public Integer getEnddate() {
    return enddate;
  }

  public void setEnddate(Integer enddate) {
    this.enddate = enddate;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner forcetheme(String forcetheme) {
    this.forcetheme = forcetheme;
    return this;
  }

   /**
   * name of the force theme
   * @return forcetheme
  **/
  @javax.annotation.Nullable
  public String getForcetheme() {
    return forcetheme;
  }

  public void setForcetheme(String forcetheme) {
    this.forcetheme = forcetheme;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner format(String format) {
    this.format = format;
    return this;
  }

   /**
   * course format: weeks, topics, social, site,..
   * @return format
  **/
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

   /**
   * full name
   * @return fullname
  **/
  @javax.annotation.Nullable
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner groupmode(Integer groupmode) {
    this.groupmode = groupmode;
    return this;
  }

   /**
   * no group, separate, visible
   * @return groupmode
  **/
  @javax.annotation.Nullable
  public Integer getGroupmode() {
    return groupmode;
  }

  public void setGroupmode(Integer groupmode) {
    this.groupmode = groupmode;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner groupmodeforce(Integer groupmodeforce) {
    this.groupmodeforce = groupmodeforce;
    return this;
  }

   /**
   * 1: yes, 0: no
   * @return groupmodeforce
  **/
  @javax.annotation.Nullable
  public Integer getGroupmodeforce() {
    return groupmodeforce;
  }

  public void setGroupmodeforce(Integer groupmodeforce) {
    this.groupmodeforce = groupmodeforce;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner hiddensections(Integer hiddensections) {
    this.hiddensections = hiddensections;
    return this;
  }

   /**
   * (deprecated, use courseformatoptions) How the hidden sections in the course are                                         displayed to students
   * @return hiddensections
  **/
  @javax.annotation.Nullable
  public Integer getHiddensections() {
    return hiddensections;
  }

  public void setHiddensections(Integer hiddensections) {
    this.hiddensections = hiddensections;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the course
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner idnumber(String idnumber) {
    this.idnumber = idnumber;
    return this;
  }

   /**
   * id number
   * @return idnumber
  **/
  @javax.annotation.Nullable
  public String getIdnumber() {
    return idnumber;
  }

  public void setIdnumber(String idnumber) {
    this.idnumber = idnumber;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner lang(String lang) {
    this.lang = lang;
    return this;
  }

   /**
   * forced course language
   * @return lang
  **/
  @javax.annotation.Nullable
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner maxbytes(Integer maxbytes) {
    this.maxbytes = maxbytes;
    return this;
  }

   /**
   * largest size of file that can be uploaded into the course
   * @return maxbytes
  **/
  @javax.annotation.Nullable
  public Integer getMaxbytes() {
    return maxbytes;
  }

  public void setMaxbytes(Integer maxbytes) {
    this.maxbytes = maxbytes;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner newsitems(Integer newsitems) {
    this.newsitems = newsitems;
    return this;
  }

   /**
   * number of recent items appearing on the course page
   * @return newsitems
  **/
  @javax.annotation.Nullable
  public Integer getNewsitems() {
    return newsitems;
  }

  public void setNewsitems(Integer newsitems) {
    this.newsitems = newsitems;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner numsections(Integer numsections) {
    this.numsections = numsections;
    return this;
  }

   /**
   * (deprecated, use courseformatoptions) number of weeks/topics
   * @return numsections
  **/
  @javax.annotation.Nullable
  public Integer getNumsections() {
    return numsections;
  }

  public void setNumsections(Integer numsections) {
    this.numsections = numsections;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner shortname(String shortname) {
    this.shortname = shortname;
    return this;
  }

   /**
   * course short name
   * @return shortname
  **/
  @javax.annotation.Nullable
  public String getShortname() {
    return shortname;
  }

  public void setShortname(String shortname) {
    this.shortname = shortname;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner showgrades(Integer showgrades) {
    this.showgrades = showgrades;
    return this;
  }

   /**
   * 1 if grades are shown, otherwise 0
   * @return showgrades
  **/
  @javax.annotation.Nullable
  public Integer getShowgrades() {
    return showgrades;
  }

  public void setShowgrades(Integer showgrades) {
    this.showgrades = showgrades;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner showreports(Integer showreports) {
    this.showreports = showreports;
    return this;
  }

   /**
   * are activity report shown (yes &#x3D; 1, no &#x3D;0)
   * @return showreports
  **/
  @javax.annotation.Nullable
  public Integer getShowreports() {
    return showreports;
  }

  public void setShowreports(Integer showreports) {
    this.showreports = showreports;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner startdate(Integer startdate) {
    this.startdate = startdate;
    return this;
  }

   /**
   * timestamp when the course start
   * @return startdate
  **/
  @javax.annotation.Nullable
  public Integer getStartdate() {
    return startdate;
  }

  public void setStartdate(Integer startdate) {
    this.startdate = startdate;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * summary
   * @return summary
  **/
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner summaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
    return this;
  }

   /**
   * summary format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return summaryformat
  **/
  @javax.annotation.Nullable
  public Integer getSummaryformat() {
    return summaryformat;
  }

  public void setSummaryformat(Integer summaryformat) {
    this.summaryformat = summaryformat;
  }


  public CoreCourseUpdateCoursesRequestCoursesInner visible(Integer visible) {
    this.visible = visible;
    return this;
  }

   /**
   * 1: available to student, 0:not available
   * @return visible
  **/
  @javax.annotation.Nullable
  public Integer getVisible() {
    return visible;
  }

  public void setVisible(Integer visible) {
    this.visible = visible;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreCourseUpdateCoursesRequestCoursesInner coreCourseUpdateCoursesRequestCoursesInner = (CoreCourseUpdateCoursesRequestCoursesInner) o;
    return Objects.equals(this.categoryid, coreCourseUpdateCoursesRequestCoursesInner.categoryid) &&
        Objects.equals(this.completionnotify, coreCourseUpdateCoursesRequestCoursesInner.completionnotify) &&
        Objects.equals(this.courseformatoptions, coreCourseUpdateCoursesRequestCoursesInner.courseformatoptions) &&
        Objects.equals(this.customfields, coreCourseUpdateCoursesRequestCoursesInner.customfields) &&
        Objects.equals(this.defaultgroupingid, coreCourseUpdateCoursesRequestCoursesInner.defaultgroupingid) &&
        Objects.equals(this.enablecompletion, coreCourseUpdateCoursesRequestCoursesInner.enablecompletion) &&
        Objects.equals(this.enddate, coreCourseUpdateCoursesRequestCoursesInner.enddate) &&
        Objects.equals(this.forcetheme, coreCourseUpdateCoursesRequestCoursesInner.forcetheme) &&
        Objects.equals(this.format, coreCourseUpdateCoursesRequestCoursesInner.format) &&
        Objects.equals(this.fullname, coreCourseUpdateCoursesRequestCoursesInner.fullname) &&
        Objects.equals(this.groupmode, coreCourseUpdateCoursesRequestCoursesInner.groupmode) &&
        Objects.equals(this.groupmodeforce, coreCourseUpdateCoursesRequestCoursesInner.groupmodeforce) &&
        Objects.equals(this.hiddensections, coreCourseUpdateCoursesRequestCoursesInner.hiddensections) &&
        Objects.equals(this.id, coreCourseUpdateCoursesRequestCoursesInner.id) &&
        Objects.equals(this.idnumber, coreCourseUpdateCoursesRequestCoursesInner.idnumber) &&
        Objects.equals(this.lang, coreCourseUpdateCoursesRequestCoursesInner.lang) &&
        Objects.equals(this.maxbytes, coreCourseUpdateCoursesRequestCoursesInner.maxbytes) &&
        Objects.equals(this.newsitems, coreCourseUpdateCoursesRequestCoursesInner.newsitems) &&
        Objects.equals(this.numsections, coreCourseUpdateCoursesRequestCoursesInner.numsections) &&
        Objects.equals(this.shortname, coreCourseUpdateCoursesRequestCoursesInner.shortname) &&
        Objects.equals(this.showgrades, coreCourseUpdateCoursesRequestCoursesInner.showgrades) &&
        Objects.equals(this.showreports, coreCourseUpdateCoursesRequestCoursesInner.showreports) &&
        Objects.equals(this.startdate, coreCourseUpdateCoursesRequestCoursesInner.startdate) &&
        Objects.equals(this.summary, coreCourseUpdateCoursesRequestCoursesInner.summary) &&
        Objects.equals(this.summaryformat, coreCourseUpdateCoursesRequestCoursesInner.summaryformat) &&
        Objects.equals(this.visible, coreCourseUpdateCoursesRequestCoursesInner.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryid, completionnotify, courseformatoptions, customfields, defaultgroupingid, enablecompletion, enddate, forcetheme, format, fullname, groupmode, groupmodeforce, hiddensections, id, idnumber, lang, maxbytes, newsitems, numsections, shortname, showgrades, showreports, startdate, summary, summaryformat, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreCourseUpdateCoursesRequestCoursesInner {\n");
    sb.append("    categoryid: ").append(toIndentedString(categoryid)).append("\n");
    sb.append("    completionnotify: ").append(toIndentedString(completionnotify)).append("\n");
    sb.append("    courseformatoptions: ").append(toIndentedString(courseformatoptions)).append("\n");
    sb.append("    customfields: ").append(toIndentedString(customfields)).append("\n");
    sb.append("    defaultgroupingid: ").append(toIndentedString(defaultgroupingid)).append("\n");
    sb.append("    enablecompletion: ").append(toIndentedString(enablecompletion)).append("\n");
    sb.append("    enddate: ").append(toIndentedString(enddate)).append("\n");
    sb.append("    forcetheme: ").append(toIndentedString(forcetheme)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    groupmode: ").append(toIndentedString(groupmode)).append("\n");
    sb.append("    groupmodeforce: ").append(toIndentedString(groupmodeforce)).append("\n");
    sb.append("    hiddensections: ").append(toIndentedString(hiddensections)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idnumber: ").append(toIndentedString(idnumber)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    maxbytes: ").append(toIndentedString(maxbytes)).append("\n");
    sb.append("    newsitems: ").append(toIndentedString(newsitems)).append("\n");
    sb.append("    numsections: ").append(toIndentedString(numsections)).append("\n");
    sb.append("    shortname: ").append(toIndentedString(shortname)).append("\n");
    sb.append("    showgrades: ").append(toIndentedString(showgrades)).append("\n");
    sb.append("    showreports: ").append(toIndentedString(showreports)).append("\n");
    sb.append("    startdate: ").append(toIndentedString(startdate)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    summaryformat: ").append(toIndentedString(summaryformat)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categoryid");
    openapiFields.add("completionnotify");
    openapiFields.add("courseformatoptions");
    openapiFields.add("customfields");
    openapiFields.add("defaultgroupingid");
    openapiFields.add("enablecompletion");
    openapiFields.add("enddate");
    openapiFields.add("forcetheme");
    openapiFields.add("format");
    openapiFields.add("fullname");
    openapiFields.add("groupmode");
    openapiFields.add("groupmodeforce");
    openapiFields.add("hiddensections");
    openapiFields.add("id");
    openapiFields.add("idnumber");
    openapiFields.add("lang");
    openapiFields.add("maxbytes");
    openapiFields.add("newsitems");
    openapiFields.add("numsections");
    openapiFields.add("shortname");
    openapiFields.add("showgrades");
    openapiFields.add("showreports");
    openapiFields.add("startdate");
    openapiFields.add("summary");
    openapiFields.add("summaryformat");
    openapiFields.add("visible");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreCourseUpdateCoursesRequestCoursesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreCourseUpdateCoursesRequestCoursesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreCourseUpdateCoursesRequestCoursesInner is not found in the empty JSON string", CoreCourseUpdateCoursesRequestCoursesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreCourseUpdateCoursesRequestCoursesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreCourseUpdateCoursesRequestCoursesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("courseformatoptions") != null && !jsonObj.get("courseformatoptions").isJsonNull()) {
        JsonArray jsonArraycourseformatoptions = jsonObj.getAsJsonArray("courseformatoptions");
        if (jsonArraycourseformatoptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("courseformatoptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `courseformatoptions` to be an array in the JSON string but got `%s`", jsonObj.get("courseformatoptions").toString()));
          }

          // validate the optional field `courseformatoptions` (array)
          for (int i = 0; i < jsonArraycourseformatoptions.size(); i++) {
            CoreCourseUpdateCoursesRequestCoursesInnerCourseformatoptionsInner.validateJsonElement(jsonArraycourseformatoptions.get(i));
          };
        }
      }
      if (jsonObj.get("customfields") != null && !jsonObj.get("customfields").isJsonNull()) {
        JsonArray jsonArraycustomfields = jsonObj.getAsJsonArray("customfields");
        if (jsonArraycustomfields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customfields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customfields` to be an array in the JSON string but got `%s`", jsonObj.get("customfields").toString()));
          }

          // validate the optional field `customfields` (array)
          for (int i = 0; i < jsonArraycustomfields.size(); i++) {
            CoreCohortUpdateCohortsRequestCohortsInnerCustomfieldsInner.validateJsonElement(jsonArraycustomfields.get(i));
          };
        }
      }
      if ((jsonObj.get("forcetheme") != null && !jsonObj.get("forcetheme").isJsonNull()) && !jsonObj.get("forcetheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `forcetheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("forcetheme").toString()));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      if ((jsonObj.get("fullname") != null && !jsonObj.get("fullname").isJsonNull()) && !jsonObj.get("fullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullname").toString()));
      }
      if ((jsonObj.get("idnumber") != null && !jsonObj.get("idnumber").isJsonNull()) && !jsonObj.get("idnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idnumber").toString()));
      }
      if ((jsonObj.get("lang") != null && !jsonObj.get("lang").isJsonNull()) && !jsonObj.get("lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang").toString()));
      }
      if ((jsonObj.get("shortname") != null && !jsonObj.get("shortname").isJsonNull()) && !jsonObj.get("shortname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortname").toString()));
      }
      if ((jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) && !jsonObj.get("summary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreCourseUpdateCoursesRequestCoursesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreCourseUpdateCoursesRequestCoursesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreCourseUpdateCoursesRequestCoursesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreCourseUpdateCoursesRequestCoursesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreCourseUpdateCoursesRequestCoursesInner>() {
           @Override
           public void write(JsonWriter out, CoreCourseUpdateCoursesRequestCoursesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreCourseUpdateCoursesRequestCoursesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreCourseUpdateCoursesRequestCoursesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreCourseUpdateCoursesRequestCoursesInner
  * @throws IOException if the JSON string is invalid with respect to CoreCourseUpdateCoursesRequestCoursesInner
  */
  public static CoreCourseUpdateCoursesRequestCoursesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreCourseUpdateCoursesRequestCoursesInner.class);
  }

 /**
  * Convert an instance of CoreCourseUpdateCoursesRequestCoursesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

