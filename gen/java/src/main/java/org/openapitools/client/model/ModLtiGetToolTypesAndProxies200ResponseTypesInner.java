/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModLtiGetToolTypesAndProxies200ResponseTypesInnerState;
import org.openapitools.client.model.ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * Tool
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T20:58:28.689161-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModLtiGetToolTypesAndProxies200ResponseTypesInner {
  public static final String SERIALIZED_NAME_CAPABILITYGROUPS = "capabilitygroups";
  @SerializedName(SERIALIZED_NAME_CAPABILITYGROUPS)
  private List<Object> capabilitygroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENTID = "clientid";
  @SerializedName(SERIALIZED_NAME_CLIENTID)
  private String clientid;

  public static final String SERIALIZED_NAME_COURSEID = "courseid";
  @SerializedName(SERIALIZED_NAME_COURSEID)
  private Integer courseid = 0;

  public static final String SERIALIZED_NAME_DEPLOYMENTID = "deploymentid";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENTID)
  private Integer deploymentid;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_HASCAPABILITYGROUPS = "hascapabilitygroups";
  @SerializedName(SERIALIZED_NAME_HASCAPABILITYGROUPS)
  private Boolean hascapabilitygroups;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INSTANCECOUNT = "instancecount";
  @SerializedName(SERIALIZED_NAME_INSTANCECOUNT)
  private Integer instancecount;

  public static final String SERIALIZED_NAME_INSTANCEIDS = "instanceids";
  @SerializedName(SERIALIZED_NAME_INSTANCEIDS)
  private List<Object> instanceids = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLATFORMID = "platformid";
  @SerializedName(SERIALIZED_NAME_PLATFORMID)
  private String platformid;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private ModLtiGetToolTypesAndProxies200ResponseTypesInnerState state;

  public static final String SERIALIZED_NAME_URLS = "urls";
  @SerializedName(SERIALIZED_NAME_URLS)
  private ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls urls;

  public ModLtiGetToolTypesAndProxies200ResponseTypesInner() {
  }

  public ModLtiGetToolTypesAndProxies200ResponseTypesInner capabilitygroups(List<Object> capabilitygroups) {
    this.capabilitygroups = capabilitygroups;
    return this;
  }

  public ModLtiGetToolTypesAndProxies200ResponseTypesInner addCapabilitygroupsItem(Object capabilitygroupsItem) {
    if (this.capabilitygroups == null) {
      this.capabilitygroups = new ArrayList<>();
    }
    this.capabilitygroups.add(capabilitygroupsItem);
    return this;
  }

   /**
   * Get capabilitygroups
   * @return capabilitygroups
  **/
  @javax.annotation.Nullable
  public List<Object> getCapabilitygroups() {
    return capabilitygroups;
  }

  public void setCapabilitygroups(List<Object> capabilitygroups) {
    this.capabilitygroups = capabilitygroups;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner clientid(String clientid) {
    this.clientid = clientid;
    return this;
  }

   /**
   * Client ID
   * @return clientid
  **/
  @javax.annotation.Nullable
  public String getClientid() {
    return clientid;
  }

  public void setClientid(String clientid) {
    this.clientid = clientid;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner courseid(Integer courseid) {
    this.courseid = courseid;
    return this;
  }

   /**
   * Tool type course
   * @return courseid
  **/
  @javax.annotation.Nullable
  public Integer getCourseid() {
    return courseid;
  }

  public void setCourseid(Integer courseid) {
    this.courseid = courseid;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner deploymentid(Integer deploymentid) {
    this.deploymentid = deploymentid;
    return this;
  }

   /**
   * Deployment ID
   * @return deploymentid
  **/
  @javax.annotation.Nullable
  public Integer getDeploymentid() {
    return deploymentid;
  }

  public void setDeploymentid(Integer deploymentid) {
    this.deploymentid = deploymentid;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Tool type description
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner hascapabilitygroups(Boolean hascapabilitygroups) {
    this.hascapabilitygroups = hascapabilitygroups;
    return this;
  }

   /**
   * Indicate if capabilitygroups is populated
   * @return hascapabilitygroups
  **/
  @javax.annotation.Nullable
  public Boolean getHascapabilitygroups() {
    return hascapabilitygroups;
  }

  public void setHascapabilitygroups(Boolean hascapabilitygroups) {
    this.hascapabilitygroups = hascapabilitygroups;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Tool type id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner instancecount(Integer instancecount) {
    this.instancecount = instancecount;
    return this;
  }

   /**
   * The number of times this tool is being used
   * @return instancecount
  **/
  @javax.annotation.Nullable
  public Integer getInstancecount() {
    return instancecount;
  }

  public void setInstancecount(Integer instancecount) {
    this.instancecount = instancecount;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner instanceids(List<Object> instanceids) {
    this.instanceids = instanceids;
    return this;
  }

  public ModLtiGetToolTypesAndProxies200ResponseTypesInner addInstanceidsItem(Object instanceidsItem) {
    if (this.instanceids == null) {
      this.instanceids = new ArrayList<>();
    }
    this.instanceids.add(instanceidsItem);
    return this;
  }

   /**
   * Get instanceids
   * @return instanceids
  **/
  @javax.annotation.Nullable
  public List<Object> getInstanceids() {
    return instanceids;
  }

  public void setInstanceids(List<Object> instanceids) {
    this.instanceids = instanceids;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Tool type name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner platformid(String platformid) {
    this.platformid = platformid;
    return this;
  }

   /**
   * Platform ID
   * @return platformid
  **/
  @javax.annotation.Nullable
  public String getPlatformid() {
    return platformid;
  }

  public void setPlatformid(String platformid) {
    this.platformid = platformid;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner state(ModLtiGetToolTypesAndProxies200ResponseTypesInnerState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  public ModLtiGetToolTypesAndProxies200ResponseTypesInnerState getState() {
    return state;
  }

  public void setState(ModLtiGetToolTypesAndProxies200ResponseTypesInnerState state) {
    this.state = state;
  }


  public ModLtiGetToolTypesAndProxies200ResponseTypesInner urls(ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls urls) {
    this.urls = urls;
    return this;
  }

   /**
   * Get urls
   * @return urls
  **/
  @javax.annotation.Nullable
  public ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls getUrls() {
    return urls;
  }

  public void setUrls(ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls urls) {
    this.urls = urls;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModLtiGetToolTypesAndProxies200ResponseTypesInner modLtiGetToolTypesAndProxies200ResponseTypesInner = (ModLtiGetToolTypesAndProxies200ResponseTypesInner) o;
    return Objects.equals(this.capabilitygroups, modLtiGetToolTypesAndProxies200ResponseTypesInner.capabilitygroups) &&
        Objects.equals(this.clientid, modLtiGetToolTypesAndProxies200ResponseTypesInner.clientid) &&
        Objects.equals(this.courseid, modLtiGetToolTypesAndProxies200ResponseTypesInner.courseid) &&
        Objects.equals(this.deploymentid, modLtiGetToolTypesAndProxies200ResponseTypesInner.deploymentid) &&
        Objects.equals(this.description, modLtiGetToolTypesAndProxies200ResponseTypesInner.description) &&
        Objects.equals(this.hascapabilitygroups, modLtiGetToolTypesAndProxies200ResponseTypesInner.hascapabilitygroups) &&
        Objects.equals(this.id, modLtiGetToolTypesAndProxies200ResponseTypesInner.id) &&
        Objects.equals(this.instancecount, modLtiGetToolTypesAndProxies200ResponseTypesInner.instancecount) &&
        Objects.equals(this.instanceids, modLtiGetToolTypesAndProxies200ResponseTypesInner.instanceids) &&
        Objects.equals(this.name, modLtiGetToolTypesAndProxies200ResponseTypesInner.name) &&
        Objects.equals(this.platformid, modLtiGetToolTypesAndProxies200ResponseTypesInner.platformid) &&
        Objects.equals(this.state, modLtiGetToolTypesAndProxies200ResponseTypesInner.state) &&
        Objects.equals(this.urls, modLtiGetToolTypesAndProxies200ResponseTypesInner.urls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capabilitygroups, clientid, courseid, deploymentid, description, hascapabilitygroups, id, instancecount, instanceids, name, platformid, state, urls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModLtiGetToolTypesAndProxies200ResponseTypesInner {\n");
    sb.append("    capabilitygroups: ").append(toIndentedString(capabilitygroups)).append("\n");
    sb.append("    clientid: ").append(toIndentedString(clientid)).append("\n");
    sb.append("    courseid: ").append(toIndentedString(courseid)).append("\n");
    sb.append("    deploymentid: ").append(toIndentedString(deploymentid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hascapabilitygroups: ").append(toIndentedString(hascapabilitygroups)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instancecount: ").append(toIndentedString(instancecount)).append("\n");
    sb.append("    instanceids: ").append(toIndentedString(instanceids)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platformid: ").append(toIndentedString(platformid)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("capabilitygroups");
    openapiFields.add("clientid");
    openapiFields.add("courseid");
    openapiFields.add("deploymentid");
    openapiFields.add("description");
    openapiFields.add("hascapabilitygroups");
    openapiFields.add("id");
    openapiFields.add("instancecount");
    openapiFields.add("instanceids");
    openapiFields.add("name");
    openapiFields.add("platformid");
    openapiFields.add("state");
    openapiFields.add("urls");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModLtiGetToolTypesAndProxies200ResponseTypesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModLtiGetToolTypesAndProxies200ResponseTypesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModLtiGetToolTypesAndProxies200ResponseTypesInner is not found in the empty JSON string", ModLtiGetToolTypesAndProxies200ResponseTypesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModLtiGetToolTypesAndProxies200ResponseTypesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModLtiGetToolTypesAndProxies200ResponseTypesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("capabilitygroups") != null && !jsonObj.get("capabilitygroups").isJsonNull() && !jsonObj.get("capabilitygroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `capabilitygroups` to be an array in the JSON string but got `%s`", jsonObj.get("capabilitygroups").toString()));
      }
      if ((jsonObj.get("clientid") != null && !jsonObj.get("clientid").isJsonNull()) && !jsonObj.get("clientid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientid").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("instanceids") != null && !jsonObj.get("instanceids").isJsonNull() && !jsonObj.get("instanceids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceids` to be an array in the JSON string but got `%s`", jsonObj.get("instanceids").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("platformid") != null && !jsonObj.get("platformid").isJsonNull()) && !jsonObj.get("platformid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platformid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platformid").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        ModLtiGetToolTypesAndProxies200ResponseTypesInnerState.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `urls`
      if (jsonObj.get("urls") != null && !jsonObj.get("urls").isJsonNull()) {
        ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls.validateJsonElement(jsonObj.get("urls"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModLtiGetToolTypesAndProxies200ResponseTypesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModLtiGetToolTypesAndProxies200ResponseTypesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModLtiGetToolTypesAndProxies200ResponseTypesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModLtiGetToolTypesAndProxies200ResponseTypesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModLtiGetToolTypesAndProxies200ResponseTypesInner>() {
           @Override
           public void write(JsonWriter out, ModLtiGetToolTypesAndProxies200ResponseTypesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModLtiGetToolTypesAndProxies200ResponseTypesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModLtiGetToolTypesAndProxies200ResponseTypesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModLtiGetToolTypesAndProxies200ResponseTypesInner
  * @throws IOException if the JSON string is invalid with respect to ModLtiGetToolTypesAndProxies200ResponseTypesInner
  */
  public static ModLtiGetToolTypesAndProxies200ResponseTypesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModLtiGetToolTypesAndProxies200ResponseTypesInner.class);
  }

 /**
  * Convert an instance of ModLtiGetToolTypesAndProxies200ResponseTypesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

