/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * ModDataGetDatabasesByCourses200ResponseDatabasesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class ModDataGetDatabasesByCourses200ResponseDatabasesInner {
  public static final String SERIALIZED_NAME_ADDTEMPLATE = "addtemplate";
  @SerializedName(SERIALIZED_NAME_ADDTEMPLATE)
  private String addtemplate = "null";

  public static final String SERIALIZED_NAME_APPROVAL = "approval";
  @SerializedName(SERIALIZED_NAME_APPROVAL)
  private Boolean approval = null;

  public static final String SERIALIZED_NAME_ASEARCHTEMPLATE = "asearchtemplate";
  @SerializedName(SERIALIZED_NAME_ASEARCHTEMPLATE)
  private String asearchtemplate = "null";

  public static final String SERIALIZED_NAME_ASSESSED = "assessed";
  @SerializedName(SERIALIZED_NAME_ASSESSED)
  private Integer assessed = null;

  public static final String SERIALIZED_NAME_ASSESSTIMEFINISH = "assesstimefinish";
  @SerializedName(SERIALIZED_NAME_ASSESSTIMEFINISH)
  private Integer assesstimefinish = null;

  public static final String SERIALIZED_NAME_ASSESSTIMESTART = "assesstimestart";
  @SerializedName(SERIALIZED_NAME_ASSESSTIMESTART)
  private Integer assesstimestart = null;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private Boolean comments = null;

  public static final String SERIALIZED_NAME_COURSE = "course";
  @SerializedName(SERIALIZED_NAME_COURSE)
  private Integer course = null;

  public static final String SERIALIZED_NAME_COURSEMODULE = "coursemodule";
  @SerializedName(SERIALIZED_NAME_COURSEMODULE)
  private Integer coursemodule = null;

  public static final String SERIALIZED_NAME_CSSTEMPLATE = "csstemplate";
  @SerializedName(SERIALIZED_NAME_CSSTEMPLATE)
  private String csstemplate = "null";

  public static final String SERIALIZED_NAME_DEFAULTSORT = "defaultsort";
  @SerializedName(SERIALIZED_NAME_DEFAULTSORT)
  private Integer defaultsort = null;

  public static final String SERIALIZED_NAME_DEFAULTSORTDIR = "defaultsortdir";
  @SerializedName(SERIALIZED_NAME_DEFAULTSORTDIR)
  private Integer defaultsortdir = null;

  public static final String SERIALIZED_NAME_EDITANY = "editany";
  @SerializedName(SERIALIZED_NAME_EDITANY)
  private Boolean editany = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = null;

  public static final String SERIALIZED_NAME_INTRO = "intro";
  @SerializedName(SERIALIZED_NAME_INTRO)
  private String intro = "null";

  public static final String SERIALIZED_NAME_INTROFILES = "introfiles";
  @SerializedName(SERIALIZED_NAME_INTROFILES)
  private List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> introfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_INTROFORMAT = "introformat";
  @SerializedName(SERIALIZED_NAME_INTROFORMAT)
  private Integer introformat = 0;

  public static final String SERIALIZED_NAME_JSTEMPLATE = "jstemplate";
  @SerializedName(SERIALIZED_NAME_JSTEMPLATE)
  private String jstemplate = "null";

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang;

  public static final String SERIALIZED_NAME_LISTTEMPLATE = "listtemplate";
  @SerializedName(SERIALIZED_NAME_LISTTEMPLATE)
  private String listtemplate = "null";

  public static final String SERIALIZED_NAME_LISTTEMPLATEFOOTER = "listtemplatefooter";
  @SerializedName(SERIALIZED_NAME_LISTTEMPLATEFOOTER)
  private String listtemplatefooter = "null";

  public static final String SERIALIZED_NAME_LISTTEMPLATEHEADER = "listtemplateheader";
  @SerializedName(SERIALIZED_NAME_LISTTEMPLATEHEADER)
  private String listtemplateheader = "null";

  public static final String SERIALIZED_NAME_MANAGEAPPROVED = "manageapproved";
  @SerializedName(SERIALIZED_NAME_MANAGEAPPROVED)
  private Boolean manageapproved = null;

  public static final String SERIALIZED_NAME_MAXENTRIES = "maxentries";
  @SerializedName(SERIALIZED_NAME_MAXENTRIES)
  private Integer maxentries = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = "null";

  public static final String SERIALIZED_NAME_NOTIFICATION = "notification";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION)
  private Integer notification = null;

  public static final String SERIALIZED_NAME_REQUIREDENTRIES = "requiredentries";
  @SerializedName(SERIALIZED_NAME_REQUIREDENTRIES)
  private Integer requiredentries = null;

  public static final String SERIALIZED_NAME_REQUIREDENTRIESTOVIEW = "requiredentriestoview";
  @SerializedName(SERIALIZED_NAME_REQUIREDENTRIESTOVIEW)
  private Integer requiredentriestoview = null;

  public static final String SERIALIZED_NAME_RSSARTICLES = "rssarticles";
  @SerializedName(SERIALIZED_NAME_RSSARTICLES)
  private Integer rssarticles = null;

  public static final String SERIALIZED_NAME_RSSTEMPLATE = "rsstemplate";
  @SerializedName(SERIALIZED_NAME_RSSTEMPLATE)
  private String rsstemplate = "null";

  public static final String SERIALIZED_NAME_RSSTITLETEMPLATE = "rsstitletemplate";
  @SerializedName(SERIALIZED_NAME_RSSTITLETEMPLATE)
  private String rsstitletemplate = "null";

  public static final String SERIALIZED_NAME_SCALE = "scale";
  @SerializedName(SERIALIZED_NAME_SCALE)
  private Integer scale = null;

  public static final String SERIALIZED_NAME_SINGLETEMPLATE = "singletemplate";
  @SerializedName(SERIALIZED_NAME_SINGLETEMPLATE)
  private String singletemplate = "null";

  public static final String SERIALIZED_NAME_TIMEAVAILABLEFROM = "timeavailablefrom";
  @SerializedName(SERIALIZED_NAME_TIMEAVAILABLEFROM)
  private Integer timeavailablefrom = null;

  public static final String SERIALIZED_NAME_TIMEAVAILABLETO = "timeavailableto";
  @SerializedName(SERIALIZED_NAME_TIMEAVAILABLETO)
  private Integer timeavailableto = null;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified = null;

  public static final String SERIALIZED_NAME_TIMEVIEWFROM = "timeviewfrom";
  @SerializedName(SERIALIZED_NAME_TIMEVIEWFROM)
  private Integer timeviewfrom = null;

  public static final String SERIALIZED_NAME_TIMEVIEWTO = "timeviewto";
  @SerializedName(SERIALIZED_NAME_TIMEVIEWTO)
  private Integer timeviewto = null;

  public ModDataGetDatabasesByCourses200ResponseDatabasesInner() {
  }

  public ModDataGetDatabasesByCourses200ResponseDatabasesInner addtemplate(String addtemplate) {
    this.addtemplate = addtemplate;
    return this;
  }

   /**
   * addtemplate field
   * @return addtemplate
  **/
  @javax.annotation.Nullable
  public String getAddtemplate() {
    return addtemplate;
  }

  public void setAddtemplate(String addtemplate) {
    this.addtemplate = addtemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner approval(Boolean approval) {
    this.approval = approval;
    return this;
  }

   /**
   * approval field
   * @return approval
  **/
  @javax.annotation.Nullable
  public Boolean getApproval() {
    return approval;
  }

  public void setApproval(Boolean approval) {
    this.approval = approval;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner asearchtemplate(String asearchtemplate) {
    this.asearchtemplate = asearchtemplate;
    return this;
  }

   /**
   * asearchtemplate field
   * @return asearchtemplate
  **/
  @javax.annotation.Nullable
  public String getAsearchtemplate() {
    return asearchtemplate;
  }

  public void setAsearchtemplate(String asearchtemplate) {
    this.asearchtemplate = asearchtemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner assessed(Integer assessed) {
    this.assessed = assessed;
    return this;
  }

   /**
   * assessed field
   * @return assessed
  **/
  @javax.annotation.Nullable
  public Integer getAssessed() {
    return assessed;
  }

  public void setAssessed(Integer assessed) {
    this.assessed = assessed;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner assesstimefinish(Integer assesstimefinish) {
    this.assesstimefinish = assesstimefinish;
    return this;
  }

   /**
   * assesstimefinish field
   * @return assesstimefinish
  **/
  @javax.annotation.Nullable
  public Integer getAssesstimefinish() {
    return assesstimefinish;
  }

  public void setAssesstimefinish(Integer assesstimefinish) {
    this.assesstimefinish = assesstimefinish;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner assesstimestart(Integer assesstimestart) {
    this.assesstimestart = assesstimestart;
    return this;
  }

   /**
   * assesstimestart field
   * @return assesstimestart
  **/
  @javax.annotation.Nullable
  public Integer getAssesstimestart() {
    return assesstimestart;
  }

  public void setAssesstimestart(Integer assesstimestart) {
    this.assesstimestart = assesstimestart;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner comments(Boolean comments) {
    this.comments = comments;
    return this;
  }

   /**
   * comments enabled
   * @return comments
  **/
  @javax.annotation.Nullable
  public Boolean getComments() {
    return comments;
  }

  public void setComments(Boolean comments) {
    this.comments = comments;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner course(Integer course) {
    this.course = course;
    return this;
  }

   /**
   * Course id
   * @return course
  **/
  @javax.annotation.Nullable
  public Integer getCourse() {
    return course;
  }

  public void setCourse(Integer course) {
    this.course = course;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner coursemodule(Integer coursemodule) {
    this.coursemodule = coursemodule;
    return this;
  }

   /**
   * coursemodule
   * @return coursemodule
  **/
  @javax.annotation.Nullable
  public Integer getCoursemodule() {
    return coursemodule;
  }

  public void setCoursemodule(Integer coursemodule) {
    this.coursemodule = coursemodule;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner csstemplate(String csstemplate) {
    this.csstemplate = csstemplate;
    return this;
  }

   /**
   * csstemplate field
   * @return csstemplate
  **/
  @javax.annotation.Nullable
  public String getCsstemplate() {
    return csstemplate;
  }

  public void setCsstemplate(String csstemplate) {
    this.csstemplate = csstemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner defaultsort(Integer defaultsort) {
    this.defaultsort = defaultsort;
    return this;
  }

   /**
   * defaultsort field
   * @return defaultsort
  **/
  @javax.annotation.Nullable
  public Integer getDefaultsort() {
    return defaultsort;
  }

  public void setDefaultsort(Integer defaultsort) {
    this.defaultsort = defaultsort;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner defaultsortdir(Integer defaultsortdir) {
    this.defaultsortdir = defaultsortdir;
    return this;
  }

   /**
   * defaultsortdir field
   * @return defaultsortdir
  **/
  @javax.annotation.Nullable
  public Integer getDefaultsortdir() {
    return defaultsortdir;
  }

  public void setDefaultsortdir(Integer defaultsortdir) {
    this.defaultsortdir = defaultsortdir;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner editany(Boolean editany) {
    this.editany = editany;
    return this;
  }

   /**
   * editany field (not used any more)
   * @return editany
  **/
  @javax.annotation.Nullable
  public Boolean getEditany() {
    return editany;
  }

  public void setEditany(Boolean editany) {
    this.editany = editany;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Database id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner intro(String intro) {
    this.intro = intro;
    return this;
  }

   /**
   * The Database intro
   * @return intro
  **/
  @javax.annotation.Nullable
  public String getIntro() {
    return intro;
  }

  public void setIntro(String intro) {
    this.intro = intro;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner introfiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> introfiles) {
    this.introfiles = introfiles;
    return this;
  }

  public ModDataGetDatabasesByCourses200ResponseDatabasesInner addIntrofilesItem(CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner introfilesItem) {
    if (this.introfiles == null) {
      this.introfiles = new ArrayList<>();
    }
    this.introfiles.add(introfilesItem);
    return this;
  }

   /**
   * Get introfiles
   * @return introfiles
  **/
  @javax.annotation.Nullable
  public List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> getIntrofiles() {
    return introfiles;
  }

  public void setIntrofiles(List<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner> introfiles) {
    this.introfiles = introfiles;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner introformat(Integer introformat) {
    this.introformat = introformat;
    return this;
  }

   /**
   * intro format (1 &#x3D; HTML, 0 &#x3D; MOODLE, 2 &#x3D; PLAIN, or 4 &#x3D; MARKDOWN)
   * @return introformat
  **/
  @javax.annotation.Nullable
  public Integer getIntroformat() {
    return introformat;
  }

  public void setIntroformat(Integer introformat) {
    this.introformat = introformat;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner jstemplate(String jstemplate) {
    this.jstemplate = jstemplate;
    return this;
  }

   /**
   * jstemplate field
   * @return jstemplate
  **/
  @javax.annotation.Nullable
  public String getJstemplate() {
    return jstemplate;
  }

  public void setJstemplate(String jstemplate) {
    this.jstemplate = jstemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner lang(String lang) {
    this.lang = lang;
    return this;
  }

   /**
   * Forced activity language
   * @return lang
  **/
  @javax.annotation.Nullable
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner listtemplate(String listtemplate) {
    this.listtemplate = listtemplate;
    return this;
  }

   /**
   * listtemplate field
   * @return listtemplate
  **/
  @javax.annotation.Nullable
  public String getListtemplate() {
    return listtemplate;
  }

  public void setListtemplate(String listtemplate) {
    this.listtemplate = listtemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner listtemplatefooter(String listtemplatefooter) {
    this.listtemplatefooter = listtemplatefooter;
    return this;
  }

   /**
   * listtemplatefooter field
   * @return listtemplatefooter
  **/
  @javax.annotation.Nullable
  public String getListtemplatefooter() {
    return listtemplatefooter;
  }

  public void setListtemplatefooter(String listtemplatefooter) {
    this.listtemplatefooter = listtemplatefooter;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner listtemplateheader(String listtemplateheader) {
    this.listtemplateheader = listtemplateheader;
    return this;
  }

   /**
   * listtemplateheader field
   * @return listtemplateheader
  **/
  @javax.annotation.Nullable
  public String getListtemplateheader() {
    return listtemplateheader;
  }

  public void setListtemplateheader(String listtemplateheader) {
    this.listtemplateheader = listtemplateheader;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner manageapproved(Boolean manageapproved) {
    this.manageapproved = manageapproved;
    return this;
  }

   /**
   * manageapproved field
   * @return manageapproved
  **/
  @javax.annotation.Nullable
  public Boolean getManageapproved() {
    return manageapproved;
  }

  public void setManageapproved(Boolean manageapproved) {
    this.manageapproved = manageapproved;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner maxentries(Integer maxentries) {
    this.maxentries = maxentries;
    return this;
  }

   /**
   * maxentries field
   * @return maxentries
  **/
  @javax.annotation.Nullable
  public Integer getMaxentries() {
    return maxentries;
  }

  public void setMaxentries(Integer maxentries) {
    this.maxentries = maxentries;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Database name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner notification(Integer notification) {
    this.notification = notification;
    return this;
  }

   /**
   * notification field (not used any more)
   * @return notification
  **/
  @javax.annotation.Nullable
  public Integer getNotification() {
    return notification;
  }

  public void setNotification(Integer notification) {
    this.notification = notification;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner requiredentries(Integer requiredentries) {
    this.requiredentries = requiredentries;
    return this;
  }

   /**
   * requiredentries field
   * @return requiredentries
  **/
  @javax.annotation.Nullable
  public Integer getRequiredentries() {
    return requiredentries;
  }

  public void setRequiredentries(Integer requiredentries) {
    this.requiredentries = requiredentries;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner requiredentriestoview(Integer requiredentriestoview) {
    this.requiredentriestoview = requiredentriestoview;
    return this;
  }

   /**
   * requiredentriestoview field
   * @return requiredentriestoview
  **/
  @javax.annotation.Nullable
  public Integer getRequiredentriestoview() {
    return requiredentriestoview;
  }

  public void setRequiredentriestoview(Integer requiredentriestoview) {
    this.requiredentriestoview = requiredentriestoview;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner rssarticles(Integer rssarticles) {
    this.rssarticles = rssarticles;
    return this;
  }

   /**
   * rssarticles field
   * @return rssarticles
  **/
  @javax.annotation.Nullable
  public Integer getRssarticles() {
    return rssarticles;
  }

  public void setRssarticles(Integer rssarticles) {
    this.rssarticles = rssarticles;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner rsstemplate(String rsstemplate) {
    this.rsstemplate = rsstemplate;
    return this;
  }

   /**
   * rsstemplate field
   * @return rsstemplate
  **/
  @javax.annotation.Nullable
  public String getRsstemplate() {
    return rsstemplate;
  }

  public void setRsstemplate(String rsstemplate) {
    this.rsstemplate = rsstemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner rsstitletemplate(String rsstitletemplate) {
    this.rsstitletemplate = rsstitletemplate;
    return this;
  }

   /**
   * rsstitletemplate field
   * @return rsstitletemplate
  **/
  @javax.annotation.Nullable
  public String getRsstitletemplate() {
    return rsstitletemplate;
  }

  public void setRsstitletemplate(String rsstitletemplate) {
    this.rsstitletemplate = rsstitletemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner scale(Integer scale) {
    this.scale = scale;
    return this;
  }

   /**
   * scale field
   * @return scale
  **/
  @javax.annotation.Nullable
  public Integer getScale() {
    return scale;
  }

  public void setScale(Integer scale) {
    this.scale = scale;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner singletemplate(String singletemplate) {
    this.singletemplate = singletemplate;
    return this;
  }

   /**
   * singletemplate field
   * @return singletemplate
  **/
  @javax.annotation.Nullable
  public String getSingletemplate() {
    return singletemplate;
  }

  public void setSingletemplate(String singletemplate) {
    this.singletemplate = singletemplate;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner timeavailablefrom(Integer timeavailablefrom) {
    this.timeavailablefrom = timeavailablefrom;
    return this;
  }

   /**
   * timeavailablefrom field
   * @return timeavailablefrom
  **/
  @javax.annotation.Nullable
  public Integer getTimeavailablefrom() {
    return timeavailablefrom;
  }

  public void setTimeavailablefrom(Integer timeavailablefrom) {
    this.timeavailablefrom = timeavailablefrom;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner timeavailableto(Integer timeavailableto) {
    this.timeavailableto = timeavailableto;
    return this;
  }

   /**
   * timeavailableto field
   * @return timeavailableto
  **/
  @javax.annotation.Nullable
  public Integer getTimeavailableto() {
    return timeavailableto;
  }

  public void setTimeavailableto(Integer timeavailableto) {
    this.timeavailableto = timeavailableto;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * Time modified
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner timeviewfrom(Integer timeviewfrom) {
    this.timeviewfrom = timeviewfrom;
    return this;
  }

   /**
   * timeviewfrom field
   * @return timeviewfrom
  **/
  @javax.annotation.Nullable
  public Integer getTimeviewfrom() {
    return timeviewfrom;
  }

  public void setTimeviewfrom(Integer timeviewfrom) {
    this.timeviewfrom = timeviewfrom;
  }


  public ModDataGetDatabasesByCourses200ResponseDatabasesInner timeviewto(Integer timeviewto) {
    this.timeviewto = timeviewto;
    return this;
  }

   /**
   * timeviewto field
   * @return timeviewto
  **/
  @javax.annotation.Nullable
  public Integer getTimeviewto() {
    return timeviewto;
  }

  public void setTimeviewto(Integer timeviewto) {
    this.timeviewto = timeviewto;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModDataGetDatabasesByCourses200ResponseDatabasesInner modDataGetDatabasesByCourses200ResponseDatabasesInner = (ModDataGetDatabasesByCourses200ResponseDatabasesInner) o;
    return Objects.equals(this.addtemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.addtemplate) &&
        Objects.equals(this.approval, modDataGetDatabasesByCourses200ResponseDatabasesInner.approval) &&
        Objects.equals(this.asearchtemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.asearchtemplate) &&
        Objects.equals(this.assessed, modDataGetDatabasesByCourses200ResponseDatabasesInner.assessed) &&
        Objects.equals(this.assesstimefinish, modDataGetDatabasesByCourses200ResponseDatabasesInner.assesstimefinish) &&
        Objects.equals(this.assesstimestart, modDataGetDatabasesByCourses200ResponseDatabasesInner.assesstimestart) &&
        Objects.equals(this.comments, modDataGetDatabasesByCourses200ResponseDatabasesInner.comments) &&
        Objects.equals(this.course, modDataGetDatabasesByCourses200ResponseDatabasesInner.course) &&
        Objects.equals(this.coursemodule, modDataGetDatabasesByCourses200ResponseDatabasesInner.coursemodule) &&
        Objects.equals(this.csstemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.csstemplate) &&
        Objects.equals(this.defaultsort, modDataGetDatabasesByCourses200ResponseDatabasesInner.defaultsort) &&
        Objects.equals(this.defaultsortdir, modDataGetDatabasesByCourses200ResponseDatabasesInner.defaultsortdir) &&
        Objects.equals(this.editany, modDataGetDatabasesByCourses200ResponseDatabasesInner.editany) &&
        Objects.equals(this.id, modDataGetDatabasesByCourses200ResponseDatabasesInner.id) &&
        Objects.equals(this.intro, modDataGetDatabasesByCourses200ResponseDatabasesInner.intro) &&
        Objects.equals(this.introfiles, modDataGetDatabasesByCourses200ResponseDatabasesInner.introfiles) &&
        Objects.equals(this.introformat, modDataGetDatabasesByCourses200ResponseDatabasesInner.introformat) &&
        Objects.equals(this.jstemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.jstemplate) &&
        Objects.equals(this.lang, modDataGetDatabasesByCourses200ResponseDatabasesInner.lang) &&
        Objects.equals(this.listtemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.listtemplate) &&
        Objects.equals(this.listtemplatefooter, modDataGetDatabasesByCourses200ResponseDatabasesInner.listtemplatefooter) &&
        Objects.equals(this.listtemplateheader, modDataGetDatabasesByCourses200ResponseDatabasesInner.listtemplateheader) &&
        Objects.equals(this.manageapproved, modDataGetDatabasesByCourses200ResponseDatabasesInner.manageapproved) &&
        Objects.equals(this.maxentries, modDataGetDatabasesByCourses200ResponseDatabasesInner.maxentries) &&
        Objects.equals(this.name, modDataGetDatabasesByCourses200ResponseDatabasesInner.name) &&
        Objects.equals(this.notification, modDataGetDatabasesByCourses200ResponseDatabasesInner.notification) &&
        Objects.equals(this.requiredentries, modDataGetDatabasesByCourses200ResponseDatabasesInner.requiredentries) &&
        Objects.equals(this.requiredentriestoview, modDataGetDatabasesByCourses200ResponseDatabasesInner.requiredentriestoview) &&
        Objects.equals(this.rssarticles, modDataGetDatabasesByCourses200ResponseDatabasesInner.rssarticles) &&
        Objects.equals(this.rsstemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.rsstemplate) &&
        Objects.equals(this.rsstitletemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.rsstitletemplate) &&
        Objects.equals(this.scale, modDataGetDatabasesByCourses200ResponseDatabasesInner.scale) &&
        Objects.equals(this.singletemplate, modDataGetDatabasesByCourses200ResponseDatabasesInner.singletemplate) &&
        Objects.equals(this.timeavailablefrom, modDataGetDatabasesByCourses200ResponseDatabasesInner.timeavailablefrom) &&
        Objects.equals(this.timeavailableto, modDataGetDatabasesByCourses200ResponseDatabasesInner.timeavailableto) &&
        Objects.equals(this.timemodified, modDataGetDatabasesByCourses200ResponseDatabasesInner.timemodified) &&
        Objects.equals(this.timeviewfrom, modDataGetDatabasesByCourses200ResponseDatabasesInner.timeviewfrom) &&
        Objects.equals(this.timeviewto, modDataGetDatabasesByCourses200ResponseDatabasesInner.timeviewto);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addtemplate, approval, asearchtemplate, assessed, assesstimefinish, assesstimestart, comments, course, coursemodule, csstemplate, defaultsort, defaultsortdir, editany, id, intro, introfiles, introformat, jstemplate, lang, listtemplate, listtemplatefooter, listtemplateheader, manageapproved, maxentries, name, notification, requiredentries, requiredentriestoview, rssarticles, rsstemplate, rsstitletemplate, scale, singletemplate, timeavailablefrom, timeavailableto, timemodified, timeviewfrom, timeviewto);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModDataGetDatabasesByCourses200ResponseDatabasesInner {\n");
    sb.append("    addtemplate: ").append(toIndentedString(addtemplate)).append("\n");
    sb.append("    approval: ").append(toIndentedString(approval)).append("\n");
    sb.append("    asearchtemplate: ").append(toIndentedString(asearchtemplate)).append("\n");
    sb.append("    assessed: ").append(toIndentedString(assessed)).append("\n");
    sb.append("    assesstimefinish: ").append(toIndentedString(assesstimefinish)).append("\n");
    sb.append("    assesstimestart: ").append(toIndentedString(assesstimestart)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    coursemodule: ").append(toIndentedString(coursemodule)).append("\n");
    sb.append("    csstemplate: ").append(toIndentedString(csstemplate)).append("\n");
    sb.append("    defaultsort: ").append(toIndentedString(defaultsort)).append("\n");
    sb.append("    defaultsortdir: ").append(toIndentedString(defaultsortdir)).append("\n");
    sb.append("    editany: ").append(toIndentedString(editany)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    intro: ").append(toIndentedString(intro)).append("\n");
    sb.append("    introfiles: ").append(toIndentedString(introfiles)).append("\n");
    sb.append("    introformat: ").append(toIndentedString(introformat)).append("\n");
    sb.append("    jstemplate: ").append(toIndentedString(jstemplate)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    listtemplate: ").append(toIndentedString(listtemplate)).append("\n");
    sb.append("    listtemplatefooter: ").append(toIndentedString(listtemplatefooter)).append("\n");
    sb.append("    listtemplateheader: ").append(toIndentedString(listtemplateheader)).append("\n");
    sb.append("    manageapproved: ").append(toIndentedString(manageapproved)).append("\n");
    sb.append("    maxentries: ").append(toIndentedString(maxentries)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    requiredentries: ").append(toIndentedString(requiredentries)).append("\n");
    sb.append("    requiredentriestoview: ").append(toIndentedString(requiredentriestoview)).append("\n");
    sb.append("    rssarticles: ").append(toIndentedString(rssarticles)).append("\n");
    sb.append("    rsstemplate: ").append(toIndentedString(rsstemplate)).append("\n");
    sb.append("    rsstitletemplate: ").append(toIndentedString(rsstitletemplate)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("    singletemplate: ").append(toIndentedString(singletemplate)).append("\n");
    sb.append("    timeavailablefrom: ").append(toIndentedString(timeavailablefrom)).append("\n");
    sb.append("    timeavailableto: ").append(toIndentedString(timeavailableto)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    timeviewfrom: ").append(toIndentedString(timeviewfrom)).append("\n");
    sb.append("    timeviewto: ").append(toIndentedString(timeviewto)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addtemplate");
    openapiFields.add("approval");
    openapiFields.add("asearchtemplate");
    openapiFields.add("assessed");
    openapiFields.add("assesstimefinish");
    openapiFields.add("assesstimestart");
    openapiFields.add("comments");
    openapiFields.add("course");
    openapiFields.add("coursemodule");
    openapiFields.add("csstemplate");
    openapiFields.add("defaultsort");
    openapiFields.add("defaultsortdir");
    openapiFields.add("editany");
    openapiFields.add("id");
    openapiFields.add("intro");
    openapiFields.add("introfiles");
    openapiFields.add("introformat");
    openapiFields.add("jstemplate");
    openapiFields.add("lang");
    openapiFields.add("listtemplate");
    openapiFields.add("listtemplatefooter");
    openapiFields.add("listtemplateheader");
    openapiFields.add("manageapproved");
    openapiFields.add("maxentries");
    openapiFields.add("name");
    openapiFields.add("notification");
    openapiFields.add("requiredentries");
    openapiFields.add("requiredentriestoview");
    openapiFields.add("rssarticles");
    openapiFields.add("rsstemplate");
    openapiFields.add("rsstitletemplate");
    openapiFields.add("scale");
    openapiFields.add("singletemplate");
    openapiFields.add("timeavailablefrom");
    openapiFields.add("timeavailableto");
    openapiFields.add("timemodified");
    openapiFields.add("timeviewfrom");
    openapiFields.add("timeviewto");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModDataGetDatabasesByCourses200ResponseDatabasesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModDataGetDatabasesByCourses200ResponseDatabasesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModDataGetDatabasesByCourses200ResponseDatabasesInner is not found in the empty JSON string", ModDataGetDatabasesByCourses200ResponseDatabasesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModDataGetDatabasesByCourses200ResponseDatabasesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModDataGetDatabasesByCourses200ResponseDatabasesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addtemplate") != null && !jsonObj.get("addtemplate").isJsonNull()) && !jsonObj.get("addtemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addtemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addtemplate").toString()));
      }
      if ((jsonObj.get("asearchtemplate") != null && !jsonObj.get("asearchtemplate").isJsonNull()) && !jsonObj.get("asearchtemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asearchtemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asearchtemplate").toString()));
      }
      if ((jsonObj.get("csstemplate") != null && !jsonObj.get("csstemplate").isJsonNull()) && !jsonObj.get("csstemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `csstemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("csstemplate").toString()));
      }
      if ((jsonObj.get("intro") != null && !jsonObj.get("intro").isJsonNull()) && !jsonObj.get("intro").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intro` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intro").toString()));
      }
      if (jsonObj.get("introfiles") != null && !jsonObj.get("introfiles").isJsonNull()) {
        JsonArray jsonArrayintrofiles = jsonObj.getAsJsonArray("introfiles");
        if (jsonArrayintrofiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("introfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `introfiles` to be an array in the JSON string but got `%s`", jsonObj.get("introfiles").toString()));
          }

          // validate the optional field `introfiles` (array)
          for (int i = 0; i < jsonArrayintrofiles.size(); i++) {
            CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner.validateJsonElement(jsonArrayintrofiles.get(i));
          };
        }
      }
      if ((jsonObj.get("jstemplate") != null && !jsonObj.get("jstemplate").isJsonNull()) && !jsonObj.get("jstemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jstemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jstemplate").toString()));
      }
      if ((jsonObj.get("lang") != null && !jsonObj.get("lang").isJsonNull()) && !jsonObj.get("lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang").toString()));
      }
      if ((jsonObj.get("listtemplate") != null && !jsonObj.get("listtemplate").isJsonNull()) && !jsonObj.get("listtemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listtemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listtemplate").toString()));
      }
      if ((jsonObj.get("listtemplatefooter") != null && !jsonObj.get("listtemplatefooter").isJsonNull()) && !jsonObj.get("listtemplatefooter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listtemplatefooter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listtemplatefooter").toString()));
      }
      if ((jsonObj.get("listtemplateheader") != null && !jsonObj.get("listtemplateheader").isJsonNull()) && !jsonObj.get("listtemplateheader").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listtemplateheader` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listtemplateheader").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("rsstemplate") != null && !jsonObj.get("rsstemplate").isJsonNull()) && !jsonObj.get("rsstemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rsstemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rsstemplate").toString()));
      }
      if ((jsonObj.get("rsstitletemplate") != null && !jsonObj.get("rsstitletemplate").isJsonNull()) && !jsonObj.get("rsstitletemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rsstitletemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rsstitletemplate").toString()));
      }
      if ((jsonObj.get("singletemplate") != null && !jsonObj.get("singletemplate").isJsonNull()) && !jsonObj.get("singletemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `singletemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("singletemplate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModDataGetDatabasesByCourses200ResponseDatabasesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModDataGetDatabasesByCourses200ResponseDatabasesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModDataGetDatabasesByCourses200ResponseDatabasesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModDataGetDatabasesByCourses200ResponseDatabasesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ModDataGetDatabasesByCourses200ResponseDatabasesInner>() {
           @Override
           public void write(JsonWriter out, ModDataGetDatabasesByCourses200ResponseDatabasesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModDataGetDatabasesByCourses200ResponseDatabasesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModDataGetDatabasesByCourses200ResponseDatabasesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModDataGetDatabasesByCourses200ResponseDatabasesInner
  * @throws IOException if the JSON string is invalid with respect to ModDataGetDatabasesByCourses200ResponseDatabasesInner
  */
  public static ModDataGetDatabasesByCourses200ResponseDatabasesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModDataGetDatabasesByCourses200ResponseDatabasesInner.class);
  }

 /**
  * Convert an instance of ModDataGetDatabasesByCourses200ResponseDatabasesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

