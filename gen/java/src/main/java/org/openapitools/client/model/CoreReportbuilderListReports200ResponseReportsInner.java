/*
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CoreCompetencyGradeCompetency200ResponseActionuser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.joshuapare.JSON;

/**
 * CoreReportbuilderListReports200ResponseReportsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-18T14:00:07.069642-05:00[America/Chicago]", comments = "Generator version: 7.5.0")
public class CoreReportbuilderListReports200ResponseReportsInner {
  public static final String SERIALIZED_NAME_AREA = "area";
  @SerializedName(SERIALIZED_NAME_AREA)
  private String area = "";

  public static final String SERIALIZED_NAME_COMPONENT = "component";
  @SerializedName(SERIALIZED_NAME_COMPONENT)
  private String component = "";

  public static final String SERIALIZED_NAME_CONDITIONDATA = "conditiondata";
  @SerializedName(SERIALIZED_NAME_CONDITIONDATA)
  private String conditiondata = "null";

  public static final String SERIALIZED_NAME_CONTEXTID = "contextid";
  @SerializedName(SERIALIZED_NAME_CONTEXTID)
  private Integer contextid = {};

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = 0;

  public static final String SERIALIZED_NAME_ITEMID = "itemid";
  @SerializedName(SERIALIZED_NAME_ITEMID)
  private Integer itemid = 0;

  public static final String SERIALIZED_NAME_MODIFIEDBY = "modifiedby";
  @SerializedName(SERIALIZED_NAME_MODIFIEDBY)
  private CoreCompetencyGradeCompetency200ResponseActionuser modifiedby;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SETTINGSDATA = "settingsdata";
  @SerializedName(SERIALIZED_NAME_SETTINGSDATA)
  private String settingsdata = "null";

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source = "null";

  public static final String SERIALIZED_NAME_SOURCENAME = "sourcename";
  @SerializedName(SERIALIZED_NAME_SOURCENAME)
  private String sourcename = "null";

  public static final String SERIALIZED_NAME_TIMECREATED = "timecreated";
  @SerializedName(SERIALIZED_NAME_TIMECREATED)
  private Integer timecreated = 0;

  public static final String SERIALIZED_NAME_TIMEMODIFIED = "timemodified";
  @SerializedName(SERIALIZED_NAME_TIMEMODIFIED)
  private Integer timemodified = 0;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type = null;

  public static final String SERIALIZED_NAME_UNIQUEROWS = "uniquerows";
  @SerializedName(SERIALIZED_NAME_UNIQUEROWS)
  private Boolean uniquerows = false;

  public static final String SERIALIZED_NAME_USERCREATED = "usercreated";
  @SerializedName(SERIALIZED_NAME_USERCREATED)
  private Integer usercreated = {};

  public static final String SERIALIZED_NAME_USERMODIFIED = "usermodified";
  @SerializedName(SERIALIZED_NAME_USERMODIFIED)
  private Integer usermodified = 0;

  public CoreReportbuilderListReports200ResponseReportsInner() {
  }

  public CoreReportbuilderListReports200ResponseReportsInner area(String area) {
    this.area = area;
    return this;
  }

   /**
   * area
   * @return area
  **/
  @javax.annotation.Nullable
  public String getArea() {
    return area;
  }

  public void setArea(String area) {
    this.area = area;
  }


  public CoreReportbuilderListReports200ResponseReportsInner component(String component) {
    this.component = component;
    return this;
  }

   /**
   * component
   * @return component
  **/
  @javax.annotation.Nullable
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }


  public CoreReportbuilderListReports200ResponseReportsInner conditiondata(String conditiondata) {
    this.conditiondata = conditiondata;
    return this;
  }

   /**
   * conditiondata
   * @return conditiondata
  **/
  @javax.annotation.Nullable
  public String getConditiondata() {
    return conditiondata;
  }

  public void setConditiondata(String conditiondata) {
    this.conditiondata = conditiondata;
  }


  public CoreReportbuilderListReports200ResponseReportsInner contextid(Integer contextid) {
    this.contextid = contextid;
    return this;
  }

   /**
   * contextid
   * @return contextid
  **/
  @javax.annotation.Nullable
  public Integer getContextid() {
    return contextid;
  }

  public void setContextid(Integer contextid) {
    this.contextid = contextid;
  }


  public CoreReportbuilderListReports200ResponseReportsInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CoreReportbuilderListReports200ResponseReportsInner itemid(Integer itemid) {
    this.itemid = itemid;
    return this;
  }

   /**
   * itemid
   * @return itemid
  **/
  @javax.annotation.Nullable
  public Integer getItemid() {
    return itemid;
  }

  public void setItemid(Integer itemid) {
    this.itemid = itemid;
  }


  public CoreReportbuilderListReports200ResponseReportsInner modifiedby(CoreCompetencyGradeCompetency200ResponseActionuser modifiedby) {
    this.modifiedby = modifiedby;
    return this;
  }

   /**
   * Get modifiedby
   * @return modifiedby
  **/
  @javax.annotation.Nullable
  public CoreCompetencyGradeCompetency200ResponseActionuser getModifiedby() {
    return modifiedby;
  }

  public void setModifiedby(CoreCompetencyGradeCompetency200ResponseActionuser modifiedby) {
    this.modifiedby = modifiedby;
  }


  public CoreReportbuilderListReports200ResponseReportsInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CoreReportbuilderListReports200ResponseReportsInner settingsdata(String settingsdata) {
    this.settingsdata = settingsdata;
    return this;
  }

   /**
   * settingsdata
   * @return settingsdata
  **/
  @javax.annotation.Nullable
  public String getSettingsdata() {
    return settingsdata;
  }

  public void setSettingsdata(String settingsdata) {
    this.settingsdata = settingsdata;
  }


  public CoreReportbuilderListReports200ResponseReportsInner source(String source) {
    this.source = source;
    return this;
  }

   /**
   * source
   * @return source
  **/
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  public CoreReportbuilderListReports200ResponseReportsInner sourcename(String sourcename) {
    this.sourcename = sourcename;
    return this;
  }

   /**
   * sourcename
   * @return sourcename
  **/
  @javax.annotation.Nullable
  public String getSourcename() {
    return sourcename;
  }

  public void setSourcename(String sourcename) {
    this.sourcename = sourcename;
  }


  public CoreReportbuilderListReports200ResponseReportsInner timecreated(Integer timecreated) {
    this.timecreated = timecreated;
    return this;
  }

   /**
   * timecreated
   * @return timecreated
  **/
  @javax.annotation.Nullable
  public Integer getTimecreated() {
    return timecreated;
  }

  public void setTimecreated(Integer timecreated) {
    this.timecreated = timecreated;
  }


  public CoreReportbuilderListReports200ResponseReportsInner timemodified(Integer timemodified) {
    this.timemodified = timemodified;
    return this;
  }

   /**
   * timemodified
   * @return timemodified
  **/
  @javax.annotation.Nullable
  public Integer getTimemodified() {
    return timemodified;
  }

  public void setTimemodified(Integer timemodified) {
    this.timemodified = timemodified;
  }


  public CoreReportbuilderListReports200ResponseReportsInner type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * type
   * @return type
  **/
  @javax.annotation.Nullable
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public CoreReportbuilderListReports200ResponseReportsInner uniquerows(Boolean uniquerows) {
    this.uniquerows = uniquerows;
    return this;
  }

   /**
   * uniquerows
   * @return uniquerows
  **/
  @javax.annotation.Nullable
  public Boolean getUniquerows() {
    return uniquerows;
  }

  public void setUniquerows(Boolean uniquerows) {
    this.uniquerows = uniquerows;
  }


  public CoreReportbuilderListReports200ResponseReportsInner usercreated(Integer usercreated) {
    this.usercreated = usercreated;
    return this;
  }

   /**
   * usercreated
   * @return usercreated
  **/
  @javax.annotation.Nullable
  public Integer getUsercreated() {
    return usercreated;
  }

  public void setUsercreated(Integer usercreated) {
    this.usercreated = usercreated;
  }


  public CoreReportbuilderListReports200ResponseReportsInner usermodified(Integer usermodified) {
    this.usermodified = usermodified;
    return this;
  }

   /**
   * usermodified
   * @return usermodified
  **/
  @javax.annotation.Nullable
  public Integer getUsermodified() {
    return usermodified;
  }

  public void setUsermodified(Integer usermodified) {
    this.usermodified = usermodified;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreReportbuilderListReports200ResponseReportsInner coreReportbuilderListReports200ResponseReportsInner = (CoreReportbuilderListReports200ResponseReportsInner) o;
    return Objects.equals(this.area, coreReportbuilderListReports200ResponseReportsInner.area) &&
        Objects.equals(this.component, coreReportbuilderListReports200ResponseReportsInner.component) &&
        Objects.equals(this.conditiondata, coreReportbuilderListReports200ResponseReportsInner.conditiondata) &&
        Objects.equals(this.contextid, coreReportbuilderListReports200ResponseReportsInner.contextid) &&
        Objects.equals(this.id, coreReportbuilderListReports200ResponseReportsInner.id) &&
        Objects.equals(this.itemid, coreReportbuilderListReports200ResponseReportsInner.itemid) &&
        Objects.equals(this.modifiedby, coreReportbuilderListReports200ResponseReportsInner.modifiedby) &&
        Objects.equals(this.name, coreReportbuilderListReports200ResponseReportsInner.name) &&
        Objects.equals(this.settingsdata, coreReportbuilderListReports200ResponseReportsInner.settingsdata) &&
        Objects.equals(this.source, coreReportbuilderListReports200ResponseReportsInner.source) &&
        Objects.equals(this.sourcename, coreReportbuilderListReports200ResponseReportsInner.sourcename) &&
        Objects.equals(this.timecreated, coreReportbuilderListReports200ResponseReportsInner.timecreated) &&
        Objects.equals(this.timemodified, coreReportbuilderListReports200ResponseReportsInner.timemodified) &&
        Objects.equals(this.type, coreReportbuilderListReports200ResponseReportsInner.type) &&
        Objects.equals(this.uniquerows, coreReportbuilderListReports200ResponseReportsInner.uniquerows) &&
        Objects.equals(this.usercreated, coreReportbuilderListReports200ResponseReportsInner.usercreated) &&
        Objects.equals(this.usermodified, coreReportbuilderListReports200ResponseReportsInner.usermodified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(area, component, conditiondata, contextid, id, itemid, modifiedby, name, settingsdata, source, sourcename, timecreated, timemodified, type, uniquerows, usercreated, usermodified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreReportbuilderListReports200ResponseReportsInner {\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    conditiondata: ").append(toIndentedString(conditiondata)).append("\n");
    sb.append("    contextid: ").append(toIndentedString(contextid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    itemid: ").append(toIndentedString(itemid)).append("\n");
    sb.append("    modifiedby: ").append(toIndentedString(modifiedby)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    settingsdata: ").append(toIndentedString(settingsdata)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourcename: ").append(toIndentedString(sourcename)).append("\n");
    sb.append("    timecreated: ").append(toIndentedString(timecreated)).append("\n");
    sb.append("    timemodified: ").append(toIndentedString(timemodified)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uniquerows: ").append(toIndentedString(uniquerows)).append("\n");
    sb.append("    usercreated: ").append(toIndentedString(usercreated)).append("\n");
    sb.append("    usermodified: ").append(toIndentedString(usermodified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("area");
    openapiFields.add("component");
    openapiFields.add("conditiondata");
    openapiFields.add("contextid");
    openapiFields.add("id");
    openapiFields.add("itemid");
    openapiFields.add("modifiedby");
    openapiFields.add("name");
    openapiFields.add("settingsdata");
    openapiFields.add("source");
    openapiFields.add("sourcename");
    openapiFields.add("timecreated");
    openapiFields.add("timemodified");
    openapiFields.add("type");
    openapiFields.add("uniquerows");
    openapiFields.add("usercreated");
    openapiFields.add("usermodified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CoreReportbuilderListReports200ResponseReportsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CoreReportbuilderListReports200ResponseReportsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreReportbuilderListReports200ResponseReportsInner is not found in the empty JSON string", CoreReportbuilderListReports200ResponseReportsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CoreReportbuilderListReports200ResponseReportsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreReportbuilderListReports200ResponseReportsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("area") != null && !jsonObj.get("area").isJsonNull()) && !jsonObj.get("area").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `area` to be a primitive type in the JSON string but got `%s`", jsonObj.get("area").toString()));
      }
      if ((jsonObj.get("component") != null && !jsonObj.get("component").isJsonNull()) && !jsonObj.get("component").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `component` to be a primitive type in the JSON string but got `%s`", jsonObj.get("component").toString()));
      }
      if ((jsonObj.get("conditiondata") != null && !jsonObj.get("conditiondata").isJsonNull()) && !jsonObj.get("conditiondata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conditiondata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conditiondata").toString()));
      }
      // validate the optional field `modifiedby`
      if (jsonObj.get("modifiedby") != null && !jsonObj.get("modifiedby").isJsonNull()) {
        CoreCompetencyGradeCompetency200ResponseActionuser.validateJsonElement(jsonObj.get("modifiedby"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("settingsdata") != null && !jsonObj.get("settingsdata").isJsonNull()) && !jsonObj.get("settingsdata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `settingsdata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("settingsdata").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      if ((jsonObj.get("sourcename") != null && !jsonObj.get("sourcename").isJsonNull()) && !jsonObj.get("sourcename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourcename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourcename").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreReportbuilderListReports200ResponseReportsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreReportbuilderListReports200ResponseReportsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreReportbuilderListReports200ResponseReportsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreReportbuilderListReports200ResponseReportsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreReportbuilderListReports200ResponseReportsInner>() {
           @Override
           public void write(JsonWriter out, CoreReportbuilderListReports200ResponseReportsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreReportbuilderListReports200ResponseReportsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreReportbuilderListReports200ResponseReportsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreReportbuilderListReports200ResponseReportsInner
  * @throws IOException if the JSON string is invalid with respect to CoreReportbuilderListReports200ResponseReportsInner
  */
  public static CoreReportbuilderListReports200ResponseReportsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreReportbuilderListReports200ResponseReportsInner.class);
  }

 /**
  * Convert an instance of CoreReportbuilderListReports200ResponseReportsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

