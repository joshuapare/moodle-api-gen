<?php
/**
 * ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInnerTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInnerTest Class Doc Comment
 *
 * @category    Class
 * @description ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInnerTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner"
     */
    public function testModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "assessmentend"
     */
    public function testPropertyAssessmentend()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "assessmentstart"
     */
    public function testPropertyAssessmentstart()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "conclusion"
     */
    public function testPropertyConclusion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "conclusionfiles"
     */
    public function testPropertyConclusionfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "conclusionformat"
     */
    public function testPropertyConclusionformat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "course"
     */
    public function testPropertyCourse()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "coursemodule"
     */
    public function testPropertyCoursemodule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "evaluation"
     */
    public function testPropertyEvaluation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "examplesmode"
     */
    public function testPropertyExamplesmode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "grade"
     */
    public function testPropertyGrade()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gradedecimals"
     */
    public function testPropertyGradedecimals()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gradinggrade"
     */
    public function testPropertyGradinggrade()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instructauthors"
     */
    public function testPropertyInstructauthors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instructauthorsfiles"
     */
    public function testPropertyInstructauthorsfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instructauthorsformat"
     */
    public function testPropertyInstructauthorsformat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instructreviewers"
     */
    public function testPropertyInstructreviewers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instructreviewersfiles"
     */
    public function testPropertyInstructreviewersfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instructreviewersformat"
     */
    public function testPropertyInstructreviewersformat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "intro"
     */
    public function testPropertyIntro()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "introfiles"
     */
    public function testPropertyIntrofiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "introformat"
     */
    public function testPropertyIntroformat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lang"
     */
    public function testPropertyLang()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "latesubmissions"
     */
    public function testPropertyLatesubmissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maxbytes"
     */
    public function testPropertyMaxbytes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nattachments"
     */
    public function testPropertyNattachments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overallfeedbackfiles"
     */
    public function testPropertyOverallfeedbackfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overallfeedbackfiletypes"
     */
    public function testPropertyOverallfeedbackfiletypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overallfeedbackmaxbytes"
     */
    public function testPropertyOverallfeedbackmaxbytes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overallfeedbackmode"
     */
    public function testPropertyOverallfeedbackmode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "phase"
     */
    public function testPropertyPhase()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "phaseswitchassessment"
     */
    public function testPropertyPhaseswitchassessment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "strategy"
     */
    public function testPropertyStrategy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "submissionend"
     */
    public function testPropertySubmissionend()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "submissionfiletypes"
     */
    public function testPropertySubmissionfiletypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "submissionstart"
     */
    public function testPropertySubmissionstart()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "submissiontypefile"
     */
    public function testPropertySubmissiontypefile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "submissiontypetext"
     */
    public function testPropertySubmissiontypetext()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timemodified"
     */
    public function testPropertyTimemodified()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "useexamples"
     */
    public function testPropertyUseexamples()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usepeerassessment"
     */
    public function testPropertyUsepeerassessment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "useselfassessment"
     */
    public function testPropertyUseselfassessment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
