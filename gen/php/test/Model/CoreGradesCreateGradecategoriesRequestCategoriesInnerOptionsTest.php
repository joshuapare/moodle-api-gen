<?php
/**
 * CoreGradesCreateGradecategoriesRequestCategoriesInnerOptionsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CoreGradesCreateGradecategoriesRequestCategoriesInnerOptionsTest Class Doc Comment
 *
 * @category    Class
 * @description CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CoreGradesCreateGradecategoriesRequestCategoriesInnerOptionsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CoreGradesCreateGradecategoriesRequestCategoriesInnerOptions"
     */
    public function testCoreGradesCreateGradecategoriesRequestCategoriesInnerOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "aggregateonlygraded"
     */
    public function testPropertyAggregateonlygraded()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "aggregateoutcomes"
     */
    public function testPropertyAggregateoutcomes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "aggregation"
     */
    public function testPropertyAggregation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "aggregationcoef2"
     */
    public function testPropertyAggregationcoef2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "decimals"
     */
    public function testPropertyDecimals()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "display"
     */
    public function testPropertyDisplay()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "droplow"
     */
    public function testPropertyDroplow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "grademax"
     */
    public function testPropertyGrademax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "grademin"
     */
    public function testPropertyGrademin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gradepass"
     */
    public function testPropertyGradepass()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gradetype"
     */
    public function testPropertyGradetype()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hiddenuntil"
     */
    public function testPropertyHiddenuntil()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "idnumber"
     */
    public function testPropertyIdnumber()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iteminfo"
     */
    public function testPropertyIteminfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "itemname"
     */
    public function testPropertyItemname()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "locktime"
     */
    public function testPropertyLocktime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parentcategoryid"
     */
    public function testPropertyParentcategoryid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parentcategoryidnumber"
     */
    public function testPropertyParentcategoryidnumber()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weightoverride"
     */
    public function testPropertyWeightoverride()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
