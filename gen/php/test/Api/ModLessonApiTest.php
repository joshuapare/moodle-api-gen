<?php
/**
 * ModLessonApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ModLessonApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ModLessonApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for modLessonFinishAttempt
     *
     * Finishes the current attempt..
     *
     */
    public function testModLessonFinishAttempt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetAttemptsOverview
     *
     * Get a list of all the attempts made by users in a lesson..
     *
     */
    public function testModLessonGetAttemptsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetContentPagesViewed
     *
     * Return the list of content pages viewed by a user during a lesson attempt..
     *
     */
    public function testModLessonGetContentPagesViewed()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetLesson
     *
     * Return information of a given lesson..
     *
     */
    public function testModLessonGetLesson()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetLessonAccessInformation
     *
     * Return access information for a given lesson..
     *
     */
    public function testModLessonGetLessonAccessInformation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetLessonsByCourses
     *
     * Returns a list of lessons in a provided list of courses,                             if no list is provided all lessons that the user can view will be returned..
     *
     */
    public function testModLessonGetLessonsByCourses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetPageData
     *
     * Return information of a given page, including its contents..
     *
     */
    public function testModLessonGetPageData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetPages
     *
     * Return the list of pages in a lesson (based on the user permissions)..
     *
     */
    public function testModLessonGetPages()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetPagesPossibleJumps
     *
     * Return all the possible jumps for the pages in a given lesson..
     *
     */
    public function testModLessonGetPagesPossibleJumps()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetQuestionsAttempts
     *
     * Return the list of questions attempts in a given lesson..
     *
     */
    public function testModLessonGetQuestionsAttempts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetUserAttempt
     *
     * Return information about the given user attempt (including answers)..
     *
     */
    public function testModLessonGetUserAttempt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetUserAttemptGrade
     *
     * Return grade information in the attempt for a given user..
     *
     */
    public function testModLessonGetUserAttemptGrade()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetUserGrade
     *
     * Return the final grade in the lesson for the given user..
     *
     */
    public function testModLessonGetUserGrade()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonGetUserTimers
     *
     * Return the timers in the current lesson for the given user..
     *
     */
    public function testModLessonGetUserTimers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonLaunchAttempt
     *
     * Starts a new attempt or continues an existing one..
     *
     */
    public function testModLessonLaunchAttempt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonProcessPage
     *
     * Processes page responses..
     *
     */
    public function testModLessonProcessPage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modLessonViewLesson
     *
     * Trigger the course module viewed event and update the module completion status..
     *
     */
    public function testModLessonViewLesson()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
