<?php
/**
 * ModWorkshopApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ModWorkshopApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ModWorkshopApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for modWorkshopAddSubmission
     *
     * Add a new submission to a given workshop..
     *
     */
    public function testModWorkshopAddSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopDeleteSubmission
     *
     * Deletes the given submission..
     *
     */
    public function testModWorkshopDeleteSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopEvaluateAssessment
     *
     * Evaluates an assessment (used by teachers for provide feedback to the reviewer)..
     *
     */
    public function testModWorkshopEvaluateAssessment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopEvaluateSubmission
     *
     * Evaluates a submission (used by teachers for provide feedback or override the submission grade)..
     *
     */
    public function testModWorkshopEvaluateSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetAssessment
     *
     * Retrieves the given assessment..
     *
     */
    public function testModWorkshopGetAssessment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetAssessmentFormDefinition
     *
     * Retrieves the assessment form definition..
     *
     */
    public function testModWorkshopGetAssessmentFormDefinition()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetGrades
     *
     * Returns the assessment and submission grade for the given user..
     *
     */
    public function testModWorkshopGetGrades()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetGradesReport
     *
     * Retrieves the assessment grades report..
     *
     */
    public function testModWorkshopGetGradesReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetReviewerAssessments
     *
     * Retrieves all the assessments reviewed by the given user..
     *
     */
    public function testModWorkshopGetReviewerAssessments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetSubmission
     *
     * Retrieves the given submission..
     *
     */
    public function testModWorkshopGetSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetSubmissionAssessments
     *
     * Retrieves all the assessments of the given submission..
     *
     */
    public function testModWorkshopGetSubmissionAssessments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetSubmissions
     *
     * Retrieves all the workshop submissions or the one done by the given user (except example submissions)..
     *
     */
    public function testModWorkshopGetSubmissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetUserPlan
     *
     * Return the planner information for the given user..
     *
     */
    public function testModWorkshopGetUserPlan()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetWorkshopAccessInformation
     *
     * Return access information for a given workshop..
     *
     */
    public function testModWorkshopGetWorkshopAccessInformation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopGetWorkshopsByCourses
     *
     * Returns a list of workshops in a provided list of courses, if no list is provided all workshops that                             the user can view will be returned..
     *
     */
    public function testModWorkshopGetWorkshopsByCourses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopUpdateAssessment
     *
     * Add information to an allocated assessment..
     *
     */
    public function testModWorkshopUpdateAssessment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopUpdateSubmission
     *
     * Update the given submission..
     *
     */
    public function testModWorkshopUpdateSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopViewSubmission
     *
     * Trigger the submission viewed event..
     *
     */
    public function testModWorkshopViewSubmission()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modWorkshopViewWorkshop
     *
     * Trigger the course module viewed event and update the module completion status..
     *
     */
    public function testModWorkshopViewWorkshop()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
