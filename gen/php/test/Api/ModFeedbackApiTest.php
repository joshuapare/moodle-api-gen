<?php
/**
 * ModFeedbackApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ModFeedbackApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ModFeedbackApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for modFeedbackGetAnalysis
     *
     * Retrieves the feedback analysis..
     *
     */
    public function testModFeedbackGetAnalysis()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetCurrentCompletedTmp
     *
     * Returns the temporary completion record for the current user..
     *
     */
    public function testModFeedbackGetCurrentCompletedTmp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetFeedbackAccessInformation
     *
     * Return access information for a given feedback..
     *
     */
    public function testModFeedbackGetFeedbackAccessInformation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetFeedbacksByCourses
     *
     * Returns a list of feedbacks in a provided list of courses, if no list is provided all feedbacks that                             the user can view will be returned..
     *
     */
    public function testModFeedbackGetFeedbacksByCourses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetFinishedResponses
     *
     * Retrieves responses from the last finished attempt..
     *
     */
    public function testModFeedbackGetFinishedResponses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetItems
     *
     * Returns the items (questions) in the given feedback..
     *
     */
    public function testModFeedbackGetItems()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetLastCompleted
     *
     * Retrieves the last completion record for the current user..
     *
     */
    public function testModFeedbackGetLastCompleted()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetNonRespondents
     *
     * Retrieves a list of students who didn't submit the feedback..
     *
     */
    public function testModFeedbackGetNonRespondents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetPageItems
     *
     * Get a single feedback page items..
     *
     */
    public function testModFeedbackGetPageItems()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetResponsesAnalysis
     *
     * Return the feedback user responses analysis..
     *
     */
    public function testModFeedbackGetResponsesAnalysis()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackGetUnfinishedResponses
     *
     * Retrieves responses from the current unfinished attempt..
     *
     */
    public function testModFeedbackGetUnfinishedResponses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackLaunchFeedback
     *
     * Starts or continues a feedback submission..
     *
     */
    public function testModFeedbackLaunchFeedback()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackProcessPage
     *
     * Process a jump between pages..
     *
     */
    public function testModFeedbackProcessPage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modFeedbackViewFeedback
     *
     * Trigger the course module viewed event and update the module completion status..
     *
     */
    public function testModFeedbackViewFeedback()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
