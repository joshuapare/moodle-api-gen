<?php
/**
 * ModForumApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ModForumApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ModForumApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for modForumAddDiscussion
     *
     * Add a new discussion into an existing forum..
     *
     */
    public function testModForumAddDiscussion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumAddDiscussionPost
     *
     * Create new posts into an existing discussion..
     *
     */
    public function testModForumAddDiscussionPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumCanAddDiscussion
     *
     * Check if the current user can add discussions in the given forum (and optionally for the given group)..
     *
     */
    public function testModForumCanAddDiscussion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumDeletePost
     *
     * Deletes a post or a discussion completely when the post is the discussion topic..
     *
     */
    public function testModForumDeletePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumGetDiscussionPost
     *
     * Get a particular discussion post..
     *
     */
    public function testModForumGetDiscussionPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumGetDiscussionPosts
     *
     * Returns a list of forum posts for a discussion..
     *
     */
    public function testModForumGetDiscussionPosts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumGetDiscussionPostsByUserid
     *
     * Returns a list of forum posts for a discussion for a user..
     *
     */
    public function testModForumGetDiscussionPostsByUserid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumGetForumAccessInformation
     *
     * Return capabilities information for a given forum..
     *
     */
    public function testModForumGetForumAccessInformation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumGetForumDiscussions
     *
     * Returns a list of forum discussions optionally sorted and paginated..
     *
     */
    public function testModForumGetForumDiscussions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumGetForumDiscussionsPaginated
     *
     * ** DEPRECATED ** Please do not call this function any more.                           Returns a list of forum discussions optionally sorted and paginated..
     *
     */
    public function testModForumGetForumDiscussionsPaginated()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumGetForumsByCourses
     *
     * Returns a list of forum instances in a provided set of courses, if             no courses are provided then all the forum instances the user has access to will be             returned..
     *
     */
    public function testModForumGetForumsByCourses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumPrepareDraftAreaForPost
     *
     * Prepares a draft area for editing a post..
     *
     */
    public function testModForumPrepareDraftAreaForPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumSetLockState
     *
     * Set the lock state for the discussion.
     *
     */
    public function testModForumSetLockState()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumSetPinState
     *
     * Set the pin state.
     *
     */
    public function testModForumSetPinState()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumSetSubscriptionState
     *
     * Set the subscription state.
     *
     */
    public function testModForumSetSubscriptionState()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumToggleFavouriteState
     *
     * Toggle the favourite state.
     *
     */
    public function testModForumToggleFavouriteState()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumUpdateDiscussionPost
     *
     * Updates a post or a discussion topic post..
     *
     */
    public function testModForumUpdateDiscussionPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumViewForum
     *
     * Trigger the course module viewed event and update the module completion status..
     *
     */
    public function testModForumViewForum()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modForumViewForumDiscussion
     *
     * Trigger the forum discussion viewed event..
     *
     */
    public function testModForumViewForumDiscussion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
