<?php
/**
 * GradereportUserGetGradesTable200ResponseTablesInnerTabledataInner
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Moodle Webservice API
 *
 * Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * GradereportUserGetGradesTable200ResponseTablesInnerTabledataInner Class Doc Comment
 *
 * @category Class
 * @description table
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class GradereportUserGetGradesTable200ResponseTablesInnerTabledataInner implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'gradereport_user_get_grades_table_200_response_tables_inner_tabledata_inner';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'average' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerAverage',
        'contributiontocoursetotal' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal',
        'feedback' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal',
        'grade' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal',
        'itemname' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerItemname',
        'leader' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerLeader',
        'lettergrade' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal',
        'parentcategories' => 'object[]',
        'percentage' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal',
        'range' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal',
        'rank' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal',
        'weight' => '\OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'average' => null,
        'contributiontocoursetotal' => null,
        'feedback' => null,
        'grade' => null,
        'itemname' => null,
        'leader' => null,
        'lettergrade' => null,
        'parentcategories' => null,
        'percentage' => null,
        'range' => null,
        'rank' => null,
        'weight' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'average' => false,
        'contributiontocoursetotal' => false,
        'feedback' => false,
        'grade' => false,
        'itemname' => false,
        'leader' => false,
        'lettergrade' => false,
        'parentcategories' => false,
        'percentage' => false,
        'range' => false,
        'rank' => false,
        'weight' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'average' => 'average',
        'contributiontocoursetotal' => 'contributiontocoursetotal',
        'feedback' => 'feedback',
        'grade' => 'grade',
        'itemname' => 'itemname',
        'leader' => 'leader',
        'lettergrade' => 'lettergrade',
        'parentcategories' => 'parentcategories',
        'percentage' => 'percentage',
        'range' => 'range',
        'rank' => 'rank',
        'weight' => 'weight'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'average' => 'setAverage',
        'contributiontocoursetotal' => 'setContributiontocoursetotal',
        'feedback' => 'setFeedback',
        'grade' => 'setGrade',
        'itemname' => 'setItemname',
        'leader' => 'setLeader',
        'lettergrade' => 'setLettergrade',
        'parentcategories' => 'setParentcategories',
        'percentage' => 'setPercentage',
        'range' => 'setRange',
        'rank' => 'setRank',
        'weight' => 'setWeight'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'average' => 'getAverage',
        'contributiontocoursetotal' => 'getContributiontocoursetotal',
        'feedback' => 'getFeedback',
        'grade' => 'getGrade',
        'itemname' => 'getItemname',
        'leader' => 'getLeader',
        'lettergrade' => 'getLettergrade',
        'parentcategories' => 'getParentcategories',
        'percentage' => 'getPercentage',
        'range' => 'getRange',
        'rank' => 'getRank',
        'weight' => 'getWeight'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('average', $data ?? [], null);
        $this->setIfExists('contributiontocoursetotal', $data ?? [], null);
        $this->setIfExists('feedback', $data ?? [], null);
        $this->setIfExists('grade', $data ?? [], null);
        $this->setIfExists('itemname', $data ?? [], null);
        $this->setIfExists('leader', $data ?? [], null);
        $this->setIfExists('lettergrade', $data ?? [], null);
        $this->setIfExists('parentcategories', $data ?? [], null);
        $this->setIfExists('percentage', $data ?? [], null);
        $this->setIfExists('range', $data ?? [], null);
        $this->setIfExists('rank', $data ?? [], null);
        $this->setIfExists('weight', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets average
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerAverage|null
     */
    public function getAverage()
    {
        return $this->container['average'];
    }

    /**
     * Sets average
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerAverage|null $average average
     *
     * @return self
     */
    public function setAverage($average)
    {
        if (is_null($average)) {
            throw new \InvalidArgumentException('non-nullable average cannot be null');
        }
        $this->container['average'] = $average;

        return $this;
    }

    /**
     * Gets contributiontocoursetotal
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getContributiontocoursetotal()
    {
        return $this->container['contributiontocoursetotal'];
    }

    /**
     * Sets contributiontocoursetotal
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $contributiontocoursetotal contributiontocoursetotal
     *
     * @return self
     */
    public function setContributiontocoursetotal($contributiontocoursetotal)
    {
        if (is_null($contributiontocoursetotal)) {
            throw new \InvalidArgumentException('non-nullable contributiontocoursetotal cannot be null');
        }
        $this->container['contributiontocoursetotal'] = $contributiontocoursetotal;

        return $this;
    }

    /**
     * Gets feedback
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getFeedback()
    {
        return $this->container['feedback'];
    }

    /**
     * Sets feedback
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $feedback feedback
     *
     * @return self
     */
    public function setFeedback($feedback)
    {
        if (is_null($feedback)) {
            throw new \InvalidArgumentException('non-nullable feedback cannot be null');
        }
        $this->container['feedback'] = $feedback;

        return $this;
    }

    /**
     * Gets grade
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getGrade()
    {
        return $this->container['grade'];
    }

    /**
     * Sets grade
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $grade grade
     *
     * @return self
     */
    public function setGrade($grade)
    {
        if (is_null($grade)) {
            throw new \InvalidArgumentException('non-nullable grade cannot be null');
        }
        $this->container['grade'] = $grade;

        return $this;
    }

    /**
     * Gets itemname
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerItemname|null
     */
    public function getItemname()
    {
        return $this->container['itemname'];
    }

    /**
     * Sets itemname
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerItemname|null $itemname itemname
     *
     * @return self
     */
    public function setItemname($itemname)
    {
        if (is_null($itemname)) {
            throw new \InvalidArgumentException('non-nullable itemname cannot be null');
        }
        $this->container['itemname'] = $itemname;

        return $this;
    }

    /**
     * Gets leader
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerLeader|null
     */
    public function getLeader()
    {
        return $this->container['leader'];
    }

    /**
     * Sets leader
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerLeader|null $leader leader
     *
     * @return self
     */
    public function setLeader($leader)
    {
        if (is_null($leader)) {
            throw new \InvalidArgumentException('non-nullable leader cannot be null');
        }
        $this->container['leader'] = $leader;

        return $this;
    }

    /**
     * Gets lettergrade
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getLettergrade()
    {
        return $this->container['lettergrade'];
    }

    /**
     * Sets lettergrade
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $lettergrade lettergrade
     *
     * @return self
     */
    public function setLettergrade($lettergrade)
    {
        if (is_null($lettergrade)) {
            throw new \InvalidArgumentException('non-nullable lettergrade cannot be null');
        }
        $this->container['lettergrade'] = $lettergrade;

        return $this;
    }

    /**
     * Gets parentcategories
     *
     * @return object[]|null
     */
    public function getParentcategories()
    {
        return $this->container['parentcategories'];
    }

    /**
     * Sets parentcategories
     *
     * @param object[]|null $parentcategories parentcategories
     *
     * @return self
     */
    public function setParentcategories($parentcategories)
    {
        if (is_null($parentcategories)) {
            throw new \InvalidArgumentException('non-nullable parentcategories cannot be null');
        }
        $this->container['parentcategories'] = $parentcategories;

        return $this;
    }

    /**
     * Gets percentage
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getPercentage()
    {
        return $this->container['percentage'];
    }

    /**
     * Sets percentage
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $percentage percentage
     *
     * @return self
     */
    public function setPercentage($percentage)
    {
        if (is_null($percentage)) {
            throw new \InvalidArgumentException('non-nullable percentage cannot be null');
        }
        $this->container['percentage'] = $percentage;

        return $this;
    }

    /**
     * Gets range
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getRange()
    {
        return $this->container['range'];
    }

    /**
     * Sets range
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $range range
     *
     * @return self
     */
    public function setRange($range)
    {
        if (is_null($range)) {
            throw new \InvalidArgumentException('non-nullable range cannot be null');
        }
        $this->container['range'] = $range;

        return $this;
    }

    /**
     * Gets rank
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getRank()
    {
        return $this->container['rank'];
    }

    /**
     * Sets rank
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $rank rank
     *
     * @return self
     */
    public function setRank($rank)
    {
        if (is_null($rank)) {
            throw new \InvalidArgumentException('non-nullable rank cannot be null');
        }
        $this->container['rank'] = $rank;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param \OpenAPI\Client\Model\GradereportUserGetGradesTable200ResponseTablesInnerTabledataInnerContributiontocoursetotal|null $weight weight
     *
     * @return self
     */
    public function setWeight($weight)
    {
        if (is_null($weight)) {
            throw new \InvalidArgumentException('non-nullable weight cannot be null');
        }
        $this->container['weight'] = $weight;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


